[RELATORIO DE CONTEXTO DO PROJETO MEDISHIFTNEO] 
Gerado em: 17/10/2025 12:41:00,34 
 
 
====================================================== 
[ESTRUTURA DE PASTAS E ARQUIVOS] 
(Ignorando 'node_modules' e '.git' para maior clareza) 
====================================================== 
Listagem de caminhos de pasta
O n�mero de s�rie do volume � 7EB5-BBCB
C:.
|   00_GERAR_CONTEXTO.bat
|   Projeto_Contexto_Completo.txt
|   
+---backend
|   |   01_INICIAR_BACKEND.bat
|   |   01_INICIAR_BANCO.bat
|   |   auditLogger.js
|   |   authMiddleware.js
|   |   database.js
|   |   db.js
|   |   medishiftneo.db
|   |   package-lock.json
|   |   package.json
|   |   seed_admin.js
|   |   server.js
|   |   setup_log.txt
|   |   
|       |   .package-lock.json
|       |   
|       +---.bin
|       |       bcrypt
|       |       bcrypt.cmd
|       |       bcrypt.ps1
|       |       color-support
|       |       color-support.cmd
|       |       color-support.ps1
|       |       mkdirp
|       |       mkdirp.cmd
|       |       mkdirp.ps1
|       |       node-gyp
|       |       node-gyp.cmd
|       |       node-gyp.ps1
|       |       node-which
|       |       node-which.cmd
|       |       node-which.ps1
|       |       nopt
|       |       nopt.cmd
|       |       nopt.ps1
|       |       prebuild-install
|       |       prebuild-install.cmd
|       |       prebuild-install.ps1
|       |       rc
|       |       rc.cmd
|       |       rc.ps1
|       |       rimraf
|       |       rimraf.cmd
|       |       rimraf.ps1
|       |       semver
|       |       semver.cmd
|       |       semver.ps1
|       |       
|       +---@gar
|       |   \---promisify
|       |           index.js
|       |           LICENSE.md
|       |           package.json
|       |           README.md
|       |           
|       +---@npmcli
|       |   +---fs
|       |   |   |   LICENSE.md
|       |   |   |   package.json
|       |   |   |   README.md
|       |   |   |   
|       |   |   \---lib
|       |   |       |   copy-file.js
|       |   |       |   errors.js
|       |   |       |   fs.js
|       |   |       |   index.js
|       |   |       |   mkdtemp.js
|       |   |       |   with-temp-dir.js
|       |   |       |   write-file.js
|       |   |       |   
|       |   |       +---common
|       |   |       |   |   get-options.js
|       |   |       |   |   node.js
|       |   |       |   |   owner.js
|       |   |       |   |   
|       |   |       |   \---file-url-to-path
|       |   |       |           index.js
|       |   |       |           polyfill.js
|       |   |       |           
|       |   |       +---cp
|       |   |       |       index.js
|       |   |       |       LICENSE
|       |   |       |       polyfill.js
|       |   |       |       
|       |   |       +---mkdir
|       |   |       |       index.js
|       |   |       |       polyfill.js
|       |   |       |       
|       |   |       \---rm
|       |   |               index.js
|       |   |               polyfill.js
|       |   |               
|       |   \---move-file
|       |           index.js
|       |           LICENSE.md
|       |           package.json
|       |           README.md
|       |           
|       +---@tootallnate
|       |   \---once
|       |       |   package.json
|       |       |   
|       |       \---dist
|       |               index.d.ts
|       |               index.js
|       |               index.js.map
|       |               
|       +---abbrev
|       |       abbrev.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---accepts
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---agent-base
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---dist
|       |   |   \---src
|       |   |           index.d.ts
|       |   |           index.js
|       |   |           index.js.map
|       |   |           promisify.d.ts
|       |   |           promisify.js
|       |   |           promisify.js.map
|       |   |           
|       |   \---src
|       |           index.ts
|       |           promisify.ts
|       |           
|       +---agentkeepalive
|       |   |   browser.js
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           agent.js
|       |           constants.js
|       |           https_agent.js
|       |           
|       +---aggregate-error
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---ansi-regex
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---aproba
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---are-we-there-yet
|       |   |   LICENSE.md
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           index.js
|       |           tracker-base.js
|       |           tracker-group.js
|       |           tracker-stream.js
|       |           tracker.js
|       |           
|       +---balanced-match
|       |   |   index.js
|       |   |   LICENSE.md
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |           FUNDING.yml
|       |           
|       +---base64-js
|       |       base64js.min.js
|       |       index.d.ts
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---bcryptjs
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   types.d.ts
|       |   |   
|       |   +---bin
|       |   |       bcrypt
|       |   |       
|       |   \---umd
|       |           index.d.ts
|       |           index.js
|       |           package.json
|       |           types.d.ts
|       |           
|       +---bindings
|       |       bindings.js
|       |       LICENSE.md
|       |       package.json
|       |       README.md
|       |       
|       +---bl
|       |   |   .travis.yml
|       |   |   bl.js
|       |   |   BufferList.js
|       |   |   LICENSE.md
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---test
|       |           convert.js
|       |           indexOf.js
|       |           isBufferList.js
|       |           test.js
|       |           
|       +---body-parser
|       |   |   HISTORY.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |       |   read.js
|       |       |   utils.js
|       |       |   
|       |       \---types
|       |               json.js
|       |               raw.js
|       |               text.js
|       |               urlencoded.js
|       |               
|       +---brace-expansion
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---buffer
|       |       AUTHORS.md
|       |       index.d.ts
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---buffer-equal-constant-time
|       |       .npmignore
|       |       .travis.yml
|       |       index.js
|       |       LICENSE.txt
|       |       package.json
|       |       README.md
|       |       test.js
|       |       
|       +---bytes
|       |       History.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       Readme.md
|       |       
|       +---cacache
|       |   |   get.js
|       |   |   index.js
|       |   |   LICENSE.md
|       |   |   ls.js
|       |   |   package.json
|       |   |   put.js
|       |   |   README.md
|       |   |   rm.js
|       |   |   verify.js
|       |   |   
|       |   \---lib
|       |       |   entry-index.js
|       |       |   memoization.js
|       |       |   verify.js
|       |       |   
|       |       +---content
|       |       |       path.js
|       |       |       read.js
|       |       |       rm.js
|       |       |       write.js
|       |       |       
|       |       \---util
|       |               disposer.js
|       |               fix-owner.js
|       |               hash-to-segments.js
|       |               move-file.js
|       |               tmp.js
|       |               
|       +---call-bind-apply-helpers
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   actualApply.d.ts
|       |   |   actualApply.js
|       |   |   applyBind.d.ts
|       |   |   applyBind.js
|       |   |   CHANGELOG.md
|       |   |   functionApply.d.ts
|       |   |   functionApply.js
|       |   |   functionCall.d.ts
|       |   |   functionCall.js
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   reflectApply.d.ts
|       |   |   reflectApply.js
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---call-bound
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---chownr
|       |       chownr.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---clean-stack
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---color-support
|       |       bin.js
|       |       browser.js
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---concat-map
|       |   |   .travis.yml
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.markdown
|       |   |   
|       |   +---example
|       |   |       map.js
|       |   |       
|       |   \---test
|       |           map.js
|       |           
|       +---console-control-strings
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       README.md~
|       |       
|       +---content-disposition
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---content-type
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---cookie
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       SECURITY.md
|       |       
|       +---cookie-signature
|       |       History.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       Readme.md
|       |       
|       +---cors
|       |   |   CONTRIBUTING.md
|       |   |   HISTORY.md
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           index.js
|       |           
|       +---debug
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---src
|       |           browser.js
|       |           common.js
|       |           index.js
|       |           node.js
|       |           
|       +---decompress-response
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---deep-extend
|       |   |   CHANGELOG.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           deep-extend.js
|       |           
|       +---delegates
|       |   |   .npmignore
|       |   |   History.md
|       |   |   index.js
|       |   |   License
|       |   |   Makefile
|       |   |   package.json
|       |   |   Readme.md
|       |   |   
|       |   \---test
|       |           index.js
|       |           
|       +---depd
|       |   |   History.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   Readme.md
|       |   |   
|       |   \---lib
|       |       \---browser
|       |               index.js
|       |               
|       +---detect-libc
|       |   |   index.d.ts
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           detect-libc.js
|       |           elf.js
|       |           filesystem.js
|       |           process.js
|       |           
|       +---dunder-proto
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   get.d.ts
|       |   |   get.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   set.d.ts
|       |   |   set.js
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           get.js
|       |           index.js
|       |           set.js
|       |           
|       +---ecdsa-sig-formatter
|       |   |   CODEOWNERS
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---src
|       |           ecdsa-sig-formatter.d.ts
|       |           ecdsa-sig-formatter.js
|       |           param-bytes-for-alg.js
|       |           
|       +---ee-first
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---emoji-regex
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE-MIT.txt
|       |   |   package.json
|       |   |   README.md
|       |   |   text.js
|       |   |   
|       |   \---es2015
|       |           index.js
|       |           text.js
|       |           
|       +---encodeurl
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---encoding
|       |   |   .prettierrc.js
|       |   |   .travis.yml
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---lib
|       |   |       encoding.js
|       |   |       
|       |   \---test
|       |           test.js
|       |           
|       +---end-of-stream
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---env-paths
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---err-code
|       |   |   .editorconfig
|       |   |   .eslintrc.json
|       |   |   .travis.yml
|       |   |   bower.json
|       |   |   index.js
|       |   |   index.umd.js
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---test
|       |           .eslintrc.json
|       |           test.js
|       |           
|       +---es-define-property
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---es-errors
|       |   |   .eslintrc
|       |   |   CHANGELOG.md
|       |   |   eval.d.ts
|       |   |   eval.js
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   range.d.ts
|       |   |   range.js
|       |   |   README.md
|       |   |   ref.d.ts
|       |   |   ref.js
|       |   |   syntax.d.ts
|       |   |   syntax.js
|       |   |   tsconfig.json
|       |   |   type.d.ts
|       |   |   type.js
|       |   |   uri.d.ts
|       |   |   uri.js
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---es-object-atoms
|       |   |   .eslintrc
|       |   |   CHANGELOG.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   isObject.d.ts
|       |   |   isObject.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   RequireObjectCoercible.d.ts
|       |   |   RequireObjectCoercible.js
|       |   |   ToObject.d.ts
|       |   |   ToObject.js
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---escape-html
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       Readme.md
|       |       
|       +---etag
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---expand-template
|       |       .travis.yml
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       test.js
|       |       
|       +---express
|       |   |   History.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   Readme.md
|       |   |   
|       |   \---lib
|       |           application.js
|       |           express.js
|       |           request.js
|       |           response.js
|       |           utils.js
|       |           view.js
|       |           
|       +---file-uri-to-path
|       |   |   .npmignore
|       |   |   .travis.yml
|       |   |   History.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---test
|       |           test.js
|       |           tests.json
|       |           
|       +---finalhandler
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---forwarded
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---fresh
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---fs-constants
|       |       browser.js
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---fs-minipass
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---fs.realpath
|       |       index.js
|       |       LICENSE
|       |       old.js
|       |       package.json
|       |       README.md
|       |       
|       +---function-bind
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   implementation.js
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   |       FUNDING.yml
|       |   |       SECURITY.md
|       |   |       
|       |   \---test
|       |           .eslintrc
|       |           index.js
|       |           
|       +---gauge
|       |   |   LICENSE.md
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           base-theme.js
|       |           error.js
|       |           has-color.js
|       |           index.js
|       |           plumbing.js
|       |           process.js
|       |           progress-bar.js
|       |           render-template.js
|       |           set-immediate.js
|       |           set-interval.js
|       |           spin.js
|       |           template-item.js
|       |           theme-set.js
|       |           themes.js
|       |           wide-truncate.js
|       |           
|       +---get-intrinsic
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           GetIntrinsic.js
|       |           
|       +---get-proto
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   Object.getPrototypeOf.d.ts
|       |   |   Object.getPrototypeOf.js
|       |   |   package.json
|       |   |   README.md
|       |   |   Reflect.getPrototypeOf.d.ts
|       |   |   Reflect.getPrototypeOf.js
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---github-from-package
|       |   |   .travis.yml
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   readme.markdown
|       |   |   
|       |   +---example
|       |   |       package.json
|       |   |       url.js
|       |   |       
|       |   \---test
|       |           a.json
|       |           b.json
|       |           c.json
|       |           d.json
|       |           e.json
|       |           url.js
|       |           
|       +---glob
|       |       common.js
|       |       glob.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       sync.js
|       |       
|       +---gopd
|       |   |   .eslintrc
|       |   |   CHANGELOG.md
|       |   |   gOPD.d.ts
|       |   |   gOPD.js
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---graceful-fs
|       |       clone.js
|       |       graceful-fs.js
|       |       legacy-streams.js
|       |       LICENSE
|       |       package.json
|       |       polyfills.js
|       |       README.md
|       |       
|       +---has-symbols
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   shams.d.ts
|       |   |   shams.js
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |       |   index.js
|       |       |   tests.js
|       |       |   
|       |       \---shams
|       |               core-js.js
|       |               get-own-property-symbols.js
|       |               
|       +---has-unicode
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---hasown
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   tsconfig.json
|       |   |   
|       |           FUNDING.yml
|       |           
|       +---http-cache-semantics
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---http-errors
|       |   |   HISTORY.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |       \---statuses
|       |               codes.json
|       |               HISTORY.md
|       |               index.js
|       |               LICENSE
|       |               package.json
|       |               README.md
|       |               
|       +---http-proxy-agent
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---dist
|       |           agent.d.ts
|       |           agent.js
|       |           agent.js.map
|       |           index.d.ts
|       |           index.js
|       |           index.js.map
|       |           
|       +---https-proxy-agent
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---dist
|       |           agent.d.ts
|       |           agent.js
|       |           agent.js.map
|       |           index.d.ts
|       |           index.js
|       |           index.js.map
|       |           parse-proxy-response.d.ts
|       |           parse-proxy-response.js
|       |           parse-proxy-response.js.map
|       |           
|       +---humanize-ms
|       |       History.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---iconv-lite
|       |   |   Changelog.md
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   |       dependabot.yml
|       |   |       
|       |   +---.idea
|       |   |   |   iconv-lite.iml
|       |   |   |   modules.xml
|       |   |   |   vcs.xml
|       |   |   |   
|       |   |   +---codeStyles
|       |   |   |       codeStyleConfig.xml
|       |   |   |       Project.xml
|       |   |   |       
|       |   |   \---inspectionProfiles
|       |   |           Project_Default.xml
|       |   |           
|       |   +---encodings
|       |   |   |   dbcs-codec.js
|       |   |   |   dbcs-data.js
|       |   |   |   index.js
|       |   |   |   internal.js
|       |   |   |   sbcs-codec.js
|       |   |   |   sbcs-data-generated.js
|       |   |   |   sbcs-data.js
|       |   |   |   utf16.js
|       |   |   |   utf32.js
|       |   |   |   utf7.js
|       |   |   |   
|       |   |   \---tables
|       |   |           big5-added.json
|       |   |           cp936.json
|       |   |           cp949.json
|       |   |           cp950.json
|       |   |           eucjp.json
|       |   |           gb18030-ranges.json
|       |   |           gbk-added.json
|       |   |           shiftjis.json
|       |   |           
|       |   \---lib
|       |           bom-handling.js
|       |           index.d.ts
|       |           index.js
|       |           streams.js
|       |           
|       +---ieee754
|       |       index.d.ts
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---imurmurhash
|       |       imurmurhash.js
|       |       imurmurhash.min.js
|       |       package.json
|       |       README.md
|       |       
|       +---indent-string
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---infer-owner
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---inflight
|       |       inflight.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---inherits
|       |       inherits.js
|       |       inherits_browser.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---ini
|       |       ini.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---ip-address
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---dist
|       |   |   |   address-error.d.ts
|       |   |   |   address-error.d.ts.map
|       |   |   |   address-error.js
|       |   |   |   address-error.js.map
|       |   |   |   common.d.ts
|       |   |   |   common.d.ts.map
|       |   |   |   common.js
|       |   |   |   common.js.map
|       |   |   |   ip-address.d.ts
|       |   |   |   ip-address.d.ts.map
|       |   |   |   ip-address.js
|       |   |   |   ip-address.js.map
|       |   |   |   ipv4.d.ts
|       |   |   |   ipv4.d.ts.map
|       |   |   |   ipv4.js
|       |   |   |   ipv4.js.map
|       |   |   |   ipv6.d.ts
|       |   |   |   ipv6.d.ts.map
|       |   |   |   ipv6.js
|       |   |   |   ipv6.js.map
|       |   |   |   
|       |   |   +---v4
|       |   |   |       constants.d.ts
|       |   |   |       constants.d.ts.map
|       |   |   |       constants.js
|       |   |   |       constants.js.map
|       |   |   |       
|       |   |   \---v6
|       |   |           constants.d.ts
|       |   |           constants.d.ts.map
|       |   |           constants.js
|       |   |           constants.js.map
|       |   |           helpers.d.ts
|       |   |           helpers.d.ts.map
|       |   |           helpers.js
|       |   |           helpers.js.map
|       |   |           regular-expressions.d.ts
|       |   |           regular-expressions.d.ts.map
|       |   |           regular-expressions.js
|       |   |           regular-expressions.js.map
|       |   |           
|       |   \---src
|       |       |   address-error.ts
|       |       |   common.ts
|       |       |   ip-address.ts
|       |       |   ipv4.ts
|       |       |   ipv6.ts
|       |       |   
|       |       +---v4
|       |       |       constants.ts
|       |       |       
|       |       \---v6
|       |               constants.ts
|       |               helpers.ts
|       |               regular-expressions.ts
|       |               
|       +---ipaddr.js
|       |   |   ipaddr.min.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           ipaddr.js
|       |           ipaddr.js.d.ts
|       |           
|       +---is-fullwidth-code-point
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---is-lambda
|       |       .npmignore
|       |       .travis.yml
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       test.js
|       |       
|       +---is-promise
|       |       index.d.ts
|       |       index.js
|       |       index.mjs
|       |       LICENSE
|       |       package.json
|       |       readme.md
|       |       
|       +---isexe
|       |   |   .npmignore
|       |   |   index.js
|       |   |   LICENSE
|       |   |   mode.js
|       |   |   package.json
|       |   |   README.md
|       |   |   windows.js
|       |   |   
|       |   \---test
|       |           basic.js
|       |           
|       +---jsonwebtoken
|       |   |   decode.js
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   sign.js
|       |   |   verify.js
|       |   |   
|       |   \---lib
|       |           asymmetricKeyDetailsSupported.js
|       |           JsonWebTokenError.js
|       |           NotBeforeError.js
|       |           psSupported.js
|       |           rsaPssKeyDetailsSupported.js
|       |           timespan.js
|       |           TokenExpiredError.js
|       |           validateAsymmetricKey.js
|       |           
|       +---jwa
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---jws
|       |   |   CHANGELOG.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   readme.md
|       |   |   
|       |   \---lib
|       |           data-stream.js
|       |           sign-stream.js
|       |           tostring.js
|       |           verify-stream.js
|       |           
|       +---lodash.includes
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---lodash.isboolean
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---lodash.isinteger
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---lodash.isnumber
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---lodash.isplainobject
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---lodash.isstring
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---lodash.once
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---lru-cache
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---make-fetch-happen
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---lib
|       |   |   |   agent.js
|       |   |   |   fetch.js
|       |   |   |   index.js
|       |   |   |   options.js
|       |   |   |   remote.js
|       |   |   |   
|       |   |   \---cache
|       |   |           entry.js
|       |   |           errors.js
|       |   |           index.js
|       |   |           key.js
|       |   |           policy.js
|       |   |           
|       |       \---negotiator
|       |           |   HISTORY.md
|       |           |   index.js
|       |           |   LICENSE
|       |           |   package.json
|       |           |   README.md
|       |           |   
|       |           \---lib
|       |                   charset.js
|       |                   encoding.js
|       |                   language.js
|       |                   mediaType.js
|       |                   
|       +---math-intrinsics
|       |   |   .eslintrc
|       |   |   abs.d.ts
|       |   |   abs.js
|       |   |   CHANGELOG.md
|       |   |   floor.d.ts
|       |   |   floor.js
|       |   |   isFinite.d.ts
|       |   |   isFinite.js
|       |   |   isInteger.d.ts
|       |   |   isInteger.js
|       |   |   isNaN.d.ts
|       |   |   isNaN.js
|       |   |   isNegativeZero.d.ts
|       |   |   isNegativeZero.js
|       |   |   LICENSE
|       |   |   max.d.ts
|       |   |   max.js
|       |   |   min.d.ts
|       |   |   min.js
|       |   |   mod.d.ts
|       |   |   mod.js
|       |   |   package.json
|       |   |   pow.d.ts
|       |   |   pow.js
|       |   |   README.md
|       |   |   round.d.ts
|       |   |   round.js
|       |   |   sign.d.ts
|       |   |   sign.js
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   +---constants
|       |   |       maxArrayLength.d.ts
|       |   |       maxArrayLength.js
|       |   |       maxSafeInteger.d.ts
|       |   |       maxSafeInteger.js
|       |   |       maxValue.d.ts
|       |   |       maxValue.js
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---media-typer
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---merge-descriptors
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---mime-db
|       |       db.json
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---mime-types
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       mimeScore.js
|       |       package.json
|       |       README.md
|       |       
|       +---mimic-response
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---minimatch
|       |       LICENSE
|       |       minimatch.js
|       |       package.json
|       |       README.md
|       |       
|       +---minimist
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   +---example
|       |   |       parse.js
|       |   |       
|       |   \---test
|       |           all_bool.js
|       |           bool.js
|       |           dash.js
|       |           default_bool.js
|       |           dotted.js
|       |           kv_short.js
|       |           long.js
|       |           num.js
|       |           parse.js
|       |           parse_modified.js
|       |           proto.js
|       |           short.js
|       |           stop_early.js
|       |           unknown.js
|       |           whitespace.js
|       |           
|       +---minipass
|       |       index.d.ts
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---minipass-collect
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---minipass-fetch
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           abort-error.js
|       |           blob.js
|       |           body.js
|       |           fetch-error.js
|       |           headers.js
|       |           index.js
|       |           request.js
|       |           response.js
|       |           
|       +---minipass-flush
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---minipass-pipeline
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---minipass-sized
|       |   |   .npmignore
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package-lock.json
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---test
|       |           basic.js
|       |           
|       +---minizlib
|       |       constants.js
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---mkdirp
|       |   |   CHANGELOG.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   readme.markdown
|       |   |   
|       |   +---bin
|       |   |       cmd.js
|       |   |       
|       |   \---lib
|       |           find-made.js
|       |           mkdirp-manual.js
|       |           mkdirp-native.js
|       |           opts-arg.js
|       |           path-arg.js
|       |           use-native.js
|       |           
|       +---mkdirp-classic
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---ms
|       |       index.js
|       |       license.md
|       |       package.json
|       |       readme.md
|       |       
|       +---napi-build-utils
|       |   |   index.js
|       |   |   index.md
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |       \---workflows
|       |               run-npm-tests.yml
|       |               
|       +---negotiator
|       |   |   HISTORY.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           charset.js
|       |           encoding.js
|       |           language.js
|       |           mediaType.js
|       |           
|       +---node-abi
|       |       abi_registry.json
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---node-addon-api
|       |   |   common.gypi
|       |   |   except.gypi
|       |   |   index.js
|       |   |   LICENSE.md
|       |   |   napi-inl.deprecated.h
|       |   |   napi-inl.h
|       |   |   napi.h
|       |   |   node_addon_api.gyp
|       |   |   node_api.gyp
|       |   |   noexcept.gypi
|       |   |   nothing.c
|       |   |   package-support.json
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---tools
|       |           check-napi.js
|       |           clang-format.js
|       |           conversion.js
|       |           eslint-format.js
|       |           README.md
|       |           
|       +---node-gyp
|       |   |   addon.gypi
|       |   |   CHANGELOG.md
|       |   |   CONTRIBUTING.md
|       |   |   LICENSE
|       |   |   macOS_Catalina.md
|       |   |   macOS_Catalina_acid_test.sh
|       |   |   package.json
|       |   |   README.md
|       |   |   update-gyp.py
|       |   |   
|       |   |   |   ISSUE_TEMPLATE.md
|       |   |   |   PULL_REQUEST_TEMPLATE.md
|       |   |   |   
|       |   |   \---workflows
|       |   |           release-please.yml
|       |   |           tests.yml
|       |   |           visual-studio.yml
|       |   |           
|       |   +---bin
|       |   |       node-gyp.js
|       |   |       
|       |   +---docs
|       |   |       binding.gyp-files-in-the-wild.md
|       |   |       Common-issues.md
|       |   |       Error-pre-versions-of-node-cannot-be-installed.md
|       |   |       Home.md
|       |   |       Linking-to-OpenSSL.md
|       |   |       Updating-npm-bundled-node-gyp.md
|       |   |       
|       |   +---gyp
|       |   |   |   .flake8
|       |   |   |   AUTHORS
|       |   |   |   CHANGELOG.md
|       |   |   |   CODE_OF_CONDUCT.md
|       |   |   |   CONTRIBUTING.md
|       |   |   |   gyp
|       |   |   |   gyp.bat
|       |   |   |   gyp_main.py
|       |   |   |   LICENSE
|       |   |   |   README.md
|       |   |   |   requirements_dev.txt
|       |   |   |   setup.py
|       |   |   |   test_gyp.py
|       |   |   |   
|       |   |   |   \---workflows
|       |   |   |           node-gyp.yml
|       |   |   |           nodejs-windows.yml
|       |   |   |           Python_tests.yml
|       |   |   |           release-please.yml
|       |   |   |           
|       |   |   +---data
|       |   |   |   \---win
|       |   |   |           large-pdb-shim.cc
|       |   |   |           
|       |   |   +---pylib
|       |   |   |   \---gyp
|       |   |   |       |   common.py
|       |   |   |       |   common_test.py
|       |   |   |       |   easy_xml.py
|       |   |   |       |   easy_xml_test.py
|       |   |   |       |   flock_tool.py
|       |   |   |       |   input.py
|       |   |   |       |   input_test.py
|       |   |   |       |   mac_tool.py
|       |   |   |       |   MSVSNew.py
|       |   |   |       |   MSVSProject.py
|       |   |   |       |   MSVSSettings.py
|       |   |   |       |   MSVSSettings_test.py
|       |   |   |       |   MSVSToolFile.py
|       |   |   |       |   MSVSUserFile.py
|       |   |   |       |   MSVSUtil.py
|       |   |   |       |   MSVSVersion.py
|       |   |   |       |   msvs_emulation.py
|       |   |   |       |   ninja_syntax.py
|       |   |   |       |   simple_copy.py
|       |   |   |       |   win_tool.py
|       |   |   |       |   xcodeproj_file.py
|       |   |   |       |   xcode_emulation.py
|       |   |   |       |   xcode_ninja.py
|       |   |   |       |   xml_fix.py
|       |   |   |       |   __init__.py
|       |   |   |       |   
|       |   |   |       \---generator
|       |   |   |               analyzer.py
|       |   |   |               android.py
|       |   |   |               cmake.py
|       |   |   |               compile_commands_json.py
|       |   |   |               dump_dependency_json.py
|       |   |   |               eclipse.py
|       |   |   |               gypd.py
|       |   |   |               gypsh.py
|       |   |   |               make.py
|       |   |   |               msvs.py
|       |   |   |               msvs_test.py
|       |   |   |               ninja.py
|       |   |   |               ninja_test.py
|       |   |   |               xcode.py
|       |   |   |               xcode_test.py
|       |   |   |               __init__.py
|       |   |   |               
|       |   |   \---tools
|       |   |       |   graphviz.py
|       |   |       |   pretty_gyp.py
|       |   |       |   pretty_sln.py
|       |   |       |   pretty_vcproj.py
|       |   |       |   README
|       |   |       |   
|       |   |       +---emacs
|       |   |       |   |   gyp-tests.el
|       |   |       |   |   gyp.el
|       |   |       |   |   README
|       |   |       |   |   run-unit-tests.sh
|       |   |       |   |   
|       |   |       |   \---testdata
|       |   |       |           media.gyp
|       |   |       |           media.gyp.fontified
|       |   |       |           
|       |   |       \---Xcode
|       |   |           |   README
|       |   |           |   
|       |   |           \---Specifications
|       |   |                   gyp.pbfilespec
|       |   |                   gyp.xclangspec
|       |   |                   
|       |   +---lib
|       |   |       build.js
|       |   |       clean.js
|       |   |       configure.js
|       |   |       create-config-gypi.js
|       |   |       find-node-directory.js
|       |   |       find-python.js
|       |   |       Find-VisualStudio.cs
|       |   |       find-visualstudio.js
|       |   |       install.js
|       |   |       list.js
|       |   |       node-gyp.js
|       |   |       process-release.js
|       |   |       rebuild.js
|       |   |       remove.js
|       |   |       util.js
|       |   |       
|       |   +---src
|       |   |       win_delay_load_hook.cc
|       |   |       
|       |   \---test
|       |       |   common.js
|       |       |   process-exec-sync.js
|       |       |   simple-proxy.js
|       |       |   test-addon.js
|       |       |   test-configure-python.js
|       |       |   test-create-config-gypi.js
|       |       |   test-download.js
|       |       |   test-find-accessible-sync.js
|       |       |   test-find-node-directory.js
|       |       |   test-find-python.js
|       |       |   test-find-visualstudio.js
|       |       |   test-install.js
|       |       |   test-options.js
|       |       |   test-process-release.js
|       |       |   
|       |       \---fixtures
|       |           |   ca-bundle.crt
|       |           |   ca.crt
|       |           |   server.crt
|       |           |   server.key
|       |           |   test-charmap.py
|       |           |   VS_2017_BuildTools_minimal.txt
|       |           |   VS_2017_Community_workload.txt
|       |           |   VS_2017_Express.txt
|       |           |   VS_2017_Unusable.txt
|       |           |   VS_2019_BuildTools_minimal.txt
|       |           |   VS_2019_Community_workload.txt
|       |           |   VS_2019_Preview.txt
|       |           |   
|       |           \---nodedir
|       |               \---include
|       |                   \---node
|       |                           config.gypi
|       |                           
|       +---nopt
|       |   |   CHANGELOG.md
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---bin
|       |   |       nopt.js
|       |   |       
|       |   \---lib
|       |           nopt.js
|       |           
|       +---npmlog
|       |   |   LICENSE.md
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           log.js
|       |           
|       +---object-assign
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---object-inspect
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package-support.json
|       |   |   package.json
|       |   |   readme.markdown
|       |   |   test-core-js.js
|       |   |   util.inspect.js
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   +---example
|       |   |       all.js
|       |   |       circular.js
|       |   |       fn.js
|       |   |       inspect.js
|       |   |       
|       |   \---test
|       |       |   bigint.js
|       |       |   circular.js
|       |       |   deep.js
|       |       |   element.js
|       |       |   err.js
|       |       |   fakes.js
|       |       |   fn.js
|       |       |   global.js
|       |       |   has.js
|       |       |   holes.js
|       |       |   indent-option.js
|       |       |   inspect.js
|       |       |   lowbyte.js
|       |       |   number.js
|       |       |   quoteStyle.js
|       |       |   toStringTag.js
|       |       |   undef.js
|       |       |   values.js
|       |       |   
|       |       \---browser
|       |               dom.js
|       |               
|       +---on-finished
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---once
|       |       LICENSE
|       |       once.js
|       |       package.json
|       |       README.md
|       |       
|       +---p-map
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---parseurl
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---path-is-absolute
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---path-to-regexp
|       |   |   LICENSE
|       |   |   package.json
|       |   |   Readme.md
|       |   |   
|       |   \---dist
|       |           index.d.ts
|       |           index.js
|       |           index.js.map
|       |           
|       +---prebuild-install
|       |       asset.js
|       |       bin.js
|       |       CHANGELOG.md
|       |       CONTRIBUTING.md
|       |       download.js
|       |       error.js
|       |       help.txt
|       |       index.js
|       |       LICENSE
|       |       log.js
|       |       package.json
|       |       proxy.js
|       |       rc.js
|       |       README.md
|       |       util.js
|       |       
|       +---promise-inflight
|       |       inflight.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---promise-retry
|       |   |   .editorconfig
|       |   |   .jshintrc
|       |   |   .travis.yml
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---test
|       |           test.js
|       |           
|       +---proxy-addr
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---pump
|       |   |   .travis.yml
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   SECURITY.md
|       |   |   test-browser.js
|       |   |   test-node.js
|       |   |   
|       |           FUNDING.yml
|       |           
|       +---qs
|       |   |   .editorconfig
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   LICENSE.md
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   +---dist
|       |   |       qs.js
|       |   |       
|       |   +---lib
|       |   |       formats.js
|       |   |       index.js
|       |   |       parse.js
|       |   |       stringify.js
|       |   |       utils.js
|       |   |       
|       |   \---test
|       |           empty-keys-cases.js
|       |           parse.js
|       |           stringify.js
|       |           utils.js
|       |           
|       +---range-parser
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---raw-body
|       |   |   HISTORY.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   SECURITY.md
|       |   |   
|       |       \---iconv-lite
|       |           |   Changelog.md
|       |           |   LICENSE
|       |           |   package.json
|       |           |   README.md
|       |           |   
|       |           +---encodings
|       |           |   |   dbcs-codec.js
|       |           |   |   dbcs-data.js
|       |           |   |   index.js
|       |           |   |   internal.js
|       |           |   |   sbcs-codec.js
|       |           |   |   sbcs-data-generated.js
|       |           |   |   sbcs-data.js
|       |           |   |   utf16.js
|       |           |   |   utf32.js
|       |           |   |   utf7.js
|       |           |   |   
|       |           |   \---tables
|       |           |           big5-added.json
|       |           |           cp936.json
|       |           |           cp949.json
|       |           |           cp950.json
|       |           |           eucjp.json
|       |           |           gb18030-ranges.json
|       |           |           gbk-added.json
|       |           |           shiftjis.json
|       |           |           
|       |           \---lib
|       |               |   bom-handling.js
|       |               |   index.d.ts
|       |               |   index.js
|       |               |   streams.js
|       |               |   
|       |               \---helpers
|       |                       merge-exports.js
|       |                       
|       +---rc
|       |   |   browser.js
|       |   |   cli.js
|       |   |   index.js
|       |   |   LICENSE.APACHE2
|       |   |   LICENSE.BSD
|       |   |   LICENSE.MIT
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---lib
|       |   |       utils.js
|       |   |       
|       |   \---test
|       |           ini.js
|       |           nested-env-vars.js
|       |           test.js
|       |           
|       +---readable-stream
|       |   |   CONTRIBUTING.md
|       |   |   errors-browser.js
|       |   |   errors.js
|       |   |   experimentalWarning.js
|       |   |   GOVERNANCE.md
|       |   |   LICENSE
|       |   |   package.json
|       |   |   readable-browser.js
|       |   |   readable.js
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |       |   _stream_duplex.js
|       |       |   _stream_passthrough.js
|       |       |   _stream_readable.js
|       |       |   _stream_transform.js
|       |       |   _stream_writable.js
|       |       |   
|       |       \---internal
|       |           \---streams
|       |                   async_iterator.js
|       |                   buffer_list.js
|       |                   destroy.js
|       |                   end-of-stream.js
|       |                   from-browser.js
|       |                   from.js
|       |                   pipeline.js
|       |                   state.js
|       |                   stream-browser.js
|       |                   stream.js
|       |                   
|       +---retry
|       |   |   .npmignore
|       |   |   .travis.yml
|       |   |   equation.gif
|       |   |   index.js
|       |   |   License
|       |   |   Makefile
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---example
|       |   |       dns.js
|       |   |       stop.js
|       |   |       
|       |   +---lib
|       |   |       retry.js
|       |   |       retry_operation.js
|       |   |       
|       |   \---test
|       |       |   common.js
|       |       |   
|       |       \---integration
|       |               test-forever.js
|       |               test-retry-operation.js
|       |               test-retry-wrap.js
|       |               test-timeouts.js
|       |               
|       +---rimraf
|       |       bin.js
|       |       CHANGELOG.md
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       rimraf.js
|       |       
|       +---router
|       |   |   HISTORY.md
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           layer.js
|       |           route.js
|       |           
|       +---safe-buffer
|       |       index.d.ts
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---safer-buffer
|       |       dangerous.js
|       |       LICENSE
|       |       package.json
|       |       Porting-Buffer.md
|       |       Readme.md
|       |       safer.js
|       |       tests.js
|       |       
|       +---semver
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   preload.js
|       |   |   range.bnf
|       |   |   README.md
|       |   |   
|       |   +---bin
|       |   |       semver.js
|       |   |       
|       |   +---classes
|       |   |       comparator.js
|       |   |       index.js
|       |   |       range.js
|       |   |       semver.js
|       |   |       
|       |   +---functions
|       |   |       clean.js
|       |   |       cmp.js
|       |   |       coerce.js
|       |   |       compare-build.js
|       |   |       compare-loose.js
|       |   |       compare.js
|       |   |       diff.js
|       |   |       eq.js
|       |   |       gt.js
|       |   |       gte.js
|       |   |       inc.js
|       |   |       lt.js
|       |   |       lte.js
|       |   |       major.js
|       |   |       minor.js
|       |   |       neq.js
|       |   |       parse.js
|       |   |       patch.js
|       |   |       prerelease.js
|       |   |       rcompare.js
|       |   |       rsort.js
|       |   |       satisfies.js
|       |   |       sort.js
|       |   |       valid.js
|       |   |       
|       |   +---internal
|       |   |       constants.js
|       |   |       debug.js
|       |   |       identifiers.js
|       |   |       lrucache.js
|       |   |       parse-options.js
|       |   |       re.js
|       |   |       
|       |   \---ranges
|       |           gtr.js
|       |           intersects.js
|       |           ltr.js
|       |           max-satisfying.js
|       |           min-satisfying.js
|       |           min-version.js
|       |           outside.js
|       |           simplify.js
|       |           subset.js
|       |           to-comparators.js
|       |           valid.js
|       |           
|       +---send
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---serve-static
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---set-blocking
|       |       CHANGELOG.md
|       |       index.js
|       |       LICENSE.txt
|       |       package.json
|       |       README.md
|       |       
|       +---setprototypeof
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---test
|       |           index.js
|       |           
|       +---side-channel
|       |   |   .editorconfig
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---side-channel-list
|       |   |   .editorconfig
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   list.d.ts
|       |   |   package.json
|       |   |   README.md
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---side-channel-map
|       |   |   .editorconfig
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---side-channel-weakmap
|       |   |   .editorconfig
|       |   |   .eslintrc
|       |   |   .nycrc
|       |   |   CHANGELOG.md
|       |   |   index.d.ts
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   tsconfig.json
|       |   |   
|       |   |       FUNDING.yml
|       |   |       
|       |   \---test
|       |           index.js
|       |           
|       +---signal-exit
|       |       index.js
|       |       LICENSE.txt
|       |       package.json
|       |       README.md
|       |       signals.js
|       |       
|       +---simple-concat
|       |   |   .travis.yml
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---test
|       |           basic.js
|       |           
|       +---simple-get
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |       |   dependabot.yml
|       |       |   
|       |       \---workflows
|       |               ci.yml
|       |               
|       +---smart-buffer
|       |   |   .prettierrc.yaml
|       |   |   .travis.yml
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---build
|       |   |       smartbuffer.js
|       |   |       smartbuffer.js.map
|       |   |       utils.js
|       |   |       utils.js.map
|       |   |       
|       |   +---docs
|       |   |       CHANGELOG.md
|       |   |       README_v3.md
|       |   |       ROADMAP.md
|       |   |       
|       |   \---typings
|       |           smartbuffer.d.ts
|       |           utils.d.ts
|       |           
|       +---socks
|       |   |   .eslintrc.cjs
|       |   |   .prettierrc.yaml
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---build
|       |   |   |   index.js
|       |   |   |   index.js.map
|       |   |   |   
|       |   |   +---client
|       |   |   |       socksclient.js
|       |   |   |       socksclient.js.map
|       |   |   |       
|       |   |   \---common
|       |   |           constants.js
|       |   |           constants.js.map
|       |   |           helpers.js
|       |   |           helpers.js.map
|       |   |           receivebuffer.js
|       |   |           receivebuffer.js.map
|       |   |           util.js
|       |   |           util.js.map
|       |   |           
|       |   +---docs
|       |   |   |   index.md
|       |   |   |   migratingFromV1.md
|       |   |   |   
|       |   |   \---examples
|       |   |       |   index.md
|       |   |       |   
|       |   |       +---javascript
|       |   |       |       associateExample.md
|       |   |       |       bindExample.md
|       |   |       |       connectExample.md
|       |   |       |       
|       |   |       \---typescript
|       |   |               associateExample.md
|       |   |               bindExample.md
|       |   |               connectExample.md
|       |   |               
|       |   \---typings
|       |       |   index.d.ts
|       |       |   
|       |       +---client
|       |       |       socksclient.d.ts
|       |       |       
|       |       \---common
|       |               constants.d.ts
|       |               helpers.d.ts
|       |               receivebuffer.d.ts
|       |               util.d.ts
|       |               
|       +---socks-proxy-agent
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---dist
|       |           index.d.ts
|       |           index.js
|       |           index.js.map
|       |           
|       +---sqlite3
|       |   |   binding.gyp
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---build
|       |   |   \---Release
|       |   |           node_sqlite3.node
|       |   |           
|       |   +---deps
|       |   |       common-sqlite.gypi
|       |   |       extract.js
|       |   |       sqlite-autoconf-3440200.tar.gz
|       |   |       sqlite3.gyp
|       |   |       
|       |   +---lib
|       |   |       sqlite3-binding.js
|       |   |       sqlite3.d.ts
|       |   |       sqlite3.js
|       |   |       trace.js
|       |   |       
|       |   \---src
|       |           async.h
|       |           backup.cc
|       |           backup.h
|       |           database.cc
|       |           database.h
|       |           gcc-preinclude.h
|       |           macros.h
|       |           node_sqlite3.cc
|       |           statement.cc
|       |           statement.h
|       |           threading.h
|       |           
|       +---ssri
|       |       CHANGELOG.md
|       |       index.js
|       |       LICENSE.md
|       |       package.json
|       |       README.md
|       |       
|       +---statuses
|       |       codes.json
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---string-width
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---string_decoder
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---lib
|       |           string_decoder.js
|       |           
|       +---strip-ansi
|       |       index.d.ts
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---strip-json-comments
|       |       index.js
|       |       license
|       |       package.json
|       |       readme.md
|       |       
|       +---tar
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---lib
|       |   |       create.js
|       |   |       extract.js
|       |   |       get-write-flag.js
|       |   |       header.js
|       |   |       high-level-opt.js
|       |   |       large-numbers.js
|       |   |       list.js
|       |   |       mkdir.js
|       |   |       mode-fix.js
|       |   |       normalize-unicode.js
|       |   |       normalize-windows-path.js
|       |   |       pack.js
|       |   |       parse.js
|       |   |       path-reservations.js
|       |   |       pax.js
|       |   |       read-entry.js
|       |   |       replace.js
|       |   |       strip-absolute-path.js
|       |   |       strip-trailing-slashes.js
|       |   |       types.js
|       |   |       unpack.js
|       |   |       update.js
|       |   |       warn-mixin.js
|       |   |       winchars.js
|       |   |       write-entry.js
|       |   |       
|       |       \---minipass
|       |               index.d.ts
|       |               index.js
|       |               index.mjs
|       |               LICENSE
|       |               package.json
|       |               README.md
|       |               
|       +---tar-fs
|       |   |   .travis.yml
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   |   \---chownr
|       |   |           chownr.js
|       |   |           LICENSE
|       |   |           package.json
|       |   |           README.md
|       |   |           
|       |   \---test
|       |       |   index.js
|       |       |   
|       |       \---fixtures
|       |           |   invalid.tar
|       |           |   
|       |           +---a
|       |           |       hello.txt
|       |           |       
|       |           +---b
|       |           |   \---a
|       |           |           test.txt
|       |           |           
|       |           +---d
|       |           |   |   file1
|       |           |   |   file2
|       |           |   |   
|       |           |   +---sub-dir
|       |           |   |       file5
|       |           |   |       
|       |           |   \---sub-files
|       |           |           file3
|       |           |           file4
|       |           |           
|       |           \---e
|       |               |   file
|       |               |   
|       |               \---directory
|       |                       .ignore
|       |                       
|       +---tar-stream
|       |       extract.js
|       |       headers.js
|       |       index.js
|       |       LICENSE
|       |       pack.js
|       |       package.json
|       |       README.md
|       |       sandbox.js
|       |       
|       +---toidentifier
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---tunnel-agent
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---type-is
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---unique-filename
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   +---.nyc_output
|       |   |       54942.json
|       |   |       54944.json
|       |   |       
|       |   +---coverage
|       |   |   |   base.css
|       |   |   |   index.html
|       |   |   |   prettify.css
|       |   |   |   prettify.js
|       |   |   |   sort-arrow-sprite.png
|       |   |   |   sorter.js
|       |   |   |   
|       |   |   \---__root__
|       |   |           index.html
|       |   |           index.js.html
|       |   |           
|       |   \---test
|       |           index.js
|       |           
|       +---unique-slug
|       |   |   .travis.yml
|       |   |   index.js
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   
|       |   \---test
|       |           index.js
|       |           
|       +---unpipe
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---util-deprecate
|       |       browser.js
|       |       History.md
|       |       LICENSE
|       |       node.js
|       |       package.json
|       |       README.md
|       |       
|       +---vary
|       |       HISTORY.md
|       |       index.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---which
|       |   |   CHANGELOG.md
|       |   |   LICENSE
|       |   |   package.json
|       |   |   README.md
|       |   |   which.js
|       |   |   
|       |   \---bin
|       |           node-which
|       |           
|       +---wide-align
|       |       align.js
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       
|       +---wrappy
|       |       LICENSE
|       |       package.json
|       |       README.md
|       |       wrappy.js
|       |       
|       \---yallist
|               iterator.js
|               LICENSE
|               package.json
|               README.md
|               yallist.js
|               
\---frontend
    |   02_INICIAR_FRONTEND.bat
    |   eslint.config.js
    |   index.html
    |   package-lock.json
    |   package.json
    |   README.md
    |   vite.config.js
    |   
    |   |   .package-lock.json
    |   |   
    |   +---.bin
    |   |       acorn
    |   |       acorn.cmd
    |   |       acorn.ps1
    |   |       baseline-browser-mapping
    |   |       baseline-browser-mapping.cmd
    |   |       baseline-browser-mapping.ps1
    |   |       browserslist
    |   |       browserslist.cmd
    |   |       browserslist.ps1
    |   |       eslint
    |   |       eslint.cmd
    |   |       eslint.ps1
    |   |       js-yaml
    |   |       js-yaml.cmd
    |   |       js-yaml.ps1
    |   |       jsesc
    |   |       jsesc.cmd
    |   |       jsesc.ps1
    |   |       json5
    |   |       json5.cmd
    |   |       json5.ps1
    |   |       loose-envify
    |   |       loose-envify.cmd
    |   |       loose-envify.ps1
    |   |       nanoid
    |   |       nanoid.cmd
    |   |       nanoid.ps1
    |   |       node-which
    |   |       node-which.cmd
    |   |       node-which.ps1
    |   |       parser
    |   |       parser.cmd
    |   |       parser.ps1
    |   |       rolldown
    |   |       rolldown.cmd
    |   |       rolldown.ps1
    |   |       semver
    |   |       semver.cmd
    |   |       semver.ps1
    |   |       update-browserslist-db
    |   |       update-browserslist-db.cmd
    |   |       update-browserslist-db.ps1
    |   |       vite
    |   |       vite.cmd
    |   |       vite.ps1
    |   |       
    |   +---.vite
    |   |   \---deps
    |   |           axios.js
    |   |           axios.js.map
    |   |           chunk-DbKvDyjX.js
    |   |           package.json
    |   |           react-dom-Bu4ag0_3.js
    |   |           react-dom-Bu4ag0_3.js.map
    |   |           react-dom.js
    |   |           react-dom_client.js
    |   |           react-dom_client.js.map
    |   |           react-Dzmm40ca.js
    |   |           react-Dzmm40ca.js.map
    |   |           react-imask.js
    |   |           react-imask.js.map
    |   |           react.js
    |   |           react_jsx-dev-runtime.js
    |   |           react_jsx-dev-runtime.js.map
    |   |           react_jsx-runtime.js
    |   |           react_jsx-runtime.js.map
    |   |           _metadata.json
    |   |           
    |   +---.vite-temp
    |   +---@babel
    |   |   +---code-frame
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |           index.js
    |   |   |           index.js.map
    |   |   |           
    |   |   +---compat-data
    |   |   |   |   corejs2-built-ins.js
    |   |   |   |   corejs3-shipped-proposals.js
    |   |   |   |   LICENSE
    |   |   |   |   native-modules.js
    |   |   |   |   overlapping-plugins.js
    |   |   |   |   package.json
    |   |   |   |   plugin-bugfixes.js
    |   |   |   |   plugins.js
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---data
    |   |   |           corejs2-built-ins.json
    |   |   |           corejs3-shipped-proposals.json
    |   |   |           native-modules.json
    |   |   |           overlapping-plugins.json
    |   |   |           plugin-bugfixes.json
    |   |   |           plugins.json
    |   |   |           
    |   |   +---core
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   +---lib
    |   |   |   |   |   index.js
    |   |   |   |   |   index.js.map
    |   |   |   |   |   parse.js
    |   |   |   |   |   parse.js.map
    |   |   |   |   |   transform-ast.js
    |   |   |   |   |   transform-ast.js.map
    |   |   |   |   |   transform-file-browser.js
    |   |   |   |   |   transform-file-browser.js.map
    |   |   |   |   |   transform-file.js
    |   |   |   |   |   transform-file.js.map
    |   |   |   |   |   transform.js
    |   |   |   |   |   transform.js.map
    |   |   |   |   |   
    |   |   |   |   +---config
    |   |   |   |   |   |   cache-contexts.js
    |   |   |   |   |   |   cache-contexts.js.map
    |   |   |   |   |   |   caching.js
    |   |   |   |   |   |   caching.js.map
    |   |   |   |   |   |   config-chain.js
    |   |   |   |   |   |   config-chain.js.map
    |   |   |   |   |   |   config-descriptors.js
    |   |   |   |   |   |   config-descriptors.js.map
    |   |   |   |   |   |   full.js
    |   |   |   |   |   |   full.js.map
    |   |   |   |   |   |   index.js
    |   |   |   |   |   |   index.js.map
    |   |   |   |   |   |   item.js
    |   |   |   |   |   |   item.js.map
    |   |   |   |   |   |   partial.js
    |   |   |   |   |   |   partial.js.map
    |   |   |   |   |   |   pattern-to-regex.js
    |   |   |   |   |   |   pattern-to-regex.js.map
    |   |   |   |   |   |   plugin.js
    |   |   |   |   |   |   plugin.js.map
    |   |   |   |   |   |   printer.js
    |   |   |   |   |   |   printer.js.map
    |   |   |   |   |   |   resolve-targets-browser.js
    |   |   |   |   |   |   resolve-targets-browser.js.map
    |   |   |   |   |   |   resolve-targets.js
    |   |   |   |   |   |   resolve-targets.js.map
    |   |   |   |   |   |   util.js
    |   |   |   |   |   |   util.js.map
    |   |   |   |   |   |   
    |   |   |   |   |   +---files
    |   |   |   |   |   |       configuration.js
    |   |   |   |   |   |       configuration.js.map
    |   |   |   |   |   |       import.cjs
    |   |   |   |   |   |       import.cjs.map
    |   |   |   |   |   |       index-browser.js
    |   |   |   |   |   |       index-browser.js.map
    |   |   |   |   |   |       index.js
    |   |   |   |   |   |       index.js.map
    |   |   |   |   |   |       module-types.js
    |   |   |   |   |   |       module-types.js.map
    |   |   |   |   |   |       package.js
    |   |   |   |   |   |       package.js.map
    |   |   |   |   |   |       plugins.js
    |   |   |   |   |   |       plugins.js.map
    |   |   |   |   |   |       types.js
    |   |   |   |   |   |       types.js.map
    |   |   |   |   |   |       utils.js
    |   |   |   |   |   |       utils.js.map
    |   |   |   |   |   |       
    |   |   |   |   |   +---helpers
    |   |   |   |   |   |       config-api.js
    |   |   |   |   |   |       config-api.js.map
    |   |   |   |   |   |       deep-array.js
    |   |   |   |   |   |       deep-array.js.map
    |   |   |   |   |   |       environment.js
    |   |   |   |   |   |       environment.js.map
    |   |   |   |   |   |       
    |   |   |   |   |   \---validation
    |   |   |   |   |           option-assertions.js
    |   |   |   |   |           option-assertions.js.map
    |   |   |   |   |           options.js
    |   |   |   |   |           options.js.map
    |   |   |   |   |           plugins.js
    |   |   |   |   |           plugins.js.map
    |   |   |   |   |           removed.js
    |   |   |   |   |           removed.js.map
    |   |   |   |   |           
    |   |   |   |   +---errors
    |   |   |   |   |       config-error.js
    |   |   |   |   |       config-error.js.map
    |   |   |   |   |       rewrite-stack-trace.js
    |   |   |   |   |       rewrite-stack-trace.js.map
    |   |   |   |   |       
    |   |   |   |   +---gensync-utils
    |   |   |   |   |       async.js
    |   |   |   |   |       async.js.map
    |   |   |   |   |       fs.js
    |   |   |   |   |       fs.js.map
    |   |   |   |   |       functional.js
    |   |   |   |   |       functional.js.map
    |   |   |   |   |       
    |   |   |   |   +---parser
    |   |   |   |   |   |   index.js
    |   |   |   |   |   |   index.js.map
    |   |   |   |   |   |   
    |   |   |   |   |   \---util
    |   |   |   |   |           missing-plugin-helper.js
    |   |   |   |   |           missing-plugin-helper.js.map
    |   |   |   |   |           
    |   |   |   |   +---tools
    |   |   |   |   |       build-external-helpers.js
    |   |   |   |   |       build-external-helpers.js.map
    |   |   |   |   |       
    |   |   |   |   +---transformation
    |   |   |   |   |   |   block-hoist-plugin.js
    |   |   |   |   |   |   block-hoist-plugin.js.map
    |   |   |   |   |   |   index.js
    |   |   |   |   |   |   index.js.map
    |   |   |   |   |   |   normalize-file.js
    |   |   |   |   |   |   normalize-file.js.map
    |   |   |   |   |   |   normalize-opts.js
    |   |   |   |   |   |   normalize-opts.js.map
    |   |   |   |   |   |   plugin-pass.js
    |   |   |   |   |   |   plugin-pass.js.map
    |   |   |   |   |   |   
    |   |   |   |   |   +---file
    |   |   |   |   |   |       babel-7-helpers.cjs
    |   |   |   |   |   |       babel-7-helpers.cjs.map
    |   |   |   |   |   |       file.js
    |   |   |   |   |   |       file.js.map
    |   |   |   |   |   |       generate.js
    |   |   |   |   |   |       generate.js.map
    |   |   |   |   |   |       merge-map.js
    |   |   |   |   |   |       merge-map.js.map
    |   |   |   |   |   |       
    |   |   |   |   |   \---util
    |   |   |   |   |           clone-deep.js
    |   |   |   |   |           clone-deep.js.map
    |   |   |   |   |           
    |   |   |   |   \---vendor
    |   |   |   |           import-meta-resolve.js
    |   |   |   |           import-meta-resolve.js.map
    |   |   |   |           
    |   |   |   \---src
    |   |   |       |   transform-file-browser.ts
    |   |   |       |   transform-file.ts
    |   |   |       |   
    |   |   |       \---config
    |   |   |           |   resolve-targets-browser.ts
    |   |   |           |   resolve-targets.ts
    |   |   |           |   
    |   |   |           \---files
    |   |   |                   index-browser.ts
    |   |   |                   index.ts
    |   |   |                   
    |   |   +---generator
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |       |   buffer.js
    |   |   |       |   buffer.js.map
    |   |   |       |   index.js
    |   |   |       |   index.js.map
    |   |   |       |   printer.js
    |   |   |       |   printer.js.map
    |   |   |       |   source-map.js
    |   |   |       |   source-map.js.map
    |   |   |       |   token-map.js
    |   |   |       |   token-map.js.map
    |   |   |       |   
    |   |   |       +---generators
    |   |   |       |       base.js
    |   |   |       |       base.js.map
    |   |   |       |       classes.js
    |   |   |       |       classes.js.map
    |   |   |       |       deprecated.js
    |   |   |       |       deprecated.js.map
    |   |   |       |       expressions.js
    |   |   |       |       expressions.js.map
    |   |   |       |       flow.js
    |   |   |       |       flow.js.map
    |   |   |       |       index.js
    |   |   |       |       index.js.map
    |   |   |       |       jsx.js
    |   |   |       |       jsx.js.map
    |   |   |       |       methods.js
    |   |   |       |       methods.js.map
    |   |   |       |       modules.js
    |   |   |       |       modules.js.map
    |   |   |       |       statements.js
    |   |   |       |       statements.js.map
    |   |   |       |       template-literals.js
    |   |   |       |       template-literals.js.map
    |   |   |       |       types.js
    |   |   |       |       types.js.map
    |   |   |       |       typescript.js
    |   |   |       |       typescript.js.map
    |   |   |       |       
    |   |   |       \---node
    |   |   |               index.js
    |   |   |               index.js.map
    |   |   |               parentheses.js
    |   |   |               parentheses.js.map
    |   |   |               whitespace.js
    |   |   |               whitespace.js.map
    |   |   |               
    |   |   +---helper-compilation-targets
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |           debug.js
    |   |   |           debug.js.map
    |   |   |           filter-items.js
    |   |   |           filter-items.js.map
    |   |   |           index.js
    |   |   |           index.js.map
    |   |   |           options.js
    |   |   |           options.js.map
    |   |   |           pretty.js
    |   |   |           pretty.js.map
    |   |   |           targets.js
    |   |   |           targets.js.map
    |   |   |           utils.js
    |   |   |           utils.js.map
    |   |   |           
    |   |   +---helper-globals
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---data
    |   |   |           browser-upper.json
    |   |   |           builtin-lower.json
    |   |   |           builtin-upper.json
    |   |   |           
    |   |   +---helper-module-imports
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |           import-builder.js
    |   |   |           import-builder.js.map
    |   |   |           import-injector.js
    |   |   |           import-injector.js.map
    |   |   |           index.js
    |   |   |           index.js.map
    |   |   |           is-module.js
    |   |   |           is-module.js.map
    |   |   |           
    |   |   +---helper-module-transforms
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |           dynamic-import.js
    |   |   |           dynamic-import.js.map
    |   |   |           get-module-name.js
    |   |   |           get-module-name.js.map
    |   |   |           index.js
    |   |   |           index.js.map
    |   |   |           lazy-modules.js
    |   |   |           lazy-modules.js.map
    |   |   |           normalize-and-load-metadata.js
    |   |   |           normalize-and-load-metadata.js.map
    |   |   |           rewrite-live-references.js
    |   |   |           rewrite-live-references.js.map
    |   |   |           rewrite-this.js
    |   |   |           rewrite-this.js.map
    |   |   |           
    |   |   +---helper-plugin-utils
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |           index.js
    |   |   |           index.js.map
    |   |   |           
    |   |   +---helper-string-parser
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |           index.js
    |   |   |           index.js.map
    |   |   |           
    |   |   +---helper-validator-identifier
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |           identifier.js
    |   |   |           identifier.js.map
    |   |   |           index.js
    |   |   |           index.js.map
    |   |   |           keyword.js
    |   |   |           keyword.js.map
    |   |   |           
    |   |   +---helper-validator-option
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |           find-suggestion.js
    |   |   |           find-suggestion.js.map
    |   |   |           index.js
    |   |   |           index.js.map
    |   |   |           validator.js
    |   |   |           validator.js.map
    |   |   |           
    |   |   +---helpers
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |       |   helpers-generated.js
    |   |   |       |   helpers-generated.js.map
    |   |   |       |   index.js
    |   |   |       |   index.js.map
    |   |   |       |   
    |   |   |       \---helpers
    |   |   |               applyDecoratedDescriptor.js
    |   |   |               applyDecoratedDescriptor.js.map
    |   |   |               applyDecs.js
    |   |   |               applyDecs.js.map
    |   |   |               applyDecs2203.js
    |   |   |               applyDecs2203.js.map
    |   |   |               applyDecs2203R.js
    |   |   |               applyDecs2203R.js.map
    |   |   |               applyDecs2301.js
    |   |   |               applyDecs2301.js.map
    |   |   |               applyDecs2305.js
    |   |   |               applyDecs2305.js.map
    |   |   |               applyDecs2311.js
    |   |   |               applyDecs2311.js.map
    |   |   |               arrayLikeToArray.js
    |   |   |               arrayLikeToArray.js.map
    |   |   |               arrayWithHoles.js
    |   |   |               arrayWithHoles.js.map
    |   |   |               arrayWithoutHoles.js
    |   |   |               arrayWithoutHoles.js.map
    |   |   |               assertClassBrand.js
    |   |   |               assertClassBrand.js.map
    |   |   |               assertThisInitialized.js
    |   |   |               assertThisInitialized.js.map
    |   |   |               asyncGeneratorDelegate.js
    |   |   |               asyncGeneratorDelegate.js.map
    |   |   |               asyncIterator.js
    |   |   |               asyncIterator.js.map
    |   |   |               asyncToGenerator.js
    |   |   |               asyncToGenerator.js.map
    |   |   |               awaitAsyncGenerator.js
    |   |   |               awaitAsyncGenerator.js.map
    |   |   |               AwaitValue.js
    |   |   |               AwaitValue.js.map
    |   |   |               callSuper.js
    |   |   |               callSuper.js.map
    |   |   |               checkInRHS.js
    |   |   |               checkInRHS.js.map
    |   |   |               checkPrivateRedeclaration.js
    |   |   |               checkPrivateRedeclaration.js.map
    |   |   |               classApplyDescriptorDestructureSet.js
    |   |   |               classApplyDescriptorDestructureSet.js.map
    |   |   |               classApplyDescriptorGet.js
    |   |   |               classApplyDescriptorGet.js.map
    |   |   |               classApplyDescriptorSet.js
    |   |   |               classApplyDescriptorSet.js.map
    |   |   |               classCallCheck.js
    |   |   |               classCallCheck.js.map
    |   |   |               classCheckPrivateStaticAccess.js
    |   |   |               classCheckPrivateStaticAccess.js.map
    |   |   |               classCheckPrivateStaticFieldDescriptor.js
    |   |   |               classCheckPrivateStaticFieldDescriptor.js.map
    |   |   |               classExtractFieldDescriptor.js
    |   |   |               classExtractFieldDescriptor.js.map
    |   |   |               classNameTDZError.js
    |   |   |               classNameTDZError.js.map
    |   |   |               classPrivateFieldDestructureSet.js
    |   |   |               classPrivateFieldDestructureSet.js.map
    |   |   |               classPrivateFieldGet.js
    |   |   |               classPrivateFieldGet.js.map
    |   |   |               classPrivateFieldGet2.js
    |   |   |               classPrivateFieldGet2.js.map
    |   |   |               classPrivateFieldInitSpec.js
    |   |   |               classPrivateFieldInitSpec.js.map
    |   |   |               classPrivateFieldLooseBase.js
    |   |   |               classPrivateFieldLooseBase.js.map
    |   |   |               classPrivateFieldLooseKey.js
    |   |   |               classPrivateFieldLooseKey.js.map
    |   |   |               classPrivateFieldSet.js
    |   |   |               classPrivateFieldSet.js.map
    |   |   |               classPrivateFieldSet2.js
    |   |   |               classPrivateFieldSet2.js.map
    |   |   |               classPrivateGetter.js
    |   |   |               classPrivateGetter.js.map
    |   |   |               classPrivateMethodGet.js
    |   |   |               classPrivateMethodGet.js.map
    |   |   |               classPrivateMethodInitSpec.js
    |   |   |               classPrivateMethodInitSpec.js.map
    |   |   |               classPrivateMethodSet.js
    |   |   |               classPrivateMethodSet.js.map
    |   |   |               classPrivateSetter.js
    |   |   |               classPrivateSetter.js.map
    |   |   |               classStaticPrivateFieldDestructureSet.js
    |   |   |               classStaticPrivateFieldDestructureSet.js.map
    |   |   |               classStaticPrivateFieldSpecGet.js
    |   |   |               classStaticPrivateFieldSpecGet.js.map
    |   |   |               classStaticPrivateFieldSpecSet.js
    |   |   |               classStaticPrivateFieldSpecSet.js.map
    |   |   |               classStaticPrivateMethodGet.js
    |   |   |               classStaticPrivateMethodGet.js.map
    |   |   |               classStaticPrivateMethodSet.js
    |   |   |               classStaticPrivateMethodSet.js.map
    |   |   |               construct.js
    |   |   |               construct.js.map
    |   |   |               createClass.js
    |   |   |               createClass.js.map
    |   |   |               createForOfIteratorHelper.js
    |   |   |               createForOfIteratorHelper.js.map
    |   |   |               createForOfIteratorHelperLoose.js
    |   |   |               createForOfIteratorHelperLoose.js.map
    |   |   |               createSuper.js
    |   |   |               createSuper.js.map
    |   |   |               decorate.js
    |   |   |               decorate.js.map
    |   |   |               defaults.js
    |   |   |               defaults.js.map
    |   |   |               defineAccessor.js
    |   |   |               defineAccessor.js.map
    |   |   |               defineEnumerableProperties.js
    |   |   |               defineEnumerableProperties.js.map
    |   |   |               defineProperty.js
    |   |   |               defineProperty.js.map
    |   |   |               dispose.js
    |   |   |               dispose.js.map
    |   |   |               extends.js
    |   |   |               extends.js.map
    |   |   |               get.js
    |   |   |               get.js.map
    |   |   |               getPrototypeOf.js
    |   |   |               getPrototypeOf.js.map
    |   |   |               identity.js
    |   |   |               identity.js.map
    |   |   |               importDeferProxy.js
    |   |   |               importDeferProxy.js.map
    |   |   |               inherits.js
    |   |   |               inherits.js.map
    |   |   |               inheritsLoose.js
    |   |   |               inheritsLoose.js.map
    |   |   |               initializerDefineProperty.js
    |   |   |               initializerDefineProperty.js.map
    |   |   |               initializerWarningHelper.js
    |   |   |               initializerWarningHelper.js.map
    |   |   |               instanceof.js
    |   |   |               instanceof.js.map
    |   |   |               interopRequireDefault.js
    |   |   |               interopRequireDefault.js.map
    |   |   |               interopRequireWildcard.js
    |   |   |               interopRequireWildcard.js.map
    |   |   |               isNativeFunction.js
    |   |   |               isNativeFunction.js.map
    |   |   |               isNativeReflectConstruct.js
    |   |   |               isNativeReflectConstruct.js.map
    |   |   |               iterableToArray.js
    |   |   |               iterableToArray.js.map
    |   |   |               iterableToArrayLimit.js
    |   |   |               iterableToArrayLimit.js.map
    |   |   |               jsx.js
    |   |   |               jsx.js.map
    |   |   |               maybeArrayLike.js
    |   |   |               maybeArrayLike.js.map
    |   |   |               newArrowCheck.js
    |   |   |               newArrowCheck.js.map
    |   |   |               nonIterableRest.js
    |   |   |               nonIterableRest.js.map
    |   |   |               nonIterableSpread.js
    |   |   |               nonIterableSpread.js.map
    |   |   |               nullishReceiverError.js
    |   |   |               nullishReceiverError.js.map
    |   |   |               objectDestructuringEmpty.js
    |   |   |               objectDestructuringEmpty.js.map
    |   |   |               objectSpread.js
    |   |   |               objectSpread.js.map
    |   |   |               objectSpread2.js
    |   |   |               objectSpread2.js.map
    |   |   |               objectWithoutProperties.js
    |   |   |               objectWithoutProperties.js.map
    |   |   |               objectWithoutPropertiesLoose.js
    |   |   |               objectWithoutPropertiesLoose.js.map
    |   |   |               OverloadYield.js
    |   |   |               OverloadYield.js.map
    |   |   |               possibleConstructorReturn.js
    |   |   |               possibleConstructorReturn.js.map
    |   |   |               readOnlyError.js
    |   |   |               readOnlyError.js.map
    |   |   |               regenerator.js
    |   |   |               regenerator.js.map
    |   |   |               regeneratorAsync.js
    |   |   |               regeneratorAsync.js.map
    |   |   |               regeneratorAsyncGen.js
    |   |   |               regeneratorAsyncGen.js.map
    |   |   |               regeneratorAsyncIterator.js
    |   |   |               regeneratorAsyncIterator.js.map
    |   |   |               regeneratorDefine.js
    |   |   |               regeneratorDefine.js.map
    |   |   |               regeneratorKeys.js
    |   |   |               regeneratorKeys.js.map
    |   |   |               regeneratorRuntime.js
    |   |   |               regeneratorRuntime.js.map
    |   |   |               regeneratorValues.js
    |   |   |               regeneratorValues.js.map
    |   |   |               set.js
    |   |   |               set.js.map
    |   |   |               setFunctionName.js
    |   |   |               setFunctionName.js.map
    |   |   |               setPrototypeOf.js
    |   |   |               setPrototypeOf.js.map
    |   |   |               skipFirstGeneratorNext.js
    |   |   |               skipFirstGeneratorNext.js.map
    |   |   |               slicedToArray.js
    |   |   |               slicedToArray.js.map
    |   |   |               superPropBase.js
    |   |   |               superPropBase.js.map
    |   |   |               superPropGet.js
    |   |   |               superPropGet.js.map
    |   |   |               superPropSet.js
    |   |   |               superPropSet.js.map
    |   |   |               taggedTemplateLiteral.js
    |   |   |               taggedTemplateLiteral.js.map
    |   |   |               taggedTemplateLiteralLoose.js
    |   |   |               taggedTemplateLiteralLoose.js.map
    |   |   |               tdz.js
    |   |   |               tdz.js.map
    |   |   |               temporalRef.js
    |   |   |               temporalRef.js.map
    |   |   |               temporalUndefined.js
    |   |   |               temporalUndefined.js.map
    |   |   |               toArray.js
    |   |   |               toArray.js.map
    |   |   |               toConsumableArray.js
    |   |   |               toConsumableArray.js.map
    |   |   |               toPrimitive.js
    |   |   |               toPrimitive.js.map
    |   |   |               toPropertyKey.js
    |   |   |               toPropertyKey.js.map
    |   |   |               toSetter.js
    |   |   |               toSetter.js.map
    |   |   |               tsRewriteRelativeImportExtensions.js
    |   |   |               tsRewriteRelativeImportExtensions.js.map
    |   |   |               typeof.js
    |   |   |               typeof.js.map
    |   |   |               unsupportedIterableToArray.js
    |   |   |               unsupportedIterableToArray.js.map
    |   |   |               using.js
    |   |   |               using.js.map
    |   |   |               usingCtx.js
    |   |   |               usingCtx.js.map
    |   |   |               wrapAsyncGenerator.js
    |   |   |               wrapAsyncGenerator.js.map
    |   |   |               wrapNativeSuper.js
    |   |   |               wrapNativeSuper.js.map
    |   |   |               wrapRegExp.js
    |   |   |               wrapRegExp.js.map
    |   |   |               writeOnlyError.js
    |   |   |               writeOnlyError.js.map
    |   |   |               
    |   |   +---parser
    |   |   |   |   CHANGELOG.md
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   +---bin
    |   |   |   |       babel-parser.js
    |   |   |   |       
    |   |   |   +---lib
    |   |   |   |       index.js
    |   |   |   |       index.js.map
    |   |   |   |       
    |   |   |   \---typings
    |   |   |           babel-parser.d.ts
    |   |   |           
    |   |   +---plugin-transform-react-jsx-self
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |           index.js
    |   |   |           index.js.map
    |   |   |           
    |   |   +---plugin-transform-react-jsx-source
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |           index.js
    |   |   |           index.js.map
    |   |   |           
    |   |   +---runtime-corejs3
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   +---core-js
    |   |   |   |   |   aggregate-error.js
    |   |   |   |   |   clear-immediate.js
    |   |   |   |   |   composite-key.js
    |   |   |   |   |   composite-symbol.js
    |   |   |   |   |   get-iterator-method.js
    |   |   |   |   |   get-iterator.js
    |   |   |   |   |   global-this.js
    |   |   |   |   |   is-iterable.js
    |   |   |   |   |   map.js
    |   |   |   |   |   observable.js
    |   |   |   |   |   parse-float.js
    |   |   |   |   |   parse-int.js
    |   |   |   |   |   promise.js
    |   |   |   |   |   queue-microtask.js
    |   |   |   |   |   set-immediate.js
    |   |   |   |   |   set-interval.js
    |   |   |   |   |   set-timeout.js
    |   |   |   |   |   set.js
    |   |   |   |   |   symbol.js
    |   |   |   |   |   url-search-params.js
    |   |   |   |   |   url.js
    |   |   |   |   |   weak-map.js
    |   |   |   |   |   weak-set.js
    |   |   |   |   |   
    |   |   |   |   +---array
    |   |   |   |   |       from.js
    |   |   |   |   |       is-array.js
    |   |   |   |   |       of.js
    |   |   |   |   |       
    |   |   |   |   +---date
    |   |   |   |   |       now.js
    |   |   |   |   |       
    |   |   |   |   +---instance
    |   |   |   |   |       at.js
    |   |   |   |   |       bind.js
    |   |   |   |   |       code-point-at.js
    |   |   |   |   |       code-points.js
    |   |   |   |   |       concat.js
    |   |   |   |   |       copy-within.js
    |   |   |   |   |       ends-with.js
    |   |   |   |   |       entries.js
    |   |   |   |   |       every.js
    |   |   |   |   |       fill.js
    |   |   |   |   |       filter.js
    |   |   |   |   |       find-index.js
    |   |   |   |   |       find.js
    |   |   |   |   |       flags.js
    |   |   |   |   |       flat-map.js
    |   |   |   |   |       flat.js
    |   |   |   |   |       for-each.js
    |   |   |   |   |       includes.js
    |   |   |   |   |       index-of.js
    |   |   |   |   |       keys.js
    |   |   |   |   |       last-index-of.js
    |   |   |   |   |       map.js
    |   |   |   |   |       match-all.js
    |   |   |   |   |       pad-end.js
    |   |   |   |   |       pad-start.js
    |   |   |   |   |       reduce-right.js
    |   |   |   |   |       reduce.js
    |   |   |   |   |       repeat.js
    |   |   |   |   |       replace-all.js
    |   |   |   |   |       reverse.js
    |   |   |   |   |       slice.js
    |   |   |   |   |       some.js
    |   |   |   |   |       sort.js
    |   |   |   |   |       splice.js
    |   |   |   |   |       starts-with.js
    |   |   |   |   |       trim-end.js
    |   |   |   |   |       trim-left.js
    |   |   |   |   |       trim-right.js
    |   |   |   |   |       trim-start.js
    |   |   |   |   |       trim.js
    |   |   |   |   |       values.js
    |   |   |   |   |       
    |   |   |   |   +---json
    |   |   |   |   |       stringify.js
    |   |   |   |   |       
    |   |   |   |   +---math
    |   |   |   |   |       acosh.js
    |   |   |   |   |       asinh.js
    |   |   |   |   |       atanh.js
    |   |   |   |   |       cbrt.js
    |   |   |   |   |       clamp.js
    |   |   |   |   |       clz32.js
    |   |   |   |   |       cosh.js
    |   |   |   |   |       deg-per-rad.js
    |   |   |   |   |       degrees.js
    |   |   |   |   |       expm1.js
    |   |   |   |   |       fround.js
    |   |   |   |   |       fscale.js
    |   |   |   |   |       hypot.js
    |   |   |   |   |       iaddh.js
    |   |   |   |   |       imul.js
    |   |   |   |   |       imulh.js
    |   |   |   |   |       isubh.js
    |   |   |   |   |       log10.js
    |   |   |   |   |       log1p.js
    |   |   |   |   |       log2.js
    |   |   |   |   |       rad-per-deg.js
    |   |   |   |   |       radians.js
    |   |   |   |   |       scale.js
    |   |   |   |   |       seeded-prng.js
    |   |   |   |   |       sign.js
    |   |   |   |   |       signbit.js
    |   |   |   |   |       sinh.js
    |   |   |   |   |       tanh.js
    |   |   |   |   |       trunc.js
    |   |   |   |   |       umulh.js
    |   |   |   |   |       
    |   |   |   |   +---number
    |   |   |   |   |       epsilon.js
    |   |   |   |   |       from-string.js
    |   |   |   |   |       is-finite.js
    |   |   |   |   |       is-integer.js
    |   |   |   |   |       is-nan.js
    |   |   |   |   |       is-safe-integer.js
    |   |   |   |   |       max-safe-integer.js
    |   |   |   |   |       min-safe-integer.js
    |   |   |   |   |       parse-float.js
    |   |   |   |   |       parse-int.js
    |   |   |   |   |       
    |   |   |   |   +---object
    |   |   |   |   |       assign.js
    |   |   |   |   |       create.js
    |   |   |   |   |       define-properties.js
    |   |   |   |   |       define-property.js
    |   |   |   |   |       entries.js
    |   |   |   |   |       freeze.js
    |   |   |   |   |       from-entries.js
    |   |   |   |   |       get-own-property-descriptor.js
    |   |   |   |   |       get-own-property-descriptors.js
    |   |   |   |   |       get-own-property-names.js
    |   |   |   |   |       get-own-property-symbols.js
    |   |   |   |   |       get-prototype-of.js
    |   |   |   |   |       is-extensible.js
    |   |   |   |   |       is-frozen.js
    |   |   |   |   |       is-sealed.js
    |   |   |   |   |       is.js
    |   |   |   |   |       keys.js
    |   |   |   |   |       prevent-extensions.js
    |   |   |   |   |       seal.js
    |   |   |   |   |       set-prototype-of.js
    |   |   |   |   |       values.js
    |   |   |   |   |       
    |   |   |   |   +---reflect
    |   |   |   |   |       apply.js
    |   |   |   |   |       construct.js
    |   |   |   |   |       define-metadata.js
    |   |   |   |   |       define-property.js
    |   |   |   |   |       delete-metadata.js
    |   |   |   |   |       delete-property.js
    |   |   |   |   |       get-metadata-keys.js
    |   |   |   |   |       get-metadata.js
    |   |   |   |   |       get-own-metadata-keys.js
    |   |   |   |   |       get-own-metadata.js
    |   |   |   |   |       get-own-property-descriptor.js
    |   |   |   |   |       get-prototype-of.js
    |   |   |   |   |       get.js
    |   |   |   |   |       has-metadata.js
    |   |   |   |   |       has-own-metadata.js
    |   |   |   |   |       has.js
    |   |   |   |   |       is-extensible.js
    |   |   |   |   |       metadata.js
    |   |   |   |   |       own-keys.js
    |   |   |   |   |       prevent-extensions.js
    |   |   |   |   |       set-prototype-of.js
    |   |   |   |   |       set.js
    |   |   |   |   |       
    |   |   |   |   +---string
    |   |   |   |   |       from-code-point.js
    |   |   |   |   |       raw.js
    |   |   |   |   |       
    |   |   |   |   \---symbol
    |   |   |   |           async-iterator.js
    |   |   |   |           dispose.js
    |   |   |   |           for.js
    |   |   |   |           has-instance.js
    |   |   |   |           is-concat-spreadable.js
    |   |   |   |           iterator.js
    |   |   |   |           key-for.js
    |   |   |   |           match.js
    |   |   |   |           observable.js
    |   |   |   |           pattern-match.js
    |   |   |   |           replace.js
    |   |   |   |           search.js
    |   |   |   |           species.js
    |   |   |   |           split.js
    |   |   |   |           to-primitive.js
    |   |   |   |           to-string-tag.js
    |   |   |   |           unscopables.js
    |   |   |   |           
    |   |   |   +---core-js-stable
    |   |   |   |   |   clear-immediate.js
    |   |   |   |   |   map.js
    |   |   |   |   |   parse-float.js
    |   |   |   |   |   parse-int.js
    |   |   |   |   |   promise.js
    |   |   |   |   |   queue-microtask.js
    |   |   |   |   |   set-immediate.js
    |   |   |   |   |   set-interval.js
    |   |   |   |   |   set-timeout.js
    |   |   |   |   |   set.js
    |   |   |   |   |   symbol.js
    |   |   |   |   |   url-search-params.js
    |   |   |   |   |   url.js
    |   |   |   |   |   weak-map.js
    |   |   |   |   |   weak-set.js
    |   |   |   |   |   
    |   |   |   |   +---array
    |   |   |   |   |       from.js
    |   |   |   |   |       is-array.js
    |   |   |   |   |       of.js
    |   |   |   |   |       
    |   |   |   |   +---date
    |   |   |   |   |       now.js
    |   |   |   |   |       
    |   |   |   |   +---instance
    |   |   |   |   |       bind.js
    |   |   |   |   |       code-point-at.js
    |   |   |   |   |       concat.js
    |   |   |   |   |       copy-within.js
    |   |   |   |   |       ends-with.js
    |   |   |   |   |       entries.js
    |   |   |   |   |       every.js
    |   |   |   |   |       fill.js
    |   |   |   |   |       filter.js
    |   |   |   |   |       find-index.js
    |   |   |   |   |       find.js
    |   |   |   |   |       flags.js
    |   |   |   |   |       flat-map.js
    |   |   |   |   |       flat.js
    |   |   |   |   |       for-each.js
    |   |   |   |   |       includes.js
    |   |   |   |   |       index-of.js
    |   |   |   |   |       keys.js
    |   |   |   |   |       last-index-of.js
    |   |   |   |   |       map.js
    |   |   |   |   |       pad-end.js
    |   |   |   |   |       pad-start.js
    |   |   |   |   |       reduce-right.js
    |   |   |   |   |       reduce.js
    |   |   |   |   |       repeat.js
    |   |   |   |   |       reverse.js
    |   |   |   |   |       slice.js
    |   |   |   |   |       some.js
    |   |   |   |   |       sort.js
    |   |   |   |   |       splice.js
    |   |   |   |   |       starts-with.js
    |   |   |   |   |       trim-end.js
    |   |   |   |   |       trim-left.js
    |   |   |   |   |       trim-right.js
    |   |   |   |   |       trim-start.js
    |   |   |   |   |       trim.js
    |   |   |   |   |       values.js
    |   |   |   |   |       
    |   |   |   |   +---json
    |   |   |   |   |       stringify.js
    |   |   |   |   |       
    |   |   |   |   +---math
    |   |   |   |   |       acosh.js
    |   |   |   |   |       asinh.js
    |   |   |   |   |       atanh.js
    |   |   |   |   |       cbrt.js
    |   |   |   |   |       clz32.js
    |   |   |   |   |       cosh.js
    |   |   |   |   |       expm1.js
    |   |   |   |   |       fround.js
    |   |   |   |   |       hypot.js
    |   |   |   |   |       imul.js
    |   |   |   |   |       log10.js
    |   |   |   |   |       log1p.js
    |   |   |   |   |       log2.js
    |   |   |   |   |       sign.js
    |   |   |   |   |       sinh.js
    |   |   |   |   |       tanh.js
    |   |   |   |   |       trunc.js
    |   |   |   |   |       
    |   |   |   |   +---number
    |   |   |   |   |       epsilon.js
    |   |   |   |   |       is-finite.js
    |   |   |   |   |       is-integer.js
    |   |   |   |   |       is-nan.js
    |   |   |   |   |       is-safe-integer.js
    |   |   |   |   |       max-safe-integer.js
    |   |   |   |   |       min-safe-integer.js
    |   |   |   |   |       parse-float.js
    |   |   |   |   |       parse-int.js
    |   |   |   |   |       
    |   |   |   |   +---object
    |   |   |   |   |       assign.js
    |   |   |   |   |       create.js
    |   |   |   |   |       define-properties.js
    |   |   |   |   |       define-property.js
    |   |   |   |   |       entries.js
    |   |   |   |   |       freeze.js
    |   |   |   |   |       from-entries.js
    |   |   |   |   |       get-own-property-descriptor.js
    |   |   |   |   |       get-own-property-descriptors.js
    |   |   |   |   |       get-own-property-names.js
    |   |   |   |   |       get-own-property-symbols.js
    |   |   |   |   |       get-prototype-of.js
    |   |   |   |   |       is-extensible.js
    |   |   |   |   |       is-frozen.js
    |   |   |   |   |       is-sealed.js
    |   |   |   |   |       is.js
    |   |   |   |   |       keys.js
    |   |   |   |   |       prevent-extensions.js
    |   |   |   |   |       seal.js
    |   |   |   |   |       set-prototype-of.js
    |   |   |   |   |       values.js
    |   |   |   |   |       
    |   |   |   |   +---reflect
    |   |   |   |   |       apply.js
    |   |   |   |   |       construct.js
    |   |   |   |   |       define-property.js
    |   |   |   |   |       delete-property.js
    |   |   |   |   |       get-own-property-descriptor.js
    |   |   |   |   |       get-prototype-of.js
    |   |   |   |   |       get.js
    |   |   |   |   |       has.js
    |   |   |   |   |       is-extensible.js
    |   |   |   |   |       own-keys.js
    |   |   |   |   |       prevent-extensions.js
    |   |   |   |   |       set-prototype-of.js
    |   |   |   |   |       set.js
    |   |   |   |   |       
    |   |   |   |   +---string
    |   |   |   |   |       from-code-point.js
    |   |   |   |   |       raw.js
    |   |   |   |   |       
    |   |   |   |   \---symbol
    |   |   |   |           async-iterator.js
    |   |   |   |           for.js
    |   |   |   |           has-instance.js
    |   |   |   |           is-concat-spreadable.js
    |   |   |   |           iterator.js
    |   |   |   |           key-for.js
    |   |   |   |           match.js
    |   |   |   |           replace.js
    |   |   |   |           search.js
    |   |   |   |           species.js
    |   |   |   |           split.js
    |   |   |   |           to-primitive.js
    |   |   |   |           to-string-tag.js
    |   |   |   |           unscopables.js
    |   |   |   |           
    |   |   |   +---helpers
    |   |   |   |   |   applyDecoratedDescriptor.js
    |   |   |   |   |   applyDecs.js
    |   |   |   |   |   applyDecs2203.js
    |   |   |   |   |   applyDecs2203R.js
    |   |   |   |   |   applyDecs2301.js
    |   |   |   |   |   applyDecs2305.js
    |   |   |   |   |   applyDecs2311.js
    |   |   |   |   |   arrayLikeToArray.js
    |   |   |   |   |   arrayWithHoles.js
    |   |   |   |   |   arrayWithoutHoles.js
    |   |   |   |   |   assertClassBrand.js
    |   |   |   |   |   assertThisInitialized.js
    |   |   |   |   |   asyncGeneratorDelegate.js
    |   |   |   |   |   asyncIterator.js
    |   |   |   |   |   asyncToGenerator.js
    |   |   |   |   |   awaitAsyncGenerator.js
    |   |   |   |   |   AwaitValue.js
    |   |   |   |   |   callSuper.js
    |   |   |   |   |   checkInRHS.js
    |   |   |   |   |   checkPrivateRedeclaration.js
    |   |   |   |   |   classApplyDescriptorDestructureSet.js
    |   |   |   |   |   classApplyDescriptorGet.js
    |   |   |   |   |   classApplyDescriptorSet.js
    |   |   |   |   |   classCallCheck.js
    |   |   |   |   |   classCheckPrivateStaticAccess.js
    |   |   |   |   |   classCheckPrivateStaticFieldDescriptor.js
    |   |   |   |   |   classExtractFieldDescriptor.js
    |   |   |   |   |   classNameTDZError.js
    |   |   |   |   |   classPrivateFieldDestructureSet.js
    |   |   |   |   |   classPrivateFieldGet.js
    |   |   |   |   |   classPrivateFieldGet2.js
    |   |   |   |   |   classPrivateFieldInitSpec.js
    |   |   |   |   |   classPrivateFieldLooseBase.js
    |   |   |   |   |   classPrivateFieldLooseKey.js
    |   |   |   |   |   classPrivateFieldSet.js
    |   |   |   |   |   classPrivateFieldSet2.js
    |   |   |   |   |   classPrivateGetter.js
    |   |   |   |   |   classPrivateMethodGet.js
    |   |   |   |   |   classPrivateMethodInitSpec.js
    |   |   |   |   |   classPrivateMethodSet.js
    |   |   |   |   |   classPrivateSetter.js
    |   |   |   |   |   classStaticPrivateFieldDestructureSet.js
    |   |   |   |   |   classStaticPrivateFieldSpecGet.js
    |   |   |   |   |   classStaticPrivateFieldSpecSet.js
    |   |   |   |   |   classStaticPrivateMethodGet.js
    |   |   |   |   |   classStaticPrivateMethodSet.js
    |   |   |   |   |   construct.js
    |   |   |   |   |   createClass.js
    |   |   |   |   |   createForOfIteratorHelper.js
    |   |   |   |   |   createForOfIteratorHelperLoose.js
    |   |   |   |   |   createSuper.js
    |   |   |   |   |   decorate.js
    |   |   |   |   |   defaults.js
    |   |   |   |   |   defineAccessor.js
    |   |   |   |   |   defineEnumerableProperties.js
    |   |   |   |   |   defineProperty.js
    |   |   |   |   |   dispose.js
    |   |   |   |   |   extends.js
    |   |   |   |   |   get.js
    |   |   |   |   |   getPrototypeOf.js
    |   |   |   |   |   identity.js
    |   |   |   |   |   importDeferProxy.js
    |   |   |   |   |   inherits.js
    |   |   |   |   |   inheritsLoose.js
    |   |   |   |   |   initializerDefineProperty.js
    |   |   |   |   |   initializerWarningHelper.js
    |   |   |   |   |   instanceof.js
    |   |   |   |   |   interopRequireDefault.js
    |   |   |   |   |   interopRequireWildcard.js
    |   |   |   |   |   isNativeFunction.js
    |   |   |   |   |   isNativeReflectConstruct.js
    |   |   |   |   |   iterableToArray.js
    |   |   |   |   |   iterableToArrayLimit.js
    |   |   |   |   |   jsx.js
    |   |   |   |   |   maybeArrayLike.js
    |   |   |   |   |   newArrowCheck.js
    |   |   |   |   |   nonIterableRest.js
    |   |   |   |   |   nonIterableSpread.js
    |   |   |   |   |   nullishReceiverError.js
    |   |   |   |   |   objectDestructuringEmpty.js
    |   |   |   |   |   objectSpread.js
    |   |   |   |   |   objectSpread2.js
    |   |   |   |   |   objectWithoutProperties.js
    |   |   |   |   |   objectWithoutPropertiesLoose.js
    |   |   |   |   |   OverloadYield.js
    |   |   |   |   |   possibleConstructorReturn.js
    |   |   |   |   |   readOnlyError.js
    |   |   |   |   |   regenerator.js
    |   |   |   |   |   regeneratorAsync.js
    |   |   |   |   |   regeneratorAsyncGen.js
    |   |   |   |   |   regeneratorAsyncIterator.js
    |   |   |   |   |   regeneratorDefine.js
    |   |   |   |   |   regeneratorKeys.js
    |   |   |   |   |   regeneratorRuntime.js
    |   |   |   |   |   regeneratorValues.js
    |   |   |   |   |   set.js
    |   |   |   |   |   setFunctionName.js
    |   |   |   |   |   setPrototypeOf.js
    |   |   |   |   |   skipFirstGeneratorNext.js
    |   |   |   |   |   slicedToArray.js
    |   |   |   |   |   superPropBase.js
    |   |   |   |   |   superPropGet.js
    |   |   |   |   |   superPropSet.js
    |   |   |   |   |   taggedTemplateLiteral.js
    |   |   |   |   |   taggedTemplateLiteralLoose.js
    |   |   |   |   |   tdz.js
    |   |   |   |   |   temporalRef.js
    |   |   |   |   |   temporalUndefined.js
    |   |   |   |   |   toArray.js
    |   |   |   |   |   toConsumableArray.js
    |   |   |   |   |   toPrimitive.js
    |   |   |   |   |   toPropertyKey.js
    |   |   |   |   |   toSetter.js
    |   |   |   |   |   tsRewriteRelativeImportExtensions.js
    |   |   |   |   |   typeof.js
    |   |   |   |   |   unsupportedIterableToArray.js
    |   |   |   |   |   using.js
    |   |   |   |   |   usingCtx.js
    |   |   |   |   |   wrapAsyncGenerator.js
    |   |   |   |   |   wrapNativeSuper.js
    |   |   |   |   |   wrapRegExp.js
    |   |   |   |   |   writeOnlyError.js
    |   |   |   |   |   
    |   |   |   |   \---esm
    |   |   |   |           applyDecoratedDescriptor.js
    |   |   |   |           applyDecs.js
    |   |   |   |           applyDecs2203.js
    |   |   |   |           applyDecs2203R.js
    |   |   |   |           applyDecs2301.js
    |   |   |   |           applyDecs2305.js
    |   |   |   |           applyDecs2311.js
    |   |   |   |           arrayLikeToArray.js
    |   |   |   |           arrayWithHoles.js
    |   |   |   |           arrayWithoutHoles.js
    |   |   |   |           assertClassBrand.js
    |   |   |   |           assertThisInitialized.js
    |   |   |   |           asyncGeneratorDelegate.js
    |   |   |   |           asyncIterator.js
    |   |   |   |           asyncToGenerator.js
    |   |   |   |           awaitAsyncGenerator.js
    |   |   |   |           AwaitValue.js
    |   |   |   |           callSuper.js
    |   |   |   |           checkInRHS.js
    |   |   |   |           checkPrivateRedeclaration.js
    |   |   |   |           classApplyDescriptorDestructureSet.js
    |   |   |   |           classApplyDescriptorGet.js
    |   |   |   |           classApplyDescriptorSet.js
    |   |   |   |           classCallCheck.js
    |   |   |   |           classCheckPrivateStaticAccess.js
    |   |   |   |           classCheckPrivateStaticFieldDescriptor.js
    |   |   |   |           classExtractFieldDescriptor.js
    |   |   |   |           classNameTDZError.js
    |   |   |   |           classPrivateFieldDestructureSet.js
    |   |   |   |           classPrivateFieldGet.js
    |   |   |   |           classPrivateFieldGet2.js
    |   |   |   |           classPrivateFieldInitSpec.js
    |   |   |   |           classPrivateFieldLooseBase.js
    |   |   |   |           classPrivateFieldLooseKey.js
    |   |   |   |           classPrivateFieldSet.js
    |   |   |   |           classPrivateFieldSet2.js
    |   |   |   |           classPrivateGetter.js
    |   |   |   |           classPrivateMethodGet.js
    |   |   |   |           classPrivateMethodInitSpec.js
    |   |   |   |           classPrivateMethodSet.js
    |   |   |   |           classPrivateSetter.js
    |   |   |   |           classStaticPrivateFieldDestructureSet.js
    |   |   |   |           classStaticPrivateFieldSpecGet.js
    |   |   |   |           classStaticPrivateFieldSpecSet.js
    |   |   |   |           classStaticPrivateMethodGet.js
    |   |   |   |           classStaticPrivateMethodSet.js
    |   |   |   |           construct.js
    |   |   |   |           createClass.js
    |   |   |   |           createForOfIteratorHelper.js
    |   |   |   |           createForOfIteratorHelperLoose.js
    |   |   |   |           createSuper.js
    |   |   |   |           decorate.js
    |   |   |   |           defaults.js
    |   |   |   |           defineAccessor.js
    |   |   |   |           defineEnumerableProperties.js
    |   |   |   |           defineProperty.js
    |   |   |   |           dispose.js
    |   |   |   |           extends.js
    |   |   |   |           get.js
    |   |   |   |           getPrototypeOf.js
    |   |   |   |           identity.js
    |   |   |   |           importDeferProxy.js
    |   |   |   |           inherits.js
    |   |   |   |           inheritsLoose.js
    |   |   |   |           initializerDefineProperty.js
    |   |   |   |           initializerWarningHelper.js
    |   |   |   |           instanceof.js
    |   |   |   |           interopRequireDefault.js
    |   |   |   |           interopRequireWildcard.js
    |   |   |   |           isNativeFunction.js
    |   |   |   |           isNativeReflectConstruct.js
    |   |   |   |           iterableToArray.js
    |   |   |   |           iterableToArrayLimit.js
    |   |   |   |           jsx.js
    |   |   |   |           maybeArrayLike.js
    |   |   |   |           newArrowCheck.js
    |   |   |   |           nonIterableRest.js
    |   |   |   |           nonIterableSpread.js
    |   |   |   |           nullishReceiverError.js
    |   |   |   |           objectDestructuringEmpty.js
    |   |   |   |           objectSpread.js
    |   |   |   |           objectSpread2.js
    |   |   |   |           objectWithoutProperties.js
    |   |   |   |           objectWithoutPropertiesLoose.js
    |   |   |   |           OverloadYield.js
    |   |   |   |           package.json
    |   |   |   |           possibleConstructorReturn.js
    |   |   |   |           readOnlyError.js
    |   |   |   |           regenerator.js
    |   |   |   |           regeneratorAsync.js
    |   |   |   |           regeneratorAsyncGen.js
    |   |   |   |           regeneratorAsyncIterator.js
    |   |   |   |           regeneratorDefine.js
    |   |   |   |           regeneratorKeys.js
    |   |   |   |           regeneratorRuntime.js
    |   |   |   |           regeneratorValues.js
    |   |   |   |           set.js
    |   |   |   |           setFunctionName.js
    |   |   |   |           setPrototypeOf.js
    |   |   |   |           skipFirstGeneratorNext.js
    |   |   |   |           slicedToArray.js
    |   |   |   |           superPropBase.js
    |   |   |   |           superPropGet.js
    |   |   |   |           superPropSet.js
    |   |   |   |           taggedTemplateLiteral.js
    |   |   |   |           taggedTemplateLiteralLoose.js
    |   |   |   |           tdz.js
    |   |   |   |           temporalRef.js
    |   |   |   |           temporalUndefined.js
    |   |   |   |           toArray.js
    |   |   |   |           toConsumableArray.js
    |   |   |   |           toPrimitive.js
    |   |   |   |           toPropertyKey.js
    |   |   |   |           toSetter.js
    |   |   |   |           tsRewriteRelativeImportExtensions.js
    |   |   |   |           typeof.js
    |   |   |   |           unsupportedIterableToArray.js
    |   |   |   |           using.js
    |   |   |   |           usingCtx.js
    |   |   |   |           wrapAsyncGenerator.js
    |   |   |   |           wrapNativeSuper.js
    |   |   |   |           wrapRegExp.js
    |   |   |   |           writeOnlyError.js
    |   |   |   |           
    |   |   |   \---regenerator
    |   |   |           index.js
    |   |   |           
    |   |   +---template
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |           builder.js
    |   |   |           builder.js.map
    |   |   |           formatters.js
    |   |   |           formatters.js.map
    |   |   |           index.js
    |   |   |           index.js.map
    |   |   |           literal.js
    |   |   |           literal.js.map
    |   |   |           options.js
    |   |   |           options.js.map
    |   |   |           parse.js
    |   |   |           parse.js.map
    |   |   |           populate.js
    |   |   |           populate.js.map
    |   |   |           string.js
    |   |   |           string.js.map
    |   |   |           
    |   |   +---traverse
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---lib
    |   |   |       |   cache.js
    |   |   |       |   cache.js.map
    |   |   |       |   context.js
    |   |   |       |   context.js.map
    |   |   |       |   hub.js
    |   |   |       |   hub.js.map
    |   |   |       |   index.js
    |   |   |       |   index.js.map
    |   |   |       |   traverse-node.js
    |   |   |       |   traverse-node.js.map
    |   |   |       |   types.js
    |   |   |       |   types.js.map
    |   |   |       |   visitors.js
    |   |   |       |   visitors.js.map
    |   |   |       |   
    |   |   |       +---path
    |   |   |       |   |   ancestry.js
    |   |   |       |   |   ancestry.js.map
    |   |   |       |   |   comments.js
    |   |   |       |   |   comments.js.map
    |   |   |       |   |   context.js
    |   |   |       |   |   context.js.map
    |   |   |       |   |   conversion.js
    |   |   |       |   |   conversion.js.map
    |   |   |       |   |   evaluation.js
    |   |   |       |   |   evaluation.js.map
    |   |   |       |   |   family.js
    |   |   |       |   |   family.js.map
    |   |   |       |   |   index.js
    |   |   |       |   |   index.js.map
    |   |   |       |   |   introspection.js
    |   |   |       |   |   introspection.js.map
    |   |   |       |   |   modification.js
    |   |   |       |   |   modification.js.map
    |   |   |       |   |   removal.js
    |   |   |       |   |   removal.js.map
    |   |   |       |   |   replacement.js
    |   |   |       |   |   replacement.js.map
    |   |   |       |   |   
    |   |   |       |   +---inference
    |   |   |       |   |       index.js
    |   |   |       |   |       index.js.map
    |   |   |       |   |       inferer-reference.js
    |   |   |       |   |       inferer-reference.js.map
    |   |   |       |   |       inferers.js
    |   |   |       |   |       inferers.js.map
    |   |   |       |   |       util.js
    |   |   |       |   |       util.js.map
    |   |   |       |   |       
    |   |   |       |   \---lib
    |   |   |       |           hoister.js
    |   |   |       |           hoister.js.map
    |   |   |       |           removal-hooks.js
    |   |   |       |           removal-hooks.js.map
    |   |   |       |           virtual-types-validator.js
    |   |   |       |           virtual-types-validator.js.map
    |   |   |       |           virtual-types.js
    |   |   |       |           virtual-types.js.map
    |   |   |       |           
    |   |   |       \---scope
    |   |   |           |   binding.js
    |   |   |           |   binding.js.map
    |   |   |           |   index.js
    |   |   |           |   index.js.map
    |   |   |           |   
    |   |   |           \---lib
    |   |   |                   renamer.js
    |   |   |                   renamer.js.map
    |   |   |                   
    |   |   \---types
    |   |       |   LICENSE
    |   |       |   package.json
    |   |       |   README.md
    |   |       |   
    |   |       \---lib
    |   |           |   index-legacy.d.ts
    |   |           |   index.d.ts
    |   |           |   index.js
    |   |           |   index.js.flow
    |   |           |   index.js.map
    |   |           |   
    |   |           +---asserts
    |   |           |   |   assertNode.js
    |   |           |   |   assertNode.js.map
    |   |           |   |   
    |   |           |   \---generated
    |   |           |           index.js
    |   |           |           index.js.map
    |   |           |           
    |   |           +---ast-types
    |   |           |   \---generated
    |   |           |           index.js
    |   |           |           index.js.map
    |   |           |           
    |   |           +---builders
    |   |           |   |   productions.js
    |   |           |   |   productions.js.map
    |   |           |   |   validateNode.js
    |   |           |   |   validateNode.js.map
    |   |           |   |   
    |   |           |   +---flow
    |   |           |   |       createFlowUnionType.js
    |   |           |   |       createFlowUnionType.js.map
    |   |           |   |       createTypeAnnotationBasedOnTypeof.js
    |   |           |   |       createTypeAnnotationBasedOnTypeof.js.map
    |   |           |   |       
    |   |           |   +---generated
    |   |           |   |       index.js
    |   |           |   |       index.js.map
    |   |           |   |       lowercase.js
    |   |           |   |       lowercase.js.map
    |   |           |   |       uppercase.js
    |   |           |   |       uppercase.js.map
    |   |           |   |       
    |   |           |   +---react
    |   |           |   |       buildChildren.js
    |   |           |   |       buildChildren.js.map
    |   |           |   |       
    |   |           |   \---typescript
    |   |           |           createTSUnionType.js
    |   |           |           createTSUnionType.js.map
    |   |           |           
    |   |           +---clone
    |   |           |       clone.js
    |   |           |       clone.js.map
    |   |           |       cloneDeep.js
    |   |           |       cloneDeep.js.map
    |   |           |       cloneDeepWithoutLoc.js
    |   |           |       cloneDeepWithoutLoc.js.map
    |   |           |       cloneNode.js
    |   |           |       cloneNode.js.map
    |   |           |       cloneWithoutLoc.js
    |   |           |       cloneWithoutLoc.js.map
    |   |           |       
    |   |           +---comments
    |   |           |       addComment.js
    |   |           |       addComment.js.map
    |   |           |       addComments.js
    |   |           |       addComments.js.map
    |   |           |       inheritInnerComments.js
    |   |           |       inheritInnerComments.js.map
    |   |           |       inheritLeadingComments.js
    |   |           |       inheritLeadingComments.js.map
    |   |           |       inheritsComments.js
    |   |           |       inheritsComments.js.map
    |   |           |       inheritTrailingComments.js
    |   |           |       inheritTrailingComments.js.map
    |   |           |       removeComments.js
    |   |           |       removeComments.js.map
    |   |           |       
    |   |           +---constants
    |   |           |   |   index.js
    |   |           |   |   index.js.map
    |   |           |   |   
    |   |           |   \---generated
    |   |           |           index.js
    |   |           |           index.js.map
    |   |           |           
    |   |           +---converters
    |   |           |       ensureBlock.js
    |   |           |       ensureBlock.js.map
    |   |           |       gatherSequenceExpressions.js
    |   |           |       gatherSequenceExpressions.js.map
    |   |           |       toBindingIdentifierName.js
    |   |           |       toBindingIdentifierName.js.map
    |   |           |       toBlock.js
    |   |           |       toBlock.js.map
    |   |           |       toComputedKey.js
    |   |           |       toComputedKey.js.map
    |   |           |       toExpression.js
    |   |           |       toExpression.js.map
    |   |           |       toIdentifier.js
    |   |           |       toIdentifier.js.map
    |   |           |       toKeyAlias.js
    |   |           |       toKeyAlias.js.map
    |   |           |       toSequenceExpression.js
    |   |           |       toSequenceExpression.js.map
    |   |           |       toStatement.js
    |   |           |       toStatement.js.map
    |   |           |       valueToNode.js
    |   |           |       valueToNode.js.map
    |   |           |       
    |   |           +---definitions
    |   |           |       core.js
    |   |           |       core.js.map
    |   |           |       deprecated-aliases.js
    |   |           |       deprecated-aliases.js.map
    |   |           |       experimental.js
    |   |           |       experimental.js.map
    |   |           |       flow.js
    |   |           |       flow.js.map
    |   |           |       index.js
    |   |           |       index.js.map
    |   |           |       jsx.js
    |   |           |       jsx.js.map
    |   |           |       misc.js
    |   |           |       misc.js.map
    |   |           |       placeholders.js
    |   |           |       placeholders.js.map
    |   |           |       typescript.js
    |   |           |       typescript.js.map
    |   |           |       utils.js
    |   |           |       utils.js.map
    |   |           |       
    |   |           +---modifications
    |   |           |   |   appendToMemberExpression.js
    |   |           |   |   appendToMemberExpression.js.map
    |   |           |   |   inherits.js
    |   |           |   |   inherits.js.map
    |   |           |   |   prependToMemberExpression.js
    |   |           |   |   prependToMemberExpression.js.map
    |   |           |   |   removeProperties.js
    |   |           |   |   removeProperties.js.map
    |   |           |   |   removePropertiesDeep.js
    |   |           |   |   removePropertiesDeep.js.map
    |   |           |   |   
    |   |           |   +---flow
    |   |           |   |       removeTypeDuplicates.js
    |   |           |   |       removeTypeDuplicates.js.map
    |   |           |   |       
    |   |           |   \---typescript
    |   |           |           removeTypeDuplicates.js
    |   |           |           removeTypeDuplicates.js.map
    |   |           |           
    |   |           +---retrievers
    |   |           |       getAssignmentIdentifiers.js
    |   |           |       getAssignmentIdentifiers.js.map
    |   |           |       getBindingIdentifiers.js
    |   |           |       getBindingIdentifiers.js.map
    |   |           |       getFunctionName.js
    |   |           |       getFunctionName.js.map
    |   |           |       getOuterBindingIdentifiers.js
    |   |           |       getOuterBindingIdentifiers.js.map
    |   |           |       
    |   |           +---traverse
    |   |           |       traverse.js
    |   |           |       traverse.js.map
    |   |           |       traverseFast.js
    |   |           |       traverseFast.js.map
    |   |           |       
    |   |           +---utils
    |   |           |   |   deprecationWarning.js
    |   |           |   |   deprecationWarning.js.map
    |   |           |   |   inherit.js
    |   |           |   |   inherit.js.map
    |   |           |   |   shallowEqual.js
    |   |           |   |   shallowEqual.js.map
    |   |           |   |   
    |   |           |   \---react
    |   |           |           cleanJSXElementLiteralChild.js
    |   |           |           cleanJSXElementLiteralChild.js.map
    |   |           |           
    |   |           \---validators
    |   |               |   buildMatchMemberExpression.js
    |   |               |   buildMatchMemberExpression.js.map
    |   |               |   is.js
    |   |               |   is.js.map
    |   |               |   isBinding.js
    |   |               |   isBinding.js.map
    |   |               |   isBlockScoped.js
    |   |               |   isBlockScoped.js.map
    |   |               |   isImmutable.js
    |   |               |   isImmutable.js.map
    |   |               |   isLet.js
    |   |               |   isLet.js.map
    |   |               |   isNode.js
    |   |               |   isNode.js.map
    |   |               |   isNodesEquivalent.js
    |   |               |   isNodesEquivalent.js.map
    |   |               |   isPlaceholderType.js
    |   |               |   isPlaceholderType.js.map
    |   |               |   isReferenced.js
    |   |               |   isReferenced.js.map
    |   |               |   isScope.js
    |   |               |   isScope.js.map
    |   |               |   isSpecifierDefault.js
    |   |               |   isSpecifierDefault.js.map
    |   |               |   isType.js
    |   |               |   isType.js.map
    |   |               |   isValidES3Identifier.js
    |   |               |   isValidES3Identifier.js.map
    |   |               |   isValidIdentifier.js
    |   |               |   isValidIdentifier.js.map
    |   |               |   isVar.js
    |   |               |   isVar.js.map
    |   |               |   matchesPattern.js
    |   |               |   matchesPattern.js.map
    |   |               |   validate.js
    |   |               |   validate.js.map
    |   |               |   
    |   |               +---generated
    |   |               |       index.js
    |   |               |       index.js.map
    |   |               |       
    |   |               \---react
    |   |                       isCompatTag.js
    |   |                       isCompatTag.js.map
    |   |                       isReactComponent.js
    |   |                       isReactComponent.js.map
    |   |                       
    |   +---@emnapi
    |   +---@emotion
    |   |   +---is-prop-valid
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   +---dist
    |   |   |   |   |   emotion-is-prop-valid.cjs.d.mts
    |   |   |   |   |   emotion-is-prop-valid.cjs.d.mts.map
    |   |   |   |   |   emotion-is-prop-valid.cjs.d.ts
    |   |   |   |   |   emotion-is-prop-valid.cjs.d.ts.map
    |   |   |   |   |   emotion-is-prop-valid.cjs.default.d.ts
    |   |   |   |   |   emotion-is-prop-valid.cjs.default.js
    |   |   |   |   |   emotion-is-prop-valid.cjs.dev.js
    |   |   |   |   |   emotion-is-prop-valid.cjs.js
    |   |   |   |   |   emotion-is-prop-valid.cjs.js.flow
    |   |   |   |   |   emotion-is-prop-valid.cjs.mjs
    |   |   |   |   |   emotion-is-prop-valid.cjs.prod.js
    |   |   |   |   |   emotion-is-prop-valid.esm.js
    |   |   |   |   |   
    |   |   |   |   \---declarations
    |   |   |   |       +---src
    |   |   |   |       |       index.d.ts
    |   |   |   |       |       
    |   |   |   |       \---types
    |   |   |   |               index.d.ts
    |   |   |   |               
    |   |   |   +---src
    |   |   |   |       index.d.ts
    |   |   |   |       index.js
    |   |   |   |       props.js
    |   |   |   |       
    |   |   |   \---types
    |   |   |           index.d.ts
    |   |   |           
    |   |   +---memoize
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   
    |   |   |   +---dist
    |   |   |   |   |   emotion-memoize.cjs.d.mts
    |   |   |   |   |   emotion-memoize.cjs.d.mts.map
    |   |   |   |   |   emotion-memoize.cjs.d.ts
    |   |   |   |   |   emotion-memoize.cjs.d.ts.map
    |   |   |   |   |   emotion-memoize.cjs.default.d.ts
    |   |   |   |   |   emotion-memoize.cjs.default.js
    |   |   |   |   |   emotion-memoize.cjs.dev.js
    |   |   |   |   |   emotion-memoize.cjs.js
    |   |   |   |   |   emotion-memoize.cjs.js.flow
    |   |   |   |   |   emotion-memoize.cjs.mjs
    |   |   |   |   |   emotion-memoize.cjs.prod.js
    |   |   |   |   |   emotion-memoize.esm.js
    |   |   |   |   |   
    |   |   |   |   \---declarations
    |   |   |   |       +---src
    |   |   |   |       |       index.d.ts
    |   |   |   |       |       
    |   |   |   |       \---types
    |   |   |   |               index.d.ts
    |   |   |   |               
    |   |   |   +---src
    |   |   |   |       index.d.ts
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   \---types
    |   |   |           index.d.ts
    |   |   |           
    |   |   \---unitless
    |   |       |   LICENSE
    |   |       |   package.json
    |   |       |   README.md
    |   |       |   
    |   |       +---dist
    |   |       |   |   emotion-unitless.cjs.d.mts
    |   |       |   |   emotion-unitless.cjs.d.mts.map
    |   |       |   |   emotion-unitless.cjs.d.ts
    |   |       |   |   emotion-unitless.cjs.d.ts.map
    |   |       |   |   emotion-unitless.cjs.default.d.ts
    |   |       |   |   emotion-unitless.cjs.default.js
    |   |       |   |   emotion-unitless.cjs.dev.js
    |   |       |   |   emotion-unitless.cjs.js
    |   |       |   |   emotion-unitless.cjs.js.flow
    |   |       |   |   emotion-unitless.cjs.mjs
    |   |       |   |   emotion-unitless.cjs.prod.js
    |   |       |   |   emotion-unitless.esm.js
    |   |       |   |   
    |   |       |   \---declarations
    |   |       |       \---src
    |   |       |               index.d.ts
    |   |       |               
    |   |       \---src
    |   |               index.d.ts
    |   |               index.js
    |   |               
    |   +---@eslint
    |   |   +---config-array
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---dist
    |   |   |       +---cjs
    |   |   |       |   |   index.cjs
    |   |   |       |   |   index.d.cts
    |   |   |       |   |   types.ts
    |   |   |       |   |   
    |   |   |       |   \---std__path
    |   |   |       |           posix.cjs
    |   |   |       |           windows.cjs
    |   |   |       |           
    |   |   |       \---esm
    |   |   |           |   index.d.ts
    |   |   |           |   index.js
    |   |   |           |   types.d.ts
    |   |   |           |   types.ts
    |   |   |           |   
    |   |   |           \---std__path
    |   |   |                   posix.js
    |   |   |                   windows.js
    |   |   |                   
    |   |   +---config-helpers
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---dist
    |   |   |       +---cjs
    |   |   |       |       index.cjs
    |   |   |       |       index.d.cts
    |   |   |       |       types.cts
    |   |   |       |       
    |   |   |       \---esm
    |   |   |               index.d.ts
    |   |   |               index.js
    |   |   |               types.d.ts
    |   |   |               types.ts
    |   |   |               
    |   |   +---core
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---dist
    |   |   |       +---cjs
    |   |   |       |       types.d.cts
    |   |   |       |       
    |   |   |       \---esm
    |   |   |               types.d.ts
    |   |   |               
    |   |   +---eslintrc
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   universal.js
    |   |   |   |   
    |   |   |   +---conf
    |   |   |   |       config-schema.js
    |   |   |   |       environments.js
    |   |   |   |       
    |   |   |   +---dist
    |   |   |   |       eslintrc-universal.cjs
    |   |   |   |       eslintrc-universal.cjs.map
    |   |   |   |       eslintrc.cjs
    |   |   |   |       eslintrc.cjs.map
    |   |   |   |       eslintrc.d.cts
    |   |   |   |       
    |   |   |   +---lib
    |   |   |   |   |   cascading-config-array-factory.js
    |   |   |   |   |   config-array-factory.js
    |   |   |   |   |   flat-compat.js
    |   |   |   |   |   index-universal.js
    |   |   |   |   |   index.js
    |   |   |   |   |   
    |   |   |   |   +---config-array
    |   |   |   |   |       config-array.js
    |   |   |   |   |       config-dependency.js
    |   |   |   |   |       extracted-config.js
    |   |   |   |   |       ignore-pattern.js
    |   |   |   |   |       index.js
    |   |   |   |   |       override-tester.js
    |   |   |   |   |       
    |   |   |   |   +---shared
    |   |   |   |   |       ajv.js
    |   |   |   |   |       config-ops.js
    |   |   |   |   |       config-validator.js
    |   |   |   |   |       deep-merge-arrays.js
    |   |   |   |   |       deprecation-warnings.js
    |   |   |   |   |       naming.js
    |   |   |   |   |       relative-module-resolver.js
    |   |   |   |   |       types.js
    |   |   |   |   |       
    |   |   |   |   \---types
    |   |   |   |           index.d.ts
    |   |   |   |           
    |   |   |       \---globals
    |   |   |               globals.json
    |   |   |               index.d.ts
    |   |   |               index.js
    |   |   |               license
    |   |   |               package.json
    |   |   |               readme.md
    |   |   |               
    |   |   +---js
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   +---src
    |   |   |   |   |   index.js
    |   |   |   |   |   
    |   |   |   |   \---configs
    |   |   |   |           eslint-all.js
    |   |   |   |           eslint-recommended.js
    |   |   |   |           
    |   |   |   \---types
    |   |   |           index.d.ts
    |   |   |           
    |   |   +---object-schema
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---dist
    |   |   |       +---cjs
    |   |   |       |       index.cjs
    |   |   |       |       index.d.cts
    |   |   |       |       types.ts
    |   |   |       |       
    |   |   |       \---esm
    |   |   |               index.d.ts
    |   |   |               index.js
    |   |   |               types.d.ts
    |   |   |               types.ts
    |   |   |               
    |   |   \---plugin-kit
    |   |       |   LICENSE
    |   |       |   package.json
    |   |       |   README.md
    |   |       |   
    |   |       \---dist
    |   |           +---cjs
    |   |           |       index.cjs
    |   |           |       index.d.cts
    |   |           |       types.cts
    |   |           |       
    |   |           \---esm
    |   |                   index.d.ts
    |   |                   index.js
    |   |                   types.d.ts
    |   |                   types.ts
    |   |                   
    |   +---@eslint-community
    |   |   +---eslint-utils
    |   |   |   |   index.d.mts
    |   |   |   |   index.d.ts
    |   |   |   |   index.js
    |   |   |   |   index.js.map
    |   |   |   |   index.mjs
    |   |   |   |   index.mjs.map
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |       \---eslint-visitor-keys
    |   |   |           |   LICENSE
    |   |   |           |   package.json
    |   |   |           |   README.md
    |   |   |           |   
    |   |   |           +---dist
    |   |   |           |       eslint-visitor-keys.cjs
    |   |   |           |       eslint-visitor-keys.d.cts
    |   |   |           |       index.d.ts
    |   |   |           |       visitor-keys.d.ts
    |   |   |           |       
    |   |   |           \---lib
    |   |   |                   index.js
    |   |   |                   visitor-keys.js
    |   |   |                   
    |   |   \---regexpp
    |   |           index.d.ts
    |   |           index.js
    |   |           index.js.map
    |   |           index.mjs
    |   |           index.mjs.map
    |   |           LICENSE
    |   |           package.json
    |   |           README.md
    |   |           
    |   +---@humanfs
    |   |   +---core
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   +---dist
    |   |   |   |       errors.d.ts
    |   |   |   |       fsx.d.ts
    |   |   |   |       hfs.d.ts
    |   |   |   |       index.d.ts
    |   |   |   |       path.d.ts
    |   |   |   |       
    |   |   |   \---src
    |   |   |           errors.js
    |   |   |           hfs.js
    |   |   |           index.js
    |   |   |           path.js
    |   |   |           
    |   |   \---node
    |   |       |   LICENSE
    |   |       |   package.json
    |   |       |   README.md
    |   |       |   
    |   |       +---dist
    |   |       |       index.d.ts
    |   |       |       node-fsx.d.ts
    |   |       |       node-hfs.d.ts
    |   |       |       
    |   |       \---src
    |   |               index.js
    |   |               node-hfs.js
    |   |               
    |   +---@humanwhocodes
    |   |   +---module-importer
    |   |   |   |   CHANGELOG.md
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   +---dist
    |   |   |   |       module-importer.cjs
    |   |   |   |       module-importer.d.cts
    |   |   |   |       module-importer.d.ts
    |   |   |   |       module-importer.js
    |   |   |   |       
    |   |   |   \---src
    |   |   |           module-importer.cjs
    |   |   |           module-importer.js
    |   |   |           
    |   |   \---retry
    |   |       |   LICENSE
    |   |       |   package.json
    |   |       |   README.md
    |   |       |   
    |   |       \---dist
    |   |               retrier.cjs
    |   |               retrier.d.cts
    |   |               retrier.d.ts
    |   |               retrier.js
    |   |               retrier.min.js
    |   |               retrier.mjs
    |   |               
    |   +---@jridgewell
    |   |   +---gen-mapping
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   +---dist
    |   |   |   |   |   gen-mapping.mjs
    |   |   |   |   |   gen-mapping.mjs.map
    |   |   |   |   |   gen-mapping.umd.js
    |   |   |   |   |   gen-mapping.umd.js.map
    |   |   |   |   |   
    |   |   |   |   \---types
    |   |   |   |           gen-mapping.d.ts
    |   |   |   |           set-array.d.ts
    |   |   |   |           sourcemap-segment.d.ts
    |   |   |   |           types.d.ts
    |   |   |   |           
    |   |   |   +---src
    |   |   |   |       gen-mapping.ts
    |   |   |   |       set-array.ts
    |   |   |   |       sourcemap-segment.ts
    |   |   |   |       types.ts
    |   |   |   |       
    |   |   |   \---types
    |   |   |           gen-mapping.d.cts
    |   |   |           gen-mapping.d.cts.map
    |   |   |           gen-mapping.d.mts
    |   |   |           gen-mapping.d.mts.map
    |   |   |           set-array.d.cts
    |   |   |           set-array.d.cts.map
    |   |   |           set-array.d.mts
    |   |   |           set-array.d.mts.map
    |   |   |           sourcemap-segment.d.cts
    |   |   |           sourcemap-segment.d.cts.map
    |   |   |           sourcemap-segment.d.mts
    |   |   |           sourcemap-segment.d.mts.map
    |   |   |           types.d.cts
    |   |   |           types.d.cts.map
    |   |   |           types.d.mts
    |   |   |           types.d.mts.map
    |   |   |           
    |   |   +---remapping
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   +---dist
    |   |   |   |       remapping.mjs
    |   |   |   |       remapping.mjs.map
    |   |   |   |       remapping.umd.js
    |   |   |   |       remapping.umd.js.map
    |   |   |   |       
    |   |   |   +---src
    |   |   |   |       build-source-map-tree.ts
    |   |   |   |       remapping.ts
    |   |   |   |       source-map-tree.ts
    |   |   |   |       source-map.ts
    |   |   |   |       types.ts
    |   |   |   |       
    |   |   |   \---types
    |   |   |           build-source-map-tree.d.cts
    |   |   |           build-source-map-tree.d.cts.map
    |   |   |           build-source-map-tree.d.mts
    |   |   |           build-source-map-tree.d.mts.map
    |   |   |           remapping.d.cts
    |   |   |           remapping.d.cts.map
    |   |   |           remapping.d.mts
    |   |   |           remapping.d.mts.map
    |   |   |           source-map-tree.d.cts
    |   |   |           source-map-tree.d.cts.map
    |   |   |           source-map-tree.d.mts
    |   |   |           source-map-tree.d.mts.map
    |   |   |           source-map.d.cts
    |   |   |           source-map.d.cts.map
    |   |   |           source-map.d.mts
    |   |   |           source-map.d.mts.map
    |   |   |           types.d.cts
    |   |   |           types.d.cts.map
    |   |   |           types.d.mts
    |   |   |           types.d.mts.map
    |   |   |           
    |   |   +---resolve-uri
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---dist
    |   |   |       |   resolve-uri.mjs
    |   |   |       |   resolve-uri.mjs.map
    |   |   |       |   resolve-uri.umd.js
    |   |   |       |   resolve-uri.umd.js.map
    |   |   |       |   
    |   |   |       \---types
    |   |   |               resolve-uri.d.ts
    |   |   |               
    |   |   +---sourcemap-codec
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   +---dist
    |   |   |   |       sourcemap-codec.mjs
    |   |   |   |       sourcemap-codec.mjs.map
    |   |   |   |       sourcemap-codec.umd.js
    |   |   |   |       sourcemap-codec.umd.js.map
    |   |   |   |       
    |   |   |   +---src
    |   |   |   |       scopes.ts
    |   |   |   |       sourcemap-codec.ts
    |   |   |   |       strings.ts
    |   |   |   |       vlq.ts
    |   |   |   |       
    |   |   |   \---types
    |   |   |           scopes.d.cts
    |   |   |           scopes.d.cts.map
    |   |   |           scopes.d.mts
    |   |   |           scopes.d.mts.map
    |   |   |           sourcemap-codec.d.cts
    |   |   |           sourcemap-codec.d.cts.map
    |   |   |           sourcemap-codec.d.mts
    |   |   |           sourcemap-codec.d.mts.map
    |   |   |           strings.d.cts
    |   |   |           strings.d.cts.map
    |   |   |           strings.d.mts
    |   |   |           strings.d.mts.map
    |   |   |           vlq.d.cts
    |   |   |           vlq.d.cts.map
    |   |   |           vlq.d.mts
    |   |   |           vlq.d.mts.map
    |   |   |           
    |   |   \---trace-mapping
    |   |       |   LICENSE
    |   |       |   package.json
    |   |       |   README.md
    |   |       |   
    |   |       +---dist
    |   |       |       trace-mapping.mjs
    |   |       |       trace-mapping.mjs.map
    |   |       |       trace-mapping.umd.js
    |   |       |       trace-mapping.umd.js.map
    |   |       |       
    |   |       +---src
    |   |       |       binary-search.ts
    |   |       |       by-source.ts
    |   |       |       flatten-map.ts
    |   |       |       resolve.ts
    |   |       |       sort.ts
    |   |       |       sourcemap-segment.ts
    |   |       |       strip-filename.ts
    |   |       |       trace-mapping.ts
    |   |       |       types.ts
    |   |       |       
    |   |       \---types
    |   |               binary-search.d.cts
    |   |               binary-search.d.cts.map
    |   |               binary-search.d.mts
    |   |               binary-search.d.mts.map
    |   |               by-source.d.cts
    |   |               by-source.d.cts.map
    |   |               by-source.d.mts
    |   |               by-source.d.mts.map
    |   |               flatten-map.d.cts
    |   |               flatten-map.d.cts.map
    |   |               flatten-map.d.mts
    |   |               flatten-map.d.mts.map
    |   |               resolve.d.cts
    |   |               resolve.d.cts.map
    |   |               resolve.d.mts
    |   |               resolve.d.mts.map
    |   |               sort.d.cts
    |   |               sort.d.cts.map
    |   |               sort.d.mts
    |   |               sort.d.mts.map
    |   |               sourcemap-segment.d.cts
    |   |               sourcemap-segment.d.cts.map
    |   |               sourcemap-segment.d.mts
    |   |               sourcemap-segment.d.mts.map
    |   |               strip-filename.d.cts
    |   |               strip-filename.d.cts.map
    |   |               strip-filename.d.mts
    |   |               strip-filename.d.mts.map
    |   |               trace-mapping.d.cts
    |   |               trace-mapping.d.cts.map
    |   |               trace-mapping.d.mts
    |   |               trace-mapping.d.mts.map
    |   |               types.d.cts
    |   |               types.d.cts.map
    |   |               types.d.mts
    |   |               types.d.mts.map
    |   |               
    |   +---@napi-rs
    |   +---@oxc-project
    |   |   +---runtime
    |   |   |   |   CHANGELOG.md
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---src
    |   |   |       \---helpers
    |   |   |           |   applyDecoratedDescriptor.js
    |   |   |           |   applyDecs.js
    |   |   |           |   applyDecs2203.js
    |   |   |           |   applyDecs2203R.js
    |   |   |           |   applyDecs2301.js
    |   |   |           |   applyDecs2305.js
    |   |   |           |   applyDecs2311.js
    |   |   |           |   arrayLikeToArray.js
    |   |   |           |   arrayWithHoles.js
    |   |   |           |   arrayWithoutHoles.js
    |   |   |           |   assertClassBrand.js
    |   |   |           |   assertThisInitialized.js
    |   |   |           |   asyncGeneratorDelegate.js
    |   |   |           |   asyncIterator.js
    |   |   |           |   asyncToGenerator.js
    |   |   |           |   awaitAsyncGenerator.js
    |   |   |           |   AwaitValue.js
    |   |   |           |   callSuper.js
    |   |   |           |   checkInRHS.js
    |   |   |           |   checkPrivateRedeclaration.js
    |   |   |           |   classApplyDescriptorDestructureSet.js
    |   |   |           |   classApplyDescriptorGet.js
    |   |   |           |   classApplyDescriptorSet.js
    |   |   |           |   classCallCheck.js
    |   |   |           |   classCheckPrivateStaticAccess.js
    |   |   |           |   classCheckPrivateStaticFieldDescriptor.js
    |   |   |           |   classExtractFieldDescriptor.js
    |   |   |           |   classNameTDZError.js
    |   |   |           |   classPrivateFieldDestructureSet.js
    |   |   |           |   classPrivateFieldGet.js
    |   |   |           |   classPrivateFieldGet2.js
    |   |   |           |   classPrivateFieldInitSpec.js
    |   |   |           |   classPrivateFieldLooseBase.js
    |   |   |           |   classPrivateFieldLooseKey.js
    |   |   |           |   classPrivateFieldSet.js
    |   |   |           |   classPrivateFieldSet2.js
    |   |   |           |   classPrivateGetter.js
    |   |   |           |   classPrivateMethodGet.js
    |   |   |           |   classPrivateMethodInitSpec.js
    |   |   |           |   classPrivateMethodSet.js
    |   |   |           |   classPrivateSetter.js
    |   |   |           |   classStaticPrivateFieldDestructureSet.js
    |   |   |           |   classStaticPrivateFieldSpecGet.js
    |   |   |           |   classStaticPrivateFieldSpecSet.js
    |   |   |           |   classStaticPrivateMethodGet.js
    |   |   |           |   classStaticPrivateMethodSet.js
    |   |   |           |   construct.js
    |   |   |           |   createClass.js
    |   |   |           |   createForOfIteratorHelper.js
    |   |   |           |   createForOfIteratorHelperLoose.js
    |   |   |           |   createSuper.js
    |   |   |           |   decorate.js
    |   |   |           |   decorateMetadata.js
    |   |   |           |   decorateParam.js
    |   |   |           |   defaults.js
    |   |   |           |   defineAccessor.js
    |   |   |           |   defineEnumerableProperties.js
    |   |   |           |   defineProperty.js
    |   |   |           |   dispose.js
    |   |   |           |   extends.js
    |   |   |           |   get.js
    |   |   |           |   getPrototypeOf.js
    |   |   |           |   identity.js
    |   |   |           |   importDeferProxy.js
    |   |   |           |   inherits.js
    |   |   |           |   inheritsLoose.js
    |   |   |           |   initializerDefineProperty.js
    |   |   |           |   initializerWarningHelper.js
    |   |   |           |   instanceof.js
    |   |   |           |   interopRequireDefault.js
    |   |   |           |   interopRequireWildcard.js
    |   |   |           |   isNativeFunction.js
    |   |   |           |   isNativeReflectConstruct.js
    |   |   |           |   iterableToArray.js
    |   |   |           |   iterableToArrayLimit.js
    |   |   |           |   jsx.js
    |   |   |           |   maybeArrayLike.js
    |   |   |           |   newArrowCheck.js
    |   |   |           |   nonIterableRest.js
    |   |   |           |   nonIterableSpread.js
    |   |   |           |   nullishReceiverError.js
    |   |   |           |   objectDestructuringEmpty.js
    |   |   |           |   objectSpread.js
    |   |   |           |   objectSpread2.js
    |   |   |           |   objectWithoutProperties.js
    |   |   |           |   objectWithoutPropertiesLoose.js
    |   |   |           |   OverloadYield.js
    |   |   |           |   possibleConstructorReturn.js
    |   |   |           |   readOnlyError.js
    |   |   |           |   regeneratorRuntime.js
    |   |   |           |   set.js
    |   |   |           |   setFunctionName.js
    |   |   |           |   setPrototypeOf.js
    |   |   |           |   skipFirstGeneratorNext.js
    |   |   |           |   slicedToArray.js
    |   |   |           |   superPropBase.js
    |   |   |           |   superPropGet.js
    |   |   |           |   superPropSet.js
    |   |   |           |   taggedTemplateLiteral.js
    |   |   |           |   taggedTemplateLiteralLoose.js
    |   |   |           |   tdz.js
    |   |   |           |   temporalRef.js
    |   |   |           |   temporalUndefined.js
    |   |   |           |   toArray.js
    |   |   |           |   toConsumableArray.js
    |   |   |           |   toPrimitive.js
    |   |   |           |   toPropertyKey.js
    |   |   |           |   toSetter.js
    |   |   |           |   typeof.js
    |   |   |           |   unsupportedIterableToArray.js
    |   |   |           |   using.js
    |   |   |           |   usingCtx.js
    |   |   |           |   wrapAsyncGenerator.js
    |   |   |           |   wrapNativeSuper.js
    |   |   |           |   wrapRegExp.js
    |   |   |           |   writeOnlyError.js
    |   |   |           |   
    |   |   |           \---esm
    |   |   |                   applyDecoratedDescriptor.js
    |   |   |                   applyDecs.js
    |   |   |                   applyDecs2203.js
    |   |   |                   applyDecs2203R.js
    |   |   |                   applyDecs2301.js
    |   |   |                   applyDecs2305.js
    |   |   |                   applyDecs2311.js
    |   |   |                   arrayLikeToArray.js
    |   |   |                   arrayWithHoles.js
    |   |   |                   arrayWithoutHoles.js
    |   |   |                   assertClassBrand.js
    |   |   |                   assertThisInitialized.js
    |   |   |                   asyncGeneratorDelegate.js
    |   |   |                   asyncIterator.js
    |   |   |                   asyncToGenerator.js
    |   |   |                   awaitAsyncGenerator.js
    |   |   |                   AwaitValue.js
    |   |   |                   callSuper.js
    |   |   |                   checkInRHS.js
    |   |   |                   checkPrivateRedeclaration.js
    |   |   |                   classApplyDescriptorDestructureSet.js
    |   |   |                   classApplyDescriptorGet.js
    |   |   |                   classApplyDescriptorSet.js
    |   |   |                   classCallCheck.js
    |   |   |                   classCheckPrivateStaticAccess.js
    |   |   |                   classCheckPrivateStaticFieldDescriptor.js
    |   |   |                   classExtractFieldDescriptor.js
    |   |   |                   classNameTDZError.js
    |   |   |                   classPrivateFieldDestructureSet.js
    |   |   |                   classPrivateFieldGet.js
    |   |   |                   classPrivateFieldGet2.js
    |   |   |                   classPrivateFieldInitSpec.js
    |   |   |                   classPrivateFieldLooseBase.js
    |   |   |                   classPrivateFieldLooseKey.js
    |   |   |                   classPrivateFieldSet.js
    |   |   |                   classPrivateFieldSet2.js
    |   |   |                   classPrivateGetter.js
    |   |   |                   classPrivateMethodGet.js
    |   |   |                   classPrivateMethodInitSpec.js
    |   |   |                   classPrivateMethodSet.js
    |   |   |                   classPrivateSetter.js
    |   |   |                   classStaticPrivateFieldDestructureSet.js
    |   |   |                   classStaticPrivateFieldSpecGet.js
    |   |   |                   classStaticPrivateFieldSpecSet.js
    |   |   |                   classStaticPrivateMethodGet.js
    |   |   |                   classStaticPrivateMethodSet.js
    |   |   |                   construct.js
    |   |   |                   createClass.js
    |   |   |                   createForOfIteratorHelper.js
    |   |   |                   createForOfIteratorHelperLoose.js
    |   |   |                   createSuper.js
    |   |   |                   decorate.js
    |   |   |                   decorateMetadata.js
    |   |   |                   decorateParam.js
    |   |   |                   defaults.js
    |   |   |                   defineAccessor.js
    |   |   |                   defineEnumerableProperties.js
    |   |   |                   defineProperty.js
    |   |   |                   dispose.js
    |   |   |                   extends.js
    |   |   |                   get.js
    |   |   |                   getPrototypeOf.js
    |   |   |                   identity.js
    |   |   |                   importDeferProxy.js
    |   |   |                   inherits.js
    |   |   |                   inheritsLoose.js
    |   |   |                   initializerDefineProperty.js
    |   |   |                   initializerWarningHelper.js
    |   |   |                   instanceof.js
    |   |   |                   interopRequireDefault.js
    |   |   |                   interopRequireWildcard.js
    |   |   |                   isNativeFunction.js
    |   |   |                   isNativeReflectConstruct.js
    |   |   |                   iterableToArray.js
    |   |   |                   iterableToArrayLimit.js
    |   |   |                   jsx.js
    |   |   |                   maybeArrayLike.js
    |   |   |                   newArrowCheck.js
    |   |   |                   nonIterableRest.js
    |   |   |                   nonIterableSpread.js
    |   |   |                   nullishReceiverError.js
    |   |   |                   objectDestructuringEmpty.js
    |   |   |                   objectSpread.js
    |   |   |                   objectSpread2.js
    |   |   |                   objectWithoutProperties.js
    |   |   |                   objectWithoutPropertiesLoose.js
    |   |   |                   OverloadYield.js
    |   |   |                   package.json
    |   |   |                   possibleConstructorReturn.js
    |   |   |                   readOnlyError.js
    |   |   |                   regeneratorRuntime.js
    |   |   |                   set.js
    |   |   |                   setFunctionName.js
    |   |   |                   setPrototypeOf.js
    |   |   |                   skipFirstGeneratorNext.js
    |   |   |                   slicedToArray.js
    |   |   |                   superPropBase.js
    |   |   |                   superPropGet.js
    |   |   |                   superPropSet.js
    |   |   |                   taggedTemplateLiteral.js
    |   |   |                   taggedTemplateLiteralLoose.js
    |   |   |                   tdz.js
    |   |   |                   temporalRef.js
    |   |   |                   temporalUndefined.js
    |   |   |                   toArray.js
    |   |   |                   toConsumableArray.js
    |   |   |                   toPrimitive.js
    |   |   |                   toPropertyKey.js
    |   |   |                   toSetter.js
    |   |   |                   typeof.js
    |   |   |                   unsupportedIterableToArray.js
    |   |   |                   using.js
    |   |   |                   usingCtx.js
    |   |   |                   wrapAsyncGenerator.js
    |   |   |                   wrapNativeSuper.js
    |   |   |                   wrapRegExp.js
    |   |   |                   writeOnlyError.js
    |   |   |                   
    |   |   \---types
    |   |           LICENSE
    |   |           package.json
    |   |           README.md
    |   |           types.d.ts
    |   |           
    |   +---@rolldown
    |   |   +---binding-win32-x64-msvc
    |   |   |       package.json
    |   |   |       README.md
    |   |   |       rolldown-binding.win32-x64-msvc.node
    |   |   |       
    |   |   \---pluginutils
    |   |       |   LICENSE
    |   |       |   package.json
    |   |       |   README.md
    |   |       |   
    |   |       \---dist
    |   |               index.d.mts
    |   |               index.mjs
    |   |               
    |   +---@tybys
    |   +---@types
    |   |   +---babel__core
    |   |   |       index.d.ts
    |   |   |       LICENSE
    |   |   |       package.json
    |   |   |       README.md
    |   |   |       
    |   |   +---babel__generator
    |   |   |       index.d.ts
    |   |   |       LICENSE
    |   |   |       package.json
    |   |   |       README.md
    |   |   |       
    |   |   +---babel__template
    |   |   |       index.d.ts
    |   |   |       LICENSE
    |   |   |       package.json
    |   |   |       README.md
    |   |   |       
    |   |   +---babel__traverse
    |   |   |       index.d.ts
    |   |   |       LICENSE
    |   |   |       package.json
    |   |   |       README.md
    |   |   |       
    |   |   +---estree
    |   |   |       flow.d.ts
    |   |   |       index.d.ts
    |   |   |       LICENSE
    |   |   |       package.json
    |   |   |       README.md
    |   |   |       
    |   |   +---json-schema
    |   |   |       index.d.ts
    |   |   |       LICENSE
    |   |   |       package.json
    |   |   |       README.md
    |   |   |       
    |   |   +---react
    |   |   |   |   canary.d.ts
    |   |   |   |   compiler-runtime.d.ts
    |   |   |   |   experimental.d.ts
    |   |   |   |   global.d.ts
    |   |   |   |   index.d.ts
    |   |   |   |   jsx-dev-runtime.d.ts
    |   |   |   |   jsx-runtime.d.ts
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   
    |   |   |   \---ts5.0
    |   |   |           canary.d.ts
    |   |   |           experimental.d.ts
    |   |   |           global.d.ts
    |   |   |           index.d.ts
    |   |   |           jsx-dev-runtime.d.ts
    |   |   |           jsx-runtime.d.ts
    |   |   |           
    |   |   +---react-dom
    |   |   |   |   canary.d.ts
    |   |   |   |   client.d.ts
    |   |   |   |   experimental.d.ts
    |   |   |   |   index.d.ts
    |   |   |   |   LICENSE
    |   |   |   |   package.json
    |   |   |   |   README.md
    |   |   |   |   server.browser.d.ts
    |   |   |   |   server.bun.d.ts
    |   |   |   |   server.d.ts
    |   |   |   |   server.edge.d.ts
    |   |   |   |   server.node.d.ts
    |   |   |   |   static.browser.d.ts
    |   |   |   |   static.d.ts
    |   |   |   |   static.edge.d.ts
    |   |   |   |   static.node.d.ts
    |   |   |   |   
    |   |   |   \---test-utils
    |   |   |           index.d.ts
    |   |   |           
    |   |   \---stylis
    |   |           index.d.ts
    |   |           LICENSE
    |   |           package.json
    |   |           README.md
    |   |           
    |   +---@vitejs
    |   |   \---plugin-react
    |   |       |   LICENSE
    |   |       |   package.json
    |   |       |   README.md
    |   |       |   
    |   |       \---dist
    |   |               index.d.ts
    |   |               index.js
    |   |               refresh-runtime.js
    |   |               
    |   +---acorn
    |   |   |   CHANGELOG.md
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---bin
    |   |   |       acorn
    |   |   |       
    |   |   \---dist
    |   |           acorn.d.mts
    |   |           acorn.d.ts
    |   |           acorn.js
    |   |           acorn.mjs
    |   |           bin.js
    |   |           
    |   +---acorn-jsx
    |   |       index.d.ts
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       xhtml.js
    |   |       
    |   +---ajv
    |   |   |   .tonic_example.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---dist
    |   |   |       ajv.bundle.js
    |   |   |       ajv.min.js
    |   |   |       ajv.min.js.map
    |   |   |       
    |   |   +---lib
    |   |   |   |   ajv.d.ts
    |   |   |   |   ajv.js
    |   |   |   |   cache.js
    |   |   |   |   data.js
    |   |   |   |   definition_schema.js
    |   |   |   |   keyword.js
    |   |   |   |   
    |   |   |   +---compile
    |   |   |   |       async.js
    |   |   |   |       equal.js
    |   |   |   |       error_classes.js
    |   |   |   |       formats.js
    |   |   |   |       index.js
    |   |   |   |       resolve.js
    |   |   |   |       rules.js
    |   |   |   |       schema_obj.js
    |   |   |   |       ucs2length.js
    |   |   |   |       util.js
    |   |   |   |       
    |   |   |   +---dot
    |   |   |   |       allOf.jst
    |   |   |   |       anyOf.jst
    |   |   |   |       coerce.def
    |   |   |   |       comment.jst
    |   |   |   |       const.jst
    |   |   |   |       contains.jst
    |   |   |   |       custom.jst
    |   |   |   |       defaults.def
    |   |   |   |       definitions.def
    |   |   |   |       dependencies.jst
    |   |   |   |       enum.jst
    |   |   |   |       errors.def
    |   |   |   |       format.jst
    |   |   |   |       if.jst
    |   |   |   |       items.jst
    |   |   |   |       missing.def
    |   |   |   |       multipleOf.jst
    |   |   |   |       not.jst
    |   |   |   |       oneOf.jst
    |   |   |   |       pattern.jst
    |   |   |   |       properties.jst
    |   |   |   |       propertyNames.jst
    |   |   |   |       ref.jst
    |   |   |   |       required.jst
    |   |   |   |       uniqueItems.jst
    |   |   |   |       validate.jst
    |   |   |   |       _limit.jst
    |   |   |   |       _limitItems.jst
    |   |   |   |       _limitLength.jst
    |   |   |   |       _limitProperties.jst
    |   |   |   |       
    |   |   |   +---dotjs
    |   |   |   |       allOf.js
    |   |   |   |       anyOf.js
    |   |   |   |       comment.js
    |   |   |   |       const.js
    |   |   |   |       contains.js
    |   |   |   |       custom.js
    |   |   |   |       dependencies.js
    |   |   |   |       enum.js
    |   |   |   |       format.js
    |   |   |   |       if.js
    |   |   |   |       index.js
    |   |   |   |       items.js
    |   |   |   |       multipleOf.js
    |   |   |   |       not.js
    |   |   |   |       oneOf.js
    |   |   |   |       pattern.js
    |   |   |   |       properties.js
    |   |   |   |       propertyNames.js
    |   |   |   |       README.md
    |   |   |   |       ref.js
    |   |   |   |       required.js
    |   |   |   |       uniqueItems.js
    |   |   |   |       validate.js
    |   |   |   |       _limit.js
    |   |   |   |       _limitItems.js
    |   |   |   |       _limitLength.js
    |   |   |   |       _limitProperties.js
    |   |   |   |       
    |   |   |   \---refs
    |   |   |           data.json
    |   |   |           json-schema-draft-04.json
    |   |   |           json-schema-draft-06.json
    |   |   |           json-schema-draft-07.json
    |   |   |           json-schema-secure.json
    |   |   |           
    |   |   \---scripts
    |   |           .eslintrc.yml
    |   |           bundle.js
    |   |           compile-dots.js
    |   |           info
    |   |           prepare-tests
    |   |           publish-built-version
    |   |           travis-gh-pages
    |   |           
    |   +---ansi-styles
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---ansis
    |   |       index.cjs
    |   |       index.d.ts
    |   |       index.mjs
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---argparse
    |   |   |   argparse.js
    |   |   |   CHANGELOG.md
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           sub.js
    |   |           textwrap.js
    |   |           
    |   +---asynckit
    |   |   |   bench.js
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   parallel.js
    |   |   |   README.md
    |   |   |   serial.js
    |   |   |   serialOrdered.js
    |   |   |   stream.js
    |   |   |   
    |   |   \---lib
    |   |           abort.js
    |   |           async.js
    |   |           defer.js
    |   |           iterate.js
    |   |           readable_asynckit.js
    |   |           readable_parallel.js
    |   |           readable_serial.js
    |   |           readable_serial_ordered.js
    |   |           state.js
    |   |           streamify.js
    |   |           terminator.js
    |   |           
    |   +---axios
    |   |   |   CHANGELOG.md
    |   |   |   index.d.cts
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   MIGRATION_GUIDE.md
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---dist
    |   |   |   |   axios.js
    |   |   |   |   axios.js.map
    |   |   |   |   axios.min.js
    |   |   |   |   axios.min.js.map
    |   |   |   |   
    |   |   |   +---browser
    |   |   |   |       axios.cjs
    |   |   |   |       axios.cjs.map
    |   |   |   |       
    |   |   |   +---esm
    |   |   |   |       axios.js
    |   |   |   |       axios.js.map
    |   |   |   |       axios.min.js
    |   |   |   |       axios.min.js.map
    |   |   |   |       
    |   |   |   \---node
    |   |   |           axios.cjs
    |   |   |           axios.cjs.map
    |   |   |           
    |   |   \---lib
    |   |       |   axios.js
    |   |       |   utils.js
    |   |       |   
    |   |       +---adapters
    |   |       |       adapters.js
    |   |       |       fetch.js
    |   |       |       http.js
    |   |       |       README.md
    |   |       |       xhr.js
    |   |       |       
    |   |       +---cancel
    |   |       |       CanceledError.js
    |   |       |       CancelToken.js
    |   |       |       isCancel.js
    |   |       |       
    |   |       +---core
    |   |       |       Axios.js
    |   |       |       AxiosError.js
    |   |       |       AxiosHeaders.js
    |   |       |       buildFullPath.js
    |   |       |       dispatchRequest.js
    |   |       |       InterceptorManager.js
    |   |       |       mergeConfig.js
    |   |       |       README.md
    |   |       |       settle.js
    |   |       |       transformData.js
    |   |       |       
    |   |       +---defaults
    |   |       |       index.js
    |   |       |       transitional.js
    |   |       |       
    |   |       +---env
    |   |       |   |   data.js
    |   |       |   |   README.md
    |   |       |   |   
    |   |       |   \---classes
    |   |       |           FormData.js
    |   |       |           
    |   |       +---helpers
    |   |       |       AxiosTransformStream.js
    |   |       |       AxiosURLSearchParams.js
    |   |       |       bind.js
    |   |       |       buildURL.js
    |   |       |       callbackify.js
    |   |       |       combineURLs.js
    |   |       |       composeSignals.js
    |   |       |       cookies.js
    |   |       |       deprecatedMethod.js
    |   |       |       estimateDataURLDecodedBytes.js
    |   |       |       formDataToJSON.js
    |   |       |       formDataToStream.js
    |   |       |       fromDataURI.js
    |   |       |       HttpStatusCode.js
    |   |       |       isAbsoluteURL.js
    |   |       |       isAxiosError.js
    |   |       |       isURLSameOrigin.js
    |   |       |       null.js
    |   |       |       parseHeaders.js
    |   |       |       parseProtocol.js
    |   |       |       progressEventReducer.js
    |   |       |       readBlob.js
    |   |       |       README.md
    |   |       |       resolveConfig.js
    |   |       |       speedometer.js
    |   |       |       spread.js
    |   |       |       throttle.js
    |   |       |       toFormData.js
    |   |       |       toURLEncodedForm.js
    |   |       |       trackStream.js
    |   |       |       validator.js
    |   |       |       ZlibHeaderTransformStream.js
    |   |       |       
    |   |       \---platform
    |   |           |   index.js
    |   |           |   
    |   |           +---browser
    |   |           |   |   index.js
    |   |           |   |   
    |   |           |   \---classes
    |   |           |           Blob.js
    |   |           |           FormData.js
    |   |           |           URLSearchParams.js
    |   |           |           
    |   |           +---common
    |   |           |       utils.js
    |   |           |       
    |   |           \---node
    |   |               |   index.js
    |   |               |   
    |   |               \---classes
    |   |                       FormData.js
    |   |                       URLSearchParams.js
    |   |                       
    |   +---balanced-match
    |   |   |   index.js
    |   |   |   LICENSE.md
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |           FUNDING.yml
    |   |           
    |   +---baseline-browser-mapping
    |   |   |   LICENSE.txt
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---dist
    |   |           cli.js
    |   |           index.cjs
    |   |           index.d.ts
    |   |           index.js
    |   |           
    |   +---brace-expansion
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---browserslist
    |   |       browser.js
    |   |       cli.js
    |   |       error.d.ts
    |   |       error.js
    |   |       index.d.ts
    |   |       index.js
    |   |       LICENSE
    |   |       node.js
    |   |       package.json
    |   |       parse.js
    |   |       README.md
    |   |       
    |   +---call-bind-apply-helpers
    |   |   |   .eslintrc
    |   |   |   .nycrc
    |   |   |   actualApply.d.ts
    |   |   |   actualApply.js
    |   |   |   applyBind.d.ts
    |   |   |   applyBind.js
    |   |   |   CHANGELOG.md
    |   |   |   functionApply.d.ts
    |   |   |   functionApply.js
    |   |   |   functionCall.d.ts
    |   |   |   functionCall.js
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   reflectApply.d.ts
    |   |   |   reflectApply.js
    |   |   |   tsconfig.json
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   \---test
    |   |           index.js
    |   |           
    |   +---callsites
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---camelize
    |   |   |   .eslintrc
    |   |   |   CHANGELOG.md
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   +---example
    |   |   |       camel.js
    |   |   |       
    |   |   \---test
    |   |           camel.js
    |   |           
    |   +---caniuse-lite
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---data
    |   |   |   |   agents.js
    |   |   |   |   browsers.js
    |   |   |   |   browserVersions.js
    |   |   |   |   features.js
    |   |   |   |   
    |   |   |   +---features
    |   |   |   |       aac.js
    |   |   |   |       abortcontroller.js
    |   |   |   |       ac3-ec3.js
    |   |   |   |       accelerometer.js
    |   |   |   |       addeventlistener.js
    |   |   |   |       alternate-stylesheet.js
    |   |   |   |       ambient-light.js
    |   |   |   |       apng.js
    |   |   |   |       array-find-index.js
    |   |   |   |       array-find.js
    |   |   |   |       array-flat.js
    |   |   |   |       array-includes.js
    |   |   |   |       arrow-functions.js
    |   |   |   |       asmjs.js
    |   |   |   |       async-clipboard.js
    |   |   |   |       async-functions.js
    |   |   |   |       atob-btoa.js
    |   |   |   |       audio-api.js
    |   |   |   |       audio.js
    |   |   |   |       audiotracks.js
    |   |   |   |       autofocus.js
    |   |   |   |       auxclick.js
    |   |   |   |       av1.js
    |   |   |   |       avif.js
    |   |   |   |       background-attachment.js
    |   |   |   |       background-clip-text.js
    |   |   |   |       background-img-opts.js
    |   |   |   |       background-position-x-y.js
    |   |   |   |       background-repeat-round-space.js
    |   |   |   |       background-sync.js
    |   |   |   |       battery-status.js
    |   |   |   |       beacon.js
    |   |   |   |       beforeafterprint.js
    |   |   |   |       bigint.js
    |   |   |   |       blobbuilder.js
    |   |   |   |       bloburls.js
    |   |   |   |       border-image.js
    |   |   |   |       border-radius.js
    |   |   |   |       broadcastchannel.js
    |   |   |   |       brotli.js
    |   |   |   |       calc.js
    |   |   |   |       canvas-blending.js
    |   |   |   |       canvas-text.js
    |   |   |   |       canvas.js
    |   |   |   |       ch-unit.js
    |   |   |   |       chacha20-poly1305.js
    |   |   |   |       channel-messaging.js
    |   |   |   |       childnode-remove.js
    |   |   |   |       classlist.js
    |   |   |   |       client-hints-dpr-width-viewport.js
    |   |   |   |       clipboard.js
    |   |   |   |       colr-v1.js
    |   |   |   |       colr.js
    |   |   |   |       comparedocumentposition.js
    |   |   |   |       console-basic.js
    |   |   |   |       console-time.js
    |   |   |   |       const.js
    |   |   |   |       constraint-validation.js
    |   |   |   |       contenteditable.js
    |   |   |   |       contentsecuritypolicy.js
    |   |   |   |       contentsecuritypolicy2.js
    |   |   |   |       cookie-store-api.js
    |   |   |   |       cors.js
    |   |   |   |       createimagebitmap.js
    |   |   |   |       credential-management.js
    |   |   |   |       cross-document-view-transitions.js
    |   |   |   |       cryptography.js
    |   |   |   |       css-all.js
    |   |   |   |       css-anchor-positioning.js
    |   |   |   |       css-animation.js
    |   |   |   |       css-any-link.js
    |   |   |   |       css-appearance.js
    |   |   |   |       css-at-counter-style.js
    |   |   |   |       css-autofill.js
    |   |   |   |       css-backdrop-filter.js
    |   |   |   |       css-background-offsets.js
    |   |   |   |       css-backgroundblendmode.js
    |   |   |   |       css-boxdecorationbreak.js
    |   |   |   |       css-boxshadow.js
    |   |   |   |       css-canvas.js
    |   |   |   |       css-caret-color.js
    |   |   |   |       css-cascade-layers.js
    |   |   |   |       css-cascade-scope.js
    |   |   |   |       css-case-insensitive.js
    |   |   |   |       css-clip-path.js
    |   |   |   |       css-color-adjust.js
    |   |   |   |       css-color-function.js
    |   |   |   |       css-conic-gradients.js
    |   |   |   |       css-container-queries-style.js
    |   |   |   |       css-container-queries.js
    |   |   |   |       css-container-query-units.js
    |   |   |   |       css-containment.js
    |   |   |   |       css-content-visibility.js
    |   |   |   |       css-counters.js
    |   |   |   |       css-crisp-edges.js
    |   |   |   |       css-cross-fade.js
    |   |   |   |       css-default-pseudo.js
    |   |   |   |       css-descendant-gtgt.js
    |   |   |   |       css-deviceadaptation.js
    |   |   |   |       css-dir-pseudo.js
    |   |   |   |       css-display-contents.js
    |   |   |   |       css-element-function.js
    |   |   |   |       css-env-function.js
    |   |   |   |       css-exclusions.js
    |   |   |   |       css-featurequeries.js
    |   |   |   |       css-file-selector-button.js
    |   |   |   |       css-filter-function.js
    |   |   |   |       css-filters.js
    |   |   |   |       css-first-letter.js
    |   |   |   |       css-first-line.js
    |   |   |   |       css-fixed.js
    |   |   |   |       css-focus-visible.js
    |   |   |   |       css-focus-within.js
    |   |   |   |       css-font-palette.js
    |   |   |   |       css-font-rendering-controls.js
    |   |   |   |       css-font-stretch.js
    |   |   |   |       css-gencontent.js
    |   |   |   |       css-gradients.js
    |   |   |   |       css-grid-animation.js
    |   |   |   |       css-grid.js
    |   |   |   |       css-hanging-punctuation.js
    |   |   |   |       css-has.js
    |   |   |   |       css-hyphens.js
    |   |   |   |       css-if.js
    |   |   |   |       css-image-orientation.js
    |   |   |   |       css-image-set.js
    |   |   |   |       css-in-out-of-range.js
    |   |   |   |       css-indeterminate-pseudo.js
    |   |   |   |       css-initial-letter.js
    |   |   |   |       css-initial-value.js
    |   |   |   |       css-lch-lab.js
    |   |   |   |       css-letter-spacing.js
    |   |   |   |       css-line-clamp.js
    |   |   |   |       css-logical-props.js
    |   |   |   |       css-marker-pseudo.js
    |   |   |   |       css-masks.js
    |   |   |   |       css-matches-pseudo.js
    |   |   |   |       css-math-functions.js
    |   |   |   |       css-media-interaction.js
    |   |   |   |       css-media-range-syntax.js
    |   |   |   |       css-media-resolution.js
    |   |   |   |       css-media-scripting.js
    |   |   |   |       css-mediaqueries.js
    |   |   |   |       css-mixblendmode.js
    |   |   |   |       css-module-scripts.js
    |   |   |   |       css-motion-paths.js
    |   |   |   |       css-namespaces.js
    |   |   |   |       css-nesting.js
    |   |   |   |       css-not-sel-list.js
    |   |   |   |       css-nth-child-of.js
    |   |   |   |       css-opacity.js
    |   |   |   |       css-optional-pseudo.js
    |   |   |   |       css-overflow-anchor.js
    |   |   |   |       css-overflow-overlay.js
    |   |   |   |       css-overflow.js
    |   |   |   |       css-overscroll-behavior.js
    |   |   |   |       css-page-break.js
    |   |   |   |       css-paged-media.js
    |   |   |   |       css-paint-api.js
    |   |   |   |       css-placeholder-shown.js
    |   |   |   |       css-placeholder.js
    |   |   |   |       css-print-color-adjust.js
    |   |   |   |       css-read-only-write.js
    |   |   |   |       css-rebeccapurple.js
    |   |   |   |       css-reflections.js
    |   |   |   |       css-regions.js
    |   |   |   |       css-relative-colors.js
    |   |   |   |       css-repeating-gradients.js
    |   |   |   |       css-resize.js
    |   |   |   |       css-revert-value.js
    |   |   |   |       css-rrggbbaa.js
    |   |   |   |       css-scroll-behavior.js
    |   |   |   |       css-scrollbar.js
    |   |   |   |       css-sel2.js
    |   |   |   |       css-sel3.js
    |   |   |   |       css-selection.js
    |   |   |   |       css-shapes.js
    |   |   |   |       css-snappoints.js
    |   |   |   |       css-sticky.js
    |   |   |   |       css-subgrid.js
    |   |   |   |       css-supports-api.js
    |   |   |   |       css-table.js
    |   |   |   |       css-text-align-last.js
    |   |   |   |       css-text-box-trim.js
    |   |   |   |       css-text-indent.js
    |   |   |   |       css-text-justify.js
    |   |   |   |       css-text-orientation.js
    |   |   |   |       css-text-spacing.js
    |   |   |   |       css-text-wrap-balance.js
    |   |   |   |       css-textshadow.js
    |   |   |   |       css-touch-action.js
    |   |   |   |       css-transitions.js
    |   |   |   |       css-unicode-bidi.js
    |   |   |   |       css-unset-value.js
    |   |   |   |       css-variables.js
    |   |   |   |       css-when-else.js
    |   |   |   |       css-widows-orphans.js
    |   |   |   |       css-width-stretch.js
    |   |   |   |       css-writing-mode.js
    |   |   |   |       css-zoom.js
    |   |   |   |       css3-attr.js
    |   |   |   |       css3-boxsizing.js
    |   |   |   |       css3-colors.js
    |   |   |   |       css3-cursors-grab.js
    |   |   |   |       css3-cursors-newer.js
    |   |   |   |       css3-cursors.js
    |   |   |   |       css3-tabsize.js
    |   |   |   |       currentcolor.js
    |   |   |   |       custom-elements.js
    |   |   |   |       custom-elementsv1.js
    |   |   |   |       customevent.js
    |   |   |   |       datalist.js
    |   |   |   |       dataset.js
    |   |   |   |       datauri.js
    |   |   |   |       date-tolocaledatestring.js
    |   |   |   |       declarative-shadow-dom.js
    |   |   |   |       decorators.js
    |   |   |   |       details.js
    |   |   |   |       deviceorientation.js
    |   |   |   |       devicepixelratio.js
    |   |   |   |       dialog.js
    |   |   |   |       dispatchevent.js
    |   |   |   |       dnssec.js
    |   |   |   |       do-not-track.js
    |   |   |   |       document-currentscript.js
    |   |   |   |       document-evaluate-xpath.js
    |   |   |   |       document-execcommand.js
    |   |   |   |       document-policy.js
    |   |   |   |       document-scrollingelement.js
    |   |   |   |       documenthead.js
    |   |   |   |       dom-manip-convenience.js
    |   |   |   |       dom-range.js
    |   |   |   |       domcontentloaded.js
    |   |   |   |       dommatrix.js
    |   |   |   |       download.js
    |   |   |   |       dragndrop.js
    |   |   |   |       element-closest.js
    |   |   |   |       element-from-point.js
    |   |   |   |       element-scroll-methods.js
    |   |   |   |       eme.js
    |   |   |   |       eot.js
    |   |   |   |       es5.js
    |   |   |   |       es6-class.js
    |   |   |   |       es6-generators.js
    |   |   |   |       es6-module-dynamic-import.js
    |   |   |   |       es6-module.js
    |   |   |   |       es6-number.js
    |   |   |   |       es6-string-includes.js
    |   |   |   |       es6.js
    |   |   |   |       eventsource.js
    |   |   |   |       extended-system-fonts.js
    |   |   |   |       feature-policy.js
    |   |   |   |       fetch.js
    |   |   |   |       fieldset-disabled.js
    |   |   |   |       fileapi.js
    |   |   |   |       filereader.js
    |   |   |   |       filereadersync.js
    |   |   |   |       filesystem.js
    |   |   |   |       flac.js
    |   |   |   |       flexbox-gap.js
    |   |   |   |       flexbox.js
    |   |   |   |       flow-root.js
    |   |   |   |       focusin-focusout-events.js
    |   |   |   |       font-family-system-ui.js
    |   |   |   |       font-feature.js
    |   |   |   |       font-kerning.js
    |   |   |   |       font-loading.js
    |   |   |   |       font-size-adjust.js
    |   |   |   |       font-smooth.js
    |   |   |   |       font-unicode-range.js
    |   |   |   |       font-variant-alternates.js
    |   |   |   |       font-variant-numeric.js
    |   |   |   |       fontface.js
    |   |   |   |       form-attribute.js
    |   |   |   |       form-submit-attributes.js
    |   |   |   |       form-validation.js
    |   |   |   |       forms.js
    |   |   |   |       fullscreen.js
    |   |   |   |       gamepad.js
    |   |   |   |       geolocation.js
    |   |   |   |       getboundingclientrect.js
    |   |   |   |       getcomputedstyle.js
    |   |   |   |       getelementsbyclassname.js
    |   |   |   |       getrandomvalues.js
    |   |   |   |       gyroscope.js
    |   |   |   |       hardwareconcurrency.js
    |   |   |   |       hashchange.js
    |   |   |   |       heif.js
    |   |   |   |       hevc.js
    |   |   |   |       hidden.js
    |   |   |   |       high-resolution-time.js
    |   |   |   |       history.js
    |   |   |   |       html-media-capture.js
    |   |   |   |       html5semantic.js
    |   |   |   |       http-live-streaming.js
    |   |   |   |       http2.js
    |   |   |   |       http3.js
    |   |   |   |       iframe-sandbox.js
    |   |   |   |       iframe-seamless.js
    |   |   |   |       iframe-srcdoc.js
    |   |   |   |       imagecapture.js
    |   |   |   |       ime.js
    |   |   |   |       img-naturalwidth-naturalheight.js
    |   |   |   |       import-maps.js
    |   |   |   |       imports.js
    |   |   |   |       indeterminate-checkbox.js
    |   |   |   |       indexeddb.js
    |   |   |   |       indexeddb2.js
    |   |   |   |       inline-block.js
    |   |   |   |       innertext.js
    |   |   |   |       input-autocomplete-onoff.js
    |   |   |   |       input-color.js
    |   |   |   |       input-datetime.js
    |   |   |   |       input-email-tel-url.js
    |   |   |   |       input-event.js
    |   |   |   |       input-file-accept.js
    |   |   |   |       input-file-directory.js
    |   |   |   |       input-file-multiple.js
    |   |   |   |       input-inputmode.js
    |   |   |   |       input-minlength.js
    |   |   |   |       input-number.js
    |   |   |   |       input-pattern.js
    |   |   |   |       input-placeholder.js
    |   |   |   |       input-range.js
    |   |   |   |       input-search.js
    |   |   |   |       input-selection.js
    |   |   |   |       insert-adjacent.js
    |   |   |   |       insertadjacenthtml.js
    |   |   |   |       internationalization.js
    |   |   |   |       intersectionobserver-v2.js
    |   |   |   |       intersectionobserver.js
    |   |   |   |       intl-pluralrules.js
    |   |   |   |       intrinsic-width.js
    |   |   |   |       jpeg2000.js
    |   |   |   |       jpegxl.js
    |   |   |   |       jpegxr.js
    |   |   |   |       js-regexp-lookbehind.js
    |   |   |   |       json.js
    |   |   |   |       justify-content-space-evenly.js
    |   |   |   |       kerning-pairs-ligatures.js
    |   |   |   |       keyboardevent-charcode.js
    |   |   |   |       keyboardevent-code.js
    |   |   |   |       keyboardevent-getmodifierstate.js
    |   |   |   |       keyboardevent-key.js
    |   |   |   |       keyboardevent-location.js
    |   |   |   |       keyboardevent-which.js
    |   |   |   |       lazyload.js
    |   |   |   |       let.js
    |   |   |   |       link-icon-png.js
    |   |   |   |       link-icon-svg.js
    |   |   |   |       link-rel-dns-prefetch.js
    |   |   |   |       link-rel-modulepreload.js
    |   |   |   |       link-rel-preconnect.js
    |   |   |   |       link-rel-prefetch.js
    |   |   |   |       link-rel-preload.js
    |   |   |   |       link-rel-prerender.js
    |   |   |   |       loading-lazy-attr.js
    |   |   |   |       localecompare.js
    |   |   |   |       magnetometer.js
    |   |   |   |       matchesselector.js
    |   |   |   |       matchmedia.js
    |   |   |   |       mathml.js
    |   |   |   |       maxlength.js
    |   |   |   |       mdn-css-backdrop-pseudo-element.js
    |   |   |   |       mdn-css-unicode-bidi-isolate-override.js
    |   |   |   |       mdn-css-unicode-bidi-isolate.js
    |   |   |   |       mdn-css-unicode-bidi-plaintext.js
    |   |   |   |       mdn-text-decoration-color.js
    |   |   |   |       mdn-text-decoration-line.js
    |   |   |   |       mdn-text-decoration-shorthand.js
    |   |   |   |       mdn-text-decoration-style.js
    |   |   |   |       media-fragments.js
    |   |   |   |       mediacapture-fromelement.js
    |   |   |   |       mediarecorder.js
    |   |   |   |       mediasource.js
    |   |   |   |       menu.js
    |   |   |   |       meta-theme-color.js
    |   |   |   |       meter.js
    |   |   |   |       midi.js
    |   |   |   |       minmaxwh.js
    |   |   |   |       mp3.js
    |   |   |   |       mpeg-dash.js
    |   |   |   |       mpeg4.js
    |   |   |   |       multibackgrounds.js
    |   |   |   |       multicolumn.js
    |   |   |   |       mutation-events.js
    |   |   |   |       mutationobserver.js
    |   |   |   |       namevalue-storage.js
    |   |   |   |       native-filesystem-api.js
    |   |   |   |       nav-timing.js
    |   |   |   |       netinfo.js
    |   |   |   |       notifications.js
    |   |   |   |       object-entries.js
    |   |   |   |       object-fit.js
    |   |   |   |       object-observe.js
    |   |   |   |       object-values.js
    |   |   |   |       objectrtc.js
    |   |   |   |       offline-apps.js
    |   |   |   |       offscreencanvas.js
    |   |   |   |       ogg-vorbis.js
    |   |   |   |       ogv.js
    |   |   |   |       ol-reversed.js
    |   |   |   |       once-event-listener.js
    |   |   |   |       online-status.js
    |   |   |   |       opus.js
    |   |   |   |       orientation-sensor.js
    |   |   |   |       outline.js
    |   |   |   |       pad-start-end.js
    |   |   |   |       page-transition-events.js
    |   |   |   |       pagevisibility.js
    |   |   |   |       passive-event-listener.js
    |   |   |   |       passkeys.js
    |   |   |   |       passwordrules.js
    |   |   |   |       path2d.js
    |   |   |   |       payment-request.js
    |   |   |   |       pdf-viewer.js
    |   |   |   |       permissions-api.js
    |   |   |   |       permissions-policy.js
    |   |   |   |       picture-in-picture.js
    |   |   |   |       picture.js
    |   |   |   |       ping.js
    |   |   |   |       png-alpha.js
    |   |   |   |       pointer-events.js
    |   |   |   |       pointer.js
    |   |   |   |       pointerlock.js
    |   |   |   |       portals.js
    |   |   |   |       prefers-color-scheme.js
    |   |   |   |       prefers-reduced-motion.js
    |   |   |   |       progress.js
    |   |   |   |       promise-finally.js
    |   |   |   |       promises.js
    |   |   |   |       proximity.js
    |   |   |   |       proxy.js
    |   |   |   |       publickeypinning.js
    |   |   |   |       push-api.js
    |   |   |   |       queryselector.js
    |   |   |   |       readonly-attr.js
    |   |   |   |       referrer-policy.js
    |   |   |   |       registerprotocolhandler.js
    |   |   |   |       rel-noopener.js
    |   |   |   |       rel-noreferrer.js
    |   |   |   |       rellist.js
    |   |   |   |       rem.js
    |   |   |   |       requestanimationframe.js
    |   |   |   |       requestidlecallback.js
    |   |   |   |       resizeobserver.js
    |   |   |   |       resource-timing.js
    |   |   |   |       rest-parameters.js
    |   |   |   |       rtcpeerconnection.js
    |   |   |   |       ruby.js
    |   |   |   |       run-in.js
    |   |   |   |       same-site-cookie-attribute.js
    |   |   |   |       screen-orientation.js
    |   |   |   |       script-async.js
    |   |   |   |       script-defer.js
    |   |   |   |       scrollintoview.js
    |   |   |   |       scrollintoviewifneeded.js
    |   |   |   |       sdch.js
    |   |   |   |       selection-api.js
    |   |   |   |       selectlist.js
    |   |   |   |       server-timing.js
    |   |   |   |       serviceworkers.js
    |   |   |   |       setimmediate.js
    |   |   |   |       shadowdom.js
    |   |   |   |       shadowdomv1.js
    |   |   |   |       sharedarraybuffer.js
    |   |   |   |       sharedworkers.js
    |   |   |   |       sni.js
    |   |   |   |       spdy.js
    |   |   |   |       speech-recognition.js
    |   |   |   |       speech-synthesis.js
    |   |   |   |       spellcheck-attribute.js
    |   |   |   |       sql-storage.js
    |   |   |   |       srcset.js
    |   |   |   |       stream.js
    |   |   |   |       streams.js
    |   |   |   |       stricttransportsecurity.js
    |   |   |   |       style-scoped.js
    |   |   |   |       subresource-bundling.js
    |   |   |   |       subresource-integrity.js
    |   |   |   |       svg-css.js
    |   |   |   |       svg-filters.js
    |   |   |   |       svg-fonts.js
    |   |   |   |       svg-fragment.js
    |   |   |   |       svg-html.js
    |   |   |   |       svg-html5.js
    |   |   |   |       svg-img.js
    |   |   |   |       svg-smil.js
    |   |   |   |       svg.js
    |   |   |   |       sxg.js
    |   |   |   |       tabindex-attr.js
    |   |   |   |       template-literals.js
    |   |   |   |       template.js
    |   |   |   |       temporal.js
    |   |   |   |       testfeat.js
    |   |   |   |       text-decoration.js
    |   |   |   |       text-emphasis.js
    |   |   |   |       text-overflow.js
    |   |   |   |       text-size-adjust.js
    |   |   |   |       text-stroke.js
    |   |   |   |       textcontent.js
    |   |   |   |       textencoder.js
    |   |   |   |       tls1-1.js
    |   |   |   |       tls1-2.js
    |   |   |   |       tls1-3.js
    |   |   |   |       touch.js
    |   |   |   |       transforms2d.js
    |   |   |   |       transforms3d.js
    |   |   |   |       trusted-types.js
    |   |   |   |       ttf.js
    |   |   |   |       typedarrays.js
    |   |   |   |       u2f.js
    |   |   |   |       unhandledrejection.js
    |   |   |   |       upgradeinsecurerequests.js
    |   |   |   |       url-scroll-to-text-fragment.js
    |   |   |   |       url.js
    |   |   |   |       urlsearchparams.js
    |   |   |   |       use-strict.js
    |   |   |   |       user-select-none.js
    |   |   |   |       user-timing.js
    |   |   |   |       variable-fonts.js
    |   |   |   |       vector-effect.js
    |   |   |   |       vibration.js
    |   |   |   |       video.js
    |   |   |   |       videotracks.js
    |   |   |   |       view-transitions.js
    |   |   |   |       viewport-unit-variants.js
    |   |   |   |       viewport-units.js
    |   |   |   |       wai-aria.js
    |   |   |   |       wake-lock.js
    |   |   |   |       wasm-bigint.js
    |   |   |   |       wasm-bulk-memory.js
    |   |   |   |       wasm-extended-const.js
    |   |   |   |       wasm-gc.js
    |   |   |   |       wasm-multi-memory.js
    |   |   |   |       wasm-multi-value.js
    |   |   |   |       wasm-mutable-globals.js
    |   |   |   |       wasm-nontrapping-fptoint.js
    |   |   |   |       wasm-reference-types.js
    |   |   |   |       wasm-relaxed-simd.js
    |   |   |   |       wasm-signext.js
    |   |   |   |       wasm-simd.js
    |   |   |   |       wasm-tail-calls.js
    |   |   |   |       wasm-threads.js
    |   |   |   |       wasm.js
    |   |   |   |       wav.js
    |   |   |   |       wbr-element.js
    |   |   |   |       web-animation.js
    |   |   |   |       web-app-manifest.js
    |   |   |   |       web-bluetooth.js
    |   |   |   |       web-serial.js
    |   |   |   |       web-share.js
    |   |   |   |       webauthn.js
    |   |   |   |       webcodecs.js
    |   |   |   |       webgl.js
    |   |   |   |       webgl2.js
    |   |   |   |       webgpu.js
    |   |   |   |       webhid.js
    |   |   |   |       webkit-user-drag.js
    |   |   |   |       webm.js
    |   |   |   |       webnfc.js
    |   |   |   |       webp.js
    |   |   |   |       websockets.js
    |   |   |   |       webtransport.js
    |   |   |   |       webusb.js
    |   |   |   |       webvr.js
    |   |   |   |       webvtt.js
    |   |   |   |       webworkers.js
    |   |   |   |       webxr.js
    |   |   |   |       will-change.js
    |   |   |   |       woff.js
    |   |   |   |       woff2.js
    |   |   |   |       word-break.js
    |   |   |   |       wordwrap.js
    |   |   |   |       x-doc-messaging.js
    |   |   |   |       x-frame-options.js
    |   |   |   |       xhr2.js
    |   |   |   |       xhtml.js
    |   |   |   |       xhtmlsmil.js
    |   |   |   |       xml-serializer.js
    |   |   |   |       zstd.js
    |   |   |   |       
    |   |   |   \---regions
    |   |   |           AD.js
    |   |   |           AE.js
    |   |   |           AF.js
    |   |   |           AG.js
    |   |   |           AI.js
    |   |   |           AL.js
    |   |   |           alt-af.js
    |   |   |           alt-an.js
    |   |   |           alt-as.js
    |   |   |           alt-eu.js
    |   |   |           alt-na.js
    |   |   |           alt-oc.js
    |   |   |           alt-sa.js
    |   |   |           alt-ww.js
    |   |   |           AM.js
    |   |   |           AO.js
    |   |   |           AR.js
    |   |   |           AS.js
    |   |   |           AT.js
    |   |   |           AU.js
    |   |   |           AW.js
    |   |   |           AX.js
    |   |   |           AZ.js
    |   |   |           BA.js
    |   |   |           BB.js
    |   |   |           BD.js
    |   |   |           BE.js
    |   |   |           BF.js
    |   |   |           BG.js
    |   |   |           BH.js
    |   |   |           BI.js
    |   |   |           BJ.js
    |   |   |           BM.js
    |   |   |           BN.js
    |   |   |           BO.js
    |   |   |           BR.js
    |   |   |           BS.js
    |   |   |           BT.js
    |   |   |           BW.js
    |   |   |           BY.js
    |   |   |           BZ.js
    |   |   |           CA.js
    |   |   |           CD.js
    |   |   |           CF.js
    |   |   |           CG.js
    |   |   |           CH.js
    |   |   |           CI.js
    |   |   |           CK.js
    |   |   |           CL.js
    |   |   |           CM.js
    |   |   |           CN.js
    |   |   |           CO.js
    |   |   |           CR.js
    |   |   |           CU.js
    |   |   |           CV.js
    |   |   |           CX.js
    |   |   |           CY.js
    |   |   |           CZ.js
    |   |   |           DE.js
    |   |   |           DJ.js
    |   |   |           DK.js
    |   |   |           DM.js
    |   |   |           DO.js
    |   |   |           DZ.js
    |   |   |           EC.js
    |   |   |           EE.js
    |   |   |           EG.js
    |   |   |           ER.js
    |   |   |           ES.js
    |   |   |           ET.js
    |   |   |           FI.js
    |   |   |           FJ.js
    |   |   |           FK.js
    |   |   |           FM.js
    |   |   |           FO.js
    |   |   |           FR.js
    |   |   |           GA.js
    |   |   |           GB.js
    |   |   |           GD.js
    |   |   |           GE.js
    |   |   |           GF.js
    |   |   |           GG.js
    |   |   |           GH.js
    |   |   |           GI.js
    |   |   |           GL.js
    |   |   |           GM.js
    |   |   |           GN.js
    |   |   |           GP.js
    |   |   |           GQ.js
    |   |   |           GR.js
    |   |   |           GT.js
    |   |   |           GU.js
    |   |   |           GW.js
    |   |   |           GY.js
    |   |   |           HK.js
    |   |   |           HN.js
    |   |   |           HR.js
    |   |   |           HT.js
    |   |   |           HU.js
    |   |   |           ID.js
    |   |   |           IE.js
    |   |   |           IL.js
    |   |   |           IM.js
    |   |   |           IN.js
    |   |   |           IQ.js
    |   |   |           IR.js
    |   |   |           IS.js
    |   |   |           IT.js
    |   |   |           JE.js
    |   |   |           JM.js
    |   |   |           JO.js
    |   |   |           JP.js
    |   |   |           KE.js
    |   |   |           KG.js
    |   |   |           KH.js
    |   |   |           KI.js
    |   |   |           KM.js
    |   |   |           KN.js
    |   |   |           KP.js
    |   |   |           KR.js
    |   |   |           KW.js
    |   |   |           KY.js
    |   |   |           KZ.js
    |   |   |           LA.js
    |   |   |           LB.js
    |   |   |           LC.js
    |   |   |           LI.js
    |   |   |           LK.js
    |   |   |           LR.js
    |   |   |           LS.js
    |   |   |           LT.js
    |   |   |           LU.js
    |   |   |           LV.js
    |   |   |           LY.js
    |   |   |           MA.js
    |   |   |           MC.js
    |   |   |           MD.js
    |   |   |           ME.js
    |   |   |           MG.js
    |   |   |           MH.js
    |   |   |           MK.js
    |   |   |           ML.js
    |   |   |           MM.js
    |   |   |           MN.js
    |   |   |           MO.js
    |   |   |           MP.js
    |   |   |           MQ.js
    |   |   |           MR.js
    |   |   |           MS.js
    |   |   |           MT.js
    |   |   |           MU.js
    |   |   |           MV.js
    |   |   |           MW.js
    |   |   |           MX.js
    |   |   |           MY.js
    |   |   |           MZ.js
    |   |   |           NA.js
    |   |   |           NC.js
    |   |   |           NE.js
    |   |   |           NF.js
    |   |   |           NG.js
    |   |   |           NI.js
    |   |   |           NL.js
    |   |   |           NO.js
    |   |   |           NP.js
    |   |   |           NR.js
    |   |   |           NU.js
    |   |   |           NZ.js
    |   |   |           OM.js
    |   |   |           PA.js
    |   |   |           PE.js
    |   |   |           PF.js
    |   |   |           PG.js
    |   |   |           PH.js
    |   |   |           PK.js
    |   |   |           PL.js
    |   |   |           PM.js
    |   |   |           PN.js
    |   |   |           PR.js
    |   |   |           PS.js
    |   |   |           PT.js
    |   |   |           PW.js
    |   |   |           PY.js
    |   |   |           QA.js
    |   |   |           RE.js
    |   |   |           RO.js
    |   |   |           RS.js
    |   |   |           RU.js
    |   |   |           RW.js
    |   |   |           SA.js
    |   |   |           SB.js
    |   |   |           SC.js
    |   |   |           SD.js
    |   |   |           SE.js
    |   |   |           SG.js
    |   |   |           SH.js
    |   |   |           SI.js
    |   |   |           SK.js
    |   |   |           SL.js
    |   |   |           SM.js
    |   |   |           SN.js
    |   |   |           SO.js
    |   |   |           SR.js
    |   |   |           ST.js
    |   |   |           SV.js
    |   |   |           SY.js
    |   |   |           SZ.js
    |   |   |           TC.js
    |   |   |           TD.js
    |   |   |           TG.js
    |   |   |           TH.js
    |   |   |           TJ.js
    |   |   |           TL.js
    |   |   |           TM.js
    |   |   |           TN.js
    |   |   |           TO.js
    |   |   |           TR.js
    |   |   |           TT.js
    |   |   |           TV.js
    |   |   |           TW.js
    |   |   |           TZ.js
    |   |   |           UA.js
    |   |   |           UG.js
    |   |   |           US.js
    |   |   |           UY.js
    |   |   |           UZ.js
    |   |   |           VA.js
    |   |   |           VC.js
    |   |   |           VE.js
    |   |   |           VG.js
    |   |   |           VI.js
    |   |   |           VN.js
    |   |   |           VU.js
    |   |   |           WF.js
    |   |   |           WS.js
    |   |   |           YE.js
    |   |   |           YT.js
    |   |   |           ZA.js
    |   |   |           ZM.js
    |   |   |           ZW.js
    |   |   |           
    |   |   \---dist
    |   |       +---lib
    |   |       |       statuses.js
    |   |       |       supported.js
    |   |       |       
    |   |       \---unpacker
    |   |               agents.js
    |   |               browsers.js
    |   |               browserVersions.js
    |   |               feature.js
    |   |               features.js
    |   |               index.js
    |   |               region.js
    |   |               
    |   +---chalk
    |   |   |   index.d.ts
    |   |   |   license
    |   |   |   package.json
    |   |   |   readme.md
    |   |   |   
    |   |   \---source
    |   |           index.js
    |   |           templates.js
    |   |           util.js
    |   |           
    |   +---color-convert
    |   |       CHANGELOG.md
    |   |       conversions.js
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       route.js
    |   |       
    |   +---color-name
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---combined-stream
    |   |   |   License
    |   |   |   package.json
    |   |   |   Readme.md
    |   |   |   yarn.lock
    |   |   |   
    |   |   \---lib
    |   |           combined_stream.js
    |   |           
    |   +---concat-map
    |   |   |   .travis.yml
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.markdown
    |   |   |   
    |   |   +---example
    |   |   |       map.js
    |   |   |       
    |   |   \---test
    |   |           map.js
    |   |           
    |   +---convert-source-map
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---cookie
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---dist
    |   |           index.d.ts
    |   |           index.js
    |   |           index.js.map
    |   |           
    |   +---core-js-pure
    |   |   |   configurator.js
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   postinstall.js
    |   |   |   README.md
    |   |   |   
    |   |   +---actual
    |   |   |   |   aggregate-error.js
    |   |   |   |   atob.js
    |   |   |   |   btoa.js
    |   |   |   |   clear-immediate.js
    |   |   |   |   escape.js
    |   |   |   |   get-iterator-method.js
    |   |   |   |   get-iterator.js
    |   |   |   |   global-this.js
    |   |   |   |   index.js
    |   |   |   |   is-iterable.js
    |   |   |   |   parse-float.js
    |   |   |   |   parse-int.js
    |   |   |   |   queue-microtask.js
    |   |   |   |   README.md
    |   |   |   |   self.js
    |   |   |   |   set-immediate.js
    |   |   |   |   set-interval.js
    |   |   |   |   set-timeout.js
    |   |   |   |   structured-clone.js
    |   |   |   |   suppressed-error.js
    |   |   |   |   unescape.js
    |   |   |   |   
    |   |   |   +---array
    |   |   |   |   |   at.js
    |   |   |   |   |   concat.js
    |   |   |   |   |   copy-within.js
    |   |   |   |   |   entries.js
    |   |   |   |   |   every.js
    |   |   |   |   |   fill.js
    |   |   |   |   |   filter.js
    |   |   |   |   |   find-index.js
    |   |   |   |   |   find-last-index.js
    |   |   |   |   |   find-last.js
    |   |   |   |   |   find.js
    |   |   |   |   |   flat-map.js
    |   |   |   |   |   flat.js
    |   |   |   |   |   for-each.js
    |   |   |   |   |   from-async.js
    |   |   |   |   |   from.js
    |   |   |   |   |   group-by-to-map.js
    |   |   |   |   |   group-by.js
    |   |   |   |   |   group-to-map.js
    |   |   |   |   |   group.js
    |   |   |   |   |   includes.js
    |   |   |   |   |   index-of.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-array.js
    |   |   |   |   |   iterator.js
    |   |   |   |   |   join.js
    |   |   |   |   |   keys.js
    |   |   |   |   |   last-index-of.js
    |   |   |   |   |   map.js
    |   |   |   |   |   of.js
    |   |   |   |   |   push.js
    |   |   |   |   |   reduce-right.js
    |   |   |   |   |   reduce.js
    |   |   |   |   |   reverse.js
    |   |   |   |   |   slice.js
    |   |   |   |   |   some.js
    |   |   |   |   |   sort.js
    |   |   |   |   |   splice.js
    |   |   |   |   |   to-reversed.js
    |   |   |   |   |   to-sorted.js
    |   |   |   |   |   to-spliced.js
    |   |   |   |   |   unshift.js
    |   |   |   |   |   values.js
    |   |   |   |   |   with.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           at.js
    |   |   |   |           concat.js
    |   |   |   |           copy-within.js
    |   |   |   |           entries.js
    |   |   |   |           every.js
    |   |   |   |           fill.js
    |   |   |   |           filter.js
    |   |   |   |           find-index.js
    |   |   |   |           find-last-index.js
    |   |   |   |           find-last.js
    |   |   |   |           find.js
    |   |   |   |           flat-map.js
    |   |   |   |           flat.js
    |   |   |   |           for-each.js
    |   |   |   |           group-by-to-map.js
    |   |   |   |           group-by.js
    |   |   |   |           group-to-map.js
    |   |   |   |           group.js
    |   |   |   |           includes.js
    |   |   |   |           index-of.js
    |   |   |   |           index.js
    |   |   |   |           iterator.js
    |   |   |   |           join.js
    |   |   |   |           keys.js
    |   |   |   |           last-index-of.js
    |   |   |   |           map.js
    |   |   |   |           push.js
    |   |   |   |           reduce-right.js
    |   |   |   |           reduce.js
    |   |   |   |           reverse.js
    |   |   |   |           slice.js
    |   |   |   |           some.js
    |   |   |   |           sort.js
    |   |   |   |           splice.js
    |   |   |   |           to-reversed.js
    |   |   |   |           to-sorted.js
    |   |   |   |           to-spliced.js
    |   |   |   |           unshift.js
    |   |   |   |           values.js
    |   |   |   |           with.js
    |   |   |   |           
    |   |   |   +---array-buffer
    |   |   |   |       constructor.js
    |   |   |   |       detached.js
    |   |   |   |       index.js
    |   |   |   |       is-view.js
    |   |   |   |       slice.js
    |   |   |   |       transfer-to-fixed-length.js
    |   |   |   |       transfer.js
    |   |   |   |       
    |   |   |   +---async-disposable-stack
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---async-iterator
    |   |   |   |       async-dispose.js
    |   |   |   |       drop.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find.js
    |   |   |   |       flat-map.js
    |   |   |   |       for-each.js
    |   |   |   |       from.js
    |   |   |   |       index.js
    |   |   |   |       map.js
    |   |   |   |       reduce.js
    |   |   |   |       some.js
    |   |   |   |       take.js
    |   |   |   |       to-array.js
    |   |   |   |       
    |   |   |   +---data-view
    |   |   |   |       get-float16.js
    |   |   |   |       index.js
    |   |   |   |       set-float16.js
    |   |   |   |       
    |   |   |   +---date
    |   |   |   |       get-year.js
    |   |   |   |       index.js
    |   |   |   |       now.js
    |   |   |   |       set-year.js
    |   |   |   |       to-gmt-string.js
    |   |   |   |       to-iso-string.js
    |   |   |   |       to-json.js
    |   |   |   |       to-primitive.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---disposable-stack
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---dom-collections
    |   |   |   |       for-each.js
    |   |   |   |       index.js
    |   |   |   |       iterator.js
    |   |   |   |       
    |   |   |   +---dom-exception
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---error
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       is-error.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---function
    |   |   |   |   |   bind.js
    |   |   |   |   |   has-instance.js
    |   |   |   |   |   index.js
    |   |   |   |   |   metadata.js
    |   |   |   |   |   name.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           bind.js
    |   |   |   |           index.js
    |   |   |   |           
    |   |   |   +---instance
    |   |   |   |       at.js
    |   |   |   |       bind.js
    |   |   |   |       code-point-at.js
    |   |   |   |       concat.js
    |   |   |   |       copy-within.js
    |   |   |   |       ends-with.js
    |   |   |   |       entries.js
    |   |   |   |       every.js
    |   |   |   |       fill.js
    |   |   |   |       filter.js
    |   |   |   |       find-index.js
    |   |   |   |       find-last-index.js
    |   |   |   |       find-last.js
    |   |   |   |       find.js
    |   |   |   |       flags.js
    |   |   |   |       flat-map.js
    |   |   |   |       flat.js
    |   |   |   |       for-each.js
    |   |   |   |       group-by-to-map.js
    |   |   |   |       group-by.js
    |   |   |   |       group-to-map.js
    |   |   |   |       group.js
    |   |   |   |       includes.js
    |   |   |   |       index-of.js
    |   |   |   |       is-well-formed.js
    |   |   |   |       keys.js
    |   |   |   |       last-index-of.js
    |   |   |   |       map.js
    |   |   |   |       match-all.js
    |   |   |   |       pad-end.js
    |   |   |   |       pad-start.js
    |   |   |   |       push.js
    |   |   |   |       reduce-right.js
    |   |   |   |       reduce.js
    |   |   |   |       repeat.js
    |   |   |   |       replace-all.js
    |   |   |   |       reverse.js
    |   |   |   |       slice.js
    |   |   |   |       some.js
    |   |   |   |       sort.js
    |   |   |   |       splice.js
    |   |   |   |       starts-with.js
    |   |   |   |       to-reversed.js
    |   |   |   |       to-sorted.js
    |   |   |   |       to-spliced.js
    |   |   |   |       to-well-formed.js
    |   |   |   |       trim-end.js
    |   |   |   |       trim-left.js
    |   |   |   |       trim-right.js
    |   |   |   |       trim-start.js
    |   |   |   |       trim.js
    |   |   |   |       unshift.js
    |   |   |   |       values.js
    |   |   |   |       with.js
    |   |   |   |       
    |   |   |   +---iterator
    |   |   |   |       concat.js
    |   |   |   |       dispose.js
    |   |   |   |       drop.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find.js
    |   |   |   |       flat-map.js
    |   |   |   |       for-each.js
    |   |   |   |       from.js
    |   |   |   |       index.js
    |   |   |   |       map.js
    |   |   |   |       reduce.js
    |   |   |   |       some.js
    |   |   |   |       take.js
    |   |   |   |       to-array.js
    |   |   |   |       to-async.js
    |   |   |   |       
    |   |   |   +---json
    |   |   |   |       index.js
    |   |   |   |       is-raw-json.js
    |   |   |   |       parse.js
    |   |   |   |       raw-json.js
    |   |   |   |       stringify.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---map
    |   |   |   |       get-or-insert-computed.js
    |   |   |   |       get-or-insert.js
    |   |   |   |       group-by.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---math
    |   |   |   |       acosh.js
    |   |   |   |       asinh.js
    |   |   |   |       atanh.js
    |   |   |   |       cbrt.js
    |   |   |   |       clz32.js
    |   |   |   |       cosh.js
    |   |   |   |       expm1.js
    |   |   |   |       f16round.js
    |   |   |   |       fround.js
    |   |   |   |       hypot.js
    |   |   |   |       imul.js
    |   |   |   |       index.js
    |   |   |   |       log10.js
    |   |   |   |       log1p.js
    |   |   |   |       log2.js
    |   |   |   |       sign.js
    |   |   |   |       sinh.js
    |   |   |   |       sum-precise.js
    |   |   |   |       tanh.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       trunc.js
    |   |   |   |       
    |   |   |   +---number
    |   |   |   |   |   constructor.js
    |   |   |   |   |   epsilon.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-finite.js
    |   |   |   |   |   is-integer.js
    |   |   |   |   |   is-nan.js
    |   |   |   |   |   is-safe-integer.js
    |   |   |   |   |   max-safe-integer.js
    |   |   |   |   |   min-safe-integer.js
    |   |   |   |   |   parse-float.js
    |   |   |   |   |   parse-int.js
    |   |   |   |   |   to-exponential.js
    |   |   |   |   |   to-fixed.js
    |   |   |   |   |   to-precision.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           index.js
    |   |   |   |           to-exponential.js
    |   |   |   |           to-fixed.js
    |   |   |   |           to-precision.js
    |   |   |   |           
    |   |   |   +---object
    |   |   |   |       assign.js
    |   |   |   |       create.js
    |   |   |   |       define-getter.js
    |   |   |   |       define-properties.js
    |   |   |   |       define-property.js
    |   |   |   |       define-setter.js
    |   |   |   |       entries.js
    |   |   |   |       freeze.js
    |   |   |   |       from-entries.js
    |   |   |   |       get-own-property-descriptor.js
    |   |   |   |       get-own-property-descriptors.js
    |   |   |   |       get-own-property-names.js
    |   |   |   |       get-own-property-symbols.js
    |   |   |   |       get-prototype-of.js
    |   |   |   |       group-by.js
    |   |   |   |       has-own.js
    |   |   |   |       index.js
    |   |   |   |       is-extensible.js
    |   |   |   |       is-frozen.js
    |   |   |   |       is-sealed.js
    |   |   |   |       is.js
    |   |   |   |       keys.js
    |   |   |   |       lookup-getter.js
    |   |   |   |       lookup-setter.js
    |   |   |   |       prevent-extensions.js
    |   |   |   |       proto.js
    |   |   |   |       seal.js
    |   |   |   |       set-prototype-of.js
    |   |   |   |       to-string.js
    |   |   |   |       values.js
    |   |   |   |       
    |   |   |   +---promise
    |   |   |   |       all-settled.js
    |   |   |   |       any.js
    |   |   |   |       finally.js
    |   |   |   |       index.js
    |   |   |   |       try.js
    |   |   |   |       with-resolvers.js
    |   |   |   |       
    |   |   |   +---reflect
    |   |   |   |       apply.js
    |   |   |   |       construct.js
    |   |   |   |       define-property.js
    |   |   |   |       delete-property.js
    |   |   |   |       get-own-property-descriptor.js
    |   |   |   |       get-prototype-of.js
    |   |   |   |       get.js
    |   |   |   |       has.js
    |   |   |   |       index.js
    |   |   |   |       is-extensible.js
    |   |   |   |       own-keys.js
    |   |   |   |       prevent-extensions.js
    |   |   |   |       set-prototype-of.js
    |   |   |   |       set.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---regexp
    |   |   |   |       constructor.js
    |   |   |   |       dot-all.js
    |   |   |   |       escape.js
    |   |   |   |       flags.js
    |   |   |   |       index.js
    |   |   |   |       match.js
    |   |   |   |       replace.js
    |   |   |   |       search.js
    |   |   |   |       split.js
    |   |   |   |       sticky.js
    |   |   |   |       test.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---set
    |   |   |   |       difference.js
    |   |   |   |       index.js
    |   |   |   |       intersection.js
    |   |   |   |       is-disjoint-from.js
    |   |   |   |       is-subset-of.js
    |   |   |   |       is-superset-of.js
    |   |   |   |       symmetric-difference.js
    |   |   |   |       union.js
    |   |   |   |       
    |   |   |   +---string
    |   |   |   |   |   anchor.js
    |   |   |   |   |   at.js
    |   |   |   |   |   big.js
    |   |   |   |   |   blink.js
    |   |   |   |   |   bold.js
    |   |   |   |   |   code-point-at.js
    |   |   |   |   |   ends-with.js
    |   |   |   |   |   fixed.js
    |   |   |   |   |   fontcolor.js
    |   |   |   |   |   fontsize.js
    |   |   |   |   |   from-code-point.js
    |   |   |   |   |   includes.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-well-formed.js
    |   |   |   |   |   italics.js
    |   |   |   |   |   iterator.js
    |   |   |   |   |   link.js
    |   |   |   |   |   match-all.js
    |   |   |   |   |   match.js
    |   |   |   |   |   pad-end.js
    |   |   |   |   |   pad-start.js
    |   |   |   |   |   raw.js
    |   |   |   |   |   repeat.js
    |   |   |   |   |   replace-all.js
    |   |   |   |   |   replace.js
    |   |   |   |   |   search.js
    |   |   |   |   |   small.js
    |   |   |   |   |   split.js
    |   |   |   |   |   starts-with.js
    |   |   |   |   |   strike.js
    |   |   |   |   |   sub.js
    |   |   |   |   |   substr.js
    |   |   |   |   |   sup.js
    |   |   |   |   |   to-well-formed.js
    |   |   |   |   |   trim-end.js
    |   |   |   |   |   trim-left.js
    |   |   |   |   |   trim-right.js
    |   |   |   |   |   trim-start.js
    |   |   |   |   |   trim.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           anchor.js
    |   |   |   |           at.js
    |   |   |   |           big.js
    |   |   |   |           blink.js
    |   |   |   |           bold.js
    |   |   |   |           code-point-at.js
    |   |   |   |           ends-with.js
    |   |   |   |           fixed.js
    |   |   |   |           fontcolor.js
    |   |   |   |           fontsize.js
    |   |   |   |           includes.js
    |   |   |   |           index.js
    |   |   |   |           is-well-formed.js
    |   |   |   |           italics.js
    |   |   |   |           iterator.js
    |   |   |   |           link.js
    |   |   |   |           match-all.js
    |   |   |   |           pad-end.js
    |   |   |   |           pad-start.js
    |   |   |   |           repeat.js
    |   |   |   |           replace-all.js
    |   |   |   |           small.js
    |   |   |   |           starts-with.js
    |   |   |   |           strike.js
    |   |   |   |           sub.js
    |   |   |   |           substr.js
    |   |   |   |           sup.js
    |   |   |   |           to-well-formed.js
    |   |   |   |           trim-end.js
    |   |   |   |           trim-left.js
    |   |   |   |           trim-right.js
    |   |   |   |           trim-start.js
    |   |   |   |           trim.js
    |   |   |   |           
    |   |   |   +---symbol
    |   |   |   |       async-dispose.js
    |   |   |   |       async-iterator.js
    |   |   |   |       description.js
    |   |   |   |       dispose.js
    |   |   |   |       for.js
    |   |   |   |       has-instance.js
    |   |   |   |       index.js
    |   |   |   |       is-concat-spreadable.js
    |   |   |   |       iterator.js
    |   |   |   |       key-for.js
    |   |   |   |       match-all.js
    |   |   |   |       match.js
    |   |   |   |       metadata.js
    |   |   |   |       replace.js
    |   |   |   |       search.js
    |   |   |   |       species.js
    |   |   |   |       split.js
    |   |   |   |       to-primitive.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       unscopables.js
    |   |   |   |       
    |   |   |   +---typed-array
    |   |   |   |       at.js
    |   |   |   |       copy-within.js
    |   |   |   |       entries.js
    |   |   |   |       every.js
    |   |   |   |       fill.js
    |   |   |   |       filter.js
    |   |   |   |       find-index.js
    |   |   |   |       find-last-index.js
    |   |   |   |       find-last.js
    |   |   |   |       find.js
    |   |   |   |       float32-array.js
    |   |   |   |       float64-array.js
    |   |   |   |       for-each.js
    |   |   |   |       from-base64.js
    |   |   |   |       from-hex.js
    |   |   |   |       from.js
    |   |   |   |       includes.js
    |   |   |   |       index-of.js
    |   |   |   |       index.js
    |   |   |   |       int16-array.js
    |   |   |   |       int32-array.js
    |   |   |   |       int8-array.js
    |   |   |   |       iterator.js
    |   |   |   |       join.js
    |   |   |   |       keys.js
    |   |   |   |       last-index-of.js
    |   |   |   |       map.js
    |   |   |   |       methods.js
    |   |   |   |       of.js
    |   |   |   |       reduce-right.js
    |   |   |   |       reduce.js
    |   |   |   |       reverse.js
    |   |   |   |       set-from-base64.js
    |   |   |   |       set-from-hex.js
    |   |   |   |       set.js
    |   |   |   |       slice.js
    |   |   |   |       some.js
    |   |   |   |       sort.js
    |   |   |   |       subarray.js
    |   |   |   |       to-base64.js
    |   |   |   |       to-hex.js
    |   |   |   |       to-locale-string.js
    |   |   |   |       to-reversed.js
    |   |   |   |       to-sorted.js
    |   |   |   |       to-spliced.js
    |   |   |   |       to-string.js
    |   |   |   |       uint16-array.js
    |   |   |   |       uint32-array.js
    |   |   |   |       uint8-array.js
    |   |   |   |       uint8-clamped-array.js
    |   |   |   |       values.js
    |   |   |   |       with.js
    |   |   |   |       
    |   |   |   +---url
    |   |   |   |       can-parse.js
    |   |   |   |       index.js
    |   |   |   |       parse.js
    |   |   |   |       to-json.js
    |   |   |   |       
    |   |   |   +---url-search-params
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---weak-map
    |   |   |   |       get-or-insert-computed.js
    |   |   |   |       get-or-insert.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   \---weak-set
    |   |   |           index.js
    |   |   |           
    |   |   +---es
    |   |   |   |   aggregate-error.js
    |   |   |   |   escape.js
    |   |   |   |   get-iterator-method.js
    |   |   |   |   get-iterator.js
    |   |   |   |   global-this.js
    |   |   |   |   index.js
    |   |   |   |   is-iterable.js
    |   |   |   |   parse-float.js
    |   |   |   |   parse-int.js
    |   |   |   |   README.md
    |   |   |   |   suppressed-error.js
    |   |   |   |   unescape.js
    |   |   |   |   
    |   |   |   +---array
    |   |   |   |   |   at.js
    |   |   |   |   |   concat.js
    |   |   |   |   |   copy-within.js
    |   |   |   |   |   entries.js
    |   |   |   |   |   every.js
    |   |   |   |   |   fill.js
    |   |   |   |   |   filter.js
    |   |   |   |   |   find-index.js
    |   |   |   |   |   find-last-index.js
    |   |   |   |   |   find-last.js
    |   |   |   |   |   find.js
    |   |   |   |   |   flat-map.js
    |   |   |   |   |   flat.js
    |   |   |   |   |   for-each.js
    |   |   |   |   |   from-async.js
    |   |   |   |   |   from.js
    |   |   |   |   |   includes.js
    |   |   |   |   |   index-of.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-array.js
    |   |   |   |   |   iterator.js
    |   |   |   |   |   join.js
    |   |   |   |   |   keys.js
    |   |   |   |   |   last-index-of.js
    |   |   |   |   |   map.js
    |   |   |   |   |   of.js
    |   |   |   |   |   push.js
    |   |   |   |   |   reduce-right.js
    |   |   |   |   |   reduce.js
    |   |   |   |   |   reverse.js
    |   |   |   |   |   slice.js
    |   |   |   |   |   some.js
    |   |   |   |   |   sort.js
    |   |   |   |   |   splice.js
    |   |   |   |   |   to-reversed.js
    |   |   |   |   |   to-sorted.js
    |   |   |   |   |   to-spliced.js
    |   |   |   |   |   unshift.js
    |   |   |   |   |   values.js
    |   |   |   |   |   with.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           at.js
    |   |   |   |           concat.js
    |   |   |   |           copy-within.js
    |   |   |   |           entries.js
    |   |   |   |           every.js
    |   |   |   |           fill.js
    |   |   |   |           filter.js
    |   |   |   |           find-index.js
    |   |   |   |           find-last-index.js
    |   |   |   |           find-last.js
    |   |   |   |           find.js
    |   |   |   |           flat-map.js
    |   |   |   |           flat.js
    |   |   |   |           for-each.js
    |   |   |   |           includes.js
    |   |   |   |           index-of.js
    |   |   |   |           index.js
    |   |   |   |           iterator.js
    |   |   |   |           join.js
    |   |   |   |           keys.js
    |   |   |   |           last-index-of.js
    |   |   |   |           map.js
    |   |   |   |           push.js
    |   |   |   |           reduce-right.js
    |   |   |   |           reduce.js
    |   |   |   |           reverse.js
    |   |   |   |           slice.js
    |   |   |   |           some.js
    |   |   |   |           sort.js
    |   |   |   |           splice.js
    |   |   |   |           to-reversed.js
    |   |   |   |           to-sorted.js
    |   |   |   |           to-spliced.js
    |   |   |   |           unshift.js
    |   |   |   |           values.js
    |   |   |   |           with.js
    |   |   |   |           
    |   |   |   +---array-buffer
    |   |   |   |       constructor.js
    |   |   |   |       detached.js
    |   |   |   |       index.js
    |   |   |   |       is-view.js
    |   |   |   |       slice.js
    |   |   |   |       transfer-to-fixed-length.js
    |   |   |   |       transfer.js
    |   |   |   |       
    |   |   |   +---async-disposable-stack
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---async-iterator
    |   |   |   |       async-dispose.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---data-view
    |   |   |   |       get-float16.js
    |   |   |   |       index.js
    |   |   |   |       set-float16.js
    |   |   |   |       
    |   |   |   +---date
    |   |   |   |       get-year.js
    |   |   |   |       index.js
    |   |   |   |       now.js
    |   |   |   |       set-year.js
    |   |   |   |       to-gmt-string.js
    |   |   |   |       to-iso-string.js
    |   |   |   |       to-json.js
    |   |   |   |       to-primitive.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---disposable-stack
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---error
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       is-error.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---function
    |   |   |   |   |   bind.js
    |   |   |   |   |   has-instance.js
    |   |   |   |   |   index.js
    |   |   |   |   |   name.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           bind.js
    |   |   |   |           index.js
    |   |   |   |           
    |   |   |   +---instance
    |   |   |   |       at.js
    |   |   |   |       bind.js
    |   |   |   |       code-point-at.js
    |   |   |   |       concat.js
    |   |   |   |       copy-within.js
    |   |   |   |       ends-with.js
    |   |   |   |       entries.js
    |   |   |   |       every.js
    |   |   |   |       fill.js
    |   |   |   |       filter.js
    |   |   |   |       find-index.js
    |   |   |   |       find-last-index.js
    |   |   |   |       find-last.js
    |   |   |   |       find.js
    |   |   |   |       flags.js
    |   |   |   |       flat-map.js
    |   |   |   |       flat.js
    |   |   |   |       for-each.js
    |   |   |   |       includes.js
    |   |   |   |       index-of.js
    |   |   |   |       is-well-formed.js
    |   |   |   |       keys.js
    |   |   |   |       last-index-of.js
    |   |   |   |       map.js
    |   |   |   |       match-all.js
    |   |   |   |       pad-end.js
    |   |   |   |       pad-start.js
    |   |   |   |       push.js
    |   |   |   |       reduce-right.js
    |   |   |   |       reduce.js
    |   |   |   |       repeat.js
    |   |   |   |       replace-all.js
    |   |   |   |       reverse.js
    |   |   |   |       slice.js
    |   |   |   |       some.js
    |   |   |   |       sort.js
    |   |   |   |       splice.js
    |   |   |   |       starts-with.js
    |   |   |   |       to-reversed.js
    |   |   |   |       to-sorted.js
    |   |   |   |       to-spliced.js
    |   |   |   |       to-well-formed.js
    |   |   |   |       trim-end.js
    |   |   |   |       trim-left.js
    |   |   |   |       trim-right.js
    |   |   |   |       trim-start.js
    |   |   |   |       trim.js
    |   |   |   |       unshift.js
    |   |   |   |       values.js
    |   |   |   |       with.js
    |   |   |   |       
    |   |   |   +---iterator
    |   |   |   |       dispose.js
    |   |   |   |       drop.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find.js
    |   |   |   |       flat-map.js
    |   |   |   |       for-each.js
    |   |   |   |       from.js
    |   |   |   |       index.js
    |   |   |   |       map.js
    |   |   |   |       reduce.js
    |   |   |   |       some.js
    |   |   |   |       take.js
    |   |   |   |       to-array.js
    |   |   |   |       
    |   |   |   +---json
    |   |   |   |       index.js
    |   |   |   |       stringify.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---map
    |   |   |   |       group-by.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---math
    |   |   |   |       acosh.js
    |   |   |   |       asinh.js
    |   |   |   |       atanh.js
    |   |   |   |       cbrt.js
    |   |   |   |       clz32.js
    |   |   |   |       cosh.js
    |   |   |   |       expm1.js
    |   |   |   |       f16round.js
    |   |   |   |       fround.js
    |   |   |   |       hypot.js
    |   |   |   |       imul.js
    |   |   |   |       index.js
    |   |   |   |       log10.js
    |   |   |   |       log1p.js
    |   |   |   |       log2.js
    |   |   |   |       sign.js
    |   |   |   |       sinh.js
    |   |   |   |       sum-precise.js
    |   |   |   |       tanh.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       trunc.js
    |   |   |   |       
    |   |   |   +---number
    |   |   |   |   |   constructor.js
    |   |   |   |   |   epsilon.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-finite.js
    |   |   |   |   |   is-integer.js
    |   |   |   |   |   is-nan.js
    |   |   |   |   |   is-safe-integer.js
    |   |   |   |   |   max-safe-integer.js
    |   |   |   |   |   min-safe-integer.js
    |   |   |   |   |   parse-float.js
    |   |   |   |   |   parse-int.js
    |   |   |   |   |   to-exponential.js
    |   |   |   |   |   to-fixed.js
    |   |   |   |   |   to-precision.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           index.js
    |   |   |   |           to-exponential.js
    |   |   |   |           to-fixed.js
    |   |   |   |           to-precision.js
    |   |   |   |           
    |   |   |   +---object
    |   |   |   |       assign.js
    |   |   |   |       create.js
    |   |   |   |       define-getter.js
    |   |   |   |       define-properties.js
    |   |   |   |       define-property.js
    |   |   |   |       define-setter.js
    |   |   |   |       entries.js
    |   |   |   |       freeze.js
    |   |   |   |       from-entries.js
    |   |   |   |       get-own-property-descriptor.js
    |   |   |   |       get-own-property-descriptors.js
    |   |   |   |       get-own-property-names.js
    |   |   |   |       get-own-property-symbols.js
    |   |   |   |       get-prototype-of.js
    |   |   |   |       group-by.js
    |   |   |   |       has-own.js
    |   |   |   |       index.js
    |   |   |   |       is-extensible.js
    |   |   |   |       is-frozen.js
    |   |   |   |       is-sealed.js
    |   |   |   |       is.js
    |   |   |   |       keys.js
    |   |   |   |       lookup-getter.js
    |   |   |   |       lookup-setter.js
    |   |   |   |       prevent-extensions.js
    |   |   |   |       proto.js
    |   |   |   |       seal.js
    |   |   |   |       set-prototype-of.js
    |   |   |   |       to-string.js
    |   |   |   |       values.js
    |   |   |   |       
    |   |   |   +---promise
    |   |   |   |       all-settled.js
    |   |   |   |       any.js
    |   |   |   |       finally.js
    |   |   |   |       index.js
    |   |   |   |       try.js
    |   |   |   |       with-resolvers.js
    |   |   |   |       
    |   |   |   +---reflect
    |   |   |   |       apply.js
    |   |   |   |       construct.js
    |   |   |   |       define-property.js
    |   |   |   |       delete-property.js
    |   |   |   |       get-own-property-descriptor.js
    |   |   |   |       get-prototype-of.js
    |   |   |   |       get.js
    |   |   |   |       has.js
    |   |   |   |       index.js
    |   |   |   |       is-extensible.js
    |   |   |   |       own-keys.js
    |   |   |   |       prevent-extensions.js
    |   |   |   |       set-prototype-of.js
    |   |   |   |       set.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---regexp
    |   |   |   |       constructor.js
    |   |   |   |       dot-all.js
    |   |   |   |       escape.js
    |   |   |   |       flags.js
    |   |   |   |       index.js
    |   |   |   |       match.js
    |   |   |   |       replace.js
    |   |   |   |       search.js
    |   |   |   |       split.js
    |   |   |   |       sticky.js
    |   |   |   |       test.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---set
    |   |   |   |       difference.js
    |   |   |   |       index.js
    |   |   |   |       intersection.js
    |   |   |   |       is-disjoint-from.js
    |   |   |   |       is-subset-of.js
    |   |   |   |       is-superset-of.js
    |   |   |   |       symmetric-difference.js
    |   |   |   |       union.js
    |   |   |   |       
    |   |   |   +---string
    |   |   |   |   |   anchor.js
    |   |   |   |   |   at.js
    |   |   |   |   |   big.js
    |   |   |   |   |   blink.js
    |   |   |   |   |   bold.js
    |   |   |   |   |   code-point-at.js
    |   |   |   |   |   ends-with.js
    |   |   |   |   |   fixed.js
    |   |   |   |   |   fontcolor.js
    |   |   |   |   |   fontsize.js
    |   |   |   |   |   from-code-point.js
    |   |   |   |   |   includes.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-well-formed.js
    |   |   |   |   |   italics.js
    |   |   |   |   |   iterator.js
    |   |   |   |   |   link.js
    |   |   |   |   |   match-all.js
    |   |   |   |   |   match.js
    |   |   |   |   |   pad-end.js
    |   |   |   |   |   pad-start.js
    |   |   |   |   |   raw.js
    |   |   |   |   |   repeat.js
    |   |   |   |   |   replace-all.js
    |   |   |   |   |   replace.js
    |   |   |   |   |   search.js
    |   |   |   |   |   small.js
    |   |   |   |   |   split.js
    |   |   |   |   |   starts-with.js
    |   |   |   |   |   strike.js
    |   |   |   |   |   sub.js
    |   |   |   |   |   substr.js
    |   |   |   |   |   sup.js
    |   |   |   |   |   to-well-formed.js
    |   |   |   |   |   trim-end.js
    |   |   |   |   |   trim-left.js
    |   |   |   |   |   trim-right.js
    |   |   |   |   |   trim-start.js
    |   |   |   |   |   trim.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           anchor.js
    |   |   |   |           at.js
    |   |   |   |           big.js
    |   |   |   |           blink.js
    |   |   |   |           bold.js
    |   |   |   |           code-point-at.js
    |   |   |   |           ends-with.js
    |   |   |   |           fixed.js
    |   |   |   |           fontcolor.js
    |   |   |   |           fontsize.js
    |   |   |   |           includes.js
    |   |   |   |           index.js
    |   |   |   |           is-well-formed.js
    |   |   |   |           italics.js
    |   |   |   |           iterator.js
    |   |   |   |           link.js
    |   |   |   |           match-all.js
    |   |   |   |           pad-end.js
    |   |   |   |           pad-start.js
    |   |   |   |           repeat.js
    |   |   |   |           replace-all.js
    |   |   |   |           small.js
    |   |   |   |           starts-with.js
    |   |   |   |           strike.js
    |   |   |   |           sub.js
    |   |   |   |           substr.js
    |   |   |   |           sup.js
    |   |   |   |           to-well-formed.js
    |   |   |   |           trim-end.js
    |   |   |   |           trim-left.js
    |   |   |   |           trim-right.js
    |   |   |   |           trim-start.js
    |   |   |   |           trim.js
    |   |   |   |           
    |   |   |   +---symbol
    |   |   |   |       async-dispose.js
    |   |   |   |       async-iterator.js
    |   |   |   |       description.js
    |   |   |   |       dispose.js
    |   |   |   |       for.js
    |   |   |   |       has-instance.js
    |   |   |   |       index.js
    |   |   |   |       is-concat-spreadable.js
    |   |   |   |       iterator.js
    |   |   |   |       key-for.js
    |   |   |   |       match-all.js
    |   |   |   |       match.js
    |   |   |   |       replace.js
    |   |   |   |       search.js
    |   |   |   |       species.js
    |   |   |   |       split.js
    |   |   |   |       to-primitive.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       unscopables.js
    |   |   |   |       
    |   |   |   +---typed-array
    |   |   |   |       at.js
    |   |   |   |       copy-within.js
    |   |   |   |       entries.js
    |   |   |   |       every.js
    |   |   |   |       fill.js
    |   |   |   |       filter.js
    |   |   |   |       find-index.js
    |   |   |   |       find-last-index.js
    |   |   |   |       find-last.js
    |   |   |   |       find.js
    |   |   |   |       float32-array.js
    |   |   |   |       float64-array.js
    |   |   |   |       for-each.js
    |   |   |   |       from-base64.js
    |   |   |   |       from-hex.js
    |   |   |   |       from.js
    |   |   |   |       includes.js
    |   |   |   |       index-of.js
    |   |   |   |       index.js
    |   |   |   |       int16-array.js
    |   |   |   |       int32-array.js
    |   |   |   |       int8-array.js
    |   |   |   |       iterator.js
    |   |   |   |       join.js
    |   |   |   |       keys.js
    |   |   |   |       last-index-of.js
    |   |   |   |       map.js
    |   |   |   |       methods.js
    |   |   |   |       of.js
    |   |   |   |       reduce-right.js
    |   |   |   |       reduce.js
    |   |   |   |       reverse.js
    |   |   |   |       set-from-base64.js
    |   |   |   |       set-from-hex.js
    |   |   |   |       set.js
    |   |   |   |       slice.js
    |   |   |   |       some.js
    |   |   |   |       sort.js
    |   |   |   |       subarray.js
    |   |   |   |       to-base64.js
    |   |   |   |       to-hex.js
    |   |   |   |       to-locale-string.js
    |   |   |   |       to-reversed.js
    |   |   |   |       to-sorted.js
    |   |   |   |       to-string.js
    |   |   |   |       uint16-array.js
    |   |   |   |       uint32-array.js
    |   |   |   |       uint8-array.js
    |   |   |   |       uint8-clamped-array.js
    |   |   |   |       values.js
    |   |   |   |       with.js
    |   |   |   |       
    |   |   |   +---weak-map
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   \---weak-set
    |   |   |           index.js
    |   |   |           
    |   |   +---features
    |   |   |   |   aggregate-error.js
    |   |   |   |   atob.js
    |   |   |   |   btoa.js
    |   |   |   |   clear-immediate.js
    |   |   |   |   composite-key.js
    |   |   |   |   composite-symbol.js
    |   |   |   |   escape.js
    |   |   |   |   get-iterator-method.js
    |   |   |   |   get-iterator.js
    |   |   |   |   global-this.js
    |   |   |   |   index.js
    |   |   |   |   is-iterable.js
    |   |   |   |   parse-float.js
    |   |   |   |   parse-int.js
    |   |   |   |   queue-microtask.js
    |   |   |   |   self.js
    |   |   |   |   set-immediate.js
    |   |   |   |   set-interval.js
    |   |   |   |   set-timeout.js
    |   |   |   |   structured-clone.js
    |   |   |   |   suppressed-error.js
    |   |   |   |   unescape.js
    |   |   |   |   
    |   |   |   +---array
    |   |   |   |   |   at.js
    |   |   |   |   |   concat.js
    |   |   |   |   |   copy-within.js
    |   |   |   |   |   entries.js
    |   |   |   |   |   every.js
    |   |   |   |   |   fill.js
    |   |   |   |   |   filter-out.js
    |   |   |   |   |   filter-reject.js
    |   |   |   |   |   filter.js
    |   |   |   |   |   find-index.js
    |   |   |   |   |   find-last-index.js
    |   |   |   |   |   find-last.js
    |   |   |   |   |   find.js
    |   |   |   |   |   flat-map.js
    |   |   |   |   |   flat.js
    |   |   |   |   |   for-each.js
    |   |   |   |   |   from-async.js
    |   |   |   |   |   from.js
    |   |   |   |   |   group-by-to-map.js
    |   |   |   |   |   group-by.js
    |   |   |   |   |   group-to-map.js
    |   |   |   |   |   group.js
    |   |   |   |   |   includes.js
    |   |   |   |   |   index-of.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-array.js
    |   |   |   |   |   is-template-object.js
    |   |   |   |   |   iterator.js
    |   |   |   |   |   join.js
    |   |   |   |   |   keys.js
    |   |   |   |   |   last-index-of.js
    |   |   |   |   |   last-index.js
    |   |   |   |   |   last-item.js
    |   |   |   |   |   map.js
    |   |   |   |   |   of.js
    |   |   |   |   |   push.js
    |   |   |   |   |   reduce-right.js
    |   |   |   |   |   reduce.js
    |   |   |   |   |   reverse.js
    |   |   |   |   |   slice.js
    |   |   |   |   |   some.js
    |   |   |   |   |   sort.js
    |   |   |   |   |   splice.js
    |   |   |   |   |   to-reversed.js
    |   |   |   |   |   to-sorted.js
    |   |   |   |   |   to-spliced.js
    |   |   |   |   |   unique-by.js
    |   |   |   |   |   unshift.js
    |   |   |   |   |   values.js
    |   |   |   |   |   with.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           at.js
    |   |   |   |           concat.js
    |   |   |   |           copy-within.js
    |   |   |   |           entries.js
    |   |   |   |           every.js
    |   |   |   |           fill.js
    |   |   |   |           filter-out.js
    |   |   |   |           filter-reject.js
    |   |   |   |           filter.js
    |   |   |   |           find-index.js
    |   |   |   |           find-last-index.js
    |   |   |   |           find-last.js
    |   |   |   |           find.js
    |   |   |   |           flat-map.js
    |   |   |   |           flat.js
    |   |   |   |           for-each.js
    |   |   |   |           group-by-to-map.js
    |   |   |   |           group-by.js
    |   |   |   |           group-to-map.js
    |   |   |   |           group.js
    |   |   |   |           includes.js
    |   |   |   |           index-of.js
    |   |   |   |           index.js
    |   |   |   |           iterator.js
    |   |   |   |           join.js
    |   |   |   |           keys.js
    |   |   |   |           last-index-of.js
    |   |   |   |           map.js
    |   |   |   |           push.js
    |   |   |   |           reduce-right.js
    |   |   |   |           reduce.js
    |   |   |   |           reverse.js
    |   |   |   |           slice.js
    |   |   |   |           some.js
    |   |   |   |           sort.js
    |   |   |   |           splice.js
    |   |   |   |           to-reversed.js
    |   |   |   |           to-sorted.js
    |   |   |   |           to-spliced.js
    |   |   |   |           unique-by.js
    |   |   |   |           unshift.js
    |   |   |   |           values.js
    |   |   |   |           with.js
    |   |   |   |           
    |   |   |   +---array-buffer
    |   |   |   |       constructor.js
    |   |   |   |       detached.js
    |   |   |   |       index.js
    |   |   |   |       is-view.js
    |   |   |   |       slice.js
    |   |   |   |       transfer-to-fixed-length.js
    |   |   |   |       transfer.js
    |   |   |   |       
    |   |   |   +---async-disposable-stack
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---async-iterator
    |   |   |   |       as-indexed-pairs.js
    |   |   |   |       async-dispose.js
    |   |   |   |       drop.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find.js
    |   |   |   |       flat-map.js
    |   |   |   |       for-each.js
    |   |   |   |       from.js
    |   |   |   |       index.js
    |   |   |   |       indexed.js
    |   |   |   |       map.js
    |   |   |   |       reduce.js
    |   |   |   |       some.js
    |   |   |   |       take.js
    |   |   |   |       to-array.js
    |   |   |   |       
    |   |   |   +---bigint
    |   |   |   |       index.js
    |   |   |   |       range.js
    |   |   |   |       
    |   |   |   +---data-view
    |   |   |   |       get-float16.js
    |   |   |   |       get-uint8-clamped.js
    |   |   |   |       index.js
    |   |   |   |       set-float16.js
    |   |   |   |       set-uint8-clamped.js
    |   |   |   |       
    |   |   |   +---date
    |   |   |   |       get-year.js
    |   |   |   |       index.js
    |   |   |   |       now.js
    |   |   |   |       set-year.js
    |   |   |   |       to-gmt-string.js
    |   |   |   |       to-iso-string.js
    |   |   |   |       to-json.js
    |   |   |   |       to-primitive.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---disposable-stack
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---dom-collections
    |   |   |   |       for-each.js
    |   |   |   |       index.js
    |   |   |   |       iterator.js
    |   |   |   |       
    |   |   |   +---dom-exception
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---error
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       is-error.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---function
    |   |   |   |   |   bind.js
    |   |   |   |   |   demethodize.js
    |   |   |   |   |   has-instance.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-callable.js
    |   |   |   |   |   is-constructor.js
    |   |   |   |   |   metadata.js
    |   |   |   |   |   name.js
    |   |   |   |   |   un-this.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           bind.js
    |   |   |   |           demethodize.js
    |   |   |   |           index.js
    |   |   |   |           un-this.js
    |   |   |   |           
    |   |   |   +---instance
    |   |   |   |       at.js
    |   |   |   |       bind.js
    |   |   |   |       clamp.js
    |   |   |   |       code-point-at.js
    |   |   |   |       code-points.js
    |   |   |   |       concat.js
    |   |   |   |       copy-within.js
    |   |   |   |       demethodize.js
    |   |   |   |       ends-with.js
    |   |   |   |       entries.js
    |   |   |   |       every.js
    |   |   |   |       fill.js
    |   |   |   |       filter-out.js
    |   |   |   |       filter-reject.js
    |   |   |   |       filter.js
    |   |   |   |       find-index.js
    |   |   |   |       find-last-index.js
    |   |   |   |       find-last.js
    |   |   |   |       find.js
    |   |   |   |       flags.js
    |   |   |   |       flat-map.js
    |   |   |   |       flat.js
    |   |   |   |       for-each.js
    |   |   |   |       group-by-to-map.js
    |   |   |   |       group-by.js
    |   |   |   |       group-to-map.js
    |   |   |   |       group.js
    |   |   |   |       includes.js
    |   |   |   |       index-of.js
    |   |   |   |       is-well-formed.js
    |   |   |   |       keys.js
    |   |   |   |       last-index-of.js
    |   |   |   |       map.js
    |   |   |   |       match-all.js
    |   |   |   |       pad-end.js
    |   |   |   |       pad-start.js
    |   |   |   |       push.js
    |   |   |   |       reduce-right.js
    |   |   |   |       reduce.js
    |   |   |   |       repeat.js
    |   |   |   |       replace-all.js
    |   |   |   |       reverse.js
    |   |   |   |       slice.js
    |   |   |   |       some.js
    |   |   |   |       sort.js
    |   |   |   |       splice.js
    |   |   |   |       starts-with.js
    |   |   |   |       to-reversed.js
    |   |   |   |       to-sorted.js
    |   |   |   |       to-spliced.js
    |   |   |   |       to-well-formed.js
    |   |   |   |       trim-end.js
    |   |   |   |       trim-left.js
    |   |   |   |       trim-right.js
    |   |   |   |       trim-start.js
    |   |   |   |       trim.js
    |   |   |   |       un-this.js
    |   |   |   |       unique-by.js
    |   |   |   |       unshift.js
    |   |   |   |       values.js
    |   |   |   |       with.js
    |   |   |   |       
    |   |   |   +---iterator
    |   |   |   |       as-indexed-pairs.js
    |   |   |   |       chunks.js
    |   |   |   |       concat.js
    |   |   |   |       dispose.js
    |   |   |   |       drop.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find.js
    |   |   |   |       flat-map.js
    |   |   |   |       for-each.js
    |   |   |   |       from.js
    |   |   |   |       index.js
    |   |   |   |       indexed.js
    |   |   |   |       map.js
    |   |   |   |       range.js
    |   |   |   |       reduce.js
    |   |   |   |       sliding.js
    |   |   |   |       some.js
    |   |   |   |       take.js
    |   |   |   |       to-array.js
    |   |   |   |       to-async.js
    |   |   |   |       windows.js
    |   |   |   |       zip-keyed.js
    |   |   |   |       zip.js
    |   |   |   |       
    |   |   |   +---json
    |   |   |   |       index.js
    |   |   |   |       is-raw-json.js
    |   |   |   |       parse.js
    |   |   |   |       raw-json.js
    |   |   |   |       stringify.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---map
    |   |   |   |       delete-all.js
    |   |   |   |       emplace.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find-key.js
    |   |   |   |       find.js
    |   |   |   |       from.js
    |   |   |   |       get-or-insert-computed.js
    |   |   |   |       get-or-insert.js
    |   |   |   |       group-by.js
    |   |   |   |       includes.js
    |   |   |   |       index.js
    |   |   |   |       key-by.js
    |   |   |   |       key-of.js
    |   |   |   |       map-keys.js
    |   |   |   |       map-values.js
    |   |   |   |       merge.js
    |   |   |   |       of.js
    |   |   |   |       reduce.js
    |   |   |   |       some.js
    |   |   |   |       update-or-insert.js
    |   |   |   |       update.js
    |   |   |   |       upsert.js
    |   |   |   |       
    |   |   |   +---math
    |   |   |   |       acosh.js
    |   |   |   |       asinh.js
    |   |   |   |       atanh.js
    |   |   |   |       cbrt.js
    |   |   |   |       clamp.js
    |   |   |   |       clz32.js
    |   |   |   |       cosh.js
    |   |   |   |       deg-per-rad.js
    |   |   |   |       degrees.js
    |   |   |   |       expm1.js
    |   |   |   |       f16round.js
    |   |   |   |       fround.js
    |   |   |   |       fscale.js
    |   |   |   |       hypot.js
    |   |   |   |       iaddh.js
    |   |   |   |       imul.js
    |   |   |   |       imulh.js
    |   |   |   |       index.js
    |   |   |   |       isubh.js
    |   |   |   |       log10.js
    |   |   |   |       log1p.js
    |   |   |   |       log2.js
    |   |   |   |       rad-per-deg.js
    |   |   |   |       radians.js
    |   |   |   |       scale.js
    |   |   |   |       seeded-prng.js
    |   |   |   |       sign.js
    |   |   |   |       signbit.js
    |   |   |   |       sinh.js
    |   |   |   |       sum-precise.js
    |   |   |   |       tanh.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       trunc.js
    |   |   |   |       umulh.js
    |   |   |   |       
    |   |   |   +---number
    |   |   |   |   |   clamp.js
    |   |   |   |   |   constructor.js
    |   |   |   |   |   epsilon.js
    |   |   |   |   |   from-string.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-finite.js
    |   |   |   |   |   is-integer.js
    |   |   |   |   |   is-nan.js
    |   |   |   |   |   is-safe-integer.js
    |   |   |   |   |   max-safe-integer.js
    |   |   |   |   |   min-safe-integer.js
    |   |   |   |   |   parse-float.js
    |   |   |   |   |   parse-int.js
    |   |   |   |   |   range.js
    |   |   |   |   |   to-exponential.js
    |   |   |   |   |   to-fixed.js
    |   |   |   |   |   to-precision.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           clamp.js
    |   |   |   |           index.js
    |   |   |   |           to-exponential.js
    |   |   |   |           to-fixed.js
    |   |   |   |           to-precision.js
    |   |   |   |           
    |   |   |   +---object
    |   |   |   |       assign.js
    |   |   |   |       create.js
    |   |   |   |       define-getter.js
    |   |   |   |       define-properties.js
    |   |   |   |       define-property.js
    |   |   |   |       define-setter.js
    |   |   |   |       entries.js
    |   |   |   |       freeze.js
    |   |   |   |       from-entries.js
    |   |   |   |       get-own-property-descriptor.js
    |   |   |   |       get-own-property-descriptors.js
    |   |   |   |       get-own-property-names.js
    |   |   |   |       get-own-property-symbols.js
    |   |   |   |       get-prototype-of.js
    |   |   |   |       group-by.js
    |   |   |   |       has-own.js
    |   |   |   |       index.js
    |   |   |   |       is-extensible.js
    |   |   |   |       is-frozen.js
    |   |   |   |       is-sealed.js
    |   |   |   |       is.js
    |   |   |   |       iterate-entries.js
    |   |   |   |       iterate-keys.js
    |   |   |   |       iterate-values.js
    |   |   |   |       keys.js
    |   |   |   |       lookup-getter.js
    |   |   |   |       lookup-setter.js
    |   |   |   |       prevent-extensions.js
    |   |   |   |       proto.js
    |   |   |   |       seal.js
    |   |   |   |       set-prototype-of.js
    |   |   |   |       to-string.js
    |   |   |   |       values.js
    |   |   |   |       
    |   |   |   +---observable
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---promise
    |   |   |   |       all-settled.js
    |   |   |   |       any.js
    |   |   |   |       finally.js
    |   |   |   |       index.js
    |   |   |   |       try.js
    |   |   |   |       with-resolvers.js
    |   |   |   |       
    |   |   |   +---reflect
    |   |   |   |       apply.js
    |   |   |   |       construct.js
    |   |   |   |       define-metadata.js
    |   |   |   |       define-property.js
    |   |   |   |       delete-metadata.js
    |   |   |   |       delete-property.js
    |   |   |   |       get-metadata-keys.js
    |   |   |   |       get-metadata.js
    |   |   |   |       get-own-metadata-keys.js
    |   |   |   |       get-own-metadata.js
    |   |   |   |       get-own-property-descriptor.js
    |   |   |   |       get-prototype-of.js
    |   |   |   |       get.js
    |   |   |   |       has-metadata.js
    |   |   |   |       has-own-metadata.js
    |   |   |   |       has.js
    |   |   |   |       index.js
    |   |   |   |       is-extensible.js
    |   |   |   |       metadata.js
    |   |   |   |       own-keys.js
    |   |   |   |       prevent-extensions.js
    |   |   |   |       set-prototype-of.js
    |   |   |   |       set.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---regexp
    |   |   |   |       constructor.js
    |   |   |   |       dot-all.js
    |   |   |   |       escape.js
    |   |   |   |       flags.js
    |   |   |   |       index.js
    |   |   |   |       match.js
    |   |   |   |       replace.js
    |   |   |   |       search.js
    |   |   |   |       split.js
    |   |   |   |       sticky.js
    |   |   |   |       test.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---set
    |   |   |   |       add-all.js
    |   |   |   |       delete-all.js
    |   |   |   |       difference.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find.js
    |   |   |   |       from.js
    |   |   |   |       index.js
    |   |   |   |       intersection.js
    |   |   |   |       is-disjoint-from.js
    |   |   |   |       is-subset-of.js
    |   |   |   |       is-superset-of.js
    |   |   |   |       join.js
    |   |   |   |       map.js
    |   |   |   |       of.js
    |   |   |   |       reduce.js
    |   |   |   |       some.js
    |   |   |   |       symmetric-difference.js
    |   |   |   |       union.js
    |   |   |   |       
    |   |   |   +---string
    |   |   |   |   |   anchor.js
    |   |   |   |   |   at.js
    |   |   |   |   |   big.js
    |   |   |   |   |   blink.js
    |   |   |   |   |   bold.js
    |   |   |   |   |   code-point-at.js
    |   |   |   |   |   code-points.js
    |   |   |   |   |   cooked.js
    |   |   |   |   |   dedent.js
    |   |   |   |   |   ends-with.js
    |   |   |   |   |   fixed.js
    |   |   |   |   |   fontcolor.js
    |   |   |   |   |   fontsize.js
    |   |   |   |   |   from-code-point.js
    |   |   |   |   |   includes.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-well-formed.js
    |   |   |   |   |   italics.js
    |   |   |   |   |   iterator.js
    |   |   |   |   |   link.js
    |   |   |   |   |   match-all.js
    |   |   |   |   |   match.js
    |   |   |   |   |   pad-end.js
    |   |   |   |   |   pad-start.js
    |   |   |   |   |   raw.js
    |   |   |   |   |   repeat.js
    |   |   |   |   |   replace-all.js
    |   |   |   |   |   replace.js
    |   |   |   |   |   search.js
    |   |   |   |   |   small.js
    |   |   |   |   |   split.js
    |   |   |   |   |   starts-with.js
    |   |   |   |   |   strike.js
    |   |   |   |   |   sub.js
    |   |   |   |   |   substr.js
    |   |   |   |   |   sup.js
    |   |   |   |   |   to-well-formed.js
    |   |   |   |   |   trim-end.js
    |   |   |   |   |   trim-left.js
    |   |   |   |   |   trim-right.js
    |   |   |   |   |   trim-start.js
    |   |   |   |   |   trim.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           anchor.js
    |   |   |   |           at.js
    |   |   |   |           big.js
    |   |   |   |           blink.js
    |   |   |   |           bold.js
    |   |   |   |           code-point-at.js
    |   |   |   |           code-points.js
    |   |   |   |           ends-with.js
    |   |   |   |           fixed.js
    |   |   |   |           fontcolor.js
    |   |   |   |           fontsize.js
    |   |   |   |           includes.js
    |   |   |   |           index.js
    |   |   |   |           is-well-formed.js
    |   |   |   |           italics.js
    |   |   |   |           iterator.js
    |   |   |   |           link.js
    |   |   |   |           match-all.js
    |   |   |   |           pad-end.js
    |   |   |   |           pad-start.js
    |   |   |   |           repeat.js
    |   |   |   |           replace-all.js
    |   |   |   |           small.js
    |   |   |   |           starts-with.js
    |   |   |   |           strike.js
    |   |   |   |           sub.js
    |   |   |   |           substr.js
    |   |   |   |           sup.js
    |   |   |   |           to-well-formed.js
    |   |   |   |           trim-end.js
    |   |   |   |           trim-left.js
    |   |   |   |           trim-right.js
    |   |   |   |           trim-start.js
    |   |   |   |           trim.js
    |   |   |   |           
    |   |   |   +---symbol
    |   |   |   |       async-dispose.js
    |   |   |   |       async-iterator.js
    |   |   |   |       custom-matcher.js
    |   |   |   |       description.js
    |   |   |   |       dispose.js
    |   |   |   |       for.js
    |   |   |   |       has-instance.js
    |   |   |   |       index.js
    |   |   |   |       is-concat-spreadable.js
    |   |   |   |       is-registered-symbol.js
    |   |   |   |       is-registered.js
    |   |   |   |       is-well-known-symbol.js
    |   |   |   |       is-well-known.js
    |   |   |   |       iterator.js
    |   |   |   |       key-for.js
    |   |   |   |       match-all.js
    |   |   |   |       match.js
    |   |   |   |       matcher.js
    |   |   |   |       metadata-key.js
    |   |   |   |       metadata.js
    |   |   |   |       observable.js
    |   |   |   |       pattern-match.js
    |   |   |   |       replace-all.js
    |   |   |   |       replace.js
    |   |   |   |       search.js
    |   |   |   |       species.js
    |   |   |   |       split.js
    |   |   |   |       to-primitive.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       unscopables.js
    |   |   |   |       
    |   |   |   +---typed-array
    |   |   |   |       at.js
    |   |   |   |       copy-within.js
    |   |   |   |       entries.js
    |   |   |   |       every.js
    |   |   |   |       fill.js
    |   |   |   |       filter-out.js
    |   |   |   |       filter-reject.js
    |   |   |   |       filter.js
    |   |   |   |       find-index.js
    |   |   |   |       find-last-index.js
    |   |   |   |       find-last.js
    |   |   |   |       find.js
    |   |   |   |       float32-array.js
    |   |   |   |       float64-array.js
    |   |   |   |       for-each.js
    |   |   |   |       from-async.js
    |   |   |   |       from-base64.js
    |   |   |   |       from-hex.js
    |   |   |   |       from.js
    |   |   |   |       group-by.js
    |   |   |   |       includes.js
    |   |   |   |       index-of.js
    |   |   |   |       index.js
    |   |   |   |       int16-array.js
    |   |   |   |       int32-array.js
    |   |   |   |       int8-array.js
    |   |   |   |       iterator.js
    |   |   |   |       join.js
    |   |   |   |       keys.js
    |   |   |   |       last-index-of.js
    |   |   |   |       map.js
    |   |   |   |       methods.js
    |   |   |   |       of.js
    |   |   |   |       reduce-right.js
    |   |   |   |       reduce.js
    |   |   |   |       reverse.js
    |   |   |   |       set-from-base64.js
    |   |   |   |       set-from-hex.js
    |   |   |   |       set.js
    |   |   |   |       slice.js
    |   |   |   |       some.js
    |   |   |   |       sort.js
    |   |   |   |       subarray.js
    |   |   |   |       to-base64.js
    |   |   |   |       to-hex.js
    |   |   |   |       to-locale-string.js
    |   |   |   |       to-reversed.js
    |   |   |   |       to-sorted.js
    |   |   |   |       to-spliced.js
    |   |   |   |       to-string.js
    |   |   |   |       uint16-array.js
    |   |   |   |       uint32-array.js
    |   |   |   |       uint8-array.js
    |   |   |   |       uint8-clamped-array.js
    |   |   |   |       unique-by.js
    |   |   |   |       values.js
    |   |   |   |       with.js
    |   |   |   |       
    |   |   |   +---url
    |   |   |   |       can-parse.js
    |   |   |   |       index.js
    |   |   |   |       parse.js
    |   |   |   |       to-json.js
    |   |   |   |       
    |   |   |   +---url-search-params
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---weak-map
    |   |   |   |       delete-all.js
    |   |   |   |       emplace.js
    |   |   |   |       from.js
    |   |   |   |       get-or-insert-computed.js
    |   |   |   |       get-or-insert.js
    |   |   |   |       index.js
    |   |   |   |       of.js
    |   |   |   |       upsert.js
    |   |   |   |       
    |   |   |   \---weak-set
    |   |   |           add-all.js
    |   |   |           delete-all.js
    |   |   |           from.js
    |   |   |           index.js
    |   |   |           of.js
    |   |   |           
    |   |   +---full
    |   |   |   |   aggregate-error.js
    |   |   |   |   atob.js
    |   |   |   |   btoa.js
    |   |   |   |   clear-immediate.js
    |   |   |   |   composite-key.js
    |   |   |   |   composite-symbol.js
    |   |   |   |   escape.js
    |   |   |   |   get-iterator-method.js
    |   |   |   |   get-iterator.js
    |   |   |   |   global-this.js
    |   |   |   |   index.js
    |   |   |   |   is-iterable.js
    |   |   |   |   parse-float.js
    |   |   |   |   parse-int.js
    |   |   |   |   queue-microtask.js
    |   |   |   |   README.md
    |   |   |   |   self.js
    |   |   |   |   set-immediate.js
    |   |   |   |   set-interval.js
    |   |   |   |   set-timeout.js
    |   |   |   |   structured-clone.js
    |   |   |   |   suppressed-error.js
    |   |   |   |   unescape.js
    |   |   |   |   
    |   |   |   +---array
    |   |   |   |   |   at.js
    |   |   |   |   |   concat.js
    |   |   |   |   |   copy-within.js
    |   |   |   |   |   entries.js
    |   |   |   |   |   every.js
    |   |   |   |   |   fill.js
    |   |   |   |   |   filter-out.js
    |   |   |   |   |   filter-reject.js
    |   |   |   |   |   filter.js
    |   |   |   |   |   find-index.js
    |   |   |   |   |   find-last-index.js
    |   |   |   |   |   find-last.js
    |   |   |   |   |   find.js
    |   |   |   |   |   flat-map.js
    |   |   |   |   |   flat.js
    |   |   |   |   |   for-each.js
    |   |   |   |   |   from-async.js
    |   |   |   |   |   from.js
    |   |   |   |   |   group-by-to-map.js
    |   |   |   |   |   group-by.js
    |   |   |   |   |   group-to-map.js
    |   |   |   |   |   group.js
    |   |   |   |   |   includes.js
    |   |   |   |   |   index-of.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-array.js
    |   |   |   |   |   is-template-object.js
    |   |   |   |   |   iterator.js
    |   |   |   |   |   join.js
    |   |   |   |   |   keys.js
    |   |   |   |   |   last-index-of.js
    |   |   |   |   |   last-index.js
    |   |   |   |   |   last-item.js
    |   |   |   |   |   map.js
    |   |   |   |   |   of.js
    |   |   |   |   |   push.js
    |   |   |   |   |   reduce-right.js
    |   |   |   |   |   reduce.js
    |   |   |   |   |   reverse.js
    |   |   |   |   |   slice.js
    |   |   |   |   |   some.js
    |   |   |   |   |   sort.js
    |   |   |   |   |   splice.js
    |   |   |   |   |   to-reversed.js
    |   |   |   |   |   to-sorted.js
    |   |   |   |   |   to-spliced.js
    |   |   |   |   |   unique-by.js
    |   |   |   |   |   unshift.js
    |   |   |   |   |   values.js
    |   |   |   |   |   with.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           at.js
    |   |   |   |           concat.js
    |   |   |   |           copy-within.js
    |   |   |   |           entries.js
    |   |   |   |           every.js
    |   |   |   |           fill.js
    |   |   |   |           filter-out.js
    |   |   |   |           filter-reject.js
    |   |   |   |           filter.js
    |   |   |   |           find-index.js
    |   |   |   |           find-last-index.js
    |   |   |   |           find-last.js
    |   |   |   |           find.js
    |   |   |   |           flat-map.js
    |   |   |   |           flat.js
    |   |   |   |           for-each.js
    |   |   |   |           group-by-to-map.js
    |   |   |   |           group-by.js
    |   |   |   |           group-to-map.js
    |   |   |   |           group.js
    |   |   |   |           includes.js
    |   |   |   |           index-of.js
    |   |   |   |           index.js
    |   |   |   |           iterator.js
    |   |   |   |           join.js
    |   |   |   |           keys.js
    |   |   |   |           last-index-of.js
    |   |   |   |           map.js
    |   |   |   |           push.js
    |   |   |   |           reduce-right.js
    |   |   |   |           reduce.js
    |   |   |   |           reverse.js
    |   |   |   |           slice.js
    |   |   |   |           some.js
    |   |   |   |           sort.js
    |   |   |   |           splice.js
    |   |   |   |           to-reversed.js
    |   |   |   |           to-sorted.js
    |   |   |   |           to-spliced.js
    |   |   |   |           unique-by.js
    |   |   |   |           unshift.js
    |   |   |   |           values.js
    |   |   |   |           with.js
    |   |   |   |           
    |   |   |   +---array-buffer
    |   |   |   |       constructor.js
    |   |   |   |       detached.js
    |   |   |   |       index.js
    |   |   |   |       is-view.js
    |   |   |   |       slice.js
    |   |   |   |       transfer-to-fixed-length.js
    |   |   |   |       transfer.js
    |   |   |   |       
    |   |   |   +---async-disposable-stack
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---async-iterator
    |   |   |   |       as-indexed-pairs.js
    |   |   |   |       async-dispose.js
    |   |   |   |       drop.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find.js
    |   |   |   |       flat-map.js
    |   |   |   |       for-each.js
    |   |   |   |       from.js
    |   |   |   |       index.js
    |   |   |   |       indexed.js
    |   |   |   |       map.js
    |   |   |   |       reduce.js
    |   |   |   |       some.js
    |   |   |   |       take.js
    |   |   |   |       to-array.js
    |   |   |   |       
    |   |   |   +---bigint
    |   |   |   |       index.js
    |   |   |   |       range.js
    |   |   |   |       
    |   |   |   +---data-view
    |   |   |   |       get-float16.js
    |   |   |   |       get-uint8-clamped.js
    |   |   |   |       index.js
    |   |   |   |       set-float16.js
    |   |   |   |       set-uint8-clamped.js
    |   |   |   |       
    |   |   |   +---date
    |   |   |   |       get-year.js
    |   |   |   |       index.js
    |   |   |   |       now.js
    |   |   |   |       set-year.js
    |   |   |   |       to-gmt-string.js
    |   |   |   |       to-iso-string.js
    |   |   |   |       to-json.js
    |   |   |   |       to-primitive.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---disposable-stack
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---dom-collections
    |   |   |   |       for-each.js
    |   |   |   |       index.js
    |   |   |   |       iterator.js
    |   |   |   |       
    |   |   |   +---dom-exception
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---error
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       is-error.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---function
    |   |   |   |   |   bind.js
    |   |   |   |   |   demethodize.js
    |   |   |   |   |   has-instance.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-callable.js
    |   |   |   |   |   is-constructor.js
    |   |   |   |   |   metadata.js
    |   |   |   |   |   name.js
    |   |   |   |   |   un-this.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           bind.js
    |   |   |   |           demethodize.js
    |   |   |   |           index.js
    |   |   |   |           un-this.js
    |   |   |   |           
    |   |   |   +---instance
    |   |   |   |       at.js
    |   |   |   |       bind.js
    |   |   |   |       clamp.js
    |   |   |   |       code-point-at.js
    |   |   |   |       code-points.js
    |   |   |   |       concat.js
    |   |   |   |       copy-within.js
    |   |   |   |       demethodize.js
    |   |   |   |       ends-with.js
    |   |   |   |       entries.js
    |   |   |   |       every.js
    |   |   |   |       fill.js
    |   |   |   |       filter-out.js
    |   |   |   |       filter-reject.js
    |   |   |   |       filter.js
    |   |   |   |       find-index.js
    |   |   |   |       find-last-index.js
    |   |   |   |       find-last.js
    |   |   |   |       find.js
    |   |   |   |       flags.js
    |   |   |   |       flat-map.js
    |   |   |   |       flat.js
    |   |   |   |       for-each.js
    |   |   |   |       group-by-to-map.js
    |   |   |   |       group-by.js
    |   |   |   |       group-to-map.js
    |   |   |   |       group.js
    |   |   |   |       includes.js
    |   |   |   |       index-of.js
    |   |   |   |       is-well-formed.js
    |   |   |   |       keys.js
    |   |   |   |       last-index-of.js
    |   |   |   |       map.js
    |   |   |   |       match-all.js
    |   |   |   |       pad-end.js
    |   |   |   |       pad-start.js
    |   |   |   |       push.js
    |   |   |   |       reduce-right.js
    |   |   |   |       reduce.js
    |   |   |   |       repeat.js
    |   |   |   |       replace-all.js
    |   |   |   |       reverse.js
    |   |   |   |       slice.js
    |   |   |   |       some.js
    |   |   |   |       sort.js
    |   |   |   |       splice.js
    |   |   |   |       starts-with.js
    |   |   |   |       to-reversed.js
    |   |   |   |       to-sorted.js
    |   |   |   |       to-spliced.js
    |   |   |   |       to-well-formed.js
    |   |   |   |       trim-end.js
    |   |   |   |       trim-left.js
    |   |   |   |       trim-right.js
    |   |   |   |       trim-start.js
    |   |   |   |       trim.js
    |   |   |   |       un-this.js
    |   |   |   |       unique-by.js
    |   |   |   |       unshift.js
    |   |   |   |       values.js
    |   |   |   |       with.js
    |   |   |   |       
    |   |   |   +---iterator
    |   |   |   |       as-indexed-pairs.js
    |   |   |   |       chunks.js
    |   |   |   |       concat.js
    |   |   |   |       dispose.js
    |   |   |   |       drop.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find.js
    |   |   |   |       flat-map.js
    |   |   |   |       for-each.js
    |   |   |   |       from.js
    |   |   |   |       index.js
    |   |   |   |       indexed.js
    |   |   |   |       map.js
    |   |   |   |       range.js
    |   |   |   |       reduce.js
    |   |   |   |       sliding.js
    |   |   |   |       some.js
    |   |   |   |       take.js
    |   |   |   |       to-array.js
    |   |   |   |       to-async.js
    |   |   |   |       windows.js
    |   |   |   |       zip-keyed.js
    |   |   |   |       zip.js
    |   |   |   |       
    |   |   |   +---json
    |   |   |   |       index.js
    |   |   |   |       is-raw-json.js
    |   |   |   |       parse.js
    |   |   |   |       raw-json.js
    |   |   |   |       stringify.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---map
    |   |   |   |       delete-all.js
    |   |   |   |       emplace.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find-key.js
    |   |   |   |       find.js
    |   |   |   |       from.js
    |   |   |   |       get-or-insert-computed.js
    |   |   |   |       get-or-insert.js
    |   |   |   |       group-by.js
    |   |   |   |       includes.js
    |   |   |   |       index.js
    |   |   |   |       key-by.js
    |   |   |   |       key-of.js
    |   |   |   |       map-keys.js
    |   |   |   |       map-values.js
    |   |   |   |       merge.js
    |   |   |   |       of.js
    |   |   |   |       reduce.js
    |   |   |   |       some.js
    |   |   |   |       update-or-insert.js
    |   |   |   |       update.js
    |   |   |   |       upsert.js
    |   |   |   |       
    |   |   |   +---math
    |   |   |   |       acosh.js
    |   |   |   |       asinh.js
    |   |   |   |       atanh.js
    |   |   |   |       cbrt.js
    |   |   |   |       clamp.js
    |   |   |   |       clz32.js
    |   |   |   |       cosh.js
    |   |   |   |       deg-per-rad.js
    |   |   |   |       degrees.js
    |   |   |   |       expm1.js
    |   |   |   |       f16round.js
    |   |   |   |       fround.js
    |   |   |   |       fscale.js
    |   |   |   |       hypot.js
    |   |   |   |       iaddh.js
    |   |   |   |       imul.js
    |   |   |   |       imulh.js
    |   |   |   |       index.js
    |   |   |   |       isubh.js
    |   |   |   |       log10.js
    |   |   |   |       log1p.js
    |   |   |   |       log2.js
    |   |   |   |       rad-per-deg.js
    |   |   |   |       radians.js
    |   |   |   |       scale.js
    |   |   |   |       seeded-prng.js
    |   |   |   |       sign.js
    |   |   |   |       signbit.js
    |   |   |   |       sinh.js
    |   |   |   |       sum-precise.js
    |   |   |   |       tanh.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       trunc.js
    |   |   |   |       umulh.js
    |   |   |   |       
    |   |   |   +---number
    |   |   |   |   |   clamp.js
    |   |   |   |   |   constructor.js
    |   |   |   |   |   epsilon.js
    |   |   |   |   |   from-string.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-finite.js
    |   |   |   |   |   is-integer.js
    |   |   |   |   |   is-nan.js
    |   |   |   |   |   is-safe-integer.js
    |   |   |   |   |   max-safe-integer.js
    |   |   |   |   |   min-safe-integer.js
    |   |   |   |   |   parse-float.js
    |   |   |   |   |   parse-int.js
    |   |   |   |   |   range.js
    |   |   |   |   |   to-exponential.js
    |   |   |   |   |   to-fixed.js
    |   |   |   |   |   to-precision.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           clamp.js
    |   |   |   |           index.js
    |   |   |   |           to-exponential.js
    |   |   |   |           to-fixed.js
    |   |   |   |           to-precision.js
    |   |   |   |           
    |   |   |   +---object
    |   |   |   |       assign.js
    |   |   |   |       create.js
    |   |   |   |       define-getter.js
    |   |   |   |       define-properties.js
    |   |   |   |       define-property.js
    |   |   |   |       define-setter.js
    |   |   |   |       entries.js
    |   |   |   |       freeze.js
    |   |   |   |       from-entries.js
    |   |   |   |       get-own-property-descriptor.js
    |   |   |   |       get-own-property-descriptors.js
    |   |   |   |       get-own-property-names.js
    |   |   |   |       get-own-property-symbols.js
    |   |   |   |       get-prototype-of.js
    |   |   |   |       group-by.js
    |   |   |   |       has-own.js
    |   |   |   |       index.js
    |   |   |   |       is-extensible.js
    |   |   |   |       is-frozen.js
    |   |   |   |       is-sealed.js
    |   |   |   |       is.js
    |   |   |   |       iterate-entries.js
    |   |   |   |       iterate-keys.js
    |   |   |   |       iterate-values.js
    |   |   |   |       keys.js
    |   |   |   |       lookup-getter.js
    |   |   |   |       lookup-setter.js
    |   |   |   |       prevent-extensions.js
    |   |   |   |       proto.js
    |   |   |   |       seal.js
    |   |   |   |       set-prototype-of.js
    |   |   |   |       to-string.js
    |   |   |   |       values.js
    |   |   |   |       
    |   |   |   +---observable
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---promise
    |   |   |   |       all-settled.js
    |   |   |   |       any.js
    |   |   |   |       finally.js
    |   |   |   |       index.js
    |   |   |   |       try.js
    |   |   |   |       with-resolvers.js
    |   |   |   |       
    |   |   |   +---reflect
    |   |   |   |       apply.js
    |   |   |   |       construct.js
    |   |   |   |       define-metadata.js
    |   |   |   |       define-property.js
    |   |   |   |       delete-metadata.js
    |   |   |   |       delete-property.js
    |   |   |   |       get-metadata-keys.js
    |   |   |   |       get-metadata.js
    |   |   |   |       get-own-metadata-keys.js
    |   |   |   |       get-own-metadata.js
    |   |   |   |       get-own-property-descriptor.js
    |   |   |   |       get-prototype-of.js
    |   |   |   |       get.js
    |   |   |   |       has-metadata.js
    |   |   |   |       has-own-metadata.js
    |   |   |   |       has.js
    |   |   |   |       index.js
    |   |   |   |       is-extensible.js
    |   |   |   |       metadata.js
    |   |   |   |       own-keys.js
    |   |   |   |       prevent-extensions.js
    |   |   |   |       set-prototype-of.js
    |   |   |   |       set.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---regexp
    |   |   |   |       constructor.js
    |   |   |   |       dot-all.js
    |   |   |   |       escape.js
    |   |   |   |       flags.js
    |   |   |   |       index.js
    |   |   |   |       match.js
    |   |   |   |       replace.js
    |   |   |   |       search.js
    |   |   |   |       split.js
    |   |   |   |       sticky.js
    |   |   |   |       test.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---set
    |   |   |   |       add-all.js
    |   |   |   |       delete-all.js
    |   |   |   |       difference.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find.js
    |   |   |   |       from.js
    |   |   |   |       index.js
    |   |   |   |       intersection.js
    |   |   |   |       is-disjoint-from.js
    |   |   |   |       is-subset-of.js
    |   |   |   |       is-superset-of.js
    |   |   |   |       join.js
    |   |   |   |       map.js
    |   |   |   |       of.js
    |   |   |   |       reduce.js
    |   |   |   |       some.js
    |   |   |   |       symmetric-difference.js
    |   |   |   |       union.js
    |   |   |   |       
    |   |   |   +---string
    |   |   |   |   |   anchor.js
    |   |   |   |   |   at.js
    |   |   |   |   |   big.js
    |   |   |   |   |   blink.js
    |   |   |   |   |   bold.js
    |   |   |   |   |   code-point-at.js
    |   |   |   |   |   code-points.js
    |   |   |   |   |   cooked.js
    |   |   |   |   |   dedent.js
    |   |   |   |   |   ends-with.js
    |   |   |   |   |   fixed.js
    |   |   |   |   |   fontcolor.js
    |   |   |   |   |   fontsize.js
    |   |   |   |   |   from-code-point.js
    |   |   |   |   |   includes.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-well-formed.js
    |   |   |   |   |   italics.js
    |   |   |   |   |   iterator.js
    |   |   |   |   |   link.js
    |   |   |   |   |   match-all.js
    |   |   |   |   |   match.js
    |   |   |   |   |   pad-end.js
    |   |   |   |   |   pad-start.js
    |   |   |   |   |   raw.js
    |   |   |   |   |   repeat.js
    |   |   |   |   |   replace-all.js
    |   |   |   |   |   replace.js
    |   |   |   |   |   search.js
    |   |   |   |   |   small.js
    |   |   |   |   |   split.js
    |   |   |   |   |   starts-with.js
    |   |   |   |   |   strike.js
    |   |   |   |   |   sub.js
    |   |   |   |   |   substr.js
    |   |   |   |   |   sup.js
    |   |   |   |   |   to-well-formed.js
    |   |   |   |   |   trim-end.js
    |   |   |   |   |   trim-left.js
    |   |   |   |   |   trim-right.js
    |   |   |   |   |   trim-start.js
    |   |   |   |   |   trim.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           anchor.js
    |   |   |   |           at.js
    |   |   |   |           big.js
    |   |   |   |           blink.js
    |   |   |   |           bold.js
    |   |   |   |           code-point-at.js
    |   |   |   |           code-points.js
    |   |   |   |           ends-with.js
    |   |   |   |           fixed.js
    |   |   |   |           fontcolor.js
    |   |   |   |           fontsize.js
    |   |   |   |           includes.js
    |   |   |   |           index.js
    |   |   |   |           is-well-formed.js
    |   |   |   |           italics.js
    |   |   |   |           iterator.js
    |   |   |   |           link.js
    |   |   |   |           match-all.js
    |   |   |   |           pad-end.js
    |   |   |   |           pad-start.js
    |   |   |   |           repeat.js
    |   |   |   |           replace-all.js
    |   |   |   |           small.js
    |   |   |   |           starts-with.js
    |   |   |   |           strike.js
    |   |   |   |           sub.js
    |   |   |   |           substr.js
    |   |   |   |           sup.js
    |   |   |   |           to-well-formed.js
    |   |   |   |           trim-end.js
    |   |   |   |           trim-left.js
    |   |   |   |           trim-right.js
    |   |   |   |           trim-start.js
    |   |   |   |           trim.js
    |   |   |   |           
    |   |   |   +---symbol
    |   |   |   |       async-dispose.js
    |   |   |   |       async-iterator.js
    |   |   |   |       custom-matcher.js
    |   |   |   |       description.js
    |   |   |   |       dispose.js
    |   |   |   |       for.js
    |   |   |   |       has-instance.js
    |   |   |   |       index.js
    |   |   |   |       is-concat-spreadable.js
    |   |   |   |       is-registered-symbol.js
    |   |   |   |       is-registered.js
    |   |   |   |       is-well-known-symbol.js
    |   |   |   |       is-well-known.js
    |   |   |   |       iterator.js
    |   |   |   |       key-for.js
    |   |   |   |       match-all.js
    |   |   |   |       match.js
    |   |   |   |       matcher.js
    |   |   |   |       metadata-key.js
    |   |   |   |       metadata.js
    |   |   |   |       observable.js
    |   |   |   |       pattern-match.js
    |   |   |   |       replace-all.js
    |   |   |   |       replace.js
    |   |   |   |       search.js
    |   |   |   |       species.js
    |   |   |   |       split.js
    |   |   |   |       to-primitive.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       unscopables.js
    |   |   |   |       
    |   |   |   +---typed-array
    |   |   |   |       at.js
    |   |   |   |       copy-within.js
    |   |   |   |       entries.js
    |   |   |   |       every.js
    |   |   |   |       fill.js
    |   |   |   |       filter-out.js
    |   |   |   |       filter-reject.js
    |   |   |   |       filter.js
    |   |   |   |       find-index.js
    |   |   |   |       find-last-index.js
    |   |   |   |       find-last.js
    |   |   |   |       find.js
    |   |   |   |       float32-array.js
    |   |   |   |       float64-array.js
    |   |   |   |       for-each.js
    |   |   |   |       from-async.js
    |   |   |   |       from-base64.js
    |   |   |   |       from-hex.js
    |   |   |   |       from.js
    |   |   |   |       group-by.js
    |   |   |   |       includes.js
    |   |   |   |       index-of.js
    |   |   |   |       index.js
    |   |   |   |       int16-array.js
    |   |   |   |       int32-array.js
    |   |   |   |       int8-array.js
    |   |   |   |       iterator.js
    |   |   |   |       join.js
    |   |   |   |       keys.js
    |   |   |   |       last-index-of.js
    |   |   |   |       map.js
    |   |   |   |       methods.js
    |   |   |   |       of.js
    |   |   |   |       reduce-right.js
    |   |   |   |       reduce.js
    |   |   |   |       reverse.js
    |   |   |   |       set-from-base64.js
    |   |   |   |       set-from-hex.js
    |   |   |   |       set.js
    |   |   |   |       slice.js
    |   |   |   |       some.js
    |   |   |   |       sort.js
    |   |   |   |       subarray.js
    |   |   |   |       to-base64.js
    |   |   |   |       to-hex.js
    |   |   |   |       to-locale-string.js
    |   |   |   |       to-reversed.js
    |   |   |   |       to-sorted.js
    |   |   |   |       to-spliced.js
    |   |   |   |       to-string.js
    |   |   |   |       uint16-array.js
    |   |   |   |       uint32-array.js
    |   |   |   |       uint8-array.js
    |   |   |   |       uint8-clamped-array.js
    |   |   |   |       unique-by.js
    |   |   |   |       values.js
    |   |   |   |       with.js
    |   |   |   |       
    |   |   |   +---url
    |   |   |   |       can-parse.js
    |   |   |   |       index.js
    |   |   |   |       parse.js
    |   |   |   |       to-json.js
    |   |   |   |       
    |   |   |   +---url-search-params
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---weak-map
    |   |   |   |       delete-all.js
    |   |   |   |       emplace.js
    |   |   |   |       from.js
    |   |   |   |       get-or-insert-computed.js
    |   |   |   |       get-or-insert.js
    |   |   |   |       index.js
    |   |   |   |       of.js
    |   |   |   |       upsert.js
    |   |   |   |       
    |   |   |   \---weak-set
    |   |   |           add-all.js
    |   |   |           delete-all.js
    |   |   |           from.js
    |   |   |           index.js
    |   |   |           of.js
    |   |   |           
    |   |   +---internals
    |   |   |       a-callable.js
    |   |   |       a-constructor.js
    |   |   |       a-data-view.js
    |   |   |       a-map.js
    |   |   |       a-number.js
    |   |   |       a-possible-prototype.js
    |   |   |       a-set.js
    |   |   |       a-string.js
    |   |   |       a-weak-key.js
    |   |   |       a-weak-map.js
    |   |   |       a-weak-set.js
    |   |   |       add-disposable-resource.js
    |   |   |       add-to-unscopables.js
    |   |   |       advance-string-index.js
    |   |   |       an-instance.js
    |   |   |       an-object-or-undefined.js
    |   |   |       an-object.js
    |   |   |       an-uint8-array.js
    |   |   |       array-buffer-basic-detection.js
    |   |   |       array-buffer-byte-length.js
    |   |   |       array-buffer-is-detached.js
    |   |   |       array-buffer-non-extensible.js
    |   |   |       array-buffer-not-detached.js
    |   |   |       array-buffer-transfer.js
    |   |   |       array-buffer-view-core.js
    |   |   |       array-buffer.js
    |   |   |       array-copy-within.js
    |   |   |       array-fill.js
    |   |   |       array-for-each.js
    |   |   |       array-from-async.js
    |   |   |       array-from-constructor-and-list.js
    |   |   |       array-from.js
    |   |   |       array-group-to-map.js
    |   |   |       array-group.js
    |   |   |       array-includes.js
    |   |   |       array-iteration-from-last.js
    |   |   |       array-iteration.js
    |   |   |       array-last-index-of.js
    |   |   |       array-method-has-species-support.js
    |   |   |       array-method-is-strict.js
    |   |   |       array-reduce.js
    |   |   |       array-set-length.js
    |   |   |       array-slice.js
    |   |   |       array-sort.js
    |   |   |       array-species-constructor.js
    |   |   |       array-species-create.js
    |   |   |       array-to-reversed.js
    |   |   |       array-unique-by.js
    |   |   |       array-with.js
    |   |   |       async-from-sync-iterator.js
    |   |   |       async-iterator-close.js
    |   |   |       async-iterator-create-proxy.js
    |   |   |       async-iterator-indexed.js
    |   |   |       async-iterator-iteration.js
    |   |   |       async-iterator-map.js
    |   |   |       async-iterator-prototype.js
    |   |   |       async-iterator-wrap.js
    |   |   |       base64-map.js
    |   |   |       call-with-safe-iteration-closing.js
    |   |   |       caller.js
    |   |   |       check-correctness-of-iteration.js
    |   |   |       classof-raw.js
    |   |   |       classof.js
    |   |   |       collection-from.js
    |   |   |       collection-of.js
    |   |   |       collection-strong.js
    |   |   |       collection-weak.js
    |   |   |       collection.js
    |   |   |       composite-key.js
    |   |   |       copy-constructor-properties.js
    |   |   |       correct-is-regexp-logic.js
    |   |   |       correct-prototype-getter.js
    |   |   |       create-html.js
    |   |   |       create-iter-result-object.js
    |   |   |       create-non-enumerable-property.js
    |   |   |       create-property-descriptor.js
    |   |   |       create-property.js
    |   |   |       date-to-iso-string.js
    |   |   |       date-to-primitive.js
    |   |   |       define-built-in-accessor.js
    |   |   |       define-built-in.js
    |   |   |       define-built-ins.js
    |   |   |       define-global-property.js
    |   |   |       delete-property-or-throw.js
    |   |   |       descriptors.js
    |   |   |       detach-transferable.js
    |   |   |       document-create-element.js
    |   |   |       does-not-exceed-safe-integer.js
    |   |   |       dom-exception-constants.js
    |   |   |       dom-iterables.js
    |   |   |       dom-token-list-prototype.js
    |   |   |       entry-unbind.js
    |   |   |       entry-virtual.js
    |   |   |       enum-bug-keys.js
    |   |   |       environment-ff-version.js
    |   |   |       environment-is-ie-or-edge.js
    |   |   |       environment-is-ios-pebble.js
    |   |   |       environment-is-ios.js
    |   |   |       environment-is-node.js
    |   |   |       environment-is-webos-webkit.js
    |   |   |       environment-user-agent.js
    |   |   |       environment-v8-version.js
    |   |   |       environment-webkit-version.js
    |   |   |       environment.js
    |   |   |       error-stack-clear.js
    |   |   |       error-stack-install.js
    |   |   |       error-stack-installable.js
    |   |   |       error-to-string.js
    |   |   |       export.js
    |   |   |       fails.js
    |   |   |       fix-regexp-well-known-symbol-logic.js
    |   |   |       flatten-into-array.js
    |   |   |       freezing.js
    |   |   |       function-apply.js
    |   |   |       function-bind-context.js
    |   |   |       function-bind-native.js
    |   |   |       function-bind.js
    |   |   |       function-call.js
    |   |   |       function-demethodize.js
    |   |   |       function-name.js
    |   |   |       function-uncurry-this-accessor.js
    |   |   |       function-uncurry-this-clause.js
    |   |   |       function-uncurry-this.js
    |   |   |       get-alphabet-option.js
    |   |   |       get-async-iterator-flattenable.js
    |   |   |       get-async-iterator.js
    |   |   |       get-built-in-node-module.js
    |   |   |       get-built-in-prototype-method.js
    |   |   |       get-built-in.js
    |   |   |       get-iterator-direct.js
    |   |   |       get-iterator-flattenable.js
    |   |   |       get-iterator-method.js
    |   |   |       get-iterator-record.js
    |   |   |       get-iterator.js
    |   |   |       get-json-replacer-function.js
    |   |   |       get-method.js
    |   |   |       get-mode-option.js
    |   |   |       get-set-record.js
    |   |   |       get-substitution.js
    |   |   |       global-this.js
    |   |   |       has-own-property.js
    |   |   |       hidden-keys.js
    |   |   |       host-report-errors.js
    |   |   |       html.js
    |   |   |       ie8-dom-define.js
    |   |   |       ieee754.js
    |   |   |       indexed-object.js
    |   |   |       inherit-if-required.js
    |   |   |       inspect-source.js
    |   |   |       install-error-cause.js
    |   |   |       internal-metadata.js
    |   |   |       internal-state.js
    |   |   |       is-array-iterator-method.js
    |   |   |       is-array.js
    |   |   |       is-big-int-array.js
    |   |   |       is-callable.js
    |   |   |       is-constructor.js
    |   |   |       is-data-descriptor.js
    |   |   |       is-forced.js
    |   |   |       is-integral-number.js
    |   |   |       is-iterable.js
    |   |   |       is-null-or-undefined.js
    |   |   |       is-object.js
    |   |   |       is-possible-prototype.js
    |   |   |       is-pure.js
    |   |   |       is-raw-json.js
    |   |   |       is-regexp.js
    |   |   |       is-symbol.js
    |   |   |       iterate-simple.js
    |   |   |       iterate.js
    |   |   |       iterator-close-all.js
    |   |   |       iterator-close.js
    |   |   |       iterator-create-constructor.js
    |   |   |       iterator-create-proxy.js
    |   |   |       iterator-define.js
    |   |   |       iterator-helper-throws-on-invalid-iterator.js
    |   |   |       iterator-helper-without-closing-on-early-error.js
    |   |   |       iterator-indexed.js
    |   |   |       iterator-window.js
    |   |   |       iterator-zip.js
    |   |   |       iterators-core.js
    |   |   |       iterators.js
    |   |   |       length-of-array-like.js
    |   |   |       make-built-in.js
    |   |   |       map-helpers.js
    |   |   |       map-iterate.js
    |   |   |       map-upsert.js
    |   |   |       math-clamp.js
    |   |   |       math-expm1.js
    |   |   |       math-float-round.js
    |   |   |       math-fround.js
    |   |   |       math-log10.js
    |   |   |       math-log1p.js
    |   |   |       math-log2.js
    |   |   |       math-round-ties-to-even.js
    |   |   |       math-scale.js
    |   |   |       math-sign.js
    |   |   |       math-trunc.js
    |   |   |       microtask.js
    |   |   |       native-raw-json.js
    |   |   |       new-promise-capability.js
    |   |   |       normalize-string-argument.js
    |   |   |       not-a-nan.js
    |   |   |       not-a-regexp.js
    |   |   |       number-is-finite.js
    |   |   |       number-parse-float.js
    |   |   |       number-parse-int.js
    |   |   |       numeric-range-iterator.js
    |   |   |       object-assign.js
    |   |   |       object-create.js
    |   |   |       object-define-properties.js
    |   |   |       object-define-property.js
    |   |   |       object-get-own-property-descriptor.js
    |   |   |       object-get-own-property-names-external.js
    |   |   |       object-get-own-property-names.js
    |   |   |       object-get-own-property-symbols.js
    |   |   |       object-get-prototype-of.js
    |   |   |       object-is-extensible.js
    |   |   |       object-is-prototype-of.js
    |   |   |       object-iterator.js
    |   |   |       object-keys-internal.js
    |   |   |       object-keys.js
    |   |   |       object-property-is-enumerable.js
    |   |   |       object-prototype-accessors-forced.js
    |   |   |       object-set-prototype-of.js
    |   |   |       object-to-array.js
    |   |   |       object-to-string.js
    |   |   |       ordinary-to-primitive.js
    |   |   |       own-keys.js
    |   |   |       parse-json-string.js
    |   |   |       path.js
    |   |   |       perform.js
    |   |   |       promise-constructor-detection.js
    |   |   |       promise-native-constructor.js
    |   |   |       promise-resolve.js
    |   |   |       promise-statics-incorrect-iteration.js
    |   |   |       proxy-accessor.js
    |   |   |       queue.js
    |   |   |       README.md
    |   |   |       reflect-metadata.js
    |   |   |       regexp-exec-abstract.js
    |   |   |       regexp-exec.js
    |   |   |       regexp-flags-detection.js
    |   |   |       regexp-flags.js
    |   |   |       regexp-get-flags.js
    |   |   |       regexp-sticky-helpers.js
    |   |   |       regexp-unsupported-dot-all.js
    |   |   |       regexp-unsupported-ncg.js
    |   |   |       require-object-coercible.js
    |   |   |       safe-get-built-in.js
    |   |   |       same-value-zero.js
    |   |   |       same-value.js
    |   |   |       schedulers-fix.js
    |   |   |       set-clone.js
    |   |   |       set-difference.js
    |   |   |       set-helpers.js
    |   |   |       set-intersection.js
    |   |   |       set-is-disjoint-from.js
    |   |   |       set-is-subset-of.js
    |   |   |       set-is-superset-of.js
    |   |   |       set-iterate.js
    |   |   |       set-method-accept-set-like.js
    |   |   |       set-method-get-keys-before-cloning-detection.js
    |   |   |       set-size.js
    |   |   |       set-species.js
    |   |   |       set-symmetric-difference.js
    |   |   |       set-to-string-tag.js
    |   |   |       set-union.js
    |   |   |       shared-key.js
    |   |   |       shared-store.js
    |   |   |       shared.js
    |   |   |       species-constructor.js
    |   |   |       string-cooked.js
    |   |   |       string-html-forced.js
    |   |   |       string-multibyte.js
    |   |   |       string-pad-webkit-bug.js
    |   |   |       string-pad.js
    |   |   |       string-parse.js
    |   |   |       string-punycode-to-ascii.js
    |   |   |       string-repeat.js
    |   |   |       string-trim-end.js
    |   |   |       string-trim-forced.js
    |   |   |       string-trim-start.js
    |   |   |       string-trim.js
    |   |   |       structured-clone-proper-transfer.js
    |   |   |       symbol-constructor-detection.js
    |   |   |       symbol-define-to-primitive.js
    |   |   |       symbol-is-registered.js
    |   |   |       symbol-is-well-known.js
    |   |   |       symbol-registry-detection.js
    |   |   |       task.js
    |   |   |       this-number-value.js
    |   |   |       to-absolute-index.js
    |   |   |       to-big-int.js
    |   |   |       to-index.js
    |   |   |       to-indexed-object.js
    |   |   |       to-integer-or-infinity.js
    |   |   |       to-length.js
    |   |   |       to-object.js
    |   |   |       to-offset.js
    |   |   |       to-positive-integer.js
    |   |   |       to-primitive.js
    |   |   |       to-property-key.js
    |   |   |       to-set-like.js
    |   |   |       to-string-tag-support.js
    |   |   |       to-string.js
    |   |   |       to-uint8-clamped.js
    |   |   |       try-to-string.js
    |   |   |       typed-array-constructor.js
    |   |   |       typed-array-constructors-require-wrappers.js
    |   |   |       typed-array-from-same-type-and-list.js
    |   |   |       typed-array-from.js
    |   |   |       uid.js
    |   |   |       uint8-from-base64.js
    |   |   |       uint8-from-hex.js
    |   |   |       url-constructor-detection.js
    |   |   |       use-symbol-as-uid.js
    |   |   |       v8-prototype-define-bug.js
    |   |   |       validate-arguments-length.js
    |   |   |       weak-map-basic-detection.js
    |   |   |       weak-map-helpers.js
    |   |   |       weak-set-helpers.js
    |   |   |       well-known-symbol-define.js
    |   |   |       well-known-symbol-wrapped.js
    |   |   |       well-known-symbol.js
    |   |   |       whitespaces.js
    |   |   |       wrap-error-constructor-with-cause.js
    |   |   |       
    |   |   +---modules
    |   |   |       es.aggregate-error.cause.js
    |   |   |       es.aggregate-error.constructor.js
    |   |   |       es.aggregate-error.js
    |   |   |       es.array-buffer.constructor.js
    |   |   |       es.array-buffer.detached.js
    |   |   |       es.array-buffer.is-view.js
    |   |   |       es.array-buffer.slice.js
    |   |   |       es.array-buffer.transfer-to-fixed-length.js
    |   |   |       es.array-buffer.transfer.js
    |   |   |       es.array.at.js
    |   |   |       es.array.concat.js
    |   |   |       es.array.copy-within.js
    |   |   |       es.array.every.js
    |   |   |       es.array.fill.js
    |   |   |       es.array.filter.js
    |   |   |       es.array.find-index.js
    |   |   |       es.array.find-last-index.js
    |   |   |       es.array.find-last.js
    |   |   |       es.array.find.js
    |   |   |       es.array.flat-map.js
    |   |   |       es.array.flat.js
    |   |   |       es.array.for-each.js
    |   |   |       es.array.from-async.js
    |   |   |       es.array.from.js
    |   |   |       es.array.includes.js
    |   |   |       es.array.index-of.js
    |   |   |       es.array.is-array.js
    |   |   |       es.array.iterator.js
    |   |   |       es.array.join.js
    |   |   |       es.array.last-index-of.js
    |   |   |       es.array.map.js
    |   |   |       es.array.of.js
    |   |   |       es.array.push.js
    |   |   |       es.array.reduce-right.js
    |   |   |       es.array.reduce.js
    |   |   |       es.array.reverse.js
    |   |   |       es.array.slice.js
    |   |   |       es.array.some.js
    |   |   |       es.array.sort.js
    |   |   |       es.array.species.js
    |   |   |       es.array.splice.js
    |   |   |       es.array.to-reversed.js
    |   |   |       es.array.to-sorted.js
    |   |   |       es.array.to-spliced.js
    |   |   |       es.array.unscopables.flat-map.js
    |   |   |       es.array.unscopables.flat.js
    |   |   |       es.array.unshift.js
    |   |   |       es.array.with.js
    |   |   |       es.async-disposable-stack.constructor.js
    |   |   |       es.async-iterator.async-dispose.js
    |   |   |       es.data-view.constructor.js
    |   |   |       es.data-view.get-float16.js
    |   |   |       es.data-view.js
    |   |   |       es.data-view.set-float16.js
    |   |   |       es.date.get-year.js
    |   |   |       es.date.now.js
    |   |   |       es.date.set-year.js
    |   |   |       es.date.to-gmt-string.js
    |   |   |       es.date.to-iso-string.js
    |   |   |       es.date.to-json.js
    |   |   |       es.date.to-primitive.js
    |   |   |       es.date.to-string.js
    |   |   |       es.disposable-stack.constructor.js
    |   |   |       es.error.cause.js
    |   |   |       es.error.is-error.js
    |   |   |       es.error.to-string.js
    |   |   |       es.escape.js
    |   |   |       es.function.bind.js
    |   |   |       es.function.has-instance.js
    |   |   |       es.function.name.js
    |   |   |       es.global-this.js
    |   |   |       es.iterator.constructor.js
    |   |   |       es.iterator.dispose.js
    |   |   |       es.iterator.drop.js
    |   |   |       es.iterator.every.js
    |   |   |       es.iterator.filter.js
    |   |   |       es.iterator.find.js
    |   |   |       es.iterator.flat-map.js
    |   |   |       es.iterator.for-each.js
    |   |   |       es.iterator.from.js
    |   |   |       es.iterator.map.js
    |   |   |       es.iterator.reduce.js
    |   |   |       es.iterator.some.js
    |   |   |       es.iterator.take.js
    |   |   |       es.iterator.to-array.js
    |   |   |       es.json.stringify.js
    |   |   |       es.json.to-string-tag.js
    |   |   |       es.map.constructor.js
    |   |   |       es.map.group-by.js
    |   |   |       es.map.js
    |   |   |       es.math.acosh.js
    |   |   |       es.math.asinh.js
    |   |   |       es.math.atanh.js
    |   |   |       es.math.cbrt.js
    |   |   |       es.math.clz32.js
    |   |   |       es.math.cosh.js
    |   |   |       es.math.expm1.js
    |   |   |       es.math.f16round.js
    |   |   |       es.math.fround.js
    |   |   |       es.math.hypot.js
    |   |   |       es.math.imul.js
    |   |   |       es.math.log10.js
    |   |   |       es.math.log1p.js
    |   |   |       es.math.log2.js
    |   |   |       es.math.sign.js
    |   |   |       es.math.sinh.js
    |   |   |       es.math.sum-precise.js
    |   |   |       es.math.tanh.js
    |   |   |       es.math.to-string-tag.js
    |   |   |       es.math.trunc.js
    |   |   |       es.number.constructor.js
    |   |   |       es.number.epsilon.js
    |   |   |       es.number.is-finite.js
    |   |   |       es.number.is-integer.js
    |   |   |       es.number.is-nan.js
    |   |   |       es.number.is-safe-integer.js
    |   |   |       es.number.max-safe-integer.js
    |   |   |       es.number.min-safe-integer.js
    |   |   |       es.number.parse-float.js
    |   |   |       es.number.parse-int.js
    |   |   |       es.number.to-exponential.js
    |   |   |       es.number.to-fixed.js
    |   |   |       es.number.to-precision.js
    |   |   |       es.object.assign.js
    |   |   |       es.object.create.js
    |   |   |       es.object.define-getter.js
    |   |   |       es.object.define-properties.js
    |   |   |       es.object.define-property.js
    |   |   |       es.object.define-setter.js
    |   |   |       es.object.entries.js
    |   |   |       es.object.freeze.js
    |   |   |       es.object.from-entries.js
    |   |   |       es.object.get-own-property-descriptor.js
    |   |   |       es.object.get-own-property-descriptors.js
    |   |   |       es.object.get-own-property-names.js
    |   |   |       es.object.get-own-property-symbols.js
    |   |   |       es.object.get-prototype-of.js
    |   |   |       es.object.group-by.js
    |   |   |       es.object.has-own.js
    |   |   |       es.object.is-extensible.js
    |   |   |       es.object.is-frozen.js
    |   |   |       es.object.is-sealed.js
    |   |   |       es.object.is.js
    |   |   |       es.object.keys.js
    |   |   |       es.object.lookup-getter.js
    |   |   |       es.object.lookup-setter.js
    |   |   |       es.object.prevent-extensions.js
    |   |   |       es.object.proto.js
    |   |   |       es.object.seal.js
    |   |   |       es.object.set-prototype-of.js
    |   |   |       es.object.to-string.js
    |   |   |       es.object.values.js
    |   |   |       es.parse-float.js
    |   |   |       es.parse-int.js
    |   |   |       es.promise.all-settled.js
    |   |   |       es.promise.all.js
    |   |   |       es.promise.any.js
    |   |   |       es.promise.catch.js
    |   |   |       es.promise.constructor.js
    |   |   |       es.promise.finally.js
    |   |   |       es.promise.js
    |   |   |       es.promise.race.js
    |   |   |       es.promise.reject.js
    |   |   |       es.promise.resolve.js
    |   |   |       es.promise.try.js
    |   |   |       es.promise.with-resolvers.js
    |   |   |       es.reflect.apply.js
    |   |   |       es.reflect.construct.js
    |   |   |       es.reflect.define-property.js
    |   |   |       es.reflect.delete-property.js
    |   |   |       es.reflect.get-own-property-descriptor.js
    |   |   |       es.reflect.get-prototype-of.js
    |   |   |       es.reflect.get.js
    |   |   |       es.reflect.has.js
    |   |   |       es.reflect.is-extensible.js
    |   |   |       es.reflect.own-keys.js
    |   |   |       es.reflect.prevent-extensions.js
    |   |   |       es.reflect.set-prototype-of.js
    |   |   |       es.reflect.set.js
    |   |   |       es.reflect.to-string-tag.js
    |   |   |       es.regexp.constructor.js
    |   |   |       es.regexp.dot-all.js
    |   |   |       es.regexp.escape.js
    |   |   |       es.regexp.exec.js
    |   |   |       es.regexp.flags.js
    |   |   |       es.regexp.sticky.js
    |   |   |       es.regexp.test.js
    |   |   |       es.regexp.to-string.js
    |   |   |       es.set.constructor.js
    |   |   |       es.set.difference.v2.js
    |   |   |       es.set.intersection.v2.js
    |   |   |       es.set.is-disjoint-from.v2.js
    |   |   |       es.set.is-subset-of.v2.js
    |   |   |       es.set.is-superset-of.v2.js
    |   |   |       es.set.js
    |   |   |       es.set.symmetric-difference.v2.js
    |   |   |       es.set.union.v2.js
    |   |   |       es.string.anchor.js
    |   |   |       es.string.at-alternative.js
    |   |   |       es.string.big.js
    |   |   |       es.string.blink.js
    |   |   |       es.string.bold.js
    |   |   |       es.string.code-point-at.js
    |   |   |       es.string.ends-with.js
    |   |   |       es.string.fixed.js
    |   |   |       es.string.fontcolor.js
    |   |   |       es.string.fontsize.js
    |   |   |       es.string.from-code-point.js
    |   |   |       es.string.includes.js
    |   |   |       es.string.is-well-formed.js
    |   |   |       es.string.italics.js
    |   |   |       es.string.iterator.js
    |   |   |       es.string.link.js
    |   |   |       es.string.match-all.js
    |   |   |       es.string.match.js
    |   |   |       es.string.pad-end.js
    |   |   |       es.string.pad-start.js
    |   |   |       es.string.raw.js
    |   |   |       es.string.repeat.js
    |   |   |       es.string.replace-all.js
    |   |   |       es.string.replace.js
    |   |   |       es.string.search.js
    |   |   |       es.string.small.js
    |   |   |       es.string.split.js
    |   |   |       es.string.starts-with.js
    |   |   |       es.string.strike.js
    |   |   |       es.string.sub.js
    |   |   |       es.string.substr.js
    |   |   |       es.string.sup.js
    |   |   |       es.string.to-well-formed.js
    |   |   |       es.string.trim-end.js
    |   |   |       es.string.trim-left.js
    |   |   |       es.string.trim-right.js
    |   |   |       es.string.trim-start.js
    |   |   |       es.string.trim.js
    |   |   |       es.suppressed-error.constructor.js
    |   |   |       es.symbol.async-dispose.js
    |   |   |       es.symbol.async-iterator.js
    |   |   |       es.symbol.constructor.js
    |   |   |       es.symbol.description.js
    |   |   |       es.symbol.dispose.js
    |   |   |       es.symbol.for.js
    |   |   |       es.symbol.has-instance.js
    |   |   |       es.symbol.is-concat-spreadable.js
    |   |   |       es.symbol.iterator.js
    |   |   |       es.symbol.js
    |   |   |       es.symbol.key-for.js
    |   |   |       es.symbol.match-all.js
    |   |   |       es.symbol.match.js
    |   |   |       es.symbol.replace.js
    |   |   |       es.symbol.search.js
    |   |   |       es.symbol.species.js
    |   |   |       es.symbol.split.js
    |   |   |       es.symbol.to-primitive.js
    |   |   |       es.symbol.to-string-tag.js
    |   |   |       es.symbol.unscopables.js
    |   |   |       es.typed-array.at.js
    |   |   |       es.typed-array.copy-within.js
    |   |   |       es.typed-array.every.js
    |   |   |       es.typed-array.fill.js
    |   |   |       es.typed-array.filter.js
    |   |   |       es.typed-array.find-index.js
    |   |   |       es.typed-array.find-last-index.js
    |   |   |       es.typed-array.find-last.js
    |   |   |       es.typed-array.find.js
    |   |   |       es.typed-array.float32-array.js
    |   |   |       es.typed-array.float64-array.js
    |   |   |       es.typed-array.for-each.js
    |   |   |       es.typed-array.from.js
    |   |   |       es.typed-array.includes.js
    |   |   |       es.typed-array.index-of.js
    |   |   |       es.typed-array.int16-array.js
    |   |   |       es.typed-array.int32-array.js
    |   |   |       es.typed-array.int8-array.js
    |   |   |       es.typed-array.iterator.js
    |   |   |       es.typed-array.join.js
    |   |   |       es.typed-array.last-index-of.js
    |   |   |       es.typed-array.map.js
    |   |   |       es.typed-array.of.js
    |   |   |       es.typed-array.reduce-right.js
    |   |   |       es.typed-array.reduce.js
    |   |   |       es.typed-array.reverse.js
    |   |   |       es.typed-array.set.js
    |   |   |       es.typed-array.slice.js
    |   |   |       es.typed-array.some.js
    |   |   |       es.typed-array.sort.js
    |   |   |       es.typed-array.subarray.js
    |   |   |       es.typed-array.to-locale-string.js
    |   |   |       es.typed-array.to-reversed.js
    |   |   |       es.typed-array.to-sorted.js
    |   |   |       es.typed-array.to-string.js
    |   |   |       es.typed-array.uint16-array.js
    |   |   |       es.typed-array.uint32-array.js
    |   |   |       es.typed-array.uint8-array.js
    |   |   |       es.typed-array.uint8-clamped-array.js
    |   |   |       es.typed-array.with.js
    |   |   |       es.uint8-array.from-base64.js
    |   |   |       es.uint8-array.from-hex.js
    |   |   |       es.uint8-array.set-from-base64.js
    |   |   |       es.uint8-array.set-from-hex.js
    |   |   |       es.uint8-array.to-base64.js
    |   |   |       es.uint8-array.to-hex.js
    |   |   |       es.unescape.js
    |   |   |       es.weak-map.constructor.js
    |   |   |       es.weak-map.js
    |   |   |       es.weak-set.constructor.js
    |   |   |       es.weak-set.js
    |   |   |       esnext.aggregate-error.js
    |   |   |       esnext.array-buffer.detached.js
    |   |   |       esnext.array-buffer.transfer-to-fixed-length.js
    |   |   |       esnext.array-buffer.transfer.js
    |   |   |       esnext.array.at.js
    |   |   |       esnext.array.filter-out.js
    |   |   |       esnext.array.filter-reject.js
    |   |   |       esnext.array.find-last-index.js
    |   |   |       esnext.array.find-last.js
    |   |   |       esnext.array.from-async.js
    |   |   |       esnext.array.group-by-to-map.js
    |   |   |       esnext.array.group-by.js
    |   |   |       esnext.array.group-to-map.js
    |   |   |       esnext.array.group.js
    |   |   |       esnext.array.is-template-object.js
    |   |   |       esnext.array.last-index.js
    |   |   |       esnext.array.last-item.js
    |   |   |       esnext.array.to-reversed.js
    |   |   |       esnext.array.to-sorted.js
    |   |   |       esnext.array.to-spliced.js
    |   |   |       esnext.array.unique-by.js
    |   |   |       esnext.array.with.js
    |   |   |       esnext.async-disposable-stack.constructor.js
    |   |   |       esnext.async-iterator.as-indexed-pairs.js
    |   |   |       esnext.async-iterator.async-dispose.js
    |   |   |       esnext.async-iterator.constructor.js
    |   |   |       esnext.async-iterator.drop.js
    |   |   |       esnext.async-iterator.every.js
    |   |   |       esnext.async-iterator.filter.js
    |   |   |       esnext.async-iterator.find.js
    |   |   |       esnext.async-iterator.flat-map.js
    |   |   |       esnext.async-iterator.for-each.js
    |   |   |       esnext.async-iterator.from.js
    |   |   |       esnext.async-iterator.indexed.js
    |   |   |       esnext.async-iterator.map.js
    |   |   |       esnext.async-iterator.reduce.js
    |   |   |       esnext.async-iterator.some.js
    |   |   |       esnext.async-iterator.take.js
    |   |   |       esnext.async-iterator.to-array.js
    |   |   |       esnext.bigint.range.js
    |   |   |       esnext.composite-key.js
    |   |   |       esnext.composite-symbol.js
    |   |   |       esnext.data-view.get-float16.js
    |   |   |       esnext.data-view.get-uint8-clamped.js
    |   |   |       esnext.data-view.set-float16.js
    |   |   |       esnext.data-view.set-uint8-clamped.js
    |   |   |       esnext.disposable-stack.constructor.js
    |   |   |       esnext.error.is-error.js
    |   |   |       esnext.function.demethodize.js
    |   |   |       esnext.function.is-callable.js
    |   |   |       esnext.function.is-constructor.js
    |   |   |       esnext.function.metadata.js
    |   |   |       esnext.function.un-this.js
    |   |   |       esnext.global-this.js
    |   |   |       esnext.iterator.as-indexed-pairs.js
    |   |   |       esnext.iterator.chunks.js
    |   |   |       esnext.iterator.concat.js
    |   |   |       esnext.iterator.constructor.js
    |   |   |       esnext.iterator.dispose.js
    |   |   |       esnext.iterator.drop.js
    |   |   |       esnext.iterator.every.js
    |   |   |       esnext.iterator.filter.js
    |   |   |       esnext.iterator.find.js
    |   |   |       esnext.iterator.flat-map.js
    |   |   |       esnext.iterator.for-each.js
    |   |   |       esnext.iterator.from.js
    |   |   |       esnext.iterator.indexed.js
    |   |   |       esnext.iterator.map.js
    |   |   |       esnext.iterator.range.js
    |   |   |       esnext.iterator.reduce.js
    |   |   |       esnext.iterator.sliding.js
    |   |   |       esnext.iterator.some.js
    |   |   |       esnext.iterator.take.js
    |   |   |       esnext.iterator.to-array.js
    |   |   |       esnext.iterator.to-async.js
    |   |   |       esnext.iterator.windows.js
    |   |   |       esnext.iterator.zip-keyed.js
    |   |   |       esnext.iterator.zip.js
    |   |   |       esnext.json.is-raw-json.js
    |   |   |       esnext.json.parse.js
    |   |   |       esnext.json.raw-json.js
    |   |   |       esnext.map.delete-all.js
    |   |   |       esnext.map.emplace.js
    |   |   |       esnext.map.every.js
    |   |   |       esnext.map.filter.js
    |   |   |       esnext.map.find-key.js
    |   |   |       esnext.map.find.js
    |   |   |       esnext.map.from.js
    |   |   |       esnext.map.get-or-insert-computed.js
    |   |   |       esnext.map.get-or-insert.js
    |   |   |       esnext.map.group-by.js
    |   |   |       esnext.map.includes.js
    |   |   |       esnext.map.key-by.js
    |   |   |       esnext.map.key-of.js
    |   |   |       esnext.map.map-keys.js
    |   |   |       esnext.map.map-values.js
    |   |   |       esnext.map.merge.js
    |   |   |       esnext.map.of.js
    |   |   |       esnext.map.reduce.js
    |   |   |       esnext.map.some.js
    |   |   |       esnext.map.update-or-insert.js
    |   |   |       esnext.map.update.js
    |   |   |       esnext.map.upsert.js
    |   |   |       esnext.math.clamp.js
    |   |   |       esnext.math.deg-per-rad.js
    |   |   |       esnext.math.degrees.js
    |   |   |       esnext.math.f16round.js
    |   |   |       esnext.math.fscale.js
    |   |   |       esnext.math.iaddh.js
    |   |   |       esnext.math.imulh.js
    |   |   |       esnext.math.isubh.js
    |   |   |       esnext.math.rad-per-deg.js
    |   |   |       esnext.math.radians.js
    |   |   |       esnext.math.scale.js
    |   |   |       esnext.math.seeded-prng.js
    |   |   |       esnext.math.signbit.js
    |   |   |       esnext.math.sum-precise.js
    |   |   |       esnext.math.umulh.js
    |   |   |       esnext.number.clamp.js
    |   |   |       esnext.number.from-string.js
    |   |   |       esnext.number.range.js
    |   |   |       esnext.object.group-by.js
    |   |   |       esnext.object.has-own.js
    |   |   |       esnext.object.iterate-entries.js
    |   |   |       esnext.object.iterate-keys.js
    |   |   |       esnext.object.iterate-values.js
    |   |   |       esnext.observable.constructor.js
    |   |   |       esnext.observable.from.js
    |   |   |       esnext.observable.js
    |   |   |       esnext.observable.of.js
    |   |   |       esnext.promise.all-settled.js
    |   |   |       esnext.promise.any.js
    |   |   |       esnext.promise.try.js
    |   |   |       esnext.promise.with-resolvers.js
    |   |   |       esnext.reflect.define-metadata.js
    |   |   |       esnext.reflect.delete-metadata.js
    |   |   |       esnext.reflect.get-metadata-keys.js
    |   |   |       esnext.reflect.get-metadata.js
    |   |   |       esnext.reflect.get-own-metadata-keys.js
    |   |   |       esnext.reflect.get-own-metadata.js
    |   |   |       esnext.reflect.has-metadata.js
    |   |   |       esnext.reflect.has-own-metadata.js
    |   |   |       esnext.reflect.metadata.js
    |   |   |       esnext.regexp.escape.js
    |   |   |       esnext.set.add-all.js
    |   |   |       esnext.set.delete-all.js
    |   |   |       esnext.set.difference.js
    |   |   |       esnext.set.difference.v2.js
    |   |   |       esnext.set.every.js
    |   |   |       esnext.set.filter.js
    |   |   |       esnext.set.find.js
    |   |   |       esnext.set.from.js
    |   |   |       esnext.set.intersection.js
    |   |   |       esnext.set.intersection.v2.js
    |   |   |       esnext.set.is-disjoint-from.js
    |   |   |       esnext.set.is-disjoint-from.v2.js
    |   |   |       esnext.set.is-subset-of.js
    |   |   |       esnext.set.is-subset-of.v2.js
    |   |   |       esnext.set.is-superset-of.js
    |   |   |       esnext.set.is-superset-of.v2.js
    |   |   |       esnext.set.join.js
    |   |   |       esnext.set.map.js
    |   |   |       esnext.set.of.js
    |   |   |       esnext.set.reduce.js
    |   |   |       esnext.set.some.js
    |   |   |       esnext.set.symmetric-difference.js
    |   |   |       esnext.set.symmetric-difference.v2.js
    |   |   |       esnext.set.union.js
    |   |   |       esnext.set.union.v2.js
    |   |   |       esnext.string.at-alternative.js
    |   |   |       esnext.string.at.js
    |   |   |       esnext.string.code-points.js
    |   |   |       esnext.string.cooked.js
    |   |   |       esnext.string.dedent.js
    |   |   |       esnext.string.is-well-formed.js
    |   |   |       esnext.string.match-all.js
    |   |   |       esnext.string.replace-all.js
    |   |   |       esnext.string.to-well-formed.js
    |   |   |       esnext.suppressed-error.constructor.js
    |   |   |       esnext.symbol.async-dispose.js
    |   |   |       esnext.symbol.custom-matcher.js
    |   |   |       esnext.symbol.dispose.js
    |   |   |       esnext.symbol.is-registered-symbol.js
    |   |   |       esnext.symbol.is-registered.js
    |   |   |       esnext.symbol.is-well-known-symbol.js
    |   |   |       esnext.symbol.is-well-known.js
    |   |   |       esnext.symbol.matcher.js
    |   |   |       esnext.symbol.metadata-key.js
    |   |   |       esnext.symbol.metadata.js
    |   |   |       esnext.symbol.observable.js
    |   |   |       esnext.symbol.pattern-match.js
    |   |   |       esnext.symbol.replace-all.js
    |   |   |       esnext.typed-array.at.js
    |   |   |       esnext.typed-array.filter-out.js
    |   |   |       esnext.typed-array.filter-reject.js
    |   |   |       esnext.typed-array.find-last-index.js
    |   |   |       esnext.typed-array.find-last.js
    |   |   |       esnext.typed-array.from-async.js
    |   |   |       esnext.typed-array.group-by.js
    |   |   |       esnext.typed-array.to-reversed.js
    |   |   |       esnext.typed-array.to-sorted.js
    |   |   |       esnext.typed-array.to-spliced.js
    |   |   |       esnext.typed-array.unique-by.js
    |   |   |       esnext.typed-array.with.js
    |   |   |       esnext.uint8-array.from-base64.js
    |   |   |       esnext.uint8-array.from-hex.js
    |   |   |       esnext.uint8-array.set-from-base64.js
    |   |   |       esnext.uint8-array.set-from-hex.js
    |   |   |       esnext.uint8-array.to-base64.js
    |   |   |       esnext.uint8-array.to-hex.js
    |   |   |       esnext.weak-map.delete-all.js
    |   |   |       esnext.weak-map.emplace.js
    |   |   |       esnext.weak-map.from.js
    |   |   |       esnext.weak-map.get-or-insert-computed.js
    |   |   |       esnext.weak-map.get-or-insert.js
    |   |   |       esnext.weak-map.of.js
    |   |   |       esnext.weak-map.upsert.js
    |   |   |       esnext.weak-set.add-all.js
    |   |   |       esnext.weak-set.delete-all.js
    |   |   |       esnext.weak-set.from.js
    |   |   |       esnext.weak-set.of.js
    |   |   |       README.md
    |   |   |       web.atob.js
    |   |   |       web.btoa.js
    |   |   |       web.clear-immediate.js
    |   |   |       web.dom-collections.for-each.js
    |   |   |       web.dom-collections.iterator.js
    |   |   |       web.dom-exception.constructor.js
    |   |   |       web.dom-exception.stack.js
    |   |   |       web.dom-exception.to-string-tag.js
    |   |   |       web.immediate.js
    |   |   |       web.queue-microtask.js
    |   |   |       web.self.js
    |   |   |       web.set-immediate.js
    |   |   |       web.set-interval.js
    |   |   |       web.set-timeout.js
    |   |   |       web.structured-clone.js
    |   |   |       web.timers.js
    |   |   |       web.url-search-params.constructor.js
    |   |   |       web.url-search-params.delete.js
    |   |   |       web.url-search-params.has.js
    |   |   |       web.url-search-params.js
    |   |   |       web.url-search-params.size.js
    |   |   |       web.url.can-parse.js
    |   |   |       web.url.constructor.js
    |   |   |       web.url.js
    |   |   |       web.url.parse.js
    |   |   |       web.url.to-json.js
    |   |   |       
    |   |   +---proposals
    |   |   |       accessible-object-hasownproperty.js
    |   |   |       array-buffer-base64.js
    |   |   |       array-buffer-transfer.js
    |   |   |       array-filtering-stage-1.js
    |   |   |       array-filtering.js
    |   |   |       array-find-from-last.js
    |   |   |       array-flat-map.js
    |   |   |       array-from-async-stage-2.js
    |   |   |       array-from-async.js
    |   |   |       array-grouping-stage-3-2.js
    |   |   |       array-grouping-stage-3.js
    |   |   |       array-grouping-v2.js
    |   |   |       array-grouping.js
    |   |   |       array-includes.js
    |   |   |       array-is-template-object.js
    |   |   |       array-last.js
    |   |   |       array-unique.js
    |   |   |       async-explicit-resource-management.js
    |   |   |       async-iteration.js
    |   |   |       async-iterator-helpers.js
    |   |   |       change-array-by-copy-stage-4.js
    |   |   |       change-array-by-copy.js
    |   |   |       collection-methods.js
    |   |   |       collection-of-from.js
    |   |   |       data-view-get-set-uint8-clamped.js
    |   |   |       decorator-metadata-v2.js
    |   |   |       decorator-metadata.js
    |   |   |       decorators.js
    |   |   |       efficient-64-bit-arithmetic.js
    |   |   |       error-cause.js
    |   |   |       explicit-resource-management.js
    |   |   |       extractors.js
    |   |   |       float16.js
    |   |   |       function-demethodize.js
    |   |   |       function-is-callable-is-constructor.js
    |   |   |       function-un-this.js
    |   |   |       global-this.js
    |   |   |       index.js
    |   |   |       is-error.js
    |   |   |       iterator-chunking-v2.js
    |   |   |       iterator-chunking.js
    |   |   |       iterator-helpers-stage-3-2.js
    |   |   |       iterator-helpers-stage-3.js
    |   |   |       iterator-helpers.js
    |   |   |       iterator-range.js
    |   |   |       iterator-sequencing.js
    |   |   |       joint-iteration.js
    |   |   |       json-parse-with-source.js
    |   |   |       keys-composition.js
    |   |   |       map-update-or-insert.js
    |   |   |       map-upsert-stage-2.js
    |   |   |       map-upsert-v4.js
    |   |   |       map-upsert.js
    |   |   |       math-clamp-v2.js
    |   |   |       math-clamp.js
    |   |   |       math-extensions.js
    |   |   |       math-signbit.js
    |   |   |       math-sum.js
    |   |   |       number-from-string.js
    |   |   |       number-range.js
    |   |   |       object-from-entries.js
    |   |   |       object-getownpropertydescriptors.js
    |   |   |       object-iteration.js
    |   |   |       object-values-entries.js
    |   |   |       observable.js
    |   |   |       pattern-matching-v2.js
    |   |   |       pattern-matching.js
    |   |   |       promise-all-settled.js
    |   |   |       promise-any.js
    |   |   |       promise-finally.js
    |   |   |       promise-try.js
    |   |   |       promise-with-resolvers.js
    |   |   |       reflect-metadata.js
    |   |   |       regexp-dotall-flag.js
    |   |   |       regexp-escaping.js
    |   |   |       regexp-named-groups.js
    |   |   |       relative-indexing-method.js
    |   |   |       seeded-random.js
    |   |   |       set-methods-v2.js
    |   |   |       set-methods.js
    |   |   |       string-at.js
    |   |   |       string-code-points.js
    |   |   |       string-cooked.js
    |   |   |       string-dedent.js
    |   |   |       string-left-right-trim.js
    |   |   |       string-match-all.js
    |   |   |       string-padding.js
    |   |   |       string-replace-all-stage-4.js
    |   |   |       string-replace-all.js
    |   |   |       symbol-description.js
    |   |   |       symbol-predicates-v2.js
    |   |   |       symbol-predicates.js
    |   |   |       url.js
    |   |   |       using-statement.js
    |   |   |       well-formed-stringify.js
    |   |   |       well-formed-unicode-strings.js
    |   |   |       
    |   |   +---stable
    |   |   |   |   aggregate-error.js
    |   |   |   |   atob.js
    |   |   |   |   btoa.js
    |   |   |   |   clear-immediate.js
    |   |   |   |   escape.js
    |   |   |   |   get-iterator-method.js
    |   |   |   |   get-iterator.js
    |   |   |   |   global-this.js
    |   |   |   |   index.js
    |   |   |   |   is-iterable.js
    |   |   |   |   parse-float.js
    |   |   |   |   parse-int.js
    |   |   |   |   queue-microtask.js
    |   |   |   |   README.md
    |   |   |   |   self.js
    |   |   |   |   set-immediate.js
    |   |   |   |   set-interval.js
    |   |   |   |   set-timeout.js
    |   |   |   |   structured-clone.js
    |   |   |   |   suppressed-error.js
    |   |   |   |   unescape.js
    |   |   |   |   
    |   |   |   +---array
    |   |   |   |   |   at.js
    |   |   |   |   |   concat.js
    |   |   |   |   |   copy-within.js
    |   |   |   |   |   entries.js
    |   |   |   |   |   every.js
    |   |   |   |   |   fill.js
    |   |   |   |   |   filter.js
    |   |   |   |   |   find-index.js
    |   |   |   |   |   find-last-index.js
    |   |   |   |   |   find-last.js
    |   |   |   |   |   find.js
    |   |   |   |   |   flat-map.js
    |   |   |   |   |   flat.js
    |   |   |   |   |   for-each.js
    |   |   |   |   |   from-async.js
    |   |   |   |   |   from.js
    |   |   |   |   |   includes.js
    |   |   |   |   |   index-of.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-array.js
    |   |   |   |   |   iterator.js
    |   |   |   |   |   join.js
    |   |   |   |   |   keys.js
    |   |   |   |   |   last-index-of.js
    |   |   |   |   |   map.js
    |   |   |   |   |   of.js
    |   |   |   |   |   push.js
    |   |   |   |   |   reduce-right.js
    |   |   |   |   |   reduce.js
    |   |   |   |   |   reverse.js
    |   |   |   |   |   slice.js
    |   |   |   |   |   some.js
    |   |   |   |   |   sort.js
    |   |   |   |   |   splice.js
    |   |   |   |   |   to-reversed.js
    |   |   |   |   |   to-sorted.js
    |   |   |   |   |   to-spliced.js
    |   |   |   |   |   unshift.js
    |   |   |   |   |   values.js
    |   |   |   |   |   with.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           at.js
    |   |   |   |           concat.js
    |   |   |   |           copy-within.js
    |   |   |   |           entries.js
    |   |   |   |           every.js
    |   |   |   |           fill.js
    |   |   |   |           filter.js
    |   |   |   |           find-index.js
    |   |   |   |           find-last-index.js
    |   |   |   |           find-last.js
    |   |   |   |           find.js
    |   |   |   |           flat-map.js
    |   |   |   |           flat.js
    |   |   |   |           for-each.js
    |   |   |   |           includes.js
    |   |   |   |           index-of.js
    |   |   |   |           index.js
    |   |   |   |           iterator.js
    |   |   |   |           join.js
    |   |   |   |           keys.js
    |   |   |   |           last-index-of.js
    |   |   |   |           map.js
    |   |   |   |           push.js
    |   |   |   |           reduce-right.js
    |   |   |   |           reduce.js
    |   |   |   |           reverse.js
    |   |   |   |           slice.js
    |   |   |   |           some.js
    |   |   |   |           sort.js
    |   |   |   |           splice.js
    |   |   |   |           to-reversed.js
    |   |   |   |           to-sorted.js
    |   |   |   |           to-spliced.js
    |   |   |   |           unshift.js
    |   |   |   |           values.js
    |   |   |   |           with.js
    |   |   |   |           
    |   |   |   +---array-buffer
    |   |   |   |       constructor.js
    |   |   |   |       detached.js
    |   |   |   |       index.js
    |   |   |   |       is-view.js
    |   |   |   |       slice.js
    |   |   |   |       transfer-to-fixed-length.js
    |   |   |   |       transfer.js
    |   |   |   |       
    |   |   |   +---async-disposable-stack
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---async-iterator
    |   |   |   |       async-dispose.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---data-view
    |   |   |   |       get-float16.js
    |   |   |   |       index.js
    |   |   |   |       set-float16.js
    |   |   |   |       
    |   |   |   +---date
    |   |   |   |       get-year.js
    |   |   |   |       index.js
    |   |   |   |       now.js
    |   |   |   |       set-year.js
    |   |   |   |       to-gmt-string.js
    |   |   |   |       to-iso-string.js
    |   |   |   |       to-json.js
    |   |   |   |       to-primitive.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---disposable-stack
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---dom-collections
    |   |   |   |       for-each.js
    |   |   |   |       index.js
    |   |   |   |       iterator.js
    |   |   |   |       
    |   |   |   +---dom-exception
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---error
    |   |   |   |       constructor.js
    |   |   |   |       index.js
    |   |   |   |       is-error.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---function
    |   |   |   |   |   bind.js
    |   |   |   |   |   has-instance.js
    |   |   |   |   |   index.js
    |   |   |   |   |   name.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           bind.js
    |   |   |   |           index.js
    |   |   |   |           
    |   |   |   +---instance
    |   |   |   |       at.js
    |   |   |   |       bind.js
    |   |   |   |       code-point-at.js
    |   |   |   |       concat.js
    |   |   |   |       copy-within.js
    |   |   |   |       ends-with.js
    |   |   |   |       entries.js
    |   |   |   |       every.js
    |   |   |   |       fill.js
    |   |   |   |       filter.js
    |   |   |   |       find-index.js
    |   |   |   |       find-last-index.js
    |   |   |   |       find-last.js
    |   |   |   |       find.js
    |   |   |   |       flags.js
    |   |   |   |       flat-map.js
    |   |   |   |       flat.js
    |   |   |   |       for-each.js
    |   |   |   |       includes.js
    |   |   |   |       index-of.js
    |   |   |   |       is-well-formed.js
    |   |   |   |       keys.js
    |   |   |   |       last-index-of.js
    |   |   |   |       map.js
    |   |   |   |       match-all.js
    |   |   |   |       pad-end.js
    |   |   |   |       pad-start.js
    |   |   |   |       push.js
    |   |   |   |       reduce-right.js
    |   |   |   |       reduce.js
    |   |   |   |       repeat.js
    |   |   |   |       replace-all.js
    |   |   |   |       reverse.js
    |   |   |   |       slice.js
    |   |   |   |       some.js
    |   |   |   |       sort.js
    |   |   |   |       splice.js
    |   |   |   |       starts-with.js
    |   |   |   |       to-reversed.js
    |   |   |   |       to-sorted.js
    |   |   |   |       to-spliced.js
    |   |   |   |       to-well-formed.js
    |   |   |   |       trim-end.js
    |   |   |   |       trim-left.js
    |   |   |   |       trim-right.js
    |   |   |   |       trim-start.js
    |   |   |   |       trim.js
    |   |   |   |       unshift.js
    |   |   |   |       values.js
    |   |   |   |       with.js
    |   |   |   |       
    |   |   |   +---iterator
    |   |   |   |       dispose.js
    |   |   |   |       drop.js
    |   |   |   |       every.js
    |   |   |   |       filter.js
    |   |   |   |       find.js
    |   |   |   |       flat-map.js
    |   |   |   |       for-each.js
    |   |   |   |       from.js
    |   |   |   |       index.js
    |   |   |   |       map.js
    |   |   |   |       reduce.js
    |   |   |   |       some.js
    |   |   |   |       take.js
    |   |   |   |       to-array.js
    |   |   |   |       
    |   |   |   +---json
    |   |   |   |       index.js
    |   |   |   |       stringify.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---map
    |   |   |   |       group-by.js
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---math
    |   |   |   |       acosh.js
    |   |   |   |       asinh.js
    |   |   |   |       atanh.js
    |   |   |   |       cbrt.js
    |   |   |   |       clz32.js
    |   |   |   |       cosh.js
    |   |   |   |       expm1.js
    |   |   |   |       f16round.js
    |   |   |   |       fround.js
    |   |   |   |       hypot.js
    |   |   |   |       imul.js
    |   |   |   |       index.js
    |   |   |   |       log10.js
    |   |   |   |       log1p.js
    |   |   |   |       log2.js
    |   |   |   |       sign.js
    |   |   |   |       sinh.js
    |   |   |   |       sum-precise.js
    |   |   |   |       tanh.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       trunc.js
    |   |   |   |       
    |   |   |   +---number
    |   |   |   |   |   constructor.js
    |   |   |   |   |   epsilon.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-finite.js
    |   |   |   |   |   is-integer.js
    |   |   |   |   |   is-nan.js
    |   |   |   |   |   is-safe-integer.js
    |   |   |   |   |   max-safe-integer.js
    |   |   |   |   |   min-safe-integer.js
    |   |   |   |   |   parse-float.js
    |   |   |   |   |   parse-int.js
    |   |   |   |   |   to-exponential.js
    |   |   |   |   |   to-fixed.js
    |   |   |   |   |   to-precision.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           index.js
    |   |   |   |           to-exponential.js
    |   |   |   |           to-fixed.js
    |   |   |   |           to-precision.js
    |   |   |   |           
    |   |   |   +---object
    |   |   |   |       assign.js
    |   |   |   |       create.js
    |   |   |   |       define-getter.js
    |   |   |   |       define-properties.js
    |   |   |   |       define-property.js
    |   |   |   |       define-setter.js
    |   |   |   |       entries.js
    |   |   |   |       freeze.js
    |   |   |   |       from-entries.js
    |   |   |   |       get-own-property-descriptor.js
    |   |   |   |       get-own-property-descriptors.js
    |   |   |   |       get-own-property-names.js
    |   |   |   |       get-own-property-symbols.js
    |   |   |   |       get-prototype-of.js
    |   |   |   |       group-by.js
    |   |   |   |       has-own.js
    |   |   |   |       index.js
    |   |   |   |       is-extensible.js
    |   |   |   |       is-frozen.js
    |   |   |   |       is-sealed.js
    |   |   |   |       is.js
    |   |   |   |       keys.js
    |   |   |   |       lookup-getter.js
    |   |   |   |       lookup-setter.js
    |   |   |   |       prevent-extensions.js
    |   |   |   |       proto.js
    |   |   |   |       seal.js
    |   |   |   |       set-prototype-of.js
    |   |   |   |       to-string.js
    |   |   |   |       values.js
    |   |   |   |       
    |   |   |   +---promise
    |   |   |   |       all-settled.js
    |   |   |   |       any.js
    |   |   |   |       finally.js
    |   |   |   |       index.js
    |   |   |   |       try.js
    |   |   |   |       with-resolvers.js
    |   |   |   |       
    |   |   |   +---reflect
    |   |   |   |       apply.js
    |   |   |   |       construct.js
    |   |   |   |       define-property.js
    |   |   |   |       delete-property.js
    |   |   |   |       get-own-property-descriptor.js
    |   |   |   |       get-prototype-of.js
    |   |   |   |       get.js
    |   |   |   |       has.js
    |   |   |   |       index.js
    |   |   |   |       is-extensible.js
    |   |   |   |       own-keys.js
    |   |   |   |       prevent-extensions.js
    |   |   |   |       set-prototype-of.js
    |   |   |   |       set.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       
    |   |   |   +---regexp
    |   |   |   |       constructor.js
    |   |   |   |       dot-all.js
    |   |   |   |       escape.js
    |   |   |   |       flags.js
    |   |   |   |       index.js
    |   |   |   |       match.js
    |   |   |   |       replace.js
    |   |   |   |       search.js
    |   |   |   |       split.js
    |   |   |   |       sticky.js
    |   |   |   |       test.js
    |   |   |   |       to-string.js
    |   |   |   |       
    |   |   |   +---set
    |   |   |   |       difference.js
    |   |   |   |       index.js
    |   |   |   |       intersection.js
    |   |   |   |       is-disjoint-from.js
    |   |   |   |       is-subset-of.js
    |   |   |   |       is-superset-of.js
    |   |   |   |       symmetric-difference.js
    |   |   |   |       union.js
    |   |   |   |       
    |   |   |   +---string
    |   |   |   |   |   anchor.js
    |   |   |   |   |   at.js
    |   |   |   |   |   big.js
    |   |   |   |   |   blink.js
    |   |   |   |   |   bold.js
    |   |   |   |   |   code-point-at.js
    |   |   |   |   |   ends-with.js
    |   |   |   |   |   fixed.js
    |   |   |   |   |   fontcolor.js
    |   |   |   |   |   fontsize.js
    |   |   |   |   |   from-code-point.js
    |   |   |   |   |   includes.js
    |   |   |   |   |   index.js
    |   |   |   |   |   is-well-formed.js
    |   |   |   |   |   italics.js
    |   |   |   |   |   iterator.js
    |   |   |   |   |   link.js
    |   |   |   |   |   match-all.js
    |   |   |   |   |   match.js
    |   |   |   |   |   pad-end.js
    |   |   |   |   |   pad-start.js
    |   |   |   |   |   raw.js
    |   |   |   |   |   repeat.js
    |   |   |   |   |   replace-all.js
    |   |   |   |   |   replace.js
    |   |   |   |   |   search.js
    |   |   |   |   |   small.js
    |   |   |   |   |   split.js
    |   |   |   |   |   starts-with.js
    |   |   |   |   |   strike.js
    |   |   |   |   |   sub.js
    |   |   |   |   |   substr.js
    |   |   |   |   |   sup.js
    |   |   |   |   |   to-well-formed.js
    |   |   |   |   |   trim-end.js
    |   |   |   |   |   trim-left.js
    |   |   |   |   |   trim-right.js
    |   |   |   |   |   trim-start.js
    |   |   |   |   |   trim.js
    |   |   |   |   |   
    |   |   |   |   \---virtual
    |   |   |   |           anchor.js
    |   |   |   |           at.js
    |   |   |   |           big.js
    |   |   |   |           blink.js
    |   |   |   |           bold.js
    |   |   |   |           code-point-at.js
    |   |   |   |           ends-with.js
    |   |   |   |           fixed.js
    |   |   |   |           fontcolor.js
    |   |   |   |           fontsize.js
    |   |   |   |           includes.js
    |   |   |   |           index.js
    |   |   |   |           is-well-formed.js
    |   |   |   |           italics.js
    |   |   |   |           iterator.js
    |   |   |   |           link.js
    |   |   |   |           match-all.js
    |   |   |   |           pad-end.js
    |   |   |   |           pad-start.js
    |   |   |   |           repeat.js
    |   |   |   |           replace-all.js
    |   |   |   |           small.js
    |   |   |   |           starts-with.js
    |   |   |   |           strike.js
    |   |   |   |           sub.js
    |   |   |   |           substr.js
    |   |   |   |           sup.js
    |   |   |   |           to-well-formed.js
    |   |   |   |           trim-end.js
    |   |   |   |           trim-left.js
    |   |   |   |           trim-right.js
    |   |   |   |           trim-start.js
    |   |   |   |           trim.js
    |   |   |   |           
    |   |   |   +---symbol
    |   |   |   |       async-dispose.js
    |   |   |   |       async-iterator.js
    |   |   |   |       description.js
    |   |   |   |       dispose.js
    |   |   |   |       for.js
    |   |   |   |       has-instance.js
    |   |   |   |       index.js
    |   |   |   |       is-concat-spreadable.js
    |   |   |   |       iterator.js
    |   |   |   |       key-for.js
    |   |   |   |       match-all.js
    |   |   |   |       match.js
    |   |   |   |       replace.js
    |   |   |   |       search.js
    |   |   |   |       species.js
    |   |   |   |       split.js
    |   |   |   |       to-primitive.js
    |   |   |   |       to-string-tag.js
    |   |   |   |       unscopables.js
    |   |   |   |       
    |   |   |   +---typed-array
    |   |   |   |       at.js
    |   |   |   |       copy-within.js
    |   |   |   |       entries.js
    |   |   |   |       every.js
    |   |   |   |       fill.js
    |   |   |   |       filter.js
    |   |   |   |       find-index.js
    |   |   |   |       find-last-index.js
    |   |   |   |       find-last.js
    |   |   |   |       find.js
    |   |   |   |       float32-array.js
    |   |   |   |       float64-array.js
    |   |   |   |       for-each.js
    |   |   |   |       from-base64.js
    |   |   |   |       from-hex.js
    |   |   |   |       from.js
    |   |   |   |       includes.js
    |   |   |   |       index-of.js
    |   |   |   |       index.js
    |   |   |   |       int16-array.js
    |   |   |   |       int32-array.js
    |   |   |   |       int8-array.js
    |   |   |   |       iterator.js
    |   |   |   |       join.js
    |   |   |   |       keys.js
    |   |   |   |       last-index-of.js
    |   |   |   |       map.js
    |   |   |   |       methods.js
    |   |   |   |       of.js
    |   |   |   |       reduce-right.js
    |   |   |   |       reduce.js
    |   |   |   |       reverse.js
    |   |   |   |       set-from-base64.js
    |   |   |   |       set-from-hex.js
    |   |   |   |       set.js
    |   |   |   |       slice.js
    |   |   |   |       some.js
    |   |   |   |       sort.js
    |   |   |   |       subarray.js
    |   |   |   |       to-base64.js
    |   |   |   |       to-hex.js
    |   |   |   |       to-locale-string.js
    |   |   |   |       to-reversed.js
    |   |   |   |       to-sorted.js
    |   |   |   |       to-string.js
    |   |   |   |       uint16-array.js
    |   |   |   |       uint32-array.js
    |   |   |   |       uint8-array.js
    |   |   |   |       uint8-clamped-array.js
    |   |   |   |       values.js
    |   |   |   |       with.js
    |   |   |   |       
    |   |   |   +---url
    |   |   |   |       can-parse.js
    |   |   |   |       index.js
    |   |   |   |       parse.js
    |   |   |   |       to-json.js
    |   |   |   |       
    |   |   |   +---url-search-params
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   +---weak-map
    |   |   |   |       index.js
    |   |   |   |       
    |   |   |   \---weak-set
    |   |   |           index.js
    |   |   |           
    |   |   +---stage
    |   |   |       0.js
    |   |   |       1.js
    |   |   |       2.7.js
    |   |   |       2.js
    |   |   |       3.js
    |   |   |       4.js
    |   |   |       index.js
    |   |   |       pre.js
    |   |   |       README.md
    |   |   |       
    |   |   \---web
    |   |           dom-collections.js
    |   |           dom-exception.js
    |   |           immediate.js
    |   |           index.js
    |   |           queue-microtask.js
    |   |           README.md
    |   |           structured-clone.js
    |   |           timers.js
    |   |           url-search-params.js
    |   |           url.js
    |   |           
    |   +---cross-spawn
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |       |   enoent.js
    |   |       |   parse.js
    |   |       |   
    |   |       \---util
    |   |               escape.js
    |   |               readShebang.js
    |   |               resolveCommand.js
    |   |               
    |   +---css-color-keywords
    |   |       colors.json
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---css-to-react-native
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE.md
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---src
    |   |       |   devPropertiesWithoutUnitsRegExp.js
    |   |       |   index.js
    |   |       |   TokenStream.js
    |   |       |   tokenTypes.js
    |   |       |   
    |   |       +---transforms
    |   |       |       aspectRatio.js
    |   |       |       border.js
    |   |       |       boxShadow.js
    |   |       |       flex.js
    |   |       |       flexFlow.js
    |   |       |       font.js
    |   |       |       fontFamily.js
    |   |       |       fontVariant.js
    |   |       |       index.js
    |   |       |       placeContent.js
    |   |       |       textDecoration.js
    |   |       |       textDecorationLine.js
    |   |       |       textShadow.js
    |   |       |       transform.js
    |   |       |       util.js
    |   |       |       
    |   |       \---__tests__
    |   |               aspectRatio.js
    |   |               border.js
    |   |               borderColor.js
    |   |               boxModel.js
    |   |               boxShadow.js
    |   |               colors.js
    |   |               flex.js
    |   |               flexFlow.js
    |   |               font.js
    |   |               fontFamily.js
    |   |               fontVariant.js
    |   |               fontWeight.js
    |   |               index.js
    |   |               placeContent.js
    |   |               shadowOffsets.js
    |   |               textDecoration.js
    |   |               textDecorationLine.js
    |   |               textShadow.js
    |   |               transform.js
    |   |               units.js
    |   |               
    |   +---csstype
    |   |       index.d.ts
    |   |       index.js.flow
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---debug
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---src
    |   |           browser.js
    |   |           common.js
    |   |           index.js
    |   |           node.js
    |   |           
    |   +---deep-is
    |   |   |   .travis.yml
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.markdown
    |   |   |   
    |   |   +---example
    |   |   |       cmp.js
    |   |   |       
    |   |   \---test
    |   |           cmp.js
    |   |           NaN.js
    |   |           neg-vs-pos-0.js
    |   |           
    |   +---delayed-stream
    |   |   |   .npmignore
    |   |   |   License
    |   |   |   Makefile
    |   |   |   package.json
    |   |   |   Readme.md
    |   |   |   
    |   |   \---lib
    |   |           delayed_stream.js
    |   |           
    |   +---detect-libc
    |   |   |   index.d.ts
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           detect-libc.js
    |   |           elf.js
    |   |           filesystem.js
    |   |           process.js
    |   |           
    |   +---dunder-proto
    |   |   |   .eslintrc
    |   |   |   .nycrc
    |   |   |   CHANGELOG.md
    |   |   |   get.d.ts
    |   |   |   get.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   set.d.ts
    |   |   |   set.js
    |   |   |   tsconfig.json
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   \---test
    |   |           get.js
    |   |           index.js
    |   |           set.js
    |   |           
    |   +---electron-to-chromium
    |   |       chromium-versions.js
    |   |       chromium-versions.json
    |   |       full-chromium-versions.js
    |   |       full-chromium-versions.json
    |   |       full-versions.js
    |   |       full-versions.json
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       versions.js
    |   |       versions.json
    |   |       
    |   +---es-define-property
    |   |   |   .eslintrc
    |   |   |   .nycrc
    |   |   |   CHANGELOG.md
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   tsconfig.json
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   \---test
    |   |           index.js
    |   |           
    |   +---es-errors
    |   |   |   .eslintrc
    |   |   |   CHANGELOG.md
    |   |   |   eval.d.ts
    |   |   |   eval.js
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   range.d.ts
    |   |   |   range.js
    |   |   |   README.md
    |   |   |   ref.d.ts
    |   |   |   ref.js
    |   |   |   syntax.d.ts
    |   |   |   syntax.js
    |   |   |   tsconfig.json
    |   |   |   type.d.ts
    |   |   |   type.js
    |   |   |   uri.d.ts
    |   |   |   uri.js
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   \---test
    |   |           index.js
    |   |           
    |   +---es-object-atoms
    |   |   |   .eslintrc
    |   |   |   CHANGELOG.md
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   isObject.d.ts
    |   |   |   isObject.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   RequireObjectCoercible.d.ts
    |   |   |   RequireObjectCoercible.js
    |   |   |   ToObject.d.ts
    |   |   |   ToObject.js
    |   |   |   tsconfig.json
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   \---test
    |   |           index.js
    |   |           
    |   +---es-set-tostringtag
    |   |   |   .eslintrc
    |   |   |   .nycrc
    |   |   |   CHANGELOG.md
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   tsconfig.json
    |   |   |   
    |   |   \---test
    |   |           index.js
    |   |           
    |   +---escalade
    |   |   |   index.d.mts
    |   |   |   index.d.ts
    |   |   |   license
    |   |   |   package.json
    |   |   |   readme.md
    |   |   |   
    |   |   +---dist
    |   |   |       index.js
    |   |   |       index.mjs
    |   |   |       
    |   |   \---sync
    |   |           index.d.mts
    |   |           index.d.ts
    |   |           index.js
    |   |           index.mjs
    |   |           
    |   +---escape-string-regexp
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---eslint
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---bin
    |   |   |       eslint.js
    |   |   |       
    |   |   +---conf
    |   |   |       default-cli-options.js
    |   |   |       ecma-version.js
    |   |   |       globals.js
    |   |   |       replacements.json
    |   |   |       rule-type-list.json
    |   |   |       
    |   |   +---lib
    |   |   |   |   api.js
    |   |   |   |   cli.js
    |   |   |   |   config-api.js
    |   |   |   |   options.js
    |   |   |   |   universal.js
    |   |   |   |   unsupported-api.js
    |   |   |   |   
    |   |   |   +---cli-engine
    |   |   |   |   |   cli-engine.js
    |   |   |   |   |   file-enumerator.js
    |   |   |   |   |   hash.js
    |   |   |   |   |   index.js
    |   |   |   |   |   lint-result-cache.js
    |   |   |   |   |   load-rules.js
    |   |   |   |   |   
    |   |   |   |   \---formatters
    |   |   |   |           formatters-meta.json
    |   |   |   |           html.js
    |   |   |   |           json-with-metadata.js
    |   |   |   |           json.js
    |   |   |   |           stylish.js
    |   |   |   |           
    |   |   |   +---config
    |   |   |   |       config-loader.js
    |   |   |   |       config.js
    |   |   |   |       default-config.js
    |   |   |   |       flat-config-array.js
    |   |   |   |       flat-config-schema.js
    |   |   |   |       
    |   |   |   +---eslint
    |   |   |   |       eslint-helpers.js
    |   |   |   |       eslint.js
    |   |   |   |       index.js
    |   |   |   |       legacy-eslint.js
    |   |   |   |       worker.js
    |   |   |   |       
    |   |   |   +---languages
    |   |   |   |   \---js
    |   |   |   |       |   index.js
    |   |   |   |       |   validate-language-options.js
    |   |   |   |       |   
    |   |   |   |       \---source-code
    |   |   |   |           |   index.js
    |   |   |   |           |   source-code.js
    |   |   |   |           |   
    |   |   |   |           \---token-store
    |   |   |   |                   backward-token-comment-cursor.js
    |   |   |   |                   backward-token-cursor.js
    |   |   |   |                   cursor.js
    |   |   |   |                   cursors.js
    |   |   |   |                   decorative-cursor.js
    |   |   |   |                   filter-cursor.js
    |   |   |   |                   forward-token-comment-cursor.js
    |   |   |   |                   forward-token-cursor.js
    |   |   |   |                   index.js
    |   |   |   |                   limit-cursor.js
    |   |   |   |                   padded-token-cursor.js
    |   |   |   |                   skip-cursor.js
    |   |   |   |                   utils.js
    |   |   |   |                   
    |   |   |   +---linter
    |   |   |   |   |   apply-disable-directives.js
    |   |   |   |   |   esquery.js
    |   |   |   |   |   file-context.js
    |   |   |   |   |   file-report.js
    |   |   |   |   |   index.js
    |   |   |   |   |   interpolate.js
    |   |   |   |   |   linter.js
    |   |   |   |   |   rule-fixer.js
    |   |   |   |   |   rules.js
    |   |   |   |   |   source-code-fixer.js
    |   |   |   |   |   source-code-traverser.js
    |   |   |   |   |   source-code-visitor.js
    |   |   |   |   |   timing.js
    |   |   |   |   |   vfile.js
    |   |   |   |   |   
    |   |   |   |   \---code-path-analysis
    |   |   |   |           code-path-analyzer.js
    |   |   |   |           code-path-segment.js
    |   |   |   |           code-path-state.js
    |   |   |   |           code-path.js
    |   |   |   |           debug-helpers.js
    |   |   |   |           fork-context.js
    |   |   |   |           id-generator.js
    |   |   |   |           
    |   |   |   +---rule-tester
    |   |   |   |       index.js
    |   |   |   |       rule-tester.js
    |   |   |   |       
    |   |   |   +---rules
    |   |   |   |   |   accessor-pairs.js
    |   |   |   |   |   array-bracket-newline.js
    |   |   |   |   |   array-bracket-spacing.js
    |   |   |   |   |   array-callback-return.js
    |   |   |   |   |   array-element-newline.js
    |   |   |   |   |   arrow-body-style.js
    |   |   |   |   |   arrow-parens.js
    |   |   |   |   |   arrow-spacing.js
    |   |   |   |   |   block-scoped-var.js
    |   |   |   |   |   block-spacing.js
    |   |   |   |   |   brace-style.js
    |   |   |   |   |   callback-return.js
    |   |   |   |   |   camelcase.js
    |   |   |   |   |   capitalized-comments.js
    |   |   |   |   |   class-methods-use-this.js
    |   |   |   |   |   comma-dangle.js
    |   |   |   |   |   comma-spacing.js
    |   |   |   |   |   comma-style.js
    |   |   |   |   |   complexity.js
    |   |   |   |   |   computed-property-spacing.js
    |   |   |   |   |   consistent-return.js
    |   |   |   |   |   consistent-this.js
    |   |   |   |   |   constructor-super.js
    |   |   |   |   |   curly.js
    |   |   |   |   |   default-case-last.js
    |   |   |   |   |   default-case.js
    |   |   |   |   |   default-param-last.js
    |   |   |   |   |   dot-location.js
    |   |   |   |   |   dot-notation.js
    |   |   |   |   |   eol-last.js
    |   |   |   |   |   eqeqeq.js
    |   |   |   |   |   for-direction.js
    |   |   |   |   |   func-call-spacing.js
    |   |   |   |   |   func-name-matching.js
    |   |   |   |   |   func-names.js
    |   |   |   |   |   func-style.js
    |   |   |   |   |   function-call-argument-newline.js
    |   |   |   |   |   function-paren-newline.js
    |   |   |   |   |   generator-star-spacing.js
    |   |   |   |   |   getter-return.js
    |   |   |   |   |   global-require.js
    |   |   |   |   |   grouped-accessor-pairs.js
    |   |   |   |   |   guard-for-in.js
    |   |   |   |   |   handle-callback-err.js
    |   |   |   |   |   id-blacklist.js
    |   |   |   |   |   id-denylist.js
    |   |   |   |   |   id-length.js
    |   |   |   |   |   id-match.js
    |   |   |   |   |   implicit-arrow-linebreak.js
    |   |   |   |   |   indent-legacy.js
    |   |   |   |   |   indent.js
    |   |   |   |   |   index.js
    |   |   |   |   |   init-declarations.js
    |   |   |   |   |   jsx-quotes.js
    |   |   |   |   |   key-spacing.js
    |   |   |   |   |   keyword-spacing.js
    |   |   |   |   |   line-comment-position.js
    |   |   |   |   |   linebreak-style.js
    |   |   |   |   |   lines-around-comment.js
    |   |   |   |   |   lines-around-directive.js
    |   |   |   |   |   lines-between-class-members.js
    |   |   |   |   |   logical-assignment-operators.js
    |   |   |   |   |   max-classes-per-file.js
    |   |   |   |   |   max-depth.js
    |   |   |   |   |   max-len.js
    |   |   |   |   |   max-lines-per-function.js
    |   |   |   |   |   max-lines.js
    |   |   |   |   |   max-nested-callbacks.js
    |   |   |   |   |   max-params.js
    |   |   |   |   |   max-statements-per-line.js
    |   |   |   |   |   max-statements.js
    |   |   |   |   |   multiline-comment-style.js
    |   |   |   |   |   multiline-ternary.js
    |   |   |   |   |   new-cap.js
    |   |   |   |   |   new-parens.js
    |   |   |   |   |   newline-after-var.js
    |   |   |   |   |   newline-before-return.js
    |   |   |   |   |   newline-per-chained-call.js
    |   |   |   |   |   no-alert.js
    |   |   |   |   |   no-array-constructor.js
    |   |   |   |   |   no-async-promise-executor.js
    |   |   |   |   |   no-await-in-loop.js
    |   |   |   |   |   no-bitwise.js
    |   |   |   |   |   no-buffer-constructor.js
    |   |   |   |   |   no-caller.js
    |   |   |   |   |   no-case-declarations.js
    |   |   |   |   |   no-catch-shadow.js
    |   |   |   |   |   no-class-assign.js
    |   |   |   |   |   no-compare-neg-zero.js
    |   |   |   |   |   no-cond-assign.js
    |   |   |   |   |   no-confusing-arrow.js
    |   |   |   |   |   no-console.js
    |   |   |   |   |   no-const-assign.js
    |   |   |   |   |   no-constant-binary-expression.js
    |   |   |   |   |   no-constant-condition.js
    |   |   |   |   |   no-constructor-return.js
    |   |   |   |   |   no-continue.js
    |   |   |   |   |   no-control-regex.js
    |   |   |   |   |   no-debugger.js
    |   |   |   |   |   no-delete-var.js
    |   |   |   |   |   no-div-regex.js
    |   |   |   |   |   no-dupe-args.js
    |   |   |   |   |   no-dupe-class-members.js
    |   |   |   |   |   no-dupe-else-if.js
    |   |   |   |   |   no-dupe-keys.js
    |   |   |   |   |   no-duplicate-case.js
    |   |   |   |   |   no-duplicate-imports.js
    |   |   |   |   |   no-else-return.js
    |   |   |   |   |   no-empty-character-class.js
    |   |   |   |   |   no-empty-function.js
    |   |   |   |   |   no-empty-pattern.js
    |   |   |   |   |   no-empty-static-block.js
    |   |   |   |   |   no-empty.js
    |   |   |   |   |   no-eq-null.js
    |   |   |   |   |   no-eval.js
    |   |   |   |   |   no-ex-assign.js
    |   |   |   |   |   no-extend-native.js
    |   |   |   |   |   no-extra-bind.js
    |   |   |   |   |   no-extra-boolean-cast.js
    |   |   |   |   |   no-extra-label.js
    |   |   |   |   |   no-extra-parens.js
    |   |   |   |   |   no-extra-semi.js
    |   |   |   |   |   no-fallthrough.js
    |   |   |   |   |   no-floating-decimal.js
    |   |   |   |   |   no-func-assign.js
    |   |   |   |   |   no-global-assign.js
    |   |   |   |   |   no-implicit-coercion.js
    |   |   |   |   |   no-implicit-globals.js
    |   |   |   |   |   no-implied-eval.js
    |   |   |   |   |   no-import-assign.js
    |   |   |   |   |   no-inline-comments.js
    |   |   |   |   |   no-inner-declarations.js
    |   |   |   |   |   no-invalid-regexp.js
    |   |   |   |   |   no-invalid-this.js
    |   |   |   |   |   no-irregular-whitespace.js
    |   |   |   |   |   no-iterator.js
    |   |   |   |   |   no-label-var.js
    |   |   |   |   |   no-labels.js
    |   |   |   |   |   no-lone-blocks.js
    |   |   |   |   |   no-lonely-if.js
    |   |   |   |   |   no-loop-func.js
    |   |   |   |   |   no-loss-of-precision.js
    |   |   |   |   |   no-magic-numbers.js
    |   |   |   |   |   no-misleading-character-class.js
    |   |   |   |   |   no-mixed-operators.js
    |   |   |   |   |   no-mixed-requires.js
    |   |   |   |   |   no-mixed-spaces-and-tabs.js
    |   |   |   |   |   no-multi-assign.js
    |   |   |   |   |   no-multi-spaces.js
    |   |   |   |   |   no-multi-str.js
    |   |   |   |   |   no-multiple-empty-lines.js
    |   |   |   |   |   no-native-reassign.js
    |   |   |   |   |   no-negated-condition.js
    |   |   |   |   |   no-negated-in-lhs.js
    |   |   |   |   |   no-nested-ternary.js
    |   |   |   |   |   no-new-func.js
    |   |   |   |   |   no-new-native-nonconstructor.js
    |   |   |   |   |   no-new-object.js
    |   |   |   |   |   no-new-require.js
    |   |   |   |   |   no-new-symbol.js
    |   |   |   |   |   no-new-wrappers.js
    |   |   |   |   |   no-new.js
    |   |   |   |   |   no-nonoctal-decimal-escape.js
    |   |   |   |   |   no-obj-calls.js
    |   |   |   |   |   no-object-constructor.js
    |   |   |   |   |   no-octal-escape.js
    |   |   |   |   |   no-octal.js
    |   |   |   |   |   no-param-reassign.js
    |   |   |   |   |   no-path-concat.js
    |   |   |   |   |   no-plusplus.js
    |   |   |   |   |   no-process-env.js
    |   |   |   |   |   no-process-exit.js
    |   |   |   |   |   no-promise-executor-return.js
    |   |   |   |   |   no-proto.js
    |   |   |   |   |   no-prototype-builtins.js
    |   |   |   |   |   no-redeclare.js
    |   |   |   |   |   no-regex-spaces.js
    |   |   |   |   |   no-restricted-exports.js
    |   |   |   |   |   no-restricted-globals.js
    |   |   |   |   |   no-restricted-imports.js
    |   |   |   |   |   no-restricted-modules.js
    |   |   |   |   |   no-restricted-properties.js
    |   |   |   |   |   no-restricted-syntax.js
    |   |   |   |   |   no-return-assign.js
    |   |   |   |   |   no-return-await.js
    |   |   |   |   |   no-script-url.js
    |   |   |   |   |   no-self-assign.js
    |   |   |   |   |   no-self-compare.js
    |   |   |   |   |   no-sequences.js
    |   |   |   |   |   no-setter-return.js
    |   |   |   |   |   no-shadow-restricted-names.js
    |   |   |   |   |   no-shadow.js
    |   |   |   |   |   no-spaced-func.js
    |   |   |   |   |   no-sparse-arrays.js
    |   |   |   |   |   no-sync.js
    |   |   |   |   |   no-tabs.js
    |   |   |   |   |   no-template-curly-in-string.js
    |   |   |   |   |   no-ternary.js
    |   |   |   |   |   no-this-before-super.js
    |   |   |   |   |   no-throw-literal.js
    |   |   |   |   |   no-trailing-spaces.js
    |   |   |   |   |   no-unassigned-vars.js
    |   |   |   |   |   no-undef-init.js
    |   |   |   |   |   no-undef.js
    |   |   |   |   |   no-undefined.js
    |   |   |   |   |   no-underscore-dangle.js
    |   |   |   |   |   no-unexpected-multiline.js
    |   |   |   |   |   no-unmodified-loop-condition.js
    |   |   |   |   |   no-unneeded-ternary.js
    |   |   |   |   |   no-unreachable-loop.js
    |   |   |   |   |   no-unreachable.js
    |   |   |   |   |   no-unsafe-finally.js
    |   |   |   |   |   no-unsafe-negation.js
    |   |   |   |   |   no-unsafe-optional-chaining.js
    |   |   |   |   |   no-unused-expressions.js
    |   |   |   |   |   no-unused-labels.js
    |   |   |   |   |   no-unused-private-class-members.js
    |   |   |   |   |   no-unused-vars.js
    |   |   |   |   |   no-use-before-define.js
    |   |   |   |   |   no-useless-assignment.js
    |   |   |   |   |   no-useless-backreference.js
    |   |   |   |   |   no-useless-call.js
    |   |   |   |   |   no-useless-catch.js
    |   |   |   |   |   no-useless-computed-key.js
    |   |   |   |   |   no-useless-concat.js
    |   |   |   |   |   no-useless-constructor.js
    |   |   |   |   |   no-useless-escape.js
    |   |   |   |   |   no-useless-rename.js
    |   |   |   |   |   no-useless-return.js
    |   |   |   |   |   no-var.js
    |   |   |   |   |   no-void.js
    |   |   |   |   |   no-warning-comments.js
    |   |   |   |   |   no-whitespace-before-property.js
    |   |   |   |   |   no-with.js
    |   |   |   |   |   nonblock-statement-body-position.js
    |   |   |   |   |   object-curly-newline.js
    |   |   |   |   |   object-curly-spacing.js
    |   |   |   |   |   object-property-newline.js
    |   |   |   |   |   object-shorthand.js
    |   |   |   |   |   one-var-declaration-per-line.js
    |   |   |   |   |   one-var.js
    |   |   |   |   |   operator-assignment.js
    |   |   |   |   |   operator-linebreak.js
    |   |   |   |   |   padded-blocks.js
    |   |   |   |   |   padding-line-between-statements.js
    |   |   |   |   |   prefer-arrow-callback.js
    |   |   |   |   |   prefer-const.js
    |   |   |   |   |   prefer-destructuring.js
    |   |   |   |   |   prefer-exponentiation-operator.js
    |   |   |   |   |   prefer-named-capture-group.js
    |   |   |   |   |   prefer-numeric-literals.js
    |   |   |   |   |   prefer-object-has-own.js
    |   |   |   |   |   prefer-object-spread.js
    |   |   |   |   |   prefer-promise-reject-errors.js
    |   |   |   |   |   prefer-reflect.js
    |   |   |   |   |   prefer-regex-literals.js
    |   |   |   |   |   prefer-rest-params.js
    |   |   |   |   |   prefer-spread.js
    |   |   |   |   |   prefer-template.js
    |   |   |   |   |   preserve-caught-error.js
    |   |   |   |   |   quote-props.js
    |   |   |   |   |   quotes.js
    |   |   |   |   |   radix.js
    |   |   |   |   |   require-atomic-updates.js
    |   |   |   |   |   require-await.js
    |   |   |   |   |   require-unicode-regexp.js
    |   |   |   |   |   require-yield.js
    |   |   |   |   |   rest-spread-spacing.js
    |   |   |   |   |   semi-spacing.js
    |   |   |   |   |   semi-style.js
    |   |   |   |   |   semi.js
    |   |   |   |   |   sort-imports.js
    |   |   |   |   |   sort-keys.js
    |   |   |   |   |   sort-vars.js
    |   |   |   |   |   space-before-blocks.js
    |   |   |   |   |   space-before-function-paren.js
    |   |   |   |   |   space-in-parens.js
    |   |   |   |   |   space-infix-ops.js
    |   |   |   |   |   space-unary-ops.js
    |   |   |   |   |   spaced-comment.js
    |   |   |   |   |   strict.js
    |   |   |   |   |   switch-colon-spacing.js
    |   |   |   |   |   symbol-description.js
    |   |   |   |   |   template-curly-spacing.js
    |   |   |   |   |   template-tag-spacing.js
    |   |   |   |   |   unicode-bom.js
    |   |   |   |   |   use-isnan.js
    |   |   |   |   |   valid-typeof.js
    |   |   |   |   |   vars-on-top.js
    |   |   |   |   |   wrap-iife.js
    |   |   |   |   |   wrap-regex.js
    |   |   |   |   |   yield-star-spacing.js
    |   |   |   |   |   yoda.js
    |   |   |   |   |   
    |   |   |   |   \---utils
    |   |   |   |       |   ast-utils.js
    |   |   |   |       |   char-source.js
    |   |   |   |       |   fix-tracker.js
    |   |   |   |       |   keywords.js
    |   |   |   |       |   lazy-loading-rule-map.js
    |   |   |   |       |   regular-expressions.js
    |   |   |   |       |   
    |   |   |   |       \---unicode
    |   |   |   |               index.js
    |   |   |   |               is-combining-character.js
    |   |   |   |               is-emoji-modifier.js
    |   |   |   |               is-regional-indicator-symbol.js
    |   |   |   |               is-surrogate-pair.js
    |   |   |   |               
    |   |   |   +---services
    |   |   |   |       parser-service.js
    |   |   |   |       processor-service.js
    |   |   |   |       suppressions-service.js
    |   |   |   |       warning-service.js
    |   |   |   |       
    |   |   |   +---shared
    |   |   |   |       ajv.js
    |   |   |   |       assert.js
    |   |   |   |       ast-utils.js
    |   |   |   |       deep-merge-arrays.js
    |   |   |   |       directives.js
    |   |   |   |       flags.js
    |   |   |   |       logging.js
    |   |   |   |       naming.js
    |   |   |   |       option-utils.js
    |   |   |   |       relative-module-resolver.js
    |   |   |   |       runtime-info.js
    |   |   |   |       serialization.js
    |   |   |   |       severity.js
    |   |   |   |       stats.js
    |   |   |   |       string-utils.js
    |   |   |   |       text-table.js
    |   |   |   |       translate-cli-options.js
    |   |   |   |       traverser.js
    |   |   |   |       
    |   |   |   \---types
    |   |   |           config-api.d.ts
    |   |   |           index.d.ts
    |   |   |           rules.d.ts
    |   |   |           universal.d.ts
    |   |   |           use-at-your-own-risk.d.ts
    |   |   |           
    |   |   \---messages
    |   |           all-files-ignored.js
    |   |           all-matched-files-ignored.js
    |   |           config-file-missing.js
    |   |           config-plugin-missing.js
    |   |           config-serialize-function.js
    |   |           eslintrc-incompat.js
    |   |           eslintrc-plugins.js
    |   |           extend-config-missing.js
    |   |           failed-to-read-json.js
    |   |           file-not-found.js
    |   |           invalid-rule-options.js
    |   |           invalid-rule-severity.js
    |   |           no-config-found.js
    |   |           plugin-conflict.js
    |   |           plugin-invalid.js
    |   |           plugin-missing.js
    |   |           print-config-with-directory-path.js
    |   |           shared.js
    |   |           whitespace-found.js
    |   |           
    |   +---eslint-plugin-react-hooks
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---cjs
    |   |           eslint-plugin-react-hooks.d.ts
    |   |           eslint-plugin-react-hooks.development.js
    |   |           eslint-plugin-react-hooks.production.js
    |   |           
    |   +---eslint-plugin-react-refresh
    |   |       index.d.ts
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---eslint-scope
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---dist
    |   |   |       eslint-scope.cjs
    |   |   |       
    |   |   \---lib
    |   |           assert.js
    |   |           definition.js
    |   |           index.js
    |   |           pattern-visitor.js
    |   |           reference.js
    |   |           referencer.js
    |   |           scope-manager.js
    |   |           scope.js
    |   |           variable.js
    |   |           version.js
    |   |           
    |   +---eslint-visitor-keys
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---dist
    |   |   |       eslint-visitor-keys.cjs
    |   |   |       eslint-visitor-keys.d.cts
    |   |   |       index.d.ts
    |   |   |       visitor-keys.d.ts
    |   |   |       
    |   |   \---lib
    |   |           index.js
    |   |           visitor-keys.js
    |   |           
    |   +---espree
    |   |   |   espree.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---dist
    |   |   |       espree.cjs
    |   |   |       
    |   |   \---lib
    |   |           espree.js
    |   |           features.js
    |   |           options.js
    |   |           token-translator.js
    |   |           version.js
    |   |           
    |   +---esquery
    |   |   |   license.txt
    |   |   |   package.json
    |   |   |   parser.js
    |   |   |   README.md
    |   |   |   
    |   |   \---dist
    |   |           esquery.esm.js
    |   |           esquery.esm.min.js
    |   |           esquery.esm.min.js.map
    |   |           esquery.js
    |   |           esquery.lite.js
    |   |           esquery.lite.min.js
    |   |           esquery.lite.min.js.map
    |   |           esquery.min.js
    |   |           esquery.min.js.map
    |   |           
    |   +---esrecurse
    |   |       .babelrc
    |   |       esrecurse.js
    |   |       gulpfile.babel.js
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---estraverse
    |   |       .jshintrc
    |   |       estraverse.js
    |   |       gulpfile.js
    |   |       LICENSE.BSD
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---esutils
    |   |   |   LICENSE.BSD
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           ast.js
    |   |           code.js
    |   |           keyword.js
    |   |           utils.js
    |   |           
    |   +---fast-deep-equal
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   react.d.ts
    |   |   |   react.js
    |   |   |   README.md
    |   |   |   
    |   |   \---es6
    |   |           index.d.ts
    |   |           index.js
    |   |           react.d.ts
    |   |           react.js
    |   |           
    |   +---fast-json-stable-stringify
    |   |   |   .eslintrc.yml
    |   |   |   .travis.yml
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   +---benchmark
    |   |   |       index.js
    |   |   |       test.json
    |   |   |       
    |   |   +---example
    |   |   |       key_cmp.js
    |   |   |       nested.js
    |   |   |       str.js
    |   |   |       value_cmp.js
    |   |   |       
    |   |   \---test
    |   |           cmp.js
    |   |           nested.js
    |   |           str.js
    |   |           to-json.js
    |   |           
    |   +---fast-levenshtein
    |   |       levenshtein.js
    |   |       LICENSE.md
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---fdir
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---dist
    |   |           index.cjs
    |   |           index.d.cts
    |   |           index.d.mts
    |   |           index.mjs
    |   |           
    |   +---file-entry-cache
    |   |       cache.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---find-up
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---flat-cache
    |   |   |   changelog.md
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---src
    |   |           cache.js
    |   |           del.js
    |   |           utils.js
    |   |           
    |   +---flatted
    |   |   |   es.js
    |   |   |   esm.js
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   min.js
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---cjs
    |   |   |       index.js
    |   |   |       package.json
    |   |   |       
    |   |   +---esm
    |   |   |       index.js
    |   |   |       
    |   |   +---php
    |   |   |       flatted.php
    |   |   |       
    |   |   +---python
    |   |   |       flatted.py
    |   |   |       
    |   |   \---types
    |   |           index.d.ts
    |   |           
    |   +---follow-redirects
    |   |       debug.js
    |   |       http.js
    |   |       https.js
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---form-data
    |   |   |   CHANGELOG.md
    |   |   |   index.d.ts
    |   |   |   License
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           browser.js
    |   |           form_data.js
    |   |           populate.js
    |   |           
    |   +---function-bind
    |   |   |   .eslintrc
    |   |   |   .nycrc
    |   |   |   CHANGELOG.md
    |   |   |   implementation.js
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       SECURITY.md
    |   |   |       
    |   |   \---test
    |   |           .eslintrc
    |   |           index.js
    |   |           
    |   +---gensync
    |   |   |   index.js
    |   |   |   index.js.flow
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---test
    |   |           .babelrc
    |   |           index.test.js
    |   |           
    |   +---get-intrinsic
    |   |   |   .eslintrc
    |   |   |   .nycrc
    |   |   |   CHANGELOG.md
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   \---test
    |   |           GetIntrinsic.js
    |   |           
    |   +---get-proto
    |   |   |   .eslintrc
    |   |   |   .nycrc
    |   |   |   CHANGELOG.md
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   Object.getPrototypeOf.d.ts
    |   |   |   Object.getPrototypeOf.js
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   Reflect.getPrototypeOf.d.ts
    |   |   |   Reflect.getPrototypeOf.js
    |   |   |   tsconfig.json
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   \---test
    |   |           index.js
    |   |           
    |   +---glob-parent
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---globals
    |   |       globals.json
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---gopd
    |   |   |   .eslintrc
    |   |   |   CHANGELOG.md
    |   |   |   gOPD.d.ts
    |   |   |   gOPD.js
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   tsconfig.json
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   \---test
    |   |           index.js
    |   |           
    |   +---has-flag
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---has-symbols
    |   |   |   .eslintrc
    |   |   |   .nycrc
    |   |   |   CHANGELOG.md
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   shams.d.ts
    |   |   |   shams.js
    |   |   |   tsconfig.json
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   \---test
    |   |       |   index.js
    |   |       |   tests.js
    |   |       |   
    |   |       \---shams
    |   |               core-js.js
    |   |               get-own-property-symbols.js
    |   |               
    |   +---has-tostringtag
    |   |   |   .eslintrc
    |   |   |   .nycrc
    |   |   |   CHANGELOG.md
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   shams.d.ts
    |   |   |   shams.js
    |   |   |   tsconfig.json
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   \---test
    |   |       |   index.js
    |   |       |   tests.js
    |   |       |   
    |   |       \---shams
    |   |               core-js.js
    |   |               get-own-property-symbols.js
    |   |               
    |   +---hasown
    |   |   |   .eslintrc
    |   |   |   .nycrc
    |   |   |   CHANGELOG.md
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   tsconfig.json
    |   |   |   
    |   |           FUNDING.yml
    |   |           
    |   +---ignore
    |   |       index.d.ts
    |   |       index.js
    |   |       legacy.js
    |   |       LICENSE-MIT
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---imask
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---dist
    |   |   |       imask.cjs
    |   |   |       imask.cjs.map
    |   |   |       imask.js
    |   |   |       imask.js.map
    |   |   |       imask.min.js
    |   |   |       imask.min.js.map
    |   |   |       
    |   |   \---esm
    |   |       |   imask.d.ts
    |   |       |   imask.d.ts.map
    |   |       |   imask.js
    |   |       |   index.d.ts
    |   |       |   index.d.ts.map
    |   |       |   index.js
    |   |       |   
    |   |       +---controls
    |   |       |       html-contenteditable-mask-element.d.ts
    |   |       |       html-contenteditable-mask-element.d.ts.map
    |   |       |       html-contenteditable-mask-element.js
    |   |       |       html-input-mask-element.d.ts
    |   |       |       html-input-mask-element.d.ts.map
    |   |       |       html-input-mask-element.js
    |   |       |       html-mask-element.d.ts
    |   |       |       html-mask-element.d.ts.map
    |   |       |       html-mask-element.js
    |   |       |       input-history.d.ts
    |   |       |       input-history.d.ts.map
    |   |       |       input-history.js
    |   |       |       input.d.ts
    |   |       |       input.d.ts.map
    |   |       |       input.js
    |   |       |       mask-element.d.ts
    |   |       |       mask-element.d.ts.map
    |   |       |       mask-element.js
    |   |       |       
    |   |       +---core
    |   |       |       action-details.d.ts
    |   |       |       action-details.d.ts.map
    |   |       |       action-details.js
    |   |       |       change-details.d.ts
    |   |       |       change-details.d.ts.map
    |   |       |       change-details.js
    |   |       |       continuous-tail-details.d.ts
    |   |       |       continuous-tail-details.d.ts.map
    |   |       |       continuous-tail-details.js
    |   |       |       holder.d.ts
    |   |       |       holder.d.ts.map
    |   |       |       holder.js
    |   |       |       tail-details.d.ts
    |   |       |       tail-details.d.ts.map
    |   |       |       tail-details.js
    |   |       |       utils.d.ts
    |   |       |       utils.d.ts.map
    |   |       |       utils.js
    |   |       |       
    |   |       \---masked
    |   |           |   base.d.ts
    |   |           |   base.d.ts.map
    |   |           |   base.js
    |   |           |   date.d.ts
    |   |           |   date.d.ts.map
    |   |           |   date.js
    |   |           |   dynamic.d.ts
    |   |           |   dynamic.d.ts.map
    |   |           |   dynamic.js
    |   |           |   enum.d.ts
    |   |           |   enum.d.ts.map
    |   |           |   enum.js
    |   |           |   factory.d.ts
    |   |           |   factory.d.ts.map
    |   |           |   factory.js
    |   |           |   function.d.ts
    |   |           |   function.d.ts.map
    |   |           |   function.js
    |   |           |   number.d.ts
    |   |           |   number.d.ts.map
    |   |           |   number.js
    |   |           |   pattern.d.ts
    |   |           |   pattern.d.ts.map
    |   |           |   pattern.js
    |   |           |   pipe.d.ts
    |   |           |   pipe.d.ts.map
    |   |           |   pipe.js
    |   |           |   range.d.ts
    |   |           |   range.d.ts.map
    |   |           |   range.js
    |   |           |   regexp.d.ts
    |   |           |   regexp.d.ts.map
    |   |           |   regexp.js
    |   |           |   repeat.d.ts
    |   |           |   repeat.d.ts.map
    |   |           |   repeat.js
    |   |           |   
    |   |           \---pattern
    |   |                   block.d.ts
    |   |                   block.d.ts.map
    |   |                   block.js
    |   |                   chunk-tail-details.d.ts
    |   |                   chunk-tail-details.d.ts.map
    |   |                   chunk-tail-details.js
    |   |                   cursor.d.ts
    |   |                   cursor.d.ts.map
    |   |                   cursor.js
    |   |                   fixed-definition.d.ts
    |   |                   fixed-definition.d.ts.map
    |   |                   fixed-definition.js
    |   |                   input-definition.d.ts
    |   |                   input-definition.d.ts.map
    |   |                   input-definition.js
    |   |                   
    |   +---import-fresh
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---imurmurhash
    |   |       imurmurhash.js
    |   |       imurmurhash.min.js
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---is-extglob
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---is-glob
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---isexe
    |   |   |   .npmignore
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   mode.js
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   windows.js
    |   |   |   
    |   |   \---test
    |   |           basic.js
    |   |           
    |   +---js-tokens
    |   |       CHANGELOG.md
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---js-yaml
    |   |   |   CHANGELOG.md
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---bin
    |   |   |       js-yaml.js
    |   |   |       
    |   |   +---dist
    |   |   |       js-yaml.js
    |   |   |       js-yaml.min.js
    |   |   |       js-yaml.mjs
    |   |   |       
    |   |   \---lib
    |   |       |   common.js
    |   |       |   dumper.js
    |   |       |   exception.js
    |   |       |   loader.js
    |   |       |   schema.js
    |   |       |   snippet.js
    |   |       |   type.js
    |   |       |   
    |   |       +---schema
    |   |       |       core.js
    |   |       |       default.js
    |   |       |       failsafe.js
    |   |       |       json.js
    |   |       |       
    |   |       \---type
    |   |               binary.js
    |   |               bool.js
    |   |               float.js
    |   |               int.js
    |   |               map.js
    |   |               merge.js
    |   |               null.js
    |   |               omap.js
    |   |               pairs.js
    |   |               seq.js
    |   |               set.js
    |   |               str.js
    |   |               timestamp.js
    |   |               
    |   +---jsesc
    |   |   |   jsesc.js
    |   |   |   LICENSE-MIT.txt
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---bin
    |   |   |       jsesc
    |   |   |       
    |   |   \---man
    |   |           jsesc.1
    |   |           
    |   +---json-buffer
    |   |   |   .travis.yml
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---test
    |   |           index.js
    |   |           
    |   +---json-schema-traverse
    |   |   |   .eslintrc.yml
    |   |   |   .travis.yml
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---spec
    |   |       |   .eslintrc.yml
    |   |       |   index.spec.js
    |   |       |   
    |   |       \---fixtures
    |   |               schema.js
    |   |               
    |   +---json-stable-stringify-without-jsonify
    |   |   |   .npmignore
    |   |   |   .travis.yml
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   readme.markdown
    |   |   |   
    |   |   +---example
    |   |   |       key_cmp.js
    |   |   |       nested.js
    |   |   |       str.js
    |   |   |       value_cmp.js
    |   |   |       
    |   |   \---test
    |   |           cmp.js
    |   |           nested.js
    |   |           replacer.js
    |   |           space.js
    |   |           str.js
    |   |           to-json.js
    |   |           
    |   +---json5
    |   |   |   LICENSE.md
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---dist
    |   |   |       index.js
    |   |   |       index.min.js
    |   |   |       index.min.mjs
    |   |   |       index.mjs
    |   |   |       
    |   |   \---lib
    |   |           cli.js
    |   |           index.d.ts
    |   |           index.js
    |   |           parse.d.ts
    |   |           parse.js
    |   |           register.js
    |   |           require.js
    |   |           stringify.d.ts
    |   |           stringify.js
    |   |           unicode.d.ts
    |   |           unicode.js
    |   |           util.d.ts
    |   |           util.js
    |   |           
    |   +---keyv
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---src
    |   |           index.d.ts
    |   |           index.js
    |   |           
    |   +---levn
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           cast.js
    |   |           index.js
    |   |           parse-string.js
    |   |           
    |   +---lightningcss
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---node
    |   |           ast.d.ts
    |   |           ast.js.flow
    |   |           browserslistToTargets.js
    |   |           composeVisitors.js
    |   |           flags.js
    |   |           index.d.ts
    |   |           index.js
    |   |           index.js.flow
    |   |           index.mjs
    |   |           targets.d.ts
    |   |           targets.js.flow
    |   |           
    |   +---lightningcss-win32-x64-msvc
    |   |       LICENSE
    |   |       lightningcss.win32-x64-msvc.node
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---locate-path
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---lodash.merge
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---loose-envify
    |   |       cli.js
    |   |       custom.js
    |   |       index.js
    |   |       LICENSE
    |   |       loose-envify.js
    |   |       package.json
    |   |       README.md
    |   |       replace.js
    |   |       
    |   +---lru-cache
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---math-intrinsics
    |   |   |   .eslintrc
    |   |   |   abs.d.ts
    |   |   |   abs.js
    |   |   |   CHANGELOG.md
    |   |   |   floor.d.ts
    |   |   |   floor.js
    |   |   |   isFinite.d.ts
    |   |   |   isFinite.js
    |   |   |   isInteger.d.ts
    |   |   |   isInteger.js
    |   |   |   isNaN.d.ts
    |   |   |   isNaN.js
    |   |   |   isNegativeZero.d.ts
    |   |   |   isNegativeZero.js
    |   |   |   LICENSE
    |   |   |   max.d.ts
    |   |   |   max.js
    |   |   |   min.d.ts
    |   |   |   min.js
    |   |   |   mod.d.ts
    |   |   |   mod.js
    |   |   |   package.json
    |   |   |   pow.d.ts
    |   |   |   pow.js
    |   |   |   README.md
    |   |   |   round.d.ts
    |   |   |   round.js
    |   |   |   sign.d.ts
    |   |   |   sign.js
    |   |   |   tsconfig.json
    |   |   |   
    |   |   |       FUNDING.yml
    |   |   |       
    |   |   +---constants
    |   |   |       maxArrayLength.d.ts
    |   |   |       maxArrayLength.js
    |   |   |       maxSafeInteger.d.ts
    |   |   |       maxSafeInteger.js
    |   |   |       maxValue.d.ts
    |   |   |       maxValue.js
    |   |   |       
    |   |   \---test
    |   |           index.js
    |   |           
    |   +---mime-db
    |   |       db.json
    |   |       HISTORY.md
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---mime-types
    |   |       HISTORY.md
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---minimatch
    |   |       LICENSE
    |   |       minimatch.js
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---ms
    |   |       index.js
    |   |       license.md
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---nanoid
    |   |   |   index.browser.cjs
    |   |   |   index.browser.js
    |   |   |   index.cjs
    |   |   |   index.d.cts
    |   |   |   index.d.ts
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   nanoid.js
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---async
    |   |   |       index.browser.cjs
    |   |   |       index.browser.js
    |   |   |       index.cjs
    |   |   |       index.d.ts
    |   |   |       index.js
    |   |   |       index.native.js
    |   |   |       package.json
    |   |   |       
    |   |   +---bin
    |   |   |       nanoid.cjs
    |   |   |       
    |   |   +---non-secure
    |   |   |       index.cjs
    |   |   |       index.d.ts
    |   |   |       index.js
    |   |   |       package.json
    |   |   |       
    |   |   \---url-alphabet
    |   |           index.cjs
    |   |           index.js
    |   |           package.json
    |   |           
    |   +---natural-compare
    |   |       index.js
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---node-releases
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---data
    |   |       +---processed
    |   |       |       envs.json
    |   |       |       
    |   |       \---release-schedule
    |   |               release-schedule.json
    |   |               
    |   +---object-assign
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---optionator
    |   |   |   CHANGELOG.md
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           help.js
    |   |           index.js
    |   |           util.js
    |   |           
    |   +---p-limit
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---p-locate
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---parent-module
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---path-exists
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---path-key
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---picocolors
    |   |       LICENSE
    |   |       package.json
    |   |       picocolors.browser.js
    |   |       picocolors.d.ts
    |   |       picocolors.js
    |   |       README.md
    |   |       types.d.ts
    |   |       
    |   +---picomatch
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   posix.js
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           constants.js
    |   |           parse.js
    |   |           picomatch.js
    |   |           scan.js
    |   |           utils.js
    |   |           
    |   +---postcss
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           at-rule.d.ts
    |   |           at-rule.js
    |   |           comment.d.ts
    |   |           comment.js
    |   |           container.d.ts
    |   |           container.js
    |   |           css-syntax-error.d.ts
    |   |           css-syntax-error.js
    |   |           declaration.d.ts
    |   |           declaration.js
    |   |           document.d.ts
    |   |           document.js
    |   |           fromJSON.d.ts
    |   |           fromJSON.js
    |   |           input.d.ts
    |   |           input.js
    |   |           lazy-result.d.ts
    |   |           lazy-result.js
    |   |           list.d.ts
    |   |           list.js
    |   |           map-generator.js
    |   |           no-work-result.d.ts
    |   |           no-work-result.js
    |   |           node.d.ts
    |   |           node.js
    |   |           parse.d.ts
    |   |           parse.js
    |   |           parser.js
    |   |           postcss.d.mts
    |   |           postcss.d.ts
    |   |           postcss.js
    |   |           postcss.mjs
    |   |           previous-map.d.ts
    |   |           previous-map.js
    |   |           processor.d.ts
    |   |           processor.js
    |   |           result.d.ts
    |   |           result.js
    |   |           root.d.ts
    |   |           root.js
    |   |           rule.d.ts
    |   |           rule.js
    |   |           stringifier.d.ts
    |   |           stringifier.js
    |   |           stringify.d.ts
    |   |           stringify.js
    |   |           symbols.js
    |   |           terminal-highlight.js
    |   |           tokenize.js
    |   |           warn-once.js
    |   |           warning.d.ts
    |   |           warning.js
    |   |           
    |   +---postcss-value-parser
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           index.d.ts
    |   |           index.js
    |   |           parse.js
    |   |           stringify.js
    |   |           unit.js
    |   |           walk.js
    |   |           
    |   +---prelude-ls
    |   |   |   CHANGELOG.md
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           Func.js
    |   |           index.js
    |   |           List.js
    |   |           Num.js
    |   |           Obj.js
    |   |           Str.js
    |   |           
    |   +---prop-types
    |   |   |   checkPropTypes.js
    |   |   |   factory.js
    |   |   |   factoryWithThrowingShims.js
    |   |   |   factoryWithTypeCheckers.js
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   prop-types.js
    |   |   |   prop-types.min.js
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           has.js
    |   |           ReactPropTypesSecret.js
    |   |           
    |   +---proxy-from-env
    |   |       .eslintrc
    |   |       .travis.yml
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       test.js
    |   |       
    |   +---punycode
    |   |       LICENSE-MIT.txt
    |   |       package.json
    |   |       punycode.es6.js
    |   |       punycode.js
    |   |       README.md
    |   |       
    |   +---react
    |   |   |   compiler-runtime.js
    |   |   |   index.js
    |   |   |   jsx-dev-runtime.js
    |   |   |   jsx-dev-runtime.react-server.js
    |   |   |   jsx-runtime.js
    |   |   |   jsx-runtime.react-server.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   react.react-server.js
    |   |   |   README.md
    |   |   |   
    |   |   \---cjs
    |   |           react-compiler-runtime.development.js
    |   |           react-compiler-runtime.production.js
    |   |           react-compiler-runtime.profiling.js
    |   |           react-jsx-dev-runtime.development.js
    |   |           react-jsx-dev-runtime.production.js
    |   |           react-jsx-dev-runtime.profiling.js
    |   |           react-jsx-dev-runtime.react-server.development.js
    |   |           react-jsx-dev-runtime.react-server.production.js
    |   |           react-jsx-runtime.development.js
    |   |           react-jsx-runtime.production.js
    |   |           react-jsx-runtime.profiling.js
    |   |           react-jsx-runtime.react-server.development.js
    |   |           react-jsx-runtime.react-server.production.js
    |   |           react.development.js
    |   |           react.production.js
    |   |           react.react-server.development.js
    |   |           react.react-server.production.js
    |   |           
    |   +---react-dom
    |   |   |   client.js
    |   |   |   client.react-server.js
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   profiling.js
    |   |   |   profiling.react-server.js
    |   |   |   react-dom.react-server.js
    |   |   |   README.md
    |   |   |   server.browser.js
    |   |   |   server.bun.js
    |   |   |   server.edge.js
    |   |   |   server.js
    |   |   |   server.node.js
    |   |   |   server.react-server.js
    |   |   |   static.browser.js
    |   |   |   static.edge.js
    |   |   |   static.js
    |   |   |   static.node.js
    |   |   |   static.react-server.js
    |   |   |   test-utils.js
    |   |   |   
    |   |   \---cjs
    |   |           react-dom-client.development.js
    |   |           react-dom-client.production.js
    |   |           react-dom-profiling.development.js
    |   |           react-dom-profiling.profiling.js
    |   |           react-dom-server-legacy.browser.development.js
    |   |           react-dom-server-legacy.browser.production.js
    |   |           react-dom-server-legacy.node.development.js
    |   |           react-dom-server-legacy.node.production.js
    |   |           react-dom-server.browser.development.js
    |   |           react-dom-server.browser.production.js
    |   |           react-dom-server.bun.development.js
    |   |           react-dom-server.bun.production.js
    |   |           react-dom-server.edge.development.js
    |   |           react-dom-server.edge.production.js
    |   |           react-dom-server.node.development.js
    |   |           react-dom-server.node.production.js
    |   |           react-dom-test-utils.development.js
    |   |           react-dom-test-utils.production.js
    |   |           react-dom.development.js
    |   |           react-dom.production.js
    |   |           react-dom.react-server.development.js
    |   |           react-dom.react-server.production.js
    |   |           
    |   +---react-imask
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---dist
    |   |   |       react-imask.cjs
    |   |   |       react-imask.cjs.map
    |   |   |       react-imask.js
    |   |   |       react-imask.js.map
    |   |   |       
    |   |   \---esm
    |   |           hook.d.ts
    |   |           hook.d.ts.map
    |   |           hook.js
    |   |           index.d.ts
    |   |           index.d.ts.map
    |   |           index.js
    |   |           input.d.ts
    |   |           input.d.ts.map
    |   |           input.js
    |   |           mixin.d.ts
    |   |           mixin.d.ts.map
    |   |           mixin.js
    |   |           
    |   +---react-is
    |   |   |   build-info.json
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---cjs
    |   |   |       react-is.development.js
    |   |   |       react-is.production.min.js
    |   |   |       
    |   |   \---umd
    |   |           react-is.development.js
    |   |           react-is.production.min.js
    |   |           
    |   +---react-refresh
    |   |   |   babel.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   runtime.js
    |   |   |   
    |   |   \---cjs
    |   |           react-refresh-babel.development.js
    |   |           react-refresh-babel.production.js
    |   |           react-refresh-runtime.development.js
    |   |           react-refresh-runtime.production.js
    |   |           
    |   +---react-router
    |   |   |   CHANGELOG.md
    |   |   |   LICENSE.md
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---dist
    |   |       +---development
    |   |       |   |   browser-z32v5KVN.d.mts
    |   |       |   |   chunk-72XNTZCV.js
    |   |       |   |   chunk-DI2QHYMJ.js
    |   |       |   |   chunk-OIYGIGL5.mjs
    |   |       |   |   chunk-WY5IRSCW.mjs
    |   |       |   |   context-DSyS5mLj.d.mts
    |   |       |   |   dom-export.d.mts
    |   |       |   |   dom-export.d.ts
    |   |       |   |   dom-export.js
    |   |       |   |   dom-export.mjs
    |   |       |   |   index-react-server-client-BbRcBjrA.d.ts
    |   |       |   |   index-react-server-client-BIz4AUNd.d.mts
    |   |       |   |   index-react-server-client.d.mts
    |   |       |   |   index-react-server-client.d.ts
    |   |       |   |   index-react-server-client.js
    |   |       |   |   index-react-server-client.mjs
    |   |       |   |   index-react-server.d.mts
    |   |       |   |   index-react-server.d.ts
    |   |       |   |   index-react-server.js
    |   |       |   |   index-react-server.mjs
    |   |       |   |   index.d.mts
    |   |       |   |   index.d.ts
    |   |       |   |   index.js
    |   |       |   |   index.mjs
    |   |       |   |   register-C34pU-in.d.ts
    |   |       |   |   register-CI4bTprK.d.mts
    |   |       |   |   route-data-DZQOUSqV.d.mts
    |   |       |   |   routeModules-D5iJ6JYT.d.ts
    |   |       |   |   
    |   |       |   \---lib
    |   |       |       \---types
    |   |       |               internal.d.mts
    |   |       |               internal.d.ts
    |   |       |               internal.js
    |   |       |               internal.mjs
    |   |       |               
    |   |       \---production
    |   |           |   browser-z32v5KVN.d.mts
    |   |           |   chunk-3TADTUL4.mjs
    |   |           |   chunk-4E5LHRQP.js
    |   |           |   chunk-FR6HSPLK.mjs
    |   |           |   chunk-WNLQ53P5.js
    |   |           |   context-DSyS5mLj.d.mts
    |   |           |   dom-export.d.mts
    |   |           |   dom-export.d.ts
    |   |           |   dom-export.js
    |   |           |   dom-export.mjs
    |   |           |   index-react-server-client-BbRcBjrA.d.ts
    |   |           |   index-react-server-client-BIz4AUNd.d.mts
    |   |           |   index-react-server-client.d.mts
    |   |           |   index-react-server-client.d.ts
    |   |           |   index-react-server-client.js
    |   |           |   index-react-server-client.mjs
    |   |           |   index-react-server.d.mts
    |   |           |   index-react-server.d.ts
    |   |           |   index-react-server.js
    |   |           |   index-react-server.mjs
    |   |           |   index.d.mts
    |   |           |   index.d.ts
    |   |           |   index.js
    |   |           |   index.mjs
    |   |           |   register-C34pU-in.d.ts
    |   |           |   register-CI4bTprK.d.mts
    |   |           |   route-data-DZQOUSqV.d.mts
    |   |           |   routeModules-D5iJ6JYT.d.ts
    |   |           |   
    |   |           \---lib
    |   |               \---types
    |   |                       internal.d.mts
    |   |                       internal.d.ts
    |   |                       internal.js
    |   |                       internal.mjs
    |   |                       
    |   +---react-router-dom
    |   |   |   LICENSE.md
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---dist
    |   |           index.d.mts
    |   |           index.d.ts
    |   |           index.js
    |   |           index.mjs
    |   |           
    |   +---resolve-from
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---rolldown
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   
    |   |   +---bin
    |   |   |       cli.mjs
    |   |   |       
    |   |   +---dist
    |   |   |   |   cli.d.mts
    |   |   |   |   cli.mjs
    |   |   |   |   config.d.mts
    |   |   |   |   config.mjs
    |   |   |   |   experimental-index.d.mts
    |   |   |   |   experimental-index.mjs
    |   |   |   |   experimental-runtime-types.d.ts
    |   |   |   |   filter-index.d.mts
    |   |   |   |   filter-index.mjs
    |   |   |   |   index.d.mts
    |   |   |   |   index.mjs
    |   |   |   |   parallel-plugin-worker.d.mts
    |   |   |   |   parallel-plugin-worker.mjs
    |   |   |   |   parallel-plugin.d.mts
    |   |   |   |   parallel-plugin.mjs
    |   |   |   |   parse-ast-index.d.mts
    |   |   |   |   parse-ast-index.mjs
    |   |   |   |   
    |   |   |   \---shared
    |   |   |           binding-DOpOtI1J.d.mts
    |   |   |           define-config-BZ_n3PjJ.d.mts
    |   |   |           load-config-DkgIoWHl.mjs
    |   |   |           logger-ClMekpHZ.mjs
    |   |   |           misc-CQeo-AFx.mjs
    |   |   |           parse-ast-index-D2PcAmXE.mjs
    |   |   |           prompt-R6XhwkxA.mjs
    |   |   |           src-DkvlJJsC.mjs
    |   |   |           
    |   |       \---@rolldown
    |   |           \---pluginutils
    |   |               |   LICENSE
    |   |               |   package.json
    |   |               |   README.md
    |   |               |   
    |   |               \---dist
    |   |                       index.d.mts
    |   |                       index.mjs
    |   |                       
    |   +---scheduler
    |   |   |   index.js
    |   |   |   index.native.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   unstable_mock.js
    |   |   |   unstable_post_task.js
    |   |   |   
    |   |   \---cjs
    |   |           scheduler-unstable_mock.development.js
    |   |           scheduler-unstable_mock.production.js
    |   |           scheduler-unstable_post_task.development.js
    |   |           scheduler-unstable_post_task.production.js
    |   |           scheduler.development.js
    |   |           scheduler.native.development.js
    |   |           scheduler.native.production.js
    |   |           scheduler.production.js
    |   |           
    |   +---semver
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   range.bnf
    |   |   |   README.md
    |   |   |   semver.js
    |   |   |   
    |   |   \---bin
    |   |           semver.js
    |   |           
    |   +---set-cookie-parser
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           set-cookie.js
    |   |           
    |   +---shallowequal
    |   |       index.js
    |   |       index.js.flow
    |   |       index.original.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---shebang-command
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---shebang-regex
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---source-map-js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   source-map.d.ts
    |   |   |   source-map.js
    |   |   |   
    |   |   \---lib
    |   |           array-set.js
    |   |           base64-vlq.js
    |   |           base64.js
    |   |           binary-search.js
    |   |           mapping-list.js
    |   |           quick-sort.js
    |   |           source-map-consumer.d.ts
    |   |           source-map-consumer.js
    |   |           source-map-generator.d.ts
    |   |           source-map-generator.js
    |   |           source-node.d.ts
    |   |           source-node.js
    |   |           util.js
    |   |           
    |   +---strip-json-comments
    |   |       index.d.ts
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---styled-components
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---dist
    |   |   |   |   base.d.ts
    |   |   |   |   constants.d.ts
    |   |   |   |   index-standalone.d.ts
    |   |   |   |   index.d.ts
    |   |   |   |   secretInternals.d.ts
    |   |   |   |   styled-components.browser.cjs.js
    |   |   |   |   styled-components.browser.cjs.js.map
    |   |   |   |   styled-components.browser.esm.js
    |   |   |   |   styled-components.browser.esm.js.map
    |   |   |   |   styled-components.cjs.js
    |   |   |   |   styled-components.cjs.js.map
    |   |   |   |   styled-components.esm.js
    |   |   |   |   styled-components.esm.js.map
    |   |   |   |   styled-components.js
    |   |   |   |   styled-components.js.map
    |   |   |   |   styled-components.min.js
    |   |   |   |   styled-components.min.js.map
    |   |   |   |   types.d.ts
    |   |   |   |   
    |   |   |   +---constructors
    |   |   |   |       constructWithOptions.d.ts
    |   |   |   |       createGlobalStyle.d.ts
    |   |   |   |       css.d.ts
    |   |   |   |       keyframes.d.ts
    |   |   |   |       styled.d.ts
    |   |   |   |       
    |   |   |   +---hoc
    |   |   |   |       withTheme.d.ts
    |   |   |   |       withTheme.spec.d.ts
    |   |   |   |       
    |   |   |   +---models
    |   |   |   |       ComponentStyle.d.ts
    |   |   |   |       GlobalStyle.d.ts
    |   |   |   |       InlineStyle.d.ts
    |   |   |   |       Keyframes.d.ts
    |   |   |   |       ServerStyleSheet.d.ts
    |   |   |   |       StyledComponent.d.ts
    |   |   |   |       StyledNativeComponent.d.ts
    |   |   |   |       StyleSheetManager.d.ts
    |   |   |   |       ThemeProvider.d.ts
    |   |   |   |       
    |   |   |   +---native
    |   |   |   |       index.d.ts
    |   |   |   |       
    |   |   |   +---sheet
    |   |   |   |       dom.d.ts
    |   |   |   |       GroupedTag.d.ts
    |   |   |   |       GroupIDAllocator.d.ts
    |   |   |   |       index.d.ts
    |   |   |   |       Rehydration.d.ts
    |   |   |   |       Sheet.d.ts
    |   |   |   |       Tag.d.ts
    |   |   |   |       types.d.ts
    |   |   |   |       
    |   |   |   +---test
    |   |   |   |       globals.d.ts
    |   |   |   |       utils.d.ts
    |   |   |   |       veryLargeUnionType.d.ts
    |   |   |   |       
    |   |   |   \---utils
    |   |   |           addUnitIfNeeded.d.ts
    |   |   |           checkDynamicCreation.d.ts
    |   |   |           createWarnTooManyClasses.d.ts
    |   |   |           determineTheme.d.ts
    |   |   |           domElements.d.ts
    |   |   |           empties.d.ts
    |   |   |           error.d.ts
    |   |   |           errors.d.ts
    |   |   |           escape.d.ts
    |   |   |           flatten.d.ts
    |   |   |           generateAlphabeticName.d.ts
    |   |   |           generateComponentId.d.ts
    |   |   |           generateDisplayName.d.ts
    |   |   |           getComponentName.d.ts
    |   |   |           hash.d.ts
    |   |   |           hoist.d.ts
    |   |   |           hyphenateStyleName.d.ts
    |   |   |           interleave.d.ts
    |   |   |           isFunction.d.ts
    |   |   |           isPlainObject.d.ts
    |   |   |           isStatelessFunction.d.ts
    |   |   |           isStaticRules.d.ts
    |   |   |           isStyledComponent.d.ts
    |   |   |           isTag.d.ts
    |   |   |           joinStrings.d.ts
    |   |   |           mixinDeep.d.ts
    |   |   |           nonce.d.ts
    |   |   |           setToString.d.ts
    |   |   |           stylis.d.ts
    |   |   |           
    |   |   +---native
    |   |   |   |   package.json
    |   |   |   |   
    |   |   |   \---dist
    |   |   |       |   base.d.ts
    |   |   |       |   constants.d.ts
    |   |   |       |   index-standalone.d.ts
    |   |   |       |   index.d.ts
    |   |   |       |   secretInternals.d.ts
    |   |   |       |   styled-components.native.cjs.js
    |   |   |       |   styled-components.native.cjs.js.map
    |   |   |       |   styled-components.native.esm.js
    |   |   |       |   styled-components.native.esm.js.map
    |   |   |       |   types.d.ts
    |   |   |       |   
    |   |   |       +---constructors
    |   |   |       |       constructWithOptions.d.ts
    |   |   |       |       createGlobalStyle.d.ts
    |   |   |       |       css.d.ts
    |   |   |       |       keyframes.d.ts
    |   |   |       |       styled.d.ts
    |   |   |       |       
    |   |   |       +---dist
    |   |   |       |   |   base.d.ts
    |   |   |       |   |   constants.d.ts
    |   |   |       |   |   index-standalone.d.ts
    |   |   |       |   |   index.d.ts
    |   |   |       |   |   secretInternals.d.ts
    |   |   |       |   |   types.d.ts
    |   |   |       |   |   
    |   |   |       |   +---constructors
    |   |   |       |   |       constructWithOptions.d.ts
    |   |   |       |   |       createGlobalStyle.d.ts
    |   |   |       |   |       css.d.ts
    |   |   |       |   |       keyframes.d.ts
    |   |   |       |   |       styled.d.ts
    |   |   |       |   |       
    |   |   |       |   +---hoc
    |   |   |       |   |       withTheme.d.ts
    |   |   |       |   |       withTheme.spec.d.ts
    |   |   |       |   |       
    |   |   |       |   +---models
    |   |   |       |   |       ComponentStyle.d.ts
    |   |   |       |   |       GlobalStyle.d.ts
    |   |   |       |   |       InlineStyle.d.ts
    |   |   |       |   |       Keyframes.d.ts
    |   |   |       |   |       ServerStyleSheet.d.ts
    |   |   |       |   |       StyledComponent.d.ts
    |   |   |       |   |       StyledNativeComponent.d.ts
    |   |   |       |   |       StyleSheetManager.d.ts
    |   |   |       |   |       ThemeProvider.d.ts
    |   |   |       |   |       
    |   |   |       |   +---native
    |   |   |       |   |       index.d.ts
    |   |   |       |   |       
    |   |   |       |   +---sheet
    |   |   |       |   |       dom.d.ts
    |   |   |       |   |       GroupedTag.d.ts
    |   |   |       |   |       GroupIDAllocator.d.ts
    |   |   |       |   |       index.d.ts
    |   |   |       |   |       Rehydration.d.ts
    |   |   |       |   |       Sheet.d.ts
    |   |   |       |   |       Tag.d.ts
    |   |   |       |   |       types.d.ts
    |   |   |       |   |       
    |   |   |       |   +---test
    |   |   |       |   |       globals.d.ts
    |   |   |       |   |       utils.d.ts
    |   |   |       |   |       veryLargeUnionType.d.ts
    |   |   |       |   |       
    |   |   |       |   \---utils
    |   |   |       |           addUnitIfNeeded.d.ts
    |   |   |       |           checkDynamicCreation.d.ts
    |   |   |       |           createWarnTooManyClasses.d.ts
    |   |   |       |           determineTheme.d.ts
    |   |   |       |           domElements.d.ts
    |   |   |       |           empties.d.ts
    |   |   |       |           error.d.ts
    |   |   |       |           errors.d.ts
    |   |   |       |           escape.d.ts
    |   |   |       |           flatten.d.ts
    |   |   |       |           generateAlphabeticName.d.ts
    |   |   |       |           generateComponentId.d.ts
    |   |   |       |           generateDisplayName.d.ts
    |   |   |       |           getComponentName.d.ts
    |   |   |       |           hash.d.ts
    |   |   |       |           hoist.d.ts
    |   |   |       |           hyphenateStyleName.d.ts
    |   |   |       |           interleave.d.ts
    |   |   |       |           isFunction.d.ts
    |   |   |       |           isPlainObject.d.ts
    |   |   |       |           isStatelessFunction.d.ts
    |   |   |       |           isStaticRules.d.ts
    |   |   |       |           isStyledComponent.d.ts
    |   |   |       |           isTag.d.ts
    |   |   |       |           joinStrings.d.ts
    |   |   |       |           mixinDeep.d.ts
    |   |   |       |           nonce.d.ts
    |   |   |       |           setToString.d.ts
    |   |   |       |           stylis.d.ts
    |   |   |       |           
    |   |   |       +---hoc
    |   |   |       |       withTheme.d.ts
    |   |   |       |       withTheme.spec.d.ts
    |   |   |       |       
    |   |   |       +---models
    |   |   |       |       ComponentStyle.d.ts
    |   |   |       |       GlobalStyle.d.ts
    |   |   |       |       InlineStyle.d.ts
    |   |   |       |       Keyframes.d.ts
    |   |   |       |       ServerStyleSheet.d.ts
    |   |   |       |       StyledComponent.d.ts
    |   |   |       |       StyledNativeComponent.d.ts
    |   |   |       |       StyleSheetManager.d.ts
    |   |   |       |       ThemeProvider.d.ts
    |   |   |       |       
    |   |   |       +---native
    |   |   |       |       index.d.ts
    |   |   |       |       
    |   |   |       +---sheet
    |   |   |       |       dom.d.ts
    |   |   |       |       GroupedTag.d.ts
    |   |   |       |       GroupIDAllocator.d.ts
    |   |   |       |       index.d.ts
    |   |   |       |       Rehydration.d.ts
    |   |   |       |       Sheet.d.ts
    |   |   |       |       Tag.d.ts
    |   |   |       |       types.d.ts
    |   |   |       |       
    |   |   |       +---test
    |   |   |       |       globals.d.ts
    |   |   |       |       utils.d.ts
    |   |   |       |       veryLargeUnionType.d.ts
    |   |   |       |       
    |   |   |       \---utils
    |   |   |               addUnitIfNeeded.d.ts
    |   |   |               checkDynamicCreation.d.ts
    |   |   |               createWarnTooManyClasses.d.ts
    |   |   |               determineTheme.d.ts
    |   |   |               domElements.d.ts
    |   |   |               empties.d.ts
    |   |   |               error.d.ts
    |   |   |               errors.d.ts
    |   |   |               escape.d.ts
    |   |   |               flatten.d.ts
    |   |   |               generateAlphabeticName.d.ts
    |   |   |               generateComponentId.d.ts
    |   |   |               generateDisplayName.d.ts
    |   |   |               getComponentName.d.ts
    |   |   |               hash.d.ts
    |   |   |               hoist.d.ts
    |   |   |               hyphenateStyleName.d.ts
    |   |   |               interleave.d.ts
    |   |   |               isFunction.d.ts
    |   |   |               isPlainObject.d.ts
    |   |   |               isStatelessFunction.d.ts
    |   |   |               isStaticRules.d.ts
    |   |   |               isStyledComponent.d.ts
    |   |   |               isTag.d.ts
    |   |   |               joinStrings.d.ts
    |   |   |               mixinDeep.d.ts
    |   |   |               nonce.d.ts
    |   |   |               setToString.d.ts
    |   |   |               stylis.d.ts
    |   |   |               
    |   |   |   +---postcss
    |   |   |   |   |   LICENSE
    |   |   |   |   |   package.json
    |   |   |   |   |   README.md
    |   |   |   |   |   
    |   |   |   |   \---lib
    |   |   |   |           at-rule.d.ts
    |   |   |   |           at-rule.js
    |   |   |   |           comment.d.ts
    |   |   |   |           comment.js
    |   |   |   |           container.d.ts
    |   |   |   |           container.js
    |   |   |   |           css-syntax-error.d.ts
    |   |   |   |           css-syntax-error.js
    |   |   |   |           declaration.d.ts
    |   |   |   |           declaration.js
    |   |   |   |           document.d.ts
    |   |   |   |           document.js
    |   |   |   |           fromJSON.d.ts
    |   |   |   |           fromJSON.js
    |   |   |   |           input.d.ts
    |   |   |   |           input.js
    |   |   |   |           lazy-result.d.ts
    |   |   |   |           lazy-result.js
    |   |   |   |           list.d.ts
    |   |   |   |           list.js
    |   |   |   |           map-generator.js
    |   |   |   |           no-work-result.d.ts
    |   |   |   |           no-work-result.js
    |   |   |   |           node.d.ts
    |   |   |   |           node.js
    |   |   |   |           parse.d.ts
    |   |   |   |           parse.js
    |   |   |   |           parser.js
    |   |   |   |           postcss.d.mts
    |   |   |   |           postcss.d.ts
    |   |   |   |           postcss.js
    |   |   |   |           postcss.mjs
    |   |   |   |           previous-map.d.ts
    |   |   |   |           previous-map.js
    |   |   |   |           processor.d.ts
    |   |   |   |           processor.js
    |   |   |   |           result.d.ts
    |   |   |   |           result.js
    |   |   |   |           root.d.ts
    |   |   |   |           root.js
    |   |   |   |           rule.d.ts
    |   |   |   |           rule.js
    |   |   |   |           stringifier.d.ts
    |   |   |   |           stringifier.js
    |   |   |   |           stringify.d.ts
    |   |   |   |           stringify.js
    |   |   |   |           symbols.js
    |   |   |   |           terminal-highlight.js
    |   |   |   |           tokenize.js
    |   |   |   |           warn-once.js
    |   |   |   |           warning.d.ts
    |   |   |   |           warning.js
    |   |   |   |           
    |   |   |   \---tslib
    |   |   |       |   CopyrightNotice.txt
    |   |   |       |   LICENSE.txt
    |   |   |       |   package.json
    |   |   |       |   README.md
    |   |   |       |   SECURITY.md
    |   |   |       |   tslib.d.ts
    |   |   |       |   tslib.es6.html
    |   |   |       |   tslib.es6.js
    |   |   |       |   tslib.es6.mjs
    |   |   |       |   tslib.html
    |   |   |       |   tslib.js
    |   |   |       |   
    |   |   |       \---modules
    |   |   |               index.d.ts
    |   |   |               index.js
    |   |   |               package.json
    |   |   |               
    |   |   \---test-utils
    |   |           index.ts
    |   |           setupTestFramework.ts
    |   |           
    |   +---stylis
    |   |   |   index.js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---dist
    |   |   |   |   stylis.mjs
    |   |   |   |   stylis.mjs.map
    |   |   |   |   
    |   |   |   \---umd
    |   |   |           package.json
    |   |   |           stylis.js
    |   |   |           stylis.js.map
    |   |   |           
    |   |   \---src
    |   |           Enum.js
    |   |           Middleware.js
    |   |           Parser.js
    |   |           Prefixer.js
    |   |           Serializer.js
    |   |           Tokenizer.js
    |   |           Utility.js
    |   |           
    |   +---supports-color
    |   |       browser.js
    |   |       index.js
    |   |       license
    |   |       package.json
    |   |       readme.md
    |   |       
    |   +---tinyglobby
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---dist
    |   |           index.cjs
    |   |           index.d.cts
    |   |           index.d.mts
    |   |           index.mjs
    |   |           
    |   +---type-check
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   \---lib
    |   |           check.js
    |   |           index.js
    |   |           parse-type.js
    |   |           
    |   +---update-browserslist-db
    |   |       check-npm-version.js
    |   |       cli.js
    |   |       index.d.ts
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       utils.js
    |   |       
    |   +---uri-js
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   yarn.lock
    |   |   |   
    |   |   \---dist
    |   |       +---es5
    |   |       |       uri.all.d.ts
    |   |       |       uri.all.js
    |   |       |       uri.all.js.map
    |   |       |       uri.all.min.d.ts
    |   |       |       uri.all.min.js
    |   |       |       uri.all.min.js.map
    |   |       |       
    |   |       \---esnext
    |   |           |   index.d.ts
    |   |           |   index.js
    |   |           |   index.js.map
    |   |           |   regexps-iri.d.ts
    |   |           |   regexps-iri.js
    |   |           |   regexps-iri.js.map
    |   |           |   regexps-uri.d.ts
    |   |           |   regexps-uri.js
    |   |           |   regexps-uri.js.map
    |   |           |   uri.d.ts
    |   |           |   uri.js
    |   |           |   uri.js.map
    |   |           |   util.d.ts
    |   |           |   util.js
    |   |           |   util.js.map
    |   |           |   
    |   |           \---schemes
    |   |                   http.d.ts
    |   |                   http.js
    |   |                   http.js.map
    |   |                   https.d.ts
    |   |                   https.js
    |   |                   https.js.map
    |   |                   mailto.d.ts
    |   |                   mailto.js
    |   |                   mailto.js.map
    |   |                   urn-uuid.d.ts
    |   |                   urn-uuid.js
    |   |                   urn-uuid.js.map
    |   |                   urn.d.ts
    |   |                   urn.js
    |   |                   urn.js.map
    |   |                   ws.d.ts
    |   |                   ws.js
    |   |                   ws.js.map
    |   |                   wss.d.ts
    |   |                   wss.js
    |   |                   wss.js.map
    |   |                   
    |   +---vite
    |   |   |   client.d.ts
    |   |   |   LICENSE.md
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   
    |   |   +---bin
    |   |   |       openChrome.js
    |   |   |       vite.js
    |   |   |       
    |   |   +---dist
    |   |   |   +---client
    |   |   |   |       client.mjs
    |   |   |   |       env.mjs
    |   |   |   |       
    |   |   |   \---node
    |   |   |       |   cli.js
    |   |   |       |   index.d.ts
    |   |   |       |   index.js
    |   |   |       |   internal.d.ts
    |   |   |       |   internal.js
    |   |   |       |   module-runner.d.ts
    |   |   |       |   module-runner.js
    |   |   |       |   moduleRunnerTransport-BWUZBVLX.d.ts
    |   |   |       |   
    |   |   |       \---chunks
    |   |   |               dep-051OznfA.js
    |   |   |               dep-BuoK8Wda.js
    |   |   |               dep-C6dq4MJq.js
    |   |   |               dep-CABPayRf.js
    |   |   |               dep-CCSnTAeo.js
    |   |   |               dep-CflGQ_6l.js
    |   |   |               dep-CUPMaghF.js
    |   |   |               dep-CwrJo3zV.js
    |   |   |               dep-DrqJEUj9.js
    |   |   |               dep-D_S0E78I.js
    |   |   |               dep-lCKrEJQm.js
    |   |   |               dep-ySrR9pW8.js
    |   |   |               
    |   |   +---misc
    |   |   |       false.js
    |   |   |       true.js
    |   |   |       
    |   |   \---types
    |   |       |   customEvent.d.ts
    |   |       |   hmrPayload.d.ts
    |   |       |   hot.d.ts
    |   |       |   import-meta.d.ts
    |   |       |   importGlob.d.ts
    |   |       |   importMeta.d.ts
    |   |       |   metadata.d.mts
    |   |       |   package.json
    |   |       |   
    |   |       \---internal
    |   |               cssPreprocessorOptions.d.ts
    |   |               esbuildOptions.d.ts
    |   |               lightningcssOptions.d.ts
    |   |               rollupTypeCompat.d.mts
    |   |               terserOptions.d.ts
    |   |               
    |   +---which
    |   |   |   CHANGELOG.md
    |   |   |   LICENSE
    |   |   |   package.json
    |   |   |   README.md
    |   |   |   which.js
    |   |   |   
    |   |   \---bin
    |   |           node-which
    |   |           
    |   +---word-wrap
    |   |       index.d.ts
    |   |       index.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       
    |   +---yallist
    |   |       iterator.js
    |   |       LICENSE
    |   |       package.json
    |   |       README.md
    |   |       yallist.js
    |   |       
    |   \---yocto-queue
    |           index.d.ts
    |           index.js
    |           license
    |           package.json
    |           readme.md
    |           
    +---public
    |       vite.svg
    |       
    \---src
            App.jsx
            GlobalStylejs
            main.jsx
            
 
 
====================================================== 
[CONTEUDO DOS ARQUIVOS DE CODIGO-FONTE] 
====================================================== 
[AVISO] Arquivo nao encontrado: .env 
[AVISO] Arquivo nao encontrado: 01_INICIAR_BACKEND.bat 
[AVISO] Arquivo nao encontrado: 02_INICIAR_FRONTEND.bat 
 
------------------------------------------------------ 
[ARQUIVO]: 00_GERAR_CONTEXTO.bat 
------------------------------------------------------ 
@echo off
setlocal

:: Define o nome do arquivo de saida
set "OUTPUT_FILE=Projeto_Contexto_Completo.txt"

echo Gerando relatorio de contexto em %OUTPUT_FILE%...
echo Isso pode levar alguns segundos...

:: Inicia o arquivo (sobrescreve se existir)
echo [RELATORIO DE CONTEXTO DO PROJETO MEDISHIFTNEO] > %OUTPUT_FILE%
echo Gerado em: %DATE% %TIME% >> %OUTPUT_FILE%
echo. >> %OUTPUT_FILE%
echo. >> %OUTPUT_FILE%

:: ======================================================
:: 1. ESTRUTURA DE PASTAS
:: ======================================================
echo ====================================================== >> %OUTPUT_FILE%
echo [ESTRUTURA DE PASTAS E ARQUIVOS] >> %OUTPUT_FILE%
echo (Ignorando 'node_modules' e '.git' para maior clareza) >> %OUTPUT_FILE%
echo ====================================================== >> %OUTPUT_FILE%

:: Lista a arvore, /F para arquivos, /A para caracteres ASCII
:: O 'findstr /V' e usado para EXCLUIR linhas que contem "node_modules" ou ".git"
tree /F /A | findstr /V /I /C:"node_modules" /C:".git" >> %OUTPUT_FILE%

echo. >> %OUTPUT_FILE%
echo. >> %OUTPUT_FILE%

:: ======================================================
:: 2. CONTEUDO DOS ARQUIVOS
:: ======================================================
echo ====================================================== >> %OUTPUT_FILE%
echo [CONTEUDO DOS ARQUIVOS DE CODIGO-FONTE] >> %OUTPUT_FILE%
echo ====================================================== >> %OUTPUT_FILE%

:: --- ARQUIVOS DA RAIZ ---
call :PrintFile ".env"
call :PrintFile "01_INICIAR_BACKEND.bat"
call :PrintFile "02_INICIAR_FRONTEND.bat"
call :PrintFile "00_GERAR_CONTEXTO.bat"

:: --- ARQUIVOS DO BACKEND ---
echo. >> %OUTPUT_FILE%
echo --- INICIO BACKEND --- >> %OUTPUT_FILE%
for /R .\backend %%F in (*.js, *.prisma, package.json) do (
    echo "%%F" | findstr /V /I /C:"node_modules" > nul
    if errorlevel 0 (
        call :PrintFile "%%F"
    )
)
echo --- FIM BACKEND --- >> %OUTPUT_FILE%

:: --- ARQUIVOS DO FRONTEND ---
echo. >> %OUTPUT_FILE%
echo --- INICIO FRONTEND --- >> %OUTPUT_FILE%

:: Arquivos principais do frontend
call :PrintFile "frontend\package.json"
call :PrintFile "frontend\public\index.html"

:: Arquivos da pasta 'src' (JSX, JS, CSS)
for /R .\frontend\src %%F in (*.jsx, *.js, *.css) do (
    echo "%%F" | findstr /V /I /C:"node_modules" > nul
    if errorlevel 0 (
        call :PrintFile "%%F"
    )
)
echo --- FIM FRONTEND --- >> %OUTPUT_FILE%


echo. >> %OUTPUT_FILE%
echo [FIM DO RELATORIO] >> %OUTPUT_FILE%

echo.
echo Concluido!
echo O arquivo %OUTPUT_FILE% foi gerado/atualizado na pasta do projeto.
echo.
echo Proximo passo: Abra esse arquivo, copie TODO o conteudo e cole aqui no chat.

:: Encerra o script principal
goto :eof

:: ======================================================
:: SUBROTINA :PrintFile
:: Imprime um cabecalho e o conteudo de um arquivo
:: Parametro %1: Caminho do arquivo
:: ======================================================
:PrintFile
if not exist %1 (
    echo [AVISO] Arquivo nao encontrado: %~1 >> %OUTPUT_FILE%
) else (
    echo. >> %OUTPUT_FILE%
    echo ------------------------------------------------------ >> %OUTPUT_FILE%
    echo [ARQUIVO]: %~1 >> %OUTPUT_FILE%
    echo ------------------------------------------------------ >> %OUTPUT_FILE%
    type %1 >> %OUTPUT_FILE%
    echo. >> %OUTPUT_FILE%
)
goto :eof
pause 
 
--- INICIO BACKEND --- 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\auditLogger.js 
------------------------------------------------------ 
// Documentação: Este é o nosso assistente de auditoria.
// Ele centraliza a lógica de como salvar um log no banco de dados.

const db = require('./db.js'); // Importa a conexão com o banco

/**
 * Registra um evento na tabela de Auditoria.
 * @param {object} logData - Os dados do log.
 * @param {number} logData.autorId - ID do colaborador que fez a ação (opcional).
 * @param {string} logData.acao - A ação realizada (ex: 'CRIAR_COLABORADOR').
 * @param {string} logData.entidade - A tabela afetada (ex: 'Colaborador').
 * @param {number} logData.entidadeId - O ID do registro afetado (ex: o ID do novo colaborador).
 * @param {object} logData.diffs - O que mudou (JSON).
 */
function registrarLog(logData) {
  // Define valores padrão
  const {
    autorId = null, // No futuro, pegaremos isso do usuário logado
    acao,
    entidade = null,
    entidadeId = null,
    diffs = {},
    motivo = null,
    origem = 'API_SERVER', // De onde veio a ação
    versaoApp = '0.1.0'
  } = logData;

  // Converte o objeto 'diffs' em texto JSON para salvar no banco
  const diffsJson = JSON.stringify(diffs);

  const sql = `
    INSERT INTO Auditoria 
    (autorId, acao, entidade, entidadeId, diffs, motivo, origem, versaoApp) 
    VALUES (?, ?, ?, ?, ?, ?, ?, ?)
  `;

  db.run(sql, [autorId, acao, entidade, entidadeId, diffsJson, motivo, origem, versaoApp], (err) => {
    if (err) {
      console.error('ERRO AO REGISTRAR LOG DE AUDITORIA:', err.message);
    } else {
      console.log(`[Auditoria] Log registrado: ${acao}`);
    }
  });
}

// "Exporta" a função para que outros arquivos (como o server.js) possam usá-la
module.exports = {
  registrarLog
}; 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\authMiddleware.js 
------------------------------------------------------ 
// Documentação: Middleware de autenticação.
// [MODIFICADO] Agora usa 'funcao' em vez de 'papel'.

const jwt = require('jsonwebtoken');
const JWT_SECRET = 'MediShiftNeo_eh_o_melhor_projeto_do_mundo_12345';

function authMiddleware(req, res, next) {
  const authHeader = req.headers['authorization'];
  const token = authHeader && authHeader.split(' ')[1]; 

  if (token == null) {
    return res.status(401).json({ error: 'Token não fornecido.' });
  }

  jwt.verify(token, JWT_SECRET, (err, colaborador) => {
    if (err) {
      return res.status(403).json({ error: 'Token inválido.' });
    }

    // [MODIFICADO] Anexamos o colaborador ao 'req'
    // O payload do token agora terá 'funcao'
    req.colaborador = colaborador;
    
    next();
  });
}

module.exports = authMiddleware; 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\database.js 
------------------------------------------------------ 
// Documentação: Configuração do banco de dados SQLite.
// [MODIFICADO] Refatoração 2.0 (Função, Coordenador, Foto, Plantão, Unidade)

const sqlite3 = require('sqlite3').verbose();
const DB_FILE = 'medishiftneo.db';

const db = new sqlite3.Database(DB_FILE, (err) => {
  if (err) {
    console.error('Erro ao conectar ao banco de dados:', err.message);
  } else {
    console.log('Conectado ao banco de dados SQLite.');
    db.serialize(() => {
      createTableColaborador();
      createTableUnidade(); // [NOVO] Tabela de Unidades
      createTableShift();
      createTableResidente();
      createTableAuditoria();
    });
    db.close((err) => {
      if (err) { console.error('Erro ao fechar o banco de dados:', err.message); } 
      else { console.log('Conexão com o banco de dados fechada após setup.'); }
    });
  }
});

// 1. Tabela Colaborador
function createTableColaborador() {
  const sql = `
    CREATE TABLE IF NOT EXISTS Colaborador (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      nome TEXT NOT NULl,
      email TEXT UNIQUE,
      telefone TEXT UNIQUE,
      senha TEXT NOT NULL,
      funcao TEXT NOT NULL CHECK(funcao IN ('Admin', 'Coordenador', 'Operador')),
      status TEXT NOT NULL DEFAULT 'ativo',
      lingua TEXT DEFAULT 'pt-br',
      fuso TEXT DEFAULT 'America/Sao_Paulo',
      foto TEXT,
      createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
      updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP
    );
  `;
  db.run(sql, (err) => {
    if (err) { console.error('Erro ao criar tabela Colaborador:', err.message); } 
    else { console.log('Tabela "Colaborador" (Refatorada) verificada/criada com sucesso.'); }
  });
}

// 2. [NOVO] Tabela Unidade (para o menu suspenso)
function createTableUnidade() {
  const sql = `
    CREATE TABLE IF NOT EXISTS Unidade (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      nome TEXT NOT NULL UNIQUE
    );
  `;
  db.run(sql, (err) => {
    if (err) { console.error('Erro ao criar tabela Unidade:', err.message); } 
    else { console.log('Tabela "Unidade" verificada/criada com sucesso.'); }
  });
}

// 3. Tabela Shift (Plantão)
function createTableShift() {
  const sql = `
    CREATE TABLE IF NOT EXISTS Shift (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      unidadeId INTEGER NOT NULL,
      dataPlantao DATE NOT NULL,
      turno TEXT NOT NULL CHECK(turno IN ('Dia', 'Noite')),
      status TEXT NOT NULL CHECK(status IN ('ABERTO', 'REVISAO', 'FECHADO')) DEFAULT 'ABERTO',
      participantes TEXT, 
      coResponsaveis TEXT,
      notasAdmin TEXT,
      referenciaId INTEGER,
      createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
      updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (unidadeId) REFERENCES Unidade(id),
      FOREIGN KEY (referenciaId) REFERENCES Colaborador(id)
    );
  `;
  db.run(sql, (err) => {
    if (err) { console.error('Erro ao criar tabela Shift:', err.message); } 
    else { console.log('Tabela "Shift" (Refatorada) verificada/criada com sucesso.'); }
  });
}

// 4. Tabela Residente (Inalterada por enquanto)
function createTableResidente() {
  const sql = `
    CREATE TABLE IF NOT EXISTS Residente (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      nome TEXT NOT NULL, identificacao TEXT UNIQUE, dataNasc DATE,
      contatos TEXT, tags TEXT, ativo INTEGER DEFAULT 1,
      createdAt DATETIME DEFAULT CURRENT_TIMESTAMP, updatedAt DATETIME
    );
  `;
  db.run(sql, (err) => {
    if (err) { console.error('Erro ao criar tabela Residente:', err.message); } 
    else { console.log('Tabela "Residente" verificada/criada com sucesso.'); }
  });
}

// 5. Tabela Auditoria
function createTableAuditoria() {
  const sql = `
    CREATE TABLE IF NOT EXISTS Auditoria (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
      autorId INTEGER, acao TEXT NOT NULL, entidade TEXT, entidadeId INTEGER,
      diffs TEXT, motivo TEXT, origem TEXT, versaoApp TEXT,
      FOREIGN KEY (autorId) REFERENCES Colaborador(id)
    );
  `;
  db.run(sql, (err) => {
    if (err) { console.error('Erro ao criar tabela Auditoria:', err.message); } 
    else { console.log('Tabela "Auditoria" verificada/criada com sucesso.'); }
  });
} 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\db.js 
------------------------------------------------------ 
// Documentação: Este arquivo centraliza a conexão com o banco de dados SQLite.

const sqlite3 = require('sqlite3').verbose();
const DB_FILE = 'medishiftneo.db';

// Conecta ao banco de dados
const db = new sqlite3.Database(DB_FILE, (err) => {
  if (err) {
    console.error('Erro ao conectar ao banco de dados:', err.message);
  } else {
    // Não precisamos criar tabelas aqui,
    // o 'database.js' que rodamos antes já fez isso.
    console.log('Conectado ao banco de dados SQLite (a partir do db.js).');
  }
});

// "Exporta" a variável 'db' para que outros arquivos possam importá-la
module.exports = db; 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\seed_admin.js 
------------------------------------------------------ 
// Documentação: Script de uso único para criar o primeiro Admin (Versão Corrigida 2.0)

const sqlite3 = require('sqlite3').verbose();
const bcrypt = require('bcryptjs');

// --- Definições do Admin ---
// IMPORTANTE: Use este TELEFONE e senha para logar
const adminTelefone = '(99) 99999-9999';
const adminEmail = 'admin@medishiftneo.com';
const adminSenhaPura = 'admin123';
const adminNome = 'Admin Master';
const DB_FILE = 'medishiftneo.db';
// ----------------------------

console.log('Iniciando script para criar o primeiro admin...');

const db = new sqlite3.Database(DB_FILE, (err) => {
  if (err) { return console.error('Erro ao conectar ao banco:', err.message); }
  console.log('Conectado ao banco de dados SQLite (conexão local).');

  bcrypt.hash(adminSenhaPura, 10, (err, hash) => {
    if (err) {
      console.error('Erro ao hashear a senha:', err.message);
      db.close();
      return;
    }
    console.log('Senha hasheada com sucesso.');

    // [MODIFICADO] Agora usa 'funcao' e insere o 'telefone' como login
    const sql = `
      INSERT INTO Colaborador 
      (nome, email, telefone, senha, funcao, status) 
      VALUES (?, ?, ?, ?, ?, ?)
    `;
    db.run(sql, [adminNome, adminEmail, adminTelefone, hash, 'Admin', 'ativo'], function(err) {
      if (err) {
        if (err.errno === 19) { 
          console.warn('AVISO: O Admin (ou esse email/telefone) já existe no banco.');
        } else {
          console.error('Erro ao inserir admin no banco:', err.message);
        }
      } else {
        console.log(`SUCESSO: Colaborador "${adminNome}" (ID: ${this.lastID}) foi criado.`);
        console.log(`Use este TELEFONE para logar: ${adminTelefone}`);
        console.log(`Use esta senha para logar: ${adminSenhaPura}`);
      }

      // 5. Fechar a conexão local
      db.close((err) => {
        if (err) { console.error('Erro ao fechar o banco:', err.message); } 
        else { console.log('Conexão local com o banco fechada.'); }
      });
    });
  });
}); 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\server.js 
------------------------------------------------------ 
// Documentação: Arquivo principal do servidor.
// [MODIFICADO] Adicionados console.log para depuração.

const express = require('express');
const cors = require('cors');
const db = require('./db.js');
const { registrarLog } = require('./auditLogger.js');
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');
const authMiddleware = require('./authMiddleware.js');

const JWT_SECRET = 'MediShiftNeo_eh_o_melhor_projeto_do_mundo_12345';
const app = express();
const PORT = 3001;
const corsOptions = { origin: 'http://localhost:5173' };

console.log('>>> PONTO 1: Iniciando configuração do Express...');
app.use(cors(corsOptions));
app.use(express.json());
console.log('>>> PONTO 2: Middlewares iniciais (cors, json) configurados.');

// --- ROTAS PÚBLICAS ---
app.get('/api', (req, res) => {
  console.log('>>> ROTA PÚBLICA /api ACESSADA <<<');
  res.json({ message: 'API do Backend MediShiftNeo está no ar!' });
});

app.post('/api/login', (req, res) => {
  console.log('>>> ROTA PÚBLICA /api/login ACESSADA <<<');
  const { telefone, senha } = req.body;
  // ... (restante do código de login inalterado, exceto por logs internos se necessário) ...
  if (!telefone || !senha) { return res.status(400).json({ error: 'Telefone e Senha são obrigatórios.' }); }
  const sql = "SELECT * FROM Colaborador WHERE telefone = ?";
  console.log('>>> Login: Buscando colaborador...');
  db.get(sql, [telefone], (err, colaborador) => {
    if (err) { console.error('!!! Erro no db.get (login):', err.message); return res.status(500).json({ error: 'Erro interno do servidor.' }); }
    if (!colaborador) { console.log('>>> Login: Colaborador não encontrado.'); return res.status(401).json({ error: 'Credenciais inválidas.' }); }
    console.log('>>> Login: Colaborador encontrado. Comparando senha...');
    bcrypt.compare(senha, colaborador.senha, (err, isMatch) => {
      if (err) { console.error('!!! Erro no bcrypt.compare:', err.message); return res.status(500).json({ error: 'Erro ao verificar a senha.' }); }
      if (!isMatch) { console.log('>>> Login: Senha incorreta.'); return res.status(401).json({ error: 'Credenciais inválidas.' }); }
      console.log('>>> Login: Senha correta. Gerando token...');
      const payload = { id: colaborador.id, nome: colaborador.nome, funcao: colaborador.funcao };
      jwt.sign(payload, JWT_SECRET, { expiresIn: '8h' }, (err, token) => {
        if (err) { console.error('!!! Erro no jwt.sign:', err.message); return res.status(500).json({ error: 'Erro ao gerar o token de login.' }); }
        console.log('>>> Login: Token gerado. Enviando resposta.');
        res.json({ message: 'Login bem-sucedido!', token: token, colaborador: payload });
      });
    });
  });
});

// --- ATIVANDO O "SEGURANÇA" ---
console.log('>>> PONTO 3: Configurando middleware de autenticação...');
// Modificando para logar dentro do middleware também
const wrappedAuthMiddleware = (req, res, next) => {
    console.log('>>> MIDDLEWARE AUTH: Verificando token...');
    authMiddleware(req, res, (err) => {
        if (err) {
             console.error('!!! Erro DENTRO do authMiddleware:', err);
             // Se o próprio middleware retornar um erro (embora não devesse no nosso código)
             return res.status(500).json({ error: 'Erro interno no middleware de autenticação.'});
        }
        if (!res.headersSent) { // Só chama next se a resposta não foi enviada ainda
             console.log('>>> MIDDLEWARE AUTH: Token OK, passando para próxima rota.');
             next();
        } else {
             console.log('>>> MIDDLEWARE AUTH: Resposta já enviada (provavelmente erro 401 ou 403).');
        }
    });
};
app.use(wrappedAuthMiddleware);
console.log('>>> PONTO 4: Middleware de autenticação ATIVADO.');

// --- ROTAS PROTEGIDAS ---

// --- ROTAS DE COLABORADORES ---
app.get('/api/colaboradores', (req, res) => {
  console.log('>>> ROTA PROTEGIDA /api/colaboradores (GET) ACESSADA <<<');
  const sql = "SELECT id, nome, email, telefone, funcao, status FROM Colaborador";
  console.log('>>> Colaboradores GET: Executando SQL...');
  db.all(sql, [], (err, rows) => {
    console.log('>>> Colaboradores GET: Callback do db.all.');
    if (err) { console.error('!!! Erro no db.all (GET Colab):', err.message); res.status(500).json({ error: err.message }); return; }
    console.log('>>> Colaboradores GET: Enviando resposta.');
    res.json({ colaboradores: rows });
  });
});

// ... (Restante das rotas POST, PUT, DELETE Colaborador, Unidade, Shift, Residente, Auditoria) ...
// Adicionar logs semelhantes (`console.log('>>> ROTA X ACESSADA <<<');` no início de cada uma)
// e antes/depois das chamadas de banco (`db.get`, `db.run`, `db.all`) se necessário.

// --- ROTAS DE UNIDADES ---
app.get('/api/unidades', (req, res) => {
  console.log('>>> ROTA PROTEGIDA /api/unidades (GET) ACESSADA <<<');
  const sql = "SELECT * FROM Unidade ORDER BY nome";
   console.log('>>> Unidades GET: Executando SQL...');
  db.all(sql, [], (err, rows) => {
    console.log('>>> Unidades GET: Callback do db.all.');
    if (err) { res.status(500).json({ error: err.message }); return; }
    console.log('>>> Unidades GET: Enviando resposta.');
    res.json({ unidades: rows });
  });
});
// ... (POST, DELETE Unidade com logs) ...

// --- ROTAS DE PLANTÕES (SHIFTS) ---
app.get('/api/shifts', (req, res) => {
  console.log('>>> ROTA PROTEGIDA /api/shifts (GET) ACESSADA <<<');
  const sql = `SELECT s.id, s.dataPlantao, s.turno, s.status, s.participantes, s.referenciaId, u.nome as nomeUnidade FROM Shift s JOIN Unidade u ON s.unidadeId = u.id ORDER BY s.dataPlantao DESC, s.turno DESC`;
  console.log('>>> Shifts GET: Executando SQL...');
  db.all(sql, [], (err, rows) => {
     console.log('>>> Shifts GET: Callback do db.all.');
    if (err) { res.status(500).json({ error: err.message }); return; }
     console.log('>>> Shifts GET: Enviando resposta.');
    res.json({ shifts: rows });
  });
});
// ... (POST Shift com logs) ...


// --- ROTAS DE RESIDENTES ---
app.get('/api/residentes', (req, res) => {
   console.log('>>> ROTA PROTEGIDA /api/residentes (GET) ACESSADA <<<');
  const sql = "SELECT id, nome, identificacao, dataNasc FROM Residente WHERE ativo = 1 ORDER BY nome";
  console.log('>>> Residentes GET: Executando SQL...');
  db.all(sql, [], (err, rows) => {
    console.log('>>> Residentes GET: Callback do db.all.');
    if (err) { res.status(500).json({ error: err.message }); return; }
    console.log('>>> Residentes GET: Enviando resposta.');
    res.json({ residentes: rows });
  });
});
// ... (POST Residente com logs) ...

// --- ROTA DE AUDITORIA ---
app.get('/api/auditoria', (req, res) => {
  console.log('>>> ROTA PROTEGIDA /api/auditoria (GET) ACESSADA <<<');
  const sql = "SELECT * FROM Auditoria ORDER BY timestamp DESC";
  console.log('>>> Auditoria GET: Executando SQL...');
  db.all(sql, [], (err, rows) => {
     console.log('>>> Auditoria GET: Callback do db.all.');
    if (err) { res.status(500).json({ error: err.message }); return; }
    console.log('>>> Auditoria GET: Enviando resposta.');
    res.json({ logs: rows });
  });
});

// --- FIM DAS ROTAS DA API ---

console.log('>>> PONTO 5: Configuração das rotas concluída.');

app.listen(PORT, () => {
  console.log(`>>> PONTO 6: Servidor INICIADO e rodando na porta ${PORT} <<<`);
});

// --- CÓDIGO RESTANTE (POST/PUT/DELETE com logs adicionados se necessário) ---
// (Adicione `console.log` no início e antes/depois de `db.run` nas rotas restantes se quiser depuração completa)
// ... (Código completo das rotas POST/PUT/DELETE Colaborador, Unidade, Shift, Residente) ...

// Copiando o restante para garantir que não falte nada (sem adicionar logs extras aqui por brevidade)
// POST Colaboradores
app.post('/api/colaboradores', (req, res) => { console.log('>>> ROTA PROTEGIDA /api/colaboradores (POST) ACESSADA <<<'); const { nome, email, telefone, funcao, senha } = req.body; if (!nome || !funcao || !senha) { return res.status(400).json({ error: 'Nome, Função e Senha são obrigatórios.' }); } bcrypt.hash(senha, 10, (err, hash) => { if (err) { return res.status(500).json({ error: 'Erro ao hashear a senha.' }); } const sql = `INSERT INTO Colaborador (nome, email, telefone, senha, funcao, status) VALUES (?, ?, ?, ?, ?, ?)`; db.run(sql, [nome, email, telefone, hash, funcao, 'ativo'], function(err) { if (err) { console.error('ERRO NO INSERT DO COLABORADOR:', err.message); res.status(500).json({ error: err.message }); return; } const novoId = this.lastID; const logBody = { ...req.body }; delete logBody.senha; registrarLog({ autorId: req.colaborador.id, acao: 'CRIAR_COLABORADOR', entidade: 'Colaborador', entidadeId: novoId, diffs: { novo: logBody } }); res.status(201).json({ message: 'Colaborador criado com sucesso!', colaboradorId: novoId }); }); }); });
// PUT Colaboradores
app.put('/api/colaboradores/:id', (req, res) => { console.log('>>> ROTA PROTEGIDA /api/colaboradores/:id (PUT) ACESSADA <<<'); const colaboradorId = req.params.id; const { nome, email, telefone, funcao } = req.body; db.get("SELECT * FROM Colaborador WHERE id = ?", [colaboradorId], (err, antigoColaborador) => { if (err) { return res.status(500).json({ error: 'Erro ao buscar dados antigos.' }); } if (!antigoColaborador) { return res.status(404).json({ error: 'Colaborador não encontrado.' }); } const dadosAntigosLog = { nome: antigoColaborador.nome, email: antigoColaborador.email, telefone: antigoColaborador.telefone, funcao: antigoColaborador.funcao, }; const sql = `UPDATE Colaborador SET nome = ?, email = ?, telefone = ?, funcao = ? WHERE id = ?`; db.run(sql, [nome, email, telefone, funcao, colaboradorId], function(err) { if (err) { return res.status(500).json({ error: err.message }); } registrarLog({ autorId: req.colaborador.id, acao: 'EDITAR_COLABORADOR', entidade: 'Colaborador', entidadeId: colaboradorId, diffs: { antigo: dadosAntigosLog, novo: req.body } }); res.json({ message: 'Colaborador atualizado com sucesso!' }); }); }); });
// PUT Status Colaborador
app.put('/api/colaboradores/:id/status', (req, res) => { console.log('>>> ROTA PROTEGIDA /api/colaboradores/:id/status (PUT) ACESSADA <<<'); const colaboradorId = req.params.id; const { novoStatus } = req.body; if (novoStatus !== 'ativo' && novoStatus !== 'inativo') { return res.status(400).json({ error: "Status deve ser 'ativo' ou 'inativo'." }); } db.get("SELECT status FROM Colaborador WHERE id = ?", [colaboradorId], (err, antigoColaborador) => { if (err) { return res.status(500).json({ error: 'Erro ao buscar status antigo.' }); } if (!antigoColaborador) { return res.status(404).json({ error: 'Colaborador não encontrado.' }); } const sql = `UPDATE Colaborador SET status = ? WHERE id = ?`; db.run(sql, [novoStatus, colaboradorId], function(err) { if (err) { return res.status(500).json({ error: err.message }); } registrarLog({ autorId: req.colaborador.id, acao: 'MUDAR_STATUS_COLABORADOR', entidade: 'Colaborador', entidadeId: colaboradorId, diffs: { antigo: { status: antigoColaborador.status }, novo: { status: novoStatus } } }); res.json({ message: `Colaborador ${novoStatus} com sucesso!` }); }); }); });
// DELETE Colaborador
app.delete('/api/colaboradores/:id', (req, res) => { console.log('>>> ROTA PROTEGIDA /api/colaboradores/:id (DELETE) ACESSADA <<<'); if (req.colaborador.funcao !== 'Admin') { return res.status(403).json({ error: 'Acesso negado. Apenas Admins podem excluir colaboradores.' }); } const colaboradorId = req.params.id; db.get("SELECT * FROM Colaborador WHERE id = ?", [colaboradorId], (err, colaborador) => { if (err) { return res.status(500).json({ error: 'Erro ao buscar dados.' }); } if (!colaborador) { return res.status(404).json({ error: 'Colaborador não encontrado.' }); } const sql = `DELETE FROM Colaborador WHERE id = ?`; db.run(sql, [colaboradorId], function(err) { if (err) { return res.status(500).json({ error: err.message }); } registrarLog({ autorId: req.colaborador.id, acao: 'EXCLUIR_COLABORADOR', entidade: 'Colaborador', entidadeId: colaboradorId, diffs: { antigo: colaborador } }); res.json({ message: `Colaborador (ID: ${colaboradorId}) excluído com sucesso!` }); }); }); });
// POST Unidades
app.post('/api/unidades', (req, res) => { console.log('>>> ROTA PROTEGIDA /api/unidades (POST) ACESSADA <<<'); if (req.colaborador.funcao !== 'Admin' && req.colaborador.funcao !== 'Coordenador') { return res.status(403).json({ error: 'Acesso negado.' }); } const { nome } = req.body; if (!nome) { return res.status(400).json({ error: 'Nome é obrigatório.' }); } const sql = `INSERT INTO Unidade (nome) VALUES (?)`; db.run(sql, [nome], function(err) { if (err) { if (err.errno === 19) { return res.status(409).json({ error: 'Erro: Nome da unidade já existe.' }); } res.status(500).json({ error: err.message }); return; } const novoId = this.lastID; registrarLog({ autorId: req.colaborador.id, acao: 'CRIAR_UNIDADE', entidade: 'Unidade', entidadeId: novoId, diffs: { novo: req.body } }); res.status(201).json({ message: 'Unidade criada com sucesso!', unidadeId: novoId }); }); });
// DELETE Unidades
app.delete('/api/unidades/:id', (req, res) => { console.log('>>> ROTA PROTEGIDA /api/unidades/:id (DELETE) ACESSADA <<<'); if (req.colaborador.funcao !== 'Admin' && req.colaborador.funcao !== 'Coordenador') { return res.status(403).json({ error: 'Acesso negado.' }); } const unidadeId = req.params.id; db.get("SELECT * FROM Unidade WHERE id = ?", [unidadeId], (err, unidade) => { if (err) { return res.status(500).json({ error: 'Erro ao buscar dados.' }); } if (!unidade) { return res.status(404).json({ error: 'Unidade não encontrada.' }); } const sql = `DELETE FROM Unidade WHERE id = ?`; db.run(sql, [unidadeId], function(err) { if (err) { return res.status(500).json({ error: 'Erro ao excluir. Verifique se a unidade está em uso por algum plantão.' }); } registrarLog({ autorId: req.colaborador.id, acao: 'EXCLUIR_UNIDADE', entidade: 'Unidade', entidadeId: unidadeId, diffs: { antigo: unidade } }); res.json({ message: `Unidade (ID: ${unidadeId}) excluída com sucesso!` }); }); }); });
// POST Shifts
app.post('/api/shifts', (req, res) => { console.log('>>> ROTA PROTEGIDA /api/shifts (POST) ACESSADA <<<'); const { unidadeId, dataPlantao, turno, participantes } = req.body; if (!unidadeId || !dataPlantao || !turno) { return res.status(400).json({ error: 'Unidade, Data e Turno são obrigatórios.' }); } if (turno !== 'Dia' && turno !== 'Noite') { return res.status(400).json({ error: "Turno deve ser 'Dia' ou 'Noite'." }); } if (!/^\d{4}-\d{2}-\d{2}$/.test(dataPlantao)) { return res.status(400).json({ error: 'Formato de Data inválido. Use YYYY-MM-DD.' }); } const participantesJson = JSON.stringify(participantes || []); const sql = `INSERT INTO Shift (unidadeId, dataPlantao, turno, participantes) VALUES (?, ?, ?, ?)`; db.run(sql, [unidadeId, dataPlantao, turno, participantesJson], function(err) { if (err) { res.status(500).json({ error: err.message }); return; } const novoId = this.lastID; registrarLog({ autorId: req.colaborador.id, acao: 'CRIAR_PLANTAO', entidade: 'Shift', entidadeId: novoId, diffs: { novo: req.body } }); res.status(201).json({ message: 'Plantão criado com sucesso!', shiftId: novoId }); }); });
// POST Residentes
app.post('/api/residentes', (req, res) => { console.log('>>> ROTA PROTEGIDA /api/residentes (POST) ACESSADA <<<'); const { nome, identificacao, dataNasc } = req.body; if (!nome) { return res.status(400).json({ error: 'Nome é obrigatório.' }); } const sql = `INSERT INTO Residente (nome, identificacao, dataNasc) VALUES (?, ?, ?)`; db.run(sql, [nome, identificacao, dataNasc], function(err) { if (err) { if (err.errno === 19) { return res.status(409).json({ error: 'Erro: Identificação já existe.' }); } res.status(500).json({ error: err.message }); return; } const novoId = this.lastID; registrarLog({ autorId: req.colaborador.id, acao: 'CRIAR_RESIDENTE', entidade: 'Residente', entidadeId: novoId, diffs: { novo: req.body } }); res.status(201).json({ message: 'Residente criado com sucesso!', residenteId: novoId }); }); }); 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\package.json 
------------------------------------------------------ 
{
  "name": "backend",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "bcryptjs": "^3.0.2",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "jsonwebtoken": "^9.0.2",
    "sqlite3": "^5.1.7"
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\package.json 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\.bin\package.json 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@gar\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@gar\promisify\index.js 
------------------------------------------------------ 
'use strict'

const { promisify } = require('util')

const handler = {
  get: function (target, prop, receiver) {
    if (typeof target[prop] !== 'function') {
      return target[prop]
    }
    if (target[prop][promisify.custom]) {
      return function () {
        return Reflect.get(target, prop, receiver)[promisify.custom].apply(target, arguments)
      }
    }
    return function () {
      return new Promise((resolve, reject) => {
        Reflect.get(target, prop, receiver).apply(target, [...arguments, function (err, result) {
          if (err) {
            return reject(err)
          }
          resolve(result)
        }])
      })
    }
  }
}

module.exports = function (thingToPromisify) {
  if (typeof thingToPromisify === 'function') {
    return promisify(thingToPromisify)
  }
  if (typeof thingToPromisify === 'object') {
    return new Proxy(thingToPromisify, handler)
  }
  throw new TypeError('Can only promisify functions or objects')
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@gar\promisify\package.json 
------------------------------------------------------ 
{
  "name": "@gar/promisify",
  "version": "1.1.3",
  "description": "Promisify an entire class or object",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/wraithgar/gar-promisify.git"
  },
  "scripts": {
    "lint": "standard",
    "lint:fix": "standard --fix",
    "test": "lab -a @hapi/code -t 100",
    "posttest": "npm run lint"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "promisify",
    "all",
    "class",
    "object"
  ],
  "author": "Gar <gar+npm@danger.computer>",
  "license": "MIT",
  "devDependencies": {
    "@hapi/code": "^8.0.1",
    "@hapi/lab": "^24.1.0",
    "standard": "^16.0.3"
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\package.json 
------------------------------------------------------ 
{
  "name": "@npmcli/fs",
  "version": "1.1.1",
  "description": "filesystem utilities for the npm cli",
  "main": "lib/index.js",
  "files": [
    "bin",
    "lib"
  ],
  "scripts": {
    "preversion": "npm test",
    "postversion": "npm publish",
    "prepublishOnly": "git push origin --follow-tags",
    "snap": "tap",
    "test": "tap",
    "npmclilint": "npmcli-lint",
    "lint": "eslint '**/*.js'",
    "lintfix": "npm run lint -- --fix",
    "posttest": "npm run lint",
    "postsnap": "npm run lintfix --",
    "postlint": "npm-template-check"
  },
  "keywords": [
    "npm",
    "oss"
  ],
  "author": "GitHub Inc.",
  "license": "ISC",
  "devDependencies": {
    "@npmcli/template-oss": "^2.3.1",
    "tap": "^15.0.9"
  },
  "dependencies": {
    "@gar/promisify": "^1.0.1",
    "semver": "^7.3.5"
  },
  "templateVersion": "2.3.1"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\copy-file.js 
------------------------------------------------------ 
const fs = require('./fs.js')
const getOptions = require('./common/get-options.js')
const owner = require('./common/owner.js')

const copyFile = async (src, dest, opts) => {
  const options = getOptions(opts, {
    copy: ['mode', 'owner'],
    wrap: 'mode',
  })

  const { uid, gid } = await owner.validate(dest, options.owner)

  // the node core method as of 16.5.0 does not support the mode being in an
  // object, so we have to pass the mode value directly
  const result = await fs.copyFile(src, dest, options.mode)

  await owner.update(dest, uid, gid)

  return result
}

module.exports = copyFile
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\errors.js 
------------------------------------------------------ 
'use strict'
const { inspect } = require('util')

// adapted from node's internal/errors
// https://github.com/nodejs/node/blob/c8a04049/lib/internal/errors.js

// close copy of node's internal SystemError class.
class SystemError {
  constructor (code, prefix, context) {
    // XXX context.code is undefined in all constructors used in cp/polyfill
    // that may be a bug copied from node, maybe the constructor should use
    // `code` not `errno`?  nodejs/node#41104
    let message = `${prefix}: ${context.syscall} returned ` +
                  `${context.code} (${context.message})`

    if (context.path !== undefined) {
      message += ` ${context.path}`
    }
    if (context.dest !== undefined) {
      message += ` => ${context.dest}`
    }

    this.code = code
    Object.defineProperties(this, {
      name: {
        value: 'SystemError',
        enumerable: false,
        writable: true,
        configurable: true,
      },
      message: {
        value: message,
        enumerable: false,
        writable: true,
        configurable: true,
      },
      info: {
        value: context,
        enumerable: true,
        configurable: true,
        writable: false,
      },
      errno: {
        get () {
          return context.errno
        },
        set (value) {
          context.errno = value
        },
        enumerable: true,
        configurable: true,
      },
      syscall: {
        get () {
          return context.syscall
        },
        set (value) {
          context.syscall = value
        },
        enumerable: true,
        configurable: true,
      },
    })

    if (context.path !== undefined) {
      Object.defineProperty(this, 'path', {
        get () {
          return context.path
        },
        set (value) {
          context.path = value
        },
        enumerable: true,
        configurable: true,
      })
    }

    if (context.dest !== undefined) {
      Object.defineProperty(this, 'dest', {
        get () {
          return context.dest
        },
        set (value) {
          context.dest = value
        },
        enumerable: true,
        configurable: true,
      })
    }
  }

  toString () {
    return `${this.name} [${this.code}]: ${this.message}`
  }

  [Symbol.for('nodejs.util.inspect.custom')] (_recurseTimes, ctx) {
    return inspect(this, {
      ...ctx,
      getters: true,
      customInspect: false,
    })
  }
}

function E (code, message) {
  module.exports[code] = class NodeError extends SystemError {
    constructor (ctx) {
      super(code, message, ctx)
    }
  }
}

E('ERR_FS_CP_DIR_TO_NON_DIR', 'Cannot overwrite directory with non-directory')
E('ERR_FS_CP_EEXIST', 'Target already exists')
E('ERR_FS_CP_EINVAL', 'Invalid src or dest')
E('ERR_FS_CP_FIFO_PIPE', 'Cannot copy a FIFO pipe')
E('ERR_FS_CP_NON_DIR_TO_DIR', 'Cannot overwrite non-directory with directory')
E('ERR_FS_CP_SOCKET', 'Cannot copy a socket file')
E('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY', 'Cannot overwrite symlink in subdirectory of self')
E('ERR_FS_CP_UNKNOWN', 'Cannot copy an unknown file type')
E('ERR_FS_EISDIR', 'Path is a directory')

module.exports.ERR_INVALID_ARG_TYPE = class ERR_INVALID_ARG_TYPE extends Error {
  constructor (name, expected, actual) {
    super()
    this.code = 'ERR_INVALID_ARG_TYPE'
    this.message = `The ${name} argument must be ${expected}. Received ${typeof actual}`
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\fs.js 
------------------------------------------------------ 
const fs = require('fs')
const promisify = require('@gar/promisify')

// this module returns the core fs module wrapped in a proxy that promisifies
// method calls within the getter. we keep it in a separate module so that the
// overridden methods have a consistent way to get to promisified fs methods
// without creating a circular dependency
module.exports = promisify(fs)
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\index.js 
------------------------------------------------------ 
module.exports = {
  ...require('./fs.js'),
  copyFile: require('./copy-file.js'),
  cp: require('./cp/index.js'),
  mkdir: require('./mkdir/index.js'),
  mkdtemp: require('./mkdtemp.js'),
  rm: require('./rm/index.js'),
  withTempDir: require('./with-temp-dir.js'),
  writeFile: require('./write-file.js'),
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\mkdtemp.js 
------------------------------------------------------ 
const { dirname, sep } = require('path')

const fs = require('./fs.js')
const getOptions = require('./common/get-options.js')
const owner = require('./common/owner.js')

const mkdtemp = async (prefix, opts) => {
  const options = getOptions(opts, {
    copy: ['encoding', 'owner'],
    wrap: 'encoding',
  })

  // mkdtemp relies on the trailing path separator to indicate if it should
  // create a directory inside of the prefix. if that's the case then the root
  // we infer ownership from is the prefix itself, otherwise it's the dirname
  // /tmp -> /tmpABCDEF, infers from /
  // /tmp/ -> /tmp/ABCDEF, infers from /tmp
  const root = prefix.endsWith(sep) ? prefix : dirname(prefix)
  const { uid, gid } = await owner.validate(root, options.owner)

  const result = await fs.mkdtemp(prefix, options)

  await owner.update(result, uid, gid)

  return result
}

module.exports = mkdtemp
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\with-temp-dir.js 
------------------------------------------------------ 
const { join, sep } = require('path')

const getOptions = require('./common/get-options.js')
const mkdir = require('./mkdir/index.js')
const mkdtemp = require('./mkdtemp.js')
const rm = require('./rm/index.js')

// create a temp directory, ensure its permissions match its parent, then call
// the supplied function passing it the path to the directory. clean up after
// the function finishes, whether it throws or not
const withTempDir = async (root, fn, opts) => {
  const options = getOptions(opts, {
    copy: ['tmpPrefix'],
  })
  // create the directory, and fix its ownership
  await mkdir(root, { recursive: true, owner: 'inherit' })

  const target = await mkdtemp(join(`${root}${sep}`, options.tmpPrefix || ''), { owner: 'inherit' })
  let err
  let result

  try {
    result = await fn(target)
  } catch (_err) {
    err = _err
  }

  try {
    await rm(target, { force: true, recursive: true })
  } catch (err) {}

  if (err) {
    throw err
  }

  return result
}

module.exports = withTempDir
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\write-file.js 
------------------------------------------------------ 
const fs = require('./fs.js')
const getOptions = require('./common/get-options.js')
const owner = require('./common/owner.js')

const writeFile = async (file, data, opts) => {
  const options = getOptions(opts, {
    copy: ['encoding', 'mode', 'flag', 'signal', 'owner'],
    wrap: 'encoding',
  })
  const { uid, gid } = await owner.validate(file, options.owner)

  const result = await fs.writeFile(file, data, options)

  await owner.update(file, uid, gid)

  return result
}

module.exports = writeFile
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\common\get-options.js 
------------------------------------------------------ 
// given an input that may or may not be an object, return an object that has
// a copy of every defined property listed in 'copy'. if the input is not an
// object, assign it to the property named by 'wrap'
const getOptions = (input, { copy, wrap }) => {
  const result = {}

  if (input && typeof input === 'object') {
    for (const prop of copy) {
      if (input[prop] !== undefined) {
        result[prop] = input[prop]
      }
    }
  } else {
    result[wrap] = input
  }

  return result
}

module.exports = getOptions
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\common\node.js 
------------------------------------------------------ 
const semver = require('semver')

const satisfies = (range) => {
  return semver.satisfies(process.version, range, { includePrerelease: true })
}

module.exports = {
  satisfies,
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\common\owner.js 
------------------------------------------------------ 
const { dirname, resolve } = require('path')

const fileURLToPath = require('./file-url-to-path/index.js')
const fs = require('../fs.js')

// given a path, find the owner of the nearest parent
const find = async (path) => {
  // if we have no getuid, permissions are irrelevant on this platform
  if (!process.getuid) {
    return {}
  }

  // fs methods accept URL objects with a scheme of file: so we need to unwrap
  // those into an actual path string before we can resolve it
  const resolved = path != null && path.href && path.origin
    ? resolve(fileURLToPath(path))
    : resolve(path)

  let stat

  try {
    stat = await fs.lstat(resolved)
  } finally {
    // if we got a stat, return its contents
    if (stat) {
      return { uid: stat.uid, gid: stat.gid }
    }

    // try the parent directory
    if (resolved !== dirname(resolved)) {
      return find(dirname(resolved))
    }

    // no more parents, never got a stat, just return an empty object
    return {}
  }
}

// given a path, uid, and gid update the ownership of the path if necessary
const update = async (path, uid, gid) => {
  // nothing to update, just exit
  if (uid === undefined && gid === undefined) {
    return
  }

  try {
    // see if the permissions are already the same, if they are we don't
    // need to do anything, so return early
    const stat = await fs.stat(path)
    if (uid === stat.uid && gid === stat.gid) {
      return
    }
  } catch (err) {}

  try {
    await fs.chown(path, uid, gid)
  } catch (err) {}
}

// accepts a `path` and the `owner` property of an options object and normalizes
// it into an object with numerical `uid` and `gid`
const validate = async (path, input) => {
  let uid
  let gid

  if (typeof input === 'string' || typeof input === 'number') {
    uid = input
    gid = input
  } else if (input && typeof input === 'object') {
    uid = input.uid
    gid = input.gid
  }

  if (uid === 'inherit' || gid === 'inherit') {
    const owner = await find(path)
    if (uid === 'inherit') {
      uid = owner.uid
    }

    if (gid === 'inherit') {
      gid = owner.gid
    }
  }

  return { uid, gid }
}

module.exports = {
  find,
  update,
  validate,
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\common\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\common\file-url-to-path\index.js 
------------------------------------------------------ 
const url = require('url')

const node = require('../node.js')
const polyfill = require('./polyfill.js')

const useNative = node.satisfies('>=10.12.0')

const fileURLToPath = (path) => {
  // the polyfill is tested separately from this module, no need to hack
  // process.version to try to trigger it just for coverage
  // istanbul ignore next
  return useNative
    ? url.fileURLToPath(path)
    : polyfill(path)
}

module.exports = fileURLToPath
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\common\file-url-to-path\polyfill.js 
------------------------------------------------------ 
const { URL, domainToUnicode } = require('url')

const CHAR_LOWERCASE_A = 97
const CHAR_LOWERCASE_Z = 122

const isWindows = process.platform === 'win32'

class ERR_INVALID_FILE_URL_HOST extends TypeError {
  constructor (platform) {
    super(`File URL host must be "localhost" or empty on ${platform}`)
    this.code = 'ERR_INVALID_FILE_URL_HOST'
  }

  toString () {
    return `${this.name} [${this.code}]: ${this.message}`
  }
}

class ERR_INVALID_FILE_URL_PATH extends TypeError {
  constructor (msg) {
    super(`File URL path ${msg}`)
    this.code = 'ERR_INVALID_FILE_URL_PATH'
  }

  toString () {
    return `${this.name} [${this.code}]: ${this.message}`
  }
}

class ERR_INVALID_ARG_TYPE extends TypeError {
  constructor (name, actual) {
    super(`The "${name}" argument must be one of type string or an instance ` +
      `of URL. Received type ${typeof actual} ${actual}`)
    this.code = 'ERR_INVALID_ARG_TYPE'
  }

  toString () {
    return `${this.name} [${this.code}]: ${this.message}`
  }
}

class ERR_INVALID_URL_SCHEME extends TypeError {
  constructor (expected) {
    super(`The URL must be of scheme ${expected}`)
    this.code = 'ERR_INVALID_URL_SCHEME'
  }

  toString () {
    return `${this.name} [${this.code}]: ${this.message}`
  }
}

const isURLInstance = (input) => {
  return input != null && input.href && input.origin
}

const getPathFromURLWin32 = (url) => {
  const hostname = url.hostname
  let pathname = url.pathname
  for (let n = 0; n < pathname.length; n++) {
    if (pathname[n] === '%') {
      const third = pathname.codePointAt(n + 2) | 0x20
      if ((pathname[n + 1] === '2' && third === 102) ||
        (pathname[n + 1] === '5' && third === 99)) {
        throw new ERR_INVALID_FILE_URL_PATH('must not include encoded \\ or / characters')
      }
    }
  }

  pathname = pathname.replace(/\//g, '\\')
  pathname = decodeURIComponent(pathname)
  if (hostname !== '') {
    return `\\\\${domainToUnicode(hostname)}${pathname}`
  }

  const letter = pathname.codePointAt(1) | 0x20
  const sep = pathname[2]
  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||
    (sep !== ':')) {
    throw new ERR_INVALID_FILE_URL_PATH('must be absolute')
  }

  return pathname.slice(1)
}

const getPathFromURLPosix = (url) => {
  if (url.hostname !== '') {
    throw new ERR_INVALID_FILE_URL_HOST(process.platform)
  }

  const pathname = url.pathname

  for (let n = 0; n < pathname.length; n++) {
    if (pathname[n] === '%') {
      const third = pathname.codePointAt(n + 2) | 0x20
      if (pathname[n + 1] === '2' && third === 102) {
        throw new ERR_INVALID_FILE_URL_PATH('must not include encoded / characters')
      }
    }
  }

  return decodeURIComponent(pathname)
}

const fileURLToPath = (path) => {
  if (typeof path === 'string') {
    path = new URL(path)
  } else if (!isURLInstance(path)) {
    throw new ERR_INVALID_ARG_TYPE('path', ['string', 'URL'], path)
  }

  if (path.protocol !== 'file:') {
    throw new ERR_INVALID_URL_SCHEME('file')
  }

  return isWindows
    ? getPathFromURLWin32(path)
    : getPathFromURLPosix(path)
}

module.exports = fileURLToPath
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\common\file-url-to-path\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\cp\index.js 
------------------------------------------------------ 
const fs = require('../fs.js')
const getOptions = require('../common/get-options.js')
const node = require('../common/node.js')
const polyfill = require('./polyfill.js')

// node 16.7.0 added fs.cp
const useNative = node.satisfies('>=16.7.0')

const cp = async (src, dest, opts) => {
  const options = getOptions(opts, {
    copy: ['dereference', 'errorOnExist', 'filter', 'force', 'preserveTimestamps', 'recursive'],
  })

  // the polyfill is tested separately from this module, no need to hack
  // process.version to try to trigger it just for coverage
  // istanbul ignore next
  return useNative
    ? fs.cp(src, dest, options)
    : polyfill(src, dest, options)
}

module.exports = cp
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\cp\polyfill.js 
------------------------------------------------------ 
// this file is a modified version of the code in node 17.2.0
// which is, in turn, a modified version of the fs-extra module on npm
// node core changes:
// - Use of the assert module has been replaced with core's error system.
// - All code related to the glob dependency has been removed.
// - Bring your own custom fs module is not currently supported.
// - Some basic code cleanup.
// changes here:
// - remove all callback related code
// - drop sync support
// - change assertions back to non-internal methods (see options.js)
// - throws ENOTDIR when rmdir gets an ENOENT for a path that exists in Windows
'use strict'

const {
  ERR_FS_CP_DIR_TO_NON_DIR,
  ERR_FS_CP_EEXIST,
  ERR_FS_CP_EINVAL,
  ERR_FS_CP_FIFO_PIPE,
  ERR_FS_CP_NON_DIR_TO_DIR,
  ERR_FS_CP_SOCKET,
  ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY,
  ERR_FS_CP_UNKNOWN,
  ERR_FS_EISDIR,
  ERR_INVALID_ARG_TYPE,
} = require('../errors.js')
const {
  constants: {
    errno: {
      EEXIST,
      EISDIR,
      EINVAL,
      ENOTDIR,
    },
  },
} = require('os')
const {
  chmod,
  copyFile,
  lstat,
  mkdir,
  readdir,
  readlink,
  stat,
  symlink,
  unlink,
  utimes,
} = require('../fs.js')
const {
  dirname,
  isAbsolute,
  join,
  parse,
  resolve,
  sep,
  toNamespacedPath,
} = require('path')
const { fileURLToPath } = require('url')

const defaultOptions = {
  dereference: false,
  errorOnExist: false,
  filter: undefined,
  force: true,
  preserveTimestamps: false,
  recursive: false,
}

async function cp (src, dest, opts) {
  if (opts != null && typeof opts !== 'object') {
    throw new ERR_INVALID_ARG_TYPE('options', ['Object'], opts)
  }
  return cpFn(
    toNamespacedPath(getValidatedPath(src)),
    toNamespacedPath(getValidatedPath(dest)),
    { ...defaultOptions, ...opts })
}

function getValidatedPath (fileURLOrPath) {
  const path = fileURLOrPath != null && fileURLOrPath.href
      && fileURLOrPath.origin
    ? fileURLToPath(fileURLOrPath)
    : fileURLOrPath
  return path
}

async function cpFn (src, dest, opts) {
  // Warn about using preserveTimestamps on 32-bit node
  // istanbul ignore next
  if (opts.preserveTimestamps && process.arch === 'ia32') {
    const warning = 'Using the preserveTimestamps option in 32-bit ' +
      'node is not recommended'
    process.emitWarning(warning, 'TimestampPrecisionWarning')
  }
  const stats = await checkPaths(src, dest, opts)
  const { srcStat, destStat } = stats
  await checkParentPaths(src, srcStat, dest)
  if (opts.filter) {
    return handleFilter(checkParentDir, destStat, src, dest, opts)
  }
  return checkParentDir(destStat, src, dest, opts)
}

async function checkPaths (src, dest, opts) {
  const { 0: srcStat, 1: destStat } = await getStats(src, dest, opts)
  if (destStat) {
    if (areIdentical(srcStat, destStat)) {
      throw new ERR_FS_CP_EINVAL({
        message: 'src and dest cannot be the same',
        path: dest,
        syscall: 'cp',
        errno: EINVAL,
      })
    }
    if (srcStat.isDirectory() && !destStat.isDirectory()) {
      throw new ERR_FS_CP_DIR_TO_NON_DIR({
        message: `cannot overwrite directory ${src} ` +
            `with non-directory ${dest}`,
        path: dest,
        syscall: 'cp',
        errno: EISDIR,
      })
    }
    if (!srcStat.isDirectory() && destStat.isDirectory()) {
      throw new ERR_FS_CP_NON_DIR_TO_DIR({
        message: `cannot overwrite non-directory ${src} ` +
            `with directory ${dest}`,
        path: dest,
        syscall: 'cp',
        errno: ENOTDIR,
      })
    }
  }

  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {
    throw new ERR_FS_CP_EINVAL({
      message: `cannot copy ${src} to a subdirectory of self ${dest}`,
      path: dest,
      syscall: 'cp',
      errno: EINVAL,
    })
  }
  return { srcStat, destStat }
}

function areIdentical (srcStat, destStat) {
  return destStat.ino && destStat.dev && destStat.ino === srcStat.ino &&
    destStat.dev === srcStat.dev
}

function getStats (src, dest, opts) {
  const statFunc = opts.dereference ?
    (file) => stat(file, { bigint: true }) :
    (file) => lstat(file, { bigint: true })
  return Promise.all([
    statFunc(src),
    statFunc(dest).catch((err) => {
      // istanbul ignore next: unsure how to cover.
      if (err.code === 'ENOENT') {
        return null
      }
      // istanbul ignore next: unsure how to cover.
      throw err
    }),
  ])
}

async function checkParentDir (destStat, src, dest, opts) {
  const destParent = dirname(dest)
  const dirExists = await pathExists(destParent)
  if (dirExists) {
    return getStatsForCopy(destStat, src, dest, opts)
  }
  await mkdir(destParent, { recursive: true })
  return getStatsForCopy(destStat, src, dest, opts)
}

function pathExists (dest) {
  return stat(dest).then(
    () => true,
    // istanbul ignore next: not sure when this would occur
    (err) => (err.code === 'ENOENT' ? false : Promise.reject(err)))
}

// Recursively check if dest parent is a subdirectory of src.
// It works for all file types including symlinks since it
// checks the src and dest inodes. It starts from the deepest
// parent and stops once it reaches the src parent or the root path.
async function checkParentPaths (src, srcStat, dest) {
  const srcParent = resolve(dirname(src))
  const destParent = resolve(dirname(dest))
  if (destParent === srcParent || destParent === parse(destParent).root) {
    return
  }
  let destStat
  try {
    destStat = await stat(destParent, { bigint: true })
  } catch (err) {
    // istanbul ignore else: not sure when this would occur
    if (err.code === 'ENOENT') {
      return
    }
    // istanbul ignore next: not sure when this would occur
    throw err
  }
  if (areIdentical(srcStat, destStat)) {
    throw new ERR_FS_CP_EINVAL({
      message: `cannot copy ${src} to a subdirectory of self ${dest}`,
      path: dest,
      syscall: 'cp',
      errno: EINVAL,
    })
  }
  return checkParentPaths(src, srcStat, destParent)
}

const normalizePathToArray = (path) =>
  resolve(path).split(sep).filter(Boolean)

// Return true if dest is a subdir of src, otherwise false.
// It only checks the path strings.
function isSrcSubdir (src, dest) {
  const srcArr = normalizePathToArray(src)
  const destArr = normalizePathToArray(dest)
  return srcArr.every((cur, i) => destArr[i] === cur)
}

async function handleFilter (onInclude, destStat, src, dest, opts, cb) {
  const include = await opts.filter(src, dest)
  if (include) {
    return onInclude(destStat, src, dest, opts, cb)
  }
}

function startCopy (destStat, src, dest, opts) {
  if (opts.filter) {
    return handleFilter(getStatsForCopy, destStat, src, dest, opts)
  }
  return getStatsForCopy(destStat, src, dest, opts)
}

async function getStatsForCopy (destStat, src, dest, opts) {
  const statFn = opts.dereference ? stat : lstat
  const srcStat = await statFn(src)
  // istanbul ignore else: can't portably test FIFO
  if (srcStat.isDirectory() && opts.recursive) {
    return onDir(srcStat, destStat, src, dest, opts)
  } else if (srcStat.isDirectory()) {
    throw new ERR_FS_EISDIR({
      message: `${src} is a directory (not copied)`,
      path: src,
      syscall: 'cp',
      errno: EINVAL,
    })
  } else if (srcStat.isFile() ||
            srcStat.isCharacterDevice() ||
            srcStat.isBlockDevice()) {
    return onFile(srcStat, destStat, src, dest, opts)
  } else if (srcStat.isSymbolicLink()) {
    return onLink(destStat, src, dest)
  } else if (srcStat.isSocket()) {
    throw new ERR_FS_CP_SOCKET({
      message: `cannot copy a socket file: ${dest}`,
      path: dest,
      syscall: 'cp',
      errno: EINVAL,
    })
  } else if (srcStat.isFIFO()) {
    throw new ERR_FS_CP_FIFO_PIPE({
      message: `cannot copy a FIFO pipe: ${dest}`,
      path: dest,
      syscall: 'cp',
      errno: EINVAL,
    })
  }
  // istanbul ignore next: should be unreachable
  throw new ERR_FS_CP_UNKNOWN({
    message: `cannot copy an unknown file type: ${dest}`,
    path: dest,
    syscall: 'cp',
    errno: EINVAL,
  })
}

function onFile (srcStat, destStat, src, dest, opts) {
  if (!destStat) {
    return _copyFile(srcStat, src, dest, opts)
  }
  return mayCopyFile(srcStat, src, dest, opts)
}

async function mayCopyFile (srcStat, src, dest, opts) {
  if (opts.force) {
    await unlink(dest)
    return _copyFile(srcStat, src, dest, opts)
  } else if (opts.errorOnExist) {
    throw new ERR_FS_CP_EEXIST({
      message: `${dest} already exists`,
      path: dest,
      syscall: 'cp',
      errno: EEXIST,
    })
  }
}

async function _copyFile (srcStat, src, dest, opts) {
  await copyFile(src, dest)
  if (opts.preserveTimestamps) {
    return handleTimestampsAndMode(srcStat.mode, src, dest)
  }
  return setDestMode(dest, srcStat.mode)
}

async function handleTimestampsAndMode (srcMode, src, dest) {
  // Make sure the file is writable before setting the timestamp
  // otherwise open fails with EPERM when invoked with 'r+'
  // (through utimes call)
  if (fileIsNotWritable(srcMode)) {
    await makeFileWritable(dest, srcMode)
    return setDestTimestampsAndMode(srcMode, src, dest)
  }
  return setDestTimestampsAndMode(srcMode, src, dest)
}

function fileIsNotWritable (srcMode) {
  return (srcMode & 0o200) === 0
}

function makeFileWritable (dest, srcMode) {
  return setDestMode(dest, srcMode | 0o200)
}

async function setDestTimestampsAndMode (srcMode, src, dest) {
  await setDestTimestamps(src, dest)
  return setDestMode(dest, srcMode)
}

function setDestMode (dest, srcMode) {
  return chmod(dest, srcMode)
}

async function setDestTimestamps (src, dest) {
  // The initial srcStat.atime cannot be trusted
  // because it is modified by the read(2) system call
  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)
  const updatedSrcStat = await stat(src)
  return utimes(dest, updatedSrcStat.atime, updatedSrcStat.mtime)
}

function onDir (srcStat, destStat, src, dest, opts) {
  if (!destStat) {
    return mkDirAndCopy(srcStat.mode, src, dest, opts)
  }
  return copyDir(src, dest, opts)
}

async function mkDirAndCopy (srcMode, src, dest, opts) {
  await mkdir(dest)
  await copyDir(src, dest, opts)
  return setDestMode(dest, srcMode)
}

async function copyDir (src, dest, opts) {
  const dir = await readdir(src)
  for (let i = 0; i < dir.length; i++) {
    const item = dir[i]
    const srcItem = join(src, item)
    const destItem = join(dest, item)
    const { destStat } = await checkPaths(srcItem, destItem, opts)
    await startCopy(destStat, srcItem, destItem, opts)
  }
}

async function onLink (destStat, src, dest) {
  let resolvedSrc = await readlink(src)
  if (!isAbsolute(resolvedSrc)) {
    resolvedSrc = resolve(dirname(src), resolvedSrc)
  }
  if (!destStat) {
    return symlink(resolvedSrc, dest)
  }
  let resolvedDest
  try {
    resolvedDest = await readlink(dest)
  } catch (err) {
    // Dest exists and is a regular file or directory,
    // Windows may throw UNKNOWN error. If dest already exists,
    // fs throws error anyway, so no need to guard against it here.
    // istanbul ignore next: can only test on windows
    if (err.code === 'EINVAL' || err.code === 'UNKNOWN') {
      return symlink(resolvedSrc, dest)
    }
    // istanbul ignore next: should not be possible
    throw err
  }
  if (!isAbsolute(resolvedDest)) {
    resolvedDest = resolve(dirname(dest), resolvedDest)
  }
  if (isSrcSubdir(resolvedSrc, resolvedDest)) {
    throw new ERR_FS_CP_EINVAL({
      message: `cannot copy ${resolvedSrc} to a subdirectory of self ` +
            `${resolvedDest}`,
      path: dest,
      syscall: 'cp',
      errno: EINVAL,
    })
  }
  // Do not copy if src is a subdir of dest since unlinking
  // dest in this case would result in removing src contents
  // and therefore a broken symlink would be created.
  const srcStat = await stat(src)
  if (srcStat.isDirectory() && isSrcSubdir(resolvedDest, resolvedSrc)) {
    throw new ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY({
      message: `cannot overwrite ${resolvedDest} with ${resolvedSrc}`,
      path: dest,
      syscall: 'cp',
      errno: EINVAL,
    })
  }
  return copyLink(resolvedSrc, dest)
}

async function copyLink (resolvedSrc, dest) {
  await unlink(dest)
  return symlink(resolvedSrc, dest)
}

module.exports = cp
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\cp\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\mkdir\index.js 
------------------------------------------------------ 
const fs = require('../fs.js')
const getOptions = require('../common/get-options.js')
const node = require('../common/node.js')
const owner = require('../common/owner.js')

const polyfill = require('./polyfill.js')

// node 10.12.0 added the options parameter, which allows recursive and mode
// properties to be passed
const useNative = node.satisfies('>=10.12.0')

// extends mkdir with the ability to specify an owner of the new dir
const mkdir = async (path, opts) => {
  const options = getOptions(opts, {
    copy: ['mode', 'recursive', 'owner'],
    wrap: 'mode',
  })
  const { uid, gid } = await owner.validate(path, options.owner)

  // the polyfill is tested separately from this module, no need to hack
  // process.version to try to trigger it just for coverage
  // istanbul ignore next
  const result = useNative
    ? await fs.mkdir(path, options)
    : await polyfill(path, options)

  await owner.update(path, uid, gid)

  return result
}

module.exports = mkdir
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\mkdir\polyfill.js 
------------------------------------------------------ 
const { dirname } = require('path')

const fileURLToPath = require('../common/file-url-to-path/index.js')
const fs = require('../fs.js')

const defaultOptions = {
  mode: 0o777,
  recursive: false,
}

const mkdir = async (path, opts) => {
  const options = { ...defaultOptions, ...opts }

  // if we're not in recursive mode, just call the real mkdir with the path and
  // the mode option only
  if (!options.recursive) {
    return fs.mkdir(path, options.mode)
  }

  const makeDirectory = async (dir, mode) => {
    // we can't use dirname directly since these functions support URL
    // objects with the file: protocol as the path input, so first we get a
    // string path, then we can call dirname on that
    const parent = dir != null && dir.href && dir.origin
      ? dirname(fileURLToPath(dir))
      : dirname(dir)

    // if the parent is the dir itself, try to create it. anything but EISDIR
    // should be rethrown
    if (parent === dir) {
      try {
        await fs.mkdir(dir, opts)
      } catch (err) {
        if (err.code !== 'EISDIR') {
          throw err
        }
      }
      return undefined
    }

    try {
      await fs.mkdir(dir, mode)
      return dir
    } catch (err) {
      // ENOENT means the parent wasn't there, so create that
      if (err.code === 'ENOENT') {
        const made = await makeDirectory(parent, mode)
        await makeDirectory(dir, mode)
        // return the shallowest path we created, i.e. the result of creating
        // the parent
        return made
      }

      // an EEXIST means there's already something there
      // an EROFS means we have a read-only filesystem and can't create a dir
      // any other error is fatal and we should give up now
      if (err.code !== 'EEXIST' && err.code !== 'EROFS') {
        throw err
      }

      // stat the directory, if the result is a directory, then we successfully
      // created this one so return its path. otherwise, we reject with the
      // original error by ignoring the error in the catch
      try {
        const stat = await fs.stat(dir)
        if (stat.isDirectory()) {
          // if it already existed, we didn't create anything so return
          // undefined
          return undefined
        }
      } catch (_) {}

      // if the thing that's there isn't a directory, then just re-throw
      throw err
    }
  }

  return makeDirectory(path, options.mode)
}

module.exports = mkdir
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\mkdir\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\rm\index.js 
------------------------------------------------------ 
const fs = require('../fs.js')
const getOptions = require('../common/get-options.js')
const node = require('../common/node.js')
const polyfill = require('./polyfill.js')

// node 14.14.0 added fs.rm, which allows both the force and recursive options
const useNative = node.satisfies('>=14.14.0')

const rm = async (path, opts) => {
  const options = getOptions(opts, {
    copy: ['retryDelay', 'maxRetries', 'recursive', 'force'],
  })

  // the polyfill is tested separately from this module, no need to hack
  // process.version to try to trigger it just for coverage
  // istanbul ignore next
  return useNative
    ? fs.rm(path, options)
    : polyfill(path, options)
}

module.exports = rm
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\rm\polyfill.js 
------------------------------------------------------ 
// this file is a modified version of the code in node core >=14.14.0
// which is, in turn, a modified version of the rimraf module on npm
// node core changes:
// - Use of the assert module has been replaced with core's error system.
// - All code related to the glob dependency has been removed.
// - Bring your own custom fs module is not currently supported.
// - Some basic code cleanup.
// changes here:
// - remove all callback related code
// - drop sync support
// - change assertions back to non-internal methods (see options.js)
// - throws ENOTDIR when rmdir gets an ENOENT for a path that exists in Windows
const errnos = require('os').constants.errno
const { join } = require('path')
const fs = require('../fs.js')

// error codes that mean we need to remove contents
const notEmptyCodes = new Set([
  'ENOTEMPTY',
  'EEXIST',
  'EPERM',
])

// error codes we can retry later
const retryCodes = new Set([
  'EBUSY',
  'EMFILE',
  'ENFILE',
  'ENOTEMPTY',
  'EPERM',
])

const isWindows = process.platform === 'win32'

const defaultOptions = {
  retryDelay: 100,
  maxRetries: 0,
  recursive: false,
  force: false,
}

// this is drastically simplified, but should be roughly equivalent to what
// node core throws
class ERR_FS_EISDIR extends Error {
  constructor (path) {
    super()
    this.info = {
      code: 'EISDIR',
      message: 'is a directory',
      path,
      syscall: 'rm',
      errno: errnos.EISDIR,
    }
    this.name = 'SystemError'
    this.code = 'ERR_FS_EISDIR'
    this.errno = errnos.EISDIR
    this.syscall = 'rm'
    this.path = path
    this.message = `Path is a directory: ${this.syscall} returned ` +
      `${this.info.code} (is a directory) ${path}`
  }

  toString () {
    return `${this.name} [${this.code}]: ${this.message}`
  }
}

class ENOTDIR extends Error {
  constructor (path) {
    super()
    this.name = 'Error'
    this.code = 'ENOTDIR'
    this.errno = errnos.ENOTDIR
    this.syscall = 'rmdir'
    this.path = path
    this.message = `not a directory, ${this.syscall} '${this.path}'`
  }

  toString () {
    return `${this.name}: ${this.code}: ${this.message}`
  }
}

// force is passed separately here because we respect it for the first entry
// into rimraf only, any further calls that are spawned as a result (i.e. to
// delete content within the target) will ignore ENOENT errors
const rimraf = async (path, options, isTop = false) => {
  const force = isTop ? options.force : true
  const stat = await fs.lstat(path)
    .catch((err) => {
      // we only ignore ENOENT if we're forcing this call
      if (err.code === 'ENOENT' && force) {
        return
      }

      if (isWindows && err.code === 'EPERM') {
        return fixEPERM(path, options, err, isTop)
      }

      throw err
    })

  // no stat object here means either lstat threw an ENOENT, or lstat threw
  // an EPERM and the fixPERM function took care of things. either way, we're
  // already done, so return early
  if (!stat) {
    return
  }

  if (stat.isDirectory()) {
    return rmdir(path, options, null, isTop)
  }

  return fs.unlink(path)
    .catch((err) => {
      if (err.code === 'ENOENT' && force) {
        return
      }

      if (err.code === 'EISDIR') {
        return rmdir(path, options, err, isTop)
      }

      if (err.code === 'EPERM') {
        // in windows, we handle this through fixEPERM which will also try to
        // delete things again. everywhere else since deleting the target as a
        // file didn't work we go ahead and try to delete it as a directory
        return isWindows
          ? fixEPERM(path, options, err, isTop)
          : rmdir(path, options, err, isTop)
      }

      throw err
    })
}

const fixEPERM = async (path, options, originalErr, isTop) => {
  const force = isTop ? options.force : true
  const targetMissing = await fs.chmod(path, 0o666)
    .catch((err) => {
      if (err.code === 'ENOENT' && force) {
        return true
      }

      throw originalErr
    })

  // got an ENOENT above, return now. no file = no problem
  if (targetMissing) {
    return
  }

  // this function does its own lstat rather than calling rimraf again to avoid
  // infinite recursion for a repeating EPERM
  const stat = await fs.lstat(path)
    .catch((err) => {
      if (err.code === 'ENOENT' && force) {
        return
      }

      throw originalErr
    })

  if (!stat) {
    return
  }

  if (stat.isDirectory()) {
    return rmdir(path, options, originalErr, isTop)
  }

  return fs.unlink(path)
}

const rmdir = async (path, options, originalErr, isTop) => {
  if (!options.recursive && isTop) {
    throw originalErr || new ERR_FS_EISDIR(path)
  }
  const force = isTop ? options.force : true

  return fs.rmdir(path)
    .catch(async (err) => {
      // in Windows, calling rmdir on a file path will fail with ENOENT rather
      // than ENOTDIR. to determine if that's what happened, we have to do
      // another lstat on the path. if the path isn't actually gone, we throw
      // away the ENOENT and replace it with our own ENOTDIR
      if (isWindows && err.code === 'ENOENT') {
        const stillExists = await fs.lstat(path).then(() => true, () => false)
        if (stillExists) {
          err = new ENOTDIR(path)
        }
      }

      // not there, not a problem
      if (err.code === 'ENOENT' && force) {
        return
      }

      // we may not have originalErr if lstat tells us our target is a
      // directory but that changes before we actually remove it, so
      // only throw it here if it's set
      if (originalErr && err.code === 'ENOTDIR') {
        throw originalErr
      }

      // the directory isn't empty, remove the contents and try again
      if (notEmptyCodes.has(err.code)) {
        const files = await fs.readdir(path)
        await Promise.all(files.map((file) => {
          const target = join(path, file)
          return rimraf(target, options)
        }))
        return fs.rmdir(path)
      }

      throw err
    })
}

const rm = async (path, opts) => {
  const options = { ...defaultOptions, ...opts }
  let retries = 0

  const errHandler = async (err) => {
    if (retryCodes.has(err.code) && ++retries < options.maxRetries) {
      const delay = retries * options.retryDelay
      await promiseTimeout(delay)
      return rimraf(path, options, true).catch(errHandler)
    }

    throw err
  }

  return rimraf(path, options, true).catch(errHandler)
}

const promiseTimeout = (ms) => new Promise((r) => setTimeout(r, ms))

module.exports = rm
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\fs\lib\rm\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\move-file\index.js 
------------------------------------------------------ 
const { dirname, join, resolve, relative, isAbsolute } = require('path')
const rimraf_ = require('rimraf')
const { promisify } = require('util')
const {
  access: access_,
  accessSync,
  copyFile: copyFile_,
  copyFileSync,
  unlink: unlink_,
  unlinkSync,
  readdir: readdir_,
  readdirSync,
  rename: rename_,
  renameSync,
  stat: stat_,
  statSync,
  lstat: lstat_,
  lstatSync,
  symlink: symlink_,
  symlinkSync,
  readlink: readlink_,
  readlinkSync
} = require('fs')

const access = promisify(access_)
const copyFile = promisify(copyFile_)
const unlink = promisify(unlink_)
const readdir = promisify(readdir_)
const rename = promisify(rename_)
const stat = promisify(stat_)
const lstat = promisify(lstat_)
const symlink = promisify(symlink_)
const readlink = promisify(readlink_)
const rimraf = promisify(rimraf_)
const rimrafSync = rimraf_.sync

const mkdirp = require('mkdirp')

const pathExists = async path => {
  try {
    await access(path)
    return true
  } catch (er) {
    return er.code !== 'ENOENT'
  }
}

const pathExistsSync = path => {
  try {
    accessSync(path)
    return true
  } catch (er) {
    return er.code !== 'ENOENT'
  }
}

const moveFile = async (source, destination, options = {}, root = true, symlinks = []) => {
  if (!source || !destination) {
    throw new TypeError('`source` and `destination` file required')
  }

  options = {
    overwrite: true,
    ...options
  }

  if (!options.overwrite && await pathExists(destination)) {
    throw new Error(`The destination file exists: ${destination}`)
  }

  await mkdirp(dirname(destination))

  try {
    await rename(source, destination)
  } catch (error) {
    if (error.code === 'EXDEV' || error.code === 'EPERM') {
      const sourceStat = await lstat(source)
      if (sourceStat.isDirectory()) {
        const files = await readdir(source)
        await Promise.all(files.map((file) => moveFile(join(source, file), join(destination, file), options, false, symlinks)))
      } else if (sourceStat.isSymbolicLink()) {
        symlinks.push({ source, destination })
      } else {
        await copyFile(source, destination)
      }
    } else {
      throw error
    }
  }

  if (root) {
    await Promise.all(symlinks.map(async ({ source, destination }) => {
      let target = await readlink(source)
      // junction symlinks in windows will be absolute paths, so we need to make sure they point to the destination
      if (isAbsolute(target))
        target = resolve(destination, relative(source, target))
      // try to determine what the actual file is so we can create the correct type of symlink in windows
      let targetStat
      try {
        targetStat = await stat(resolve(dirname(source), target))
      } catch (err) {}
      await symlink(target, destination, targetStat && targetStat.isDirectory() ? 'junction' : 'file')
    }))
    await rimraf(source)
  }
}

const moveFileSync = (source, destination, options = {}, root = true, symlinks = []) => {
  if (!source || !destination) {
    throw new TypeError('`source` and `destination` file required')
  }

  options = {
    overwrite: true,
    ...options
  }

  if (!options.overwrite && pathExistsSync(destination)) {
    throw new Error(`The destination file exists: ${destination}`)
  }

  mkdirp.sync(dirname(destination))

  try {
    renameSync(source, destination)
  } catch (error) {
    if (error.code === 'EXDEV' || error.code === 'EPERM') {
      const sourceStat = lstatSync(source)
      if (sourceStat.isDirectory()) {
        const files = readdirSync(source)
        for (const file of files) {
          moveFileSync(join(source, file), join(destination, file), options, false, symlinks)
        }
      } else if (sourceStat.isSymbolicLink()) {
        symlinks.push({ source, destination })
      } else {
        copyFileSync(source, destination)
      }
    } else {
      throw error
    }
  }

  if (root) {
    for (const { source, destination } of symlinks) {
      let target = readlinkSync(source)
      // junction symlinks in windows will be absolute paths, so we need to make sure they point to the destination
      if (isAbsolute(target))
        target = resolve(destination, relative(source, target))
      // try to determine what the actual file is so we can create the correct type of symlink in windows
      let targetStat
      try {
        targetStat = statSync(resolve(dirname(source), target))
      } catch (err) {}
      symlinkSync(target, destination, targetStat && targetStat.isDirectory() ? 'junction' : 'file')
    }
    rimrafSync(source)
  }
}

module.exports = moveFile
module.exports.sync = moveFileSync
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@npmcli\move-file\package.json 
------------------------------------------------------ 
{
  "name": "@npmcli/move-file",
  "version": "1.1.2",
  "files": [
    "index.js"
  ],
  "description": "move a file (fork of move-file)",
  "dependencies": {
    "mkdirp": "^1.0.4",
    "rimraf": "^3.0.2"
  },
  "devDependencies": {
    "require-inject": "^1.4.4",
    "tap": "^14.10.7"
  },
  "scripts": {
    "test": "tap",
    "snap": "tap",
    "preversion": "npm test",
    "postversion": "npm publish",
    "prepublishOnly": "git push origin --follow-tags"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/npm/move-file"
  },
  "tap": {
    "check-coverage": true
  },
  "license": "MIT",
  "engines": {
    "node": ">=10"
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@tootallnate\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@tootallnate\once\package.json 
------------------------------------------------------ 
{
  "name": "@tootallnate/once",
  "version": "1.1.2",
  "description": "Creates a Promise that waits for a single event",
  "main": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "files": [
    "dist"
  ],
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "tsc",
    "test": "mocha --reporter spec",
    "test-lint": "eslint src --ext .js,.ts",
    "prepublishOnly": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/once.git"
  },
  "keywords": [],
  "author": "Nathan Rajlich <nathan@tootallnate.net> (http://n8.io/)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/TooTallNate/once/issues"
  },
  "devDependencies": {
    "@types/node": "^12.12.11",
    "@typescript-eslint/eslint-plugin": "1.6.0",
    "@typescript-eslint/parser": "1.1.0",
    "eslint": "5.16.0",
    "eslint-config-airbnb": "17.1.0",
    "eslint-config-prettier": "4.1.0",
    "eslint-import-resolver-typescript": "1.1.1",
    "eslint-plugin-import": "2.16.0",
    "eslint-plugin-jsx-a11y": "6.2.1",
    "eslint-plugin-react": "7.12.4",
    "mocha": "^6.2.2",
    "rimraf": "^3.0.0",
    "typescript": "^3.7.3"
  },
  "engines": {
    "node": ">= 6"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@tootallnate\once\dist\index.js 
------------------------------------------------------ 
"use strict";
function noop() { }
function once(emitter, name) {
    const o = once.spread(emitter, name);
    const r = o.then((args) => args[0]);
    r.cancel = o.cancel;
    return r;
}
(function (once) {
    function spread(emitter, name) {
        let c = null;
        const p = new Promise((resolve, reject) => {
            function cancel() {
                emitter.removeListener(name, onEvent);
                emitter.removeListener('error', onError);
                p.cancel = noop;
            }
            function onEvent(...args) {
                cancel();
                resolve(args);
            }
            function onError(err) {
                cancel();
                reject(err);
            }
            c = cancel;
            emitter.on(name, onEvent);
            emitter.on('error', onError);
        });
        if (!c) {
            throw new TypeError('Could not get `cancel()` function');
        }
        p.cancel = c;
        return p;
    }
    once.spread = spread;
})(once || (once = {}));
module.exports = once;
//# sourceMappingURL=index.js.map 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\@tootallnate\once\dist\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\abbrev\abbrev.js 
------------------------------------------------------ 
module.exports = exports = abbrev.abbrev = abbrev

abbrev.monkeyPatch = monkeyPatch

function monkeyPatch () {
  Object.defineProperty(Array.prototype, 'abbrev', {
    value: function () { return abbrev(this) },
    enumerable: false, configurable: true, writable: true
  })

  Object.defineProperty(Object.prototype, 'abbrev', {
    value: function () { return abbrev(Object.keys(this)) },
    enumerable: false, configurable: true, writable: true
  })
}

function abbrev (list) {
  if (arguments.length !== 1 || !Array.isArray(list)) {
    list = Array.prototype.slice.call(arguments, 0)
  }
  for (var i = 0, l = list.length, args = [] ; i < l ; i ++) {
    args[i] = typeof list[i] === "string" ? list[i] : String(list[i])
  }

  // sort them lexicographically, so that they're next to their nearest kin
  args = args.sort(lexSort)

  // walk through each, seeing how much it has in common with the next and previous
  var abbrevs = {}
    , prev = ""
  for (var i = 0, l = args.length ; i < l ; i ++) {
    var current = args[i]
      , next = args[i + 1] || ""
      , nextMatches = true
      , prevMatches = true
    if (current === next) continue
    for (var j = 0, cl = current.length ; j < cl ; j ++) {
      var curChar = current.charAt(j)
      nextMatches = nextMatches && curChar === next.charAt(j)
      prevMatches = prevMatches && curChar === prev.charAt(j)
      if (!nextMatches && !prevMatches) {
        j ++
        break
      }
    }
    prev = current
    if (j === cl) {
      abbrevs[current] = current
      continue
    }
    for (var a = current.substr(0, j) ; j <= cl ; j ++) {
      abbrevs[a] = current
      a += current.charAt(j)
    }
  }
  return abbrevs
}

function lexSort (a, b) {
  return a === b ? 0 : a > b ? 1 : -1
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\abbrev\package.json 
------------------------------------------------------ 
{
  "name": "abbrev",
  "version": "1.1.1",
  "description": "Like ruby's abbrev module, but in js",
  "author": "Isaac Z. Schlueter <i@izs.me>",
  "main": "abbrev.js",
  "scripts": {
    "test": "tap test.js --100",
    "preversion": "npm test",
    "postversion": "npm publish",
    "postpublish": "git push origin --all; git push origin --tags"
  },
  "repository": "http://github.com/isaacs/abbrev-js",
  "license": "ISC",
  "devDependencies": {
    "tap": "^10.1"
  },
  "files": [
    "abbrev.js"
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\accepts\index.js 
------------------------------------------------------ 
/*!
 * accepts
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module dependencies.
 * @private
 */

var Negotiator = require('negotiator')
var mime = require('mime-types')

/**
 * Module exports.
 * @public
 */

module.exports = Accepts

/**
 * Create a new Accepts object for the given req.
 *
 * @param {object} req
 * @public
 */

function Accepts (req) {
  if (!(this instanceof Accepts)) {
    return new Accepts(req)
  }

  this.headers = req.headers
  this.negotiator = new Negotiator(req)
}

/**
 * Check if the given `type(s)` is acceptable, returning
 * the best match when true, otherwise `undefined`, in which
 * case you should respond with 406 "Not Acceptable".
 *
 * The `type` value may be a single mime type string
 * such as "application/json", the extension name
 * such as "json" or an array `["json", "html", "text/plain"]`. When a list
 * or array is given the _best_ match, if any is returned.
 *
 * Examples:
 *
 *     // Accept: text/html
 *     this.types('html');
 *     // => "html"
 *
 *     // Accept: text/*, application/json
 *     this.types('html');
 *     // => "html"
 *     this.types('text/html');
 *     // => "text/html"
 *     this.types('json', 'text');
 *     // => "json"
 *     this.types('application/json');
 *     // => "application/json"
 *
 *     // Accept: text/*, application/json
 *     this.types('image/png');
 *     this.types('png');
 *     // => undefined
 *
 *     // Accept: text/*;q=.5, application/json
 *     this.types(['html', 'json']);
 *     this.types('html', 'json');
 *     // => "json"
 *
 * @param {String|Array} types...
 * @return {String|Array|Boolean}
 * @public
 */

Accepts.prototype.type =
Accepts.prototype.types = function (types_) {
  var types = types_

  // support flattened arguments
  if (types && !Array.isArray(types)) {
    types = new Array(arguments.length)
    for (var i = 0; i < types.length; i++) {
      types[i] = arguments[i]
    }
  }

  // no types, return all requested types
  if (!types || types.length === 0) {
    return this.negotiator.mediaTypes()
  }

  // no accept header, return first given type
  if (!this.headers.accept) {
    return types[0]
  }

  var mimes = types.map(extToMime)
  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))
  var first = accepts[0]

  return first
    ? types[mimes.indexOf(first)]
    : false
}

/**
 * Return accepted encodings or best fit based on `encodings`.
 *
 * Given `Accept-Encoding: gzip, deflate`
 * an array sorted by quality is returned:
 *
 *     ['gzip', 'deflate']
 *
 * @param {String|Array} encodings...
 * @return {String|Array}
 * @public
 */

Accepts.prototype.encoding =
Accepts.prototype.encodings = function (encodings_) {
  var encodings = encodings_

  // support flattened arguments
  if (encodings && !Array.isArray(encodings)) {
    encodings = new Array(arguments.length)
    for (var i = 0; i < encodings.length; i++) {
      encodings[i] = arguments[i]
    }
  }

  // no encodings, return all requested encodings
  if (!encodings || encodings.length === 0) {
    return this.negotiator.encodings()
  }

  return this.negotiator.encodings(encodings)[0] || false
}

/**
 * Return accepted charsets or best fit based on `charsets`.
 *
 * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`
 * an array sorted by quality is returned:
 *
 *     ['utf-8', 'utf-7', 'iso-8859-1']
 *
 * @param {String|Array} charsets...
 * @return {String|Array}
 * @public
 */

Accepts.prototype.charset =
Accepts.prototype.charsets = function (charsets_) {
  var charsets = charsets_

  // support flattened arguments
  if (charsets && !Array.isArray(charsets)) {
    charsets = new Array(arguments.length)
    for (var i = 0; i < charsets.length; i++) {
      charsets[i] = arguments[i]
    }
  }

  // no charsets, return all requested charsets
  if (!charsets || charsets.length === 0) {
    return this.negotiator.charsets()
  }

  return this.negotiator.charsets(charsets)[0] || false
}

/**
 * Return accepted languages or best fit based on `langs`.
 *
 * Given `Accept-Language: en;q=0.8, es, pt`
 * an array sorted by quality is returned:
 *
 *     ['es', 'pt', 'en']
 *
 * @param {String|Array} langs...
 * @return {Array|String}
 * @public
 */

Accepts.prototype.lang =
Accepts.prototype.langs =
Accepts.prototype.language =
Accepts.prototype.languages = function (languages_) {
  var languages = languages_

  // support flattened arguments
  if (languages && !Array.isArray(languages)) {
    languages = new Array(arguments.length)
    for (var i = 0; i < languages.length; i++) {
      languages[i] = arguments[i]
    }
  }

  // no languages, return all requested languages
  if (!languages || languages.length === 0) {
    return this.negotiator.languages()
  }

  return this.negotiator.languages(languages)[0] || false
}

/**
 * Convert extnames to mime.
 *
 * @param {String} type
 * @return {String}
 * @private
 */

function extToMime (type) {
  return type.indexOf('/') === -1
    ? mime.lookup(type)
    : type
}

/**
 * Check if mime is valid.
 *
 * @param {String} type
 * @return {Boolean}
 * @private
 */

function validMime (type) {
  return typeof type === 'string'
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\accepts\package.json 
------------------------------------------------------ 
{
  "name": "accepts",
  "description": "Higher-level content negotiation",
  "version": "2.0.0",
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>",
    "Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)"
  ],
  "license": "MIT",
  "repository": "jshttp/accepts",
  "dependencies": {
    "mime-types": "^3.0.0",
    "negotiator": "^1.0.0"
  },
  "devDependencies": {
    "deep-equal": "1.0.1",
    "eslint": "7.32.0",
    "eslint-config-standard": "14.1.1",
    "eslint-plugin-import": "2.25.4",
    "eslint-plugin-markdown": "2.2.1",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "4.3.1",
    "eslint-plugin-standard": "4.1.0",
    "mocha": "9.2.0",
    "nyc": "15.1.0"
  },
  "files": [
    "LICENSE",
    "HISTORY.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "mocha --reporter spec --check-leaks --bail test/",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test"
  },
  "keywords": [
    "content",
    "negotiation",
    "accept",
    "accepts"
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agent-base\package.json 
------------------------------------------------------ 
{
  "name": "agent-base",
  "version": "6.0.2",
  "description": "Turn a function into an `http.Agent` instance",
  "main": "dist/src/index",
  "typings": "dist/src/index",
  "files": [
    "dist/src",
    "src"
  ],
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "tsc",
    "postbuild": "cpy --parents src test '!**/*.ts' dist",
    "test": "mocha --reporter spec dist/test/*.js",
    "test-lint": "eslint src --ext .js,.ts",
    "prepublishOnly": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/node-agent-base.git"
  },
  "keywords": [
    "http",
    "agent",
    "base",
    "barebones",
    "https"
  ],
  "author": "Nathan Rajlich <nathan@tootallnate.net> (http://n8.io/)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/TooTallNate/node-agent-base/issues"
  },
  "dependencies": {
    "debug": "4"
  },
  "devDependencies": {
    "@types/debug": "4",
    "@types/mocha": "^5.2.7",
    "@types/node": "^14.0.20",
    "@types/semver": "^7.1.0",
    "@types/ws": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "1.6.0",
    "@typescript-eslint/parser": "1.1.0",
    "async-listen": "^1.2.0",
    "cpy-cli": "^2.0.0",
    "eslint": "5.16.0",
    "eslint-config-airbnb": "17.1.0",
    "eslint-config-prettier": "4.1.0",
    "eslint-import-resolver-typescript": "1.1.1",
    "eslint-plugin-import": "2.16.0",
    "eslint-plugin-jsx-a11y": "6.2.1",
    "eslint-plugin-react": "7.12.4",
    "mocha": "^6.2.0",
    "rimraf": "^3.0.0",
    "semver": "^7.1.2",
    "typescript": "^3.5.3",
    "ws": "^3.0.0"
  },
  "engines": {
    "node": ">= 6.0.0"
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agent-base\dist\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agent-base\dist\src\index.js 
------------------------------------------------------ 
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const events_1 = require("events");
const debug_1 = __importDefault(require("debug"));
const promisify_1 = __importDefault(require("./promisify"));
const debug = debug_1.default('agent-base');
function isAgent(v) {
    return Boolean(v) && typeof v.addRequest === 'function';
}
function isSecureEndpoint() {
    const { stack } = new Error();
    if (typeof stack !== 'string')
        return false;
    return stack.split('\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);
}
function createAgent(callback, opts) {
    return new createAgent.Agent(callback, opts);
}
(function (createAgent) {
    /**
     * Base `http.Agent` implementation.
     * No pooling/keep-alive is implemented by default.
     *
     * @param {Function} callback
     * @api public
     */
    class Agent extends events_1.EventEmitter {
        constructor(callback, _opts) {
            super();
            let opts = _opts;
            if (typeof callback === 'function') {
                this.callback = callback;
            }
            else if (callback) {
                opts = callback;
            }
            // Timeout for the socket to be returned from the callback
            this.timeout = null;
            if (opts && typeof opts.timeout === 'number') {
                this.timeout = opts.timeout;
            }
            // These aren't actually used by `agent-base`, but are required
            // for the TypeScript definition files in `@types/node` :/
            this.maxFreeSockets = 1;
            this.maxSockets = 1;
            this.maxTotalSockets = Infinity;
            this.sockets = {};
            this.freeSockets = {};
            this.requests = {};
            this.options = {};
        }
        get defaultPort() {
            if (typeof this.explicitDefaultPort === 'number') {
                return this.explicitDefaultPort;
            }
            return isSecureEndpoint() ? 443 : 80;
        }
        set defaultPort(v) {
            this.explicitDefaultPort = v;
        }
        get protocol() {
            if (typeof this.explicitProtocol === 'string') {
                return this.explicitProtocol;
            }
            return isSecureEndpoint() ? 'https:' : 'http:';
        }
        set protocol(v) {
            this.explicitProtocol = v;
        }
        callback(req, opts, fn) {
            throw new Error('"agent-base" has no default implementation, you must subclass and override `callback()`');
        }
        /**
         * Called by node-core's "_http_client.js" module when creating
         * a new HTTP request with this Agent instance.
         *
         * @api public
         */
        addRequest(req, _opts) {
            const opts = Object.assign({}, _opts);
            if (typeof opts.secureEndpoint !== 'boolean') {
                opts.secureEndpoint = isSecureEndpoint();
            }
            if (opts.host == null) {
                opts.host = 'localhost';
            }
            if (opts.port == null) {
                opts.port = opts.secureEndpoint ? 443 : 80;
            }
            if (opts.protocol == null) {
                opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';
            }
            if (opts.host && opts.path) {
                // If both a `host` and `path` are specified then it's most
                // likely the result of a `url.parse()` call... we need to
                // remove the `path` portion so that `net.connect()` doesn't
                // attempt to open that as a unix socket file.
                delete opts.path;
            }
            delete opts.agent;
            delete opts.hostname;
            delete opts._defaultAgent;
            delete opts.defaultPort;
            delete opts.createConnection;
            // Hint to use "Connection: close"
            // XXX: non-documented `http` module API :(
            req._last = true;
            req.shouldKeepAlive = false;
            let timedOut = false;
            let timeoutId = null;
            const timeoutMs = opts.timeout || this.timeout;
            const onerror = (err) => {
                if (req._hadError)
                    return;
                req.emit('error', err);
                // For Safety. Some additional errors might fire later on
                // and we need to make sure we don't double-fire the error event.
                req._hadError = true;
            };
            const ontimeout = () => {
                timeoutId = null;
                timedOut = true;
                const err = new Error(`A "socket" was not created for HTTP request before ${timeoutMs}ms`);
                err.code = 'ETIMEOUT';
                onerror(err);
            };
            const callbackError = (err) => {
                if (timedOut)
                    return;
                if (timeoutId !== null) {
                    clearTimeout(timeoutId);
                    timeoutId = null;
                }
                onerror(err);
            };
            const onsocket = (socket) => {
                if (timedOut)
                    return;
                if (timeoutId != null) {
                    clearTimeout(timeoutId);
                    timeoutId = null;
                }
                if (isAgent(socket)) {
                    // `socket` is actually an `http.Agent` instance, so
                    // relinquish responsibility for this `req` to the Agent
                    // from here on
                    debug('Callback returned another Agent instance %o', socket.constructor.name);
                    socket.addRequest(req, opts);
                    return;
                }
                if (socket) {
                    socket.once('free', () => {
                        this.freeSocket(socket, opts);
                    });
                    req.onSocket(socket);
                    return;
                }
                const err = new Error(`no Duplex stream was returned to agent-base for \`${req.method} ${req.path}\``);
                onerror(err);
            };
            if (typeof this.callback !== 'function') {
                onerror(new Error('`callback` is not defined'));
                return;
            }
            if (!this.promisifiedCallback) {
                if (this.callback.length >= 3) {
                    debug('Converting legacy callback function to promise');
                    this.promisifiedCallback = promisify_1.default(this.callback);
                }
                else {
                    this.promisifiedCallback = this.callback;
                }
            }
            if (typeof timeoutMs === 'number' && timeoutMs > 0) {
                timeoutId = setTimeout(ontimeout, timeoutMs);
            }
            if ('port' in opts && typeof opts.port !== 'number') {
                opts.port = Number(opts.port);
            }
            try {
                debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);
                Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);
            }
            catch (err) {
                Promise.reject(err).catch(callbackError);
            }
        }
        freeSocket(socket, opts) {
            debug('Freeing socket %o %o', socket.constructor.name, opts);
            socket.destroy();
        }
        destroy() {
            debug('Destroying agent %o', this.constructor.name);
        }
    }
    createAgent.Agent = Agent;
    // So that `instanceof` works correctly
    createAgent.prototype = createAgent.Agent.prototype;
})(createAgent || (createAgent = {}));
module.exports = createAgent;
//# sourceMappingURL=index.js.map 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agent-base\dist\src\promisify.js 
------------------------------------------------------ 
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function promisify(fn) {
    return function (req, opts) {
        return new Promise((resolve, reject) => {
            fn.call(this, req, opts, (err, rtn) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(rtn);
                }
            });
        });
    };
}
exports.default = promisify;
//# sourceMappingURL=promisify.js.map 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agent-base\dist\src\package.json 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agent-base\src\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agentkeepalive\browser.js 
------------------------------------------------------ 
module.exports = noop;
module.exports.HttpsAgent = noop;

// Noop function for browser since native api's don't use agents.
function noop () {}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agentkeepalive\index.js 
------------------------------------------------------ 
'use strict';

const HttpAgent = require('./lib/agent');
module.exports = HttpAgent;
module.exports.HttpAgent = HttpAgent;
module.exports.HttpsAgent = require('./lib/https_agent');
module.exports.constants = require('./lib/constants');
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agentkeepalive\package.json 
------------------------------------------------------ 
{
  "name": "agentkeepalive",
  "version": "4.6.0",
  "description": "Missing keepalive http.Agent",
  "main": "index.js",
  "browser": "browser.js",
  "files": [
    "index.js",
    "index.d.ts",
    "browser.js",
    "lib"
  ],
  "scripts": {
    "contributor": "git-contributor",
    "test": "npm run lint && egg-bin test --full-trace",
    "test-local": "egg-bin test --full-trace",
    "cov": "cross-env NODE_DEBUG=agentkeepalive egg-bin cov --full-trace",
    "ci": "npm run lint && npm run cov",
    "lint": "eslint lib test index.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/node-modules/agentkeepalive.git"
  },
  "bugs": {
    "url": "https://github.com/node-modules/agentkeepalive/issues"
  },
  "keywords": [
    "http",
    "https",
    "agent",
    "keepalive",
    "agentkeepalive",
    "HttpAgent",
    "HttpsAgent"
  ],
  "dependencies": {
    "humanize-ms": "^1.2.1"
  },
  "devDependencies": {
    "coffee": "^5.3.0",
    "cross-env": "^6.0.3",
    "egg-bin": "^4.9.0",
    "eslint": "^5.7.0",
    "eslint-config-egg": "^7.1.0",
    "git-contributor": "^2.0.0",
    "mm": "^2.4.1",
    "pedding": "^1.1.0",
    "typescript": "^3.8.3"
  },
  "engines": {
    "node": ">= 8.0.0"
  },
  "author": "fengmk2 <fengmk2@gmail.com> (https://github.com/fengmk2)",
  "license": "MIT"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agentkeepalive\lib\agent.js 
------------------------------------------------------ 
'use strict';

const OriginalAgent = require('http').Agent;
const ms = require('humanize-ms');
const debug = require('util').debuglog('agentkeepalive');
const {
  INIT_SOCKET,
  CURRENT_ID,
  CREATE_ID,
  SOCKET_CREATED_TIME,
  SOCKET_NAME,
  SOCKET_REQUEST_COUNT,
  SOCKET_REQUEST_FINISHED_COUNT,
} = require('./constants');

// OriginalAgent come from
// - https://github.com/nodejs/node/blob/v8.12.0/lib/_http_agent.js
// - https://github.com/nodejs/node/blob/v10.12.0/lib/_http_agent.js

// node <= 10
let defaultTimeoutListenerCount = 1;
const majorVersion = parseInt(process.version.split('.', 1)[0].substring(1));
if (majorVersion >= 11 && majorVersion <= 12) {
  defaultTimeoutListenerCount = 2;
} else if (majorVersion >= 13) {
  defaultTimeoutListenerCount = 3;
}

function deprecate(message) {
  console.log('[agentkeepalive:deprecated] %s', message);
}

class Agent extends OriginalAgent {
  constructor(options) {
    options = options || {};
    options.keepAlive = options.keepAlive !== false;
    // default is keep-alive and 4s free socket timeout
    // see https://medium.com/ssense-tech/reduce-networking-errors-in-nodejs-23b4eb9f2d83
    if (options.freeSocketTimeout === undefined) {
      options.freeSocketTimeout = 4000;
    }
    // Legacy API: keepAliveTimeout should be rename to `freeSocketTimeout`
    if (options.keepAliveTimeout) {
      deprecate('options.keepAliveTimeout is deprecated, please use options.freeSocketTimeout instead');
      options.freeSocketTimeout = options.keepAliveTimeout;
      delete options.keepAliveTimeout;
    }
    // Legacy API: freeSocketKeepAliveTimeout should be rename to `freeSocketTimeout`
    if (options.freeSocketKeepAliveTimeout) {
      deprecate('options.freeSocketKeepAliveTimeout is deprecated, please use options.freeSocketTimeout instead');
      options.freeSocketTimeout = options.freeSocketKeepAliveTimeout;
      delete options.freeSocketKeepAliveTimeout;
    }

    // Sets the socket to timeout after timeout milliseconds of inactivity on the socket.
    // By default is double free socket timeout.
    if (options.timeout === undefined) {
      // make sure socket default inactivity timeout >= 8s
      options.timeout = Math.max(options.freeSocketTimeout * 2, 8000);
    }

    // support humanize format
    options.timeout = ms(options.timeout);
    options.freeSocketTimeout = ms(options.freeSocketTimeout);
    options.socketActiveTTL = options.socketActiveTTL ? ms(options.socketActiveTTL) : 0;

    super(options);

    this[CURRENT_ID] = 0;

    // create socket success counter
    this.createSocketCount = 0;
    this.createSocketCountLastCheck = 0;

    this.createSocketErrorCount = 0;
    this.createSocketErrorCountLastCheck = 0;

    this.closeSocketCount = 0;
    this.closeSocketCountLastCheck = 0;

    // socket error event count
    this.errorSocketCount = 0;
    this.errorSocketCountLastCheck = 0;

    // request finished counter
    this.requestCount = 0;
    this.requestCountLastCheck = 0;

    // including free socket timeout counter
    this.timeoutSocketCount = 0;
    this.timeoutSocketCountLastCheck = 0;

    this.on('free', socket => {
      // https://github.com/nodejs/node/pull/32000
      // Node.js native agent will check socket timeout eqs agent.options.timeout.
      // Use the ttl or freeSocketTimeout to overwrite.
      const timeout = this.calcSocketTimeout(socket);
      if (timeout > 0 && socket.timeout !== timeout) {
        socket.setTimeout(timeout);
      }
    });
  }

  get freeSocketKeepAliveTimeout() {
    deprecate('agent.freeSocketKeepAliveTimeout is deprecated, please use agent.options.freeSocketTimeout instead');
    return this.options.freeSocketTimeout;
  }

  get timeout() {
    deprecate('agent.timeout is deprecated, please use agent.options.timeout instead');
    return this.options.timeout;
  }

  get socketActiveTTL() {
    deprecate('agent.socketActiveTTL is deprecated, please use agent.options.socketActiveTTL instead');
    return this.options.socketActiveTTL;
  }

  calcSocketTimeout(socket) {
    /**
     * return <= 0: should free socket
     * return > 0: should update socket timeout
     * return undefined: not find custom timeout
     */
    let freeSocketTimeout = this.options.freeSocketTimeout;
    const socketActiveTTL = this.options.socketActiveTTL;
    if (socketActiveTTL) {
      // check socketActiveTTL
      const aliveTime = Date.now() - socket[SOCKET_CREATED_TIME];
      const diff = socketActiveTTL - aliveTime;
      if (diff <= 0) {
        return diff;
      }
      if (freeSocketTimeout && diff < freeSocketTimeout) {
        freeSocketTimeout = diff;
      }
    }
    // set freeSocketTimeout
    if (freeSocketTimeout) {
      // set free keepalive timer
      // try to use socket custom freeSocketTimeout first, support headers['keep-alive']
      // https://github.com/node-modules/urllib/blob/b76053020923f4d99a1c93cf2e16e0c5ba10bacf/lib/urllib.js#L498
      const customFreeSocketTimeout = socket.freeSocketTimeout || socket.freeSocketKeepAliveTimeout;
      return customFreeSocketTimeout || freeSocketTimeout;
    }
  }

  keepSocketAlive(socket) {
    const result = super.keepSocketAlive(socket);
    // should not keepAlive, do nothing
    if (!result) return result;

    const customTimeout = this.calcSocketTimeout(socket);
    if (typeof customTimeout === 'undefined') {
      return true;
    }
    if (customTimeout <= 0) {
      debug('%s(requests: %s, finished: %s) free but need to destroy by TTL, request count %s, diff is %s',
        socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT], customTimeout);
      return false;
    }
    if (socket.timeout !== customTimeout) {
      socket.setTimeout(customTimeout);
    }
    return true;
  }

  // only call on addRequest
  reuseSocket(...args) {
    // reuseSocket(socket, req)
    super.reuseSocket(...args);
    const socket = args[0];
    const req = args[1];
    req.reusedSocket = true;
    const agentTimeout = this.options.timeout;
    if (getSocketTimeout(socket) !== agentTimeout) {
      // reset timeout before use
      socket.setTimeout(agentTimeout);
      debug('%s reset timeout to %sms', socket[SOCKET_NAME], agentTimeout);
    }
    socket[SOCKET_REQUEST_COUNT]++;
    debug('%s(requests: %s, finished: %s) reuse on addRequest, timeout %sms',
      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT],
      getSocketTimeout(socket));
  }

  [CREATE_ID]() {
    const id = this[CURRENT_ID]++;
    if (this[CURRENT_ID] === Number.MAX_SAFE_INTEGER) this[CURRENT_ID] = 0;
    return id;
  }

  [INIT_SOCKET](socket, options) {
    // bugfix here.
    // https on node 8, 10 won't set agent.options.timeout by default
    // TODO: need to fix on node itself
    if (options.timeout) {
      const timeout = getSocketTimeout(socket);
      if (!timeout) {
        socket.setTimeout(options.timeout);
      }
    }

    if (this.options.keepAlive) {
      // Disable Nagle's algorithm: http://blog.caustik.com/2012/04/08/scaling-node-js-to-100k-concurrent-connections/
      // https://fengmk2.com/benchmark/nagle-algorithm-delayed-ack-mock.html
      socket.setNoDelay(true);
    }
    this.createSocketCount++;
    if (this.options.socketActiveTTL) {
      socket[SOCKET_CREATED_TIME] = Date.now();
    }
    // don't show the hole '-----BEGIN CERTIFICATE----' key string
    socket[SOCKET_NAME] = `sock[${this[CREATE_ID]()}#${options._agentKey}]`.split('-----BEGIN', 1)[0];
    socket[SOCKET_REQUEST_COUNT] = 1;
    socket[SOCKET_REQUEST_FINISHED_COUNT] = 0;
    installListeners(this, socket, options);
  }

  createConnection(options, oncreate) {
    let called = false;
    const onNewCreate = (err, socket) => {
      if (called) return;
      called = true;

      if (err) {
        this.createSocketErrorCount++;
        return oncreate(err);
      }
      this[INIT_SOCKET](socket, options);
      oncreate(err, socket);
    };

    const newSocket = super.createConnection(options, onNewCreate);
    if (newSocket) onNewCreate(null, newSocket);
    return newSocket;
  }

  get statusChanged() {
    const changed = this.createSocketCount !== this.createSocketCountLastCheck ||
      this.createSocketErrorCount !== this.createSocketErrorCountLastCheck ||
      this.closeSocketCount !== this.closeSocketCountLastCheck ||
      this.errorSocketCount !== this.errorSocketCountLastCheck ||
      this.timeoutSocketCount !== this.timeoutSocketCountLastCheck ||
      this.requestCount !== this.requestCountLastCheck;
    if (changed) {
      this.createSocketCountLastCheck = this.createSocketCount;
      this.createSocketErrorCountLastCheck = this.createSocketErrorCount;
      this.closeSocketCountLastCheck = this.closeSocketCount;
      this.errorSocketCountLastCheck = this.errorSocketCount;
      this.timeoutSocketCountLastCheck = this.timeoutSocketCount;
      this.requestCountLastCheck = this.requestCount;
    }
    return changed;
  }

  getCurrentStatus() {
    return {
      createSocketCount: this.createSocketCount,
      createSocketErrorCount: this.createSocketErrorCount,
      closeSocketCount: this.closeSocketCount,
      errorSocketCount: this.errorSocketCount,
      timeoutSocketCount: this.timeoutSocketCount,
      requestCount: this.requestCount,
      freeSockets: inspect(this.freeSockets),
      sockets: inspect(this.sockets),
      requests: inspect(this.requests),
    };
  }
}

// node 8 don't has timeout attribute on socket
// https://github.com/nodejs/node/pull/21204/files#diff-e6ef024c3775d787c38487a6309e491dR408
function getSocketTimeout(socket) {
  return socket.timeout || socket._idleTimeout;
}

function installListeners(agent, socket, options) {
  debug('%s create, timeout %sms', socket[SOCKET_NAME], getSocketTimeout(socket));

  // listener socket events: close, timeout, error, free
  function onFree() {
    // create and socket.emit('free') logic
    // https://github.com/nodejs/node/blob/master/lib/_http_agent.js#L311
    // no req on the socket, it should be the new socket
    if (!socket._httpMessage && socket[SOCKET_REQUEST_COUNT] === 1) return;

    socket[SOCKET_REQUEST_FINISHED_COUNT]++;
    agent.requestCount++;
    debug('%s(requests: %s, finished: %s) free',
      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT]);

    // should reuse on pedding requests?
    const name = agent.getName(options);
    if (socket.writable && agent.requests[name] && agent.requests[name].length) {
      // will be reuse on agent free listener
      socket[SOCKET_REQUEST_COUNT]++;
      debug('%s(requests: %s, finished: %s) will be reuse on agent free event',
        socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT]);
    }
  }
  socket.on('free', onFree);

  function onClose(isError) {
    debug('%s(requests: %s, finished: %s) close, isError: %s',
      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT], isError);
    agent.closeSocketCount++;
  }
  socket.on('close', onClose);

  // start socket timeout handler
  function onTimeout() {
    // onTimeout and emitRequestTimeout(_http_client.js)
    // https://github.com/nodejs/node/blob/v12.x/lib/_http_client.js#L711
    const listenerCount = socket.listeners('timeout').length;
    // node <= 10, default listenerCount is 1, onTimeout
    // 11 < node <= 12, default listenerCount is 2, onTimeout and emitRequestTimeout
    // node >= 13, default listenerCount is 3, onTimeout,
    //   onTimeout(https://github.com/nodejs/node/pull/32000/files#diff-5f7fb0850412c6be189faeddea6c5359R333)
    //   and emitRequestTimeout
    const timeout = getSocketTimeout(socket);
    const req = socket._httpMessage;
    const reqTimeoutListenerCount = req && req.listeners('timeout').length || 0;
    debug('%s(requests: %s, finished: %s) timeout after %sms, listeners %s, defaultTimeoutListenerCount %s, hasHttpRequest %s, HttpRequest timeoutListenerCount %s',
      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT],
      timeout, listenerCount, defaultTimeoutListenerCount, !!req, reqTimeoutListenerCount);
    if (debug.enabled) {
      debug('timeout listeners: %s', socket.listeners('timeout').map(f => f.name).join(', '));
    }
    agent.timeoutSocketCount++;
    const name = agent.getName(options);
    if (agent.freeSockets[name] && agent.freeSockets[name].indexOf(socket) !== -1) {
      // free socket timeout, destroy quietly
      socket.destroy();
      // Remove it from freeSockets list immediately to prevent new requests
      // from being sent through this socket.
      agent.removeSocket(socket, options);
      debug('%s is free, destroy quietly', socket[SOCKET_NAME]);
    } else {
      // if there is no any request socket timeout handler,
      // agent need to handle socket timeout itself.
      //
      // custom request socket timeout handle logic must follow these rules:
      //  1. Destroy socket first
      //  2. Must emit socket 'agentRemove' event tell agent remove socket
      //     from freeSockets list immediately.
      //     Otherise you may be get 'socket hang up' error when reuse
      //     free socket and timeout happen in the same time.
      if (reqTimeoutListenerCount === 0) {
        const error = new Error('Socket timeout');
        error.code = 'ERR_SOCKET_TIMEOUT';
        error.timeout = timeout;
        // must manually call socket.end() or socket.destroy() to end the connection.
        // https://nodejs.org/dist/latest-v10.x/docs/api/net.html#net_socket_settimeout_timeout_callback
        socket.destroy(error);
        agent.removeSocket(socket, options);
        debug('%s destroy with timeout error', socket[SOCKET_NAME]);
      }
    }
  }
  socket.on('timeout', onTimeout);

  function onError(err) {
    const listenerCount = socket.listeners('error').length;
    debug('%s(requests: %s, finished: %s) error: %s, listenerCount: %s',
      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT],
      err, listenerCount);
    agent.errorSocketCount++;
    if (listenerCount === 1) {
      // if socket don't contain error event handler, don't catch it, emit it again
      debug('%s emit uncaught error event', socket[SOCKET_NAME]);
      socket.removeListener('error', onError);
      socket.emit('error', err);
    }
  }
  socket.on('error', onError);

  function onRemove() {
    debug('%s(requests: %s, finished: %s) agentRemove',
      socket[SOCKET_NAME],
      socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT]);
    // We need this function for cases like HTTP 'upgrade'
    // (defined by WebSockets) where we need to remove a socket from the
    // pool because it'll be locked up indefinitely
    socket.removeListener('close', onClose);
    socket.removeListener('error', onError);
    socket.removeListener('free', onFree);
    socket.removeListener('timeout', onTimeout);
    socket.removeListener('agentRemove', onRemove);
  }
  socket.on('agentRemove', onRemove);
}

module.exports = Agent;

function inspect(obj) {
  const res = {};
  for (const key in obj) {
    res[key] = obj[key].length;
  }
  return res;
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agentkeepalive\lib\constants.js 
------------------------------------------------------ 
'use strict';

module.exports = {
  // agent
  CURRENT_ID: Symbol('agentkeepalive#currentId'),
  CREATE_ID: Symbol('agentkeepalive#createId'),
  INIT_SOCKET: Symbol('agentkeepalive#initSocket'),
  CREATE_HTTPS_CONNECTION: Symbol('agentkeepalive#createHttpsConnection'),
  // socket
  SOCKET_CREATED_TIME: Symbol('agentkeepalive#socketCreatedTime'),
  SOCKET_NAME: Symbol('agentkeepalive#socketName'),
  SOCKET_REQUEST_COUNT: Symbol('agentkeepalive#socketRequestCount'),
  SOCKET_REQUEST_FINISHED_COUNT: Symbol('agentkeepalive#socketRequestFinishedCount'),
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agentkeepalive\lib\https_agent.js 
------------------------------------------------------ 
'use strict';

const OriginalHttpsAgent = require('https').Agent;
const HttpAgent = require('./agent');
const {
  INIT_SOCKET,
  CREATE_HTTPS_CONNECTION,
} = require('./constants');

class HttpsAgent extends HttpAgent {
  constructor(options) {
    super(options);

    this.defaultPort = 443;
    this.protocol = 'https:';
    this.maxCachedSessions = this.options.maxCachedSessions;
    /* istanbul ignore next */
    if (this.maxCachedSessions === undefined) {
      this.maxCachedSessions = 100;
    }

    this._sessionCache = {
      map: {},
      list: [],
    };
  }

  createConnection(options, oncreate) {
    const socket = this[CREATE_HTTPS_CONNECTION](options, oncreate);
    this[INIT_SOCKET](socket, options);
    return socket;
  }
}

// https://github.com/nodejs/node/blob/master/lib/https.js#L89
HttpsAgent.prototype[CREATE_HTTPS_CONNECTION] = OriginalHttpsAgent.prototype.createConnection;

[
  'getName',
  '_getSession',
  '_cacheSession',
  // https://github.com/nodejs/node/pull/4982
  '_evictSession',
].forEach(function(method) {
  /* istanbul ignore next */
  if (typeof OriginalHttpsAgent.prototype[method] === 'function') {
    HttpsAgent.prototype[method] = OriginalHttpsAgent.prototype[method];
  }
});

module.exports = HttpsAgent;
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\agentkeepalive\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\aggregate-error\index.js 
------------------------------------------------------ 
'use strict';
const indentString = require('indent-string');
const cleanStack = require('clean-stack');

const cleanInternalStack = stack => stack.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g, '');

class AggregateError extends Error {
	constructor(errors) {
		if (!Array.isArray(errors)) {
			throw new TypeError(`Expected input to be an Array, got ${typeof errors}`);
		}

		errors = [...errors].map(error => {
			if (error instanceof Error) {
				return error;
			}

			if (error !== null && typeof error === 'object') {
				// Handle plain error objects with message property and/or possibly other metadata
				return Object.assign(new Error(error.message), error);
			}

			return new Error(error);
		});

		let message = errors
			.map(error => {
				// The `stack` property is not standardized, so we can't assume it exists
				return typeof error.stack === 'string' ? cleanInternalStack(cleanStack(error.stack)) : String(error);
			})
			.join('\n');
		message = '\n' + indentString(message, 4);
		super(message);

		this.name = 'AggregateError';

		Object.defineProperty(this, '_errors', {value: errors});
	}

	* [Symbol.iterator]() {
		for (const error of this._errors) {
			yield error;
		}
	}
}

module.exports = AggregateError;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\aggregate-error\package.json 
------------------------------------------------------ 
{
	"name": "aggregate-error",
	"version": "3.1.0",
	"description": "Create an error from multiple errors",
	"license": "MIT",
	"repository": "sindresorhus/aggregate-error",
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "sindresorhus.com"
	},
	"engines": {
		"node": ">=8"
	},
	"scripts": {
		"test": "xo && ava && tsd"
	},
	"files": [
		"index.js",
		"index.d.ts"
	],
	"keywords": [
		"aggregate",
		"error",
		"combine",
		"multiple",
		"many",
		"collection",
		"iterable",
		"iterator"
	],
	"dependencies": {
		"clean-stack": "^2.0.0",
		"indent-string": "^4.0.0"
	},
	"devDependencies": {
		"ava": "^2.4.0",
		"tsd": "^0.7.1",
		"xo": "^0.25.3"
	}
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ansi-regex\index.js 
------------------------------------------------------ 
'use strict';

module.exports = ({onlyFirst = false} = {}) => {
	const pattern = [
		'[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)',
		'(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))'
	].join('|');

	return new RegExp(pattern, onlyFirst ? undefined : 'g');
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ansi-regex\package.json 
------------------------------------------------------ 
{
	"name": "ansi-regex",
	"version": "5.0.1",
	"description": "Regular expression for matching ANSI escape codes",
	"license": "MIT",
	"repository": "chalk/ansi-regex",
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "sindresorhus.com"
	},
	"engines": {
		"node": ">=8"
	},
	"scripts": {
		"test": "xo && ava && tsd",
		"view-supported": "node fixtures/view-codes.js"
	},
	"files": [
		"index.js",
		"index.d.ts"
	],
	"keywords": [
		"ansi",
		"styles",
		"color",
		"colour",
		"colors",
		"terminal",
		"console",
		"cli",
		"string",
		"tty",
		"escape",
		"formatting",
		"rgb",
		"256",
		"shell",
		"xterm",
		"command-line",
		"text",
		"regex",
		"regexp",
		"re",
		"match",
		"test",
		"find",
		"pattern"
	],
	"devDependencies": {
		"ava": "^2.4.0",
		"tsd": "^0.9.0",
		"xo": "^0.25.3"
	}
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\aproba\index.js 
------------------------------------------------------ 
'use strict'
module.exports = validate

function isArguments (thingy) {
  return thingy != null && typeof thingy === 'object' && thingy.hasOwnProperty('callee')
}

const types = {
  '*': {label: 'any', check: () => true},
  A: {label: 'array', check: _ => Array.isArray(_) || isArguments(_)},
  S: {label: 'string', check: _ => typeof _ === 'string'},
  N: {label: 'number', check: _ => typeof _ === 'number'},
  F: {label: 'function', check: _ => typeof _ === 'function'},
  O: {label: 'object', check: _ => typeof _ === 'object' && _ != null && !types.A.check(_) && !types.E.check(_)},
  B: {label: 'boolean', check: _ => typeof _ === 'boolean'},
  E: {label: 'error', check: _ => _ instanceof Error},
  Z: {label: 'null', check: _ => _ == null}
}

function addSchema (schema, arity) {
  const group = arity[schema.length] = arity[schema.length] || []
  if (group.indexOf(schema) === -1) group.push(schema)
}

function validate (rawSchemas, args) {
  if (arguments.length !== 2) throw wrongNumberOfArgs(['SA'], arguments.length)
  if (!rawSchemas) throw missingRequiredArg(0, 'rawSchemas')
  if (!args) throw missingRequiredArg(1, 'args')
  if (!types.S.check(rawSchemas)) throw invalidType(0, ['string'], rawSchemas)
  if (!types.A.check(args)) throw invalidType(1, ['array'], args)
  const schemas = rawSchemas.split('|')
  const arity = {}

  schemas.forEach(schema => {
    for (let ii = 0; ii < schema.length; ++ii) {
      const type = schema[ii]
      if (!types[type]) throw unknownType(ii, type)
    }
    if (/E.*E/.test(schema)) throw moreThanOneError(schema)
    addSchema(schema, arity)
    if (/E/.test(schema)) {
      addSchema(schema.replace(/E.*$/, 'E'), arity)
      addSchema(schema.replace(/E/, 'Z'), arity)
      if (schema.length === 1) addSchema('', arity)
    }
  })
  let matching = arity[args.length]
  if (!matching) {
    throw wrongNumberOfArgs(Object.keys(arity), args.length)
  }
  for (let ii = 0; ii < args.length; ++ii) {
    let newMatching = matching.filter(schema => {
      const type = schema[ii]
      const typeCheck = types[type].check
      return typeCheck(args[ii])
    })
    if (!newMatching.length) {
      const labels = matching.map(_ => types[_[ii]].label).filter(_ => _ != null)
      throw invalidType(ii, labels, args[ii])
    }
    matching = newMatching
  }
}

function missingRequiredArg (num) {
  return newException('EMISSINGARG', 'Missing required argument #' + (num + 1))
}

function unknownType (num, type) {
  return newException('EUNKNOWNTYPE', 'Unknown type ' + type + ' in argument #' + (num + 1))
}

function invalidType (num, expectedTypes, value) {
  let valueType
  Object.keys(types).forEach(typeCode => {
    if (types[typeCode].check(value)) valueType = types[typeCode].label
  })
  return newException('EINVALIDTYPE', 'Argument #' + (num + 1) + ': Expected ' +
    englishList(expectedTypes) + ' but got ' + valueType)
}

function englishList (list) {
  return list.join(', ').replace(/, ([^,]+)$/, ' or $1')
}

function wrongNumberOfArgs (expected, got) {
  const english = englishList(expected)
  const args = expected.every(ex => ex.length === 1)
    ? 'argument'
    : 'arguments'
  return newException('EWRONGARGCOUNT', 'Expected ' + english + ' ' + args + ' but got ' + got)
}

function moreThanOneError (schema) {
  return newException('ETOOMANYERRORTYPES',
    'Only one error type per argument signature is allowed, more than one found in "' + schema + '"')
}

function newException (code, msg) {
  const err = new TypeError(msg)
  err.code = code
  /* istanbul ignore else */
  if (Error.captureStackTrace) Error.captureStackTrace(err, validate)
  return err
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\aproba\package.json 
------------------------------------------------------ 
{
  "name": "aproba",
  "version": "2.1.0",
  "description": "A ridiculously light-weight argument validator (now browser friendly)",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "standard": "^11.0.1",
    "tap": "^12.0.1"
  },
  "files": [
    "index.js"
  ],
  "scripts": {
    "pretest": "standard",
    "test": "tap --100 -J test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/iarna/aproba"
  },
  "keywords": [
    "argument",
    "validate"
  ],
  "author": "Rebecca Turner <me@re-becca.org>",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/iarna/aproba/issues"
  },
  "homepage": "https://github.com/iarna/aproba"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\are-we-there-yet\package.json 
------------------------------------------------------ 
{
  "name": "are-we-there-yet",
  "version": "3.0.1",
  "description": "Keep track of the overall completion of many disparate processes",
  "main": "lib/index.js",
  "scripts": {
    "test": "tap",
    "npmclilint": "npmcli-lint",
    "lint": "eslint \"**/*.js\"",
    "lintfix": "npm run lint -- --fix",
    "posttest": "npm run lint",
    "postsnap": "npm run lintfix --",
    "preversion": "npm test",
    "postversion": "npm publish",
    "prepublishOnly": "git push origin --follow-tags",
    "snap": "tap",
    "postlint": "template-oss-check",
    "template-oss-apply": "template-oss-apply --force"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/npm/are-we-there-yet.git"
  },
  "author": "GitHub Inc.",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/npm/are-we-there-yet/issues"
  },
  "homepage": "https://github.com/npm/are-we-there-yet",
  "devDependencies": {
    "@npmcli/eslint-config": "^3.0.1",
    "@npmcli/template-oss": "3.5.0",
    "tap": "^16.0.1"
  },
  "dependencies": {
    "delegates": "^1.0.0",
    "readable-stream": "^3.6.0"
  },
  "files": [
    "bin/",
    "lib/"
  ],
  "engines": {
    "node": "^12.13.0 || ^14.15.0 || >=16.0.0"
  },
  "tap": {
    "branches": 68,
    "statements": 92,
    "functions": 86,
    "lines": 92
  },
  "templateOSS": {
    "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
    "version": "3.5.0"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\are-we-there-yet\lib\index.js 
------------------------------------------------------ 
'use strict'
exports.TrackerGroup = require('./tracker-group.js')
exports.Tracker = require('./tracker.js')
exports.TrackerStream = require('./tracker-stream.js')
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\are-we-there-yet\lib\tracker-base.js 
------------------------------------------------------ 
'use strict'
var EventEmitter = require('events').EventEmitter
var util = require('util')

var trackerId = 0
var TrackerBase = module.exports = function (name) {
  EventEmitter.call(this)
  this.id = ++trackerId
  this.name = name
}
util.inherits(TrackerBase, EventEmitter)
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\are-we-there-yet\lib\tracker-group.js 
------------------------------------------------------ 
'use strict'
var util = require('util')
var TrackerBase = require('./tracker-base.js')
var Tracker = require('./tracker.js')
var TrackerStream = require('./tracker-stream.js')

var TrackerGroup = module.exports = function (name) {
  TrackerBase.call(this, name)
  this.parentGroup = null
  this.trackers = []
  this.completion = {}
  this.weight = {}
  this.totalWeight = 0
  this.finished = false
  this.bubbleChange = bubbleChange(this)
}
util.inherits(TrackerGroup, TrackerBase)

function bubbleChange (trackerGroup) {
  return function (name, completed, tracker) {
    trackerGroup.completion[tracker.id] = completed
    if (trackerGroup.finished) {
      return
    }
    trackerGroup.emit('change', name || trackerGroup.name, trackerGroup.completed(), trackerGroup)
  }
}

TrackerGroup.prototype.nameInTree = function () {
  var names = []
  var from = this
  while (from) {
    names.unshift(from.name)
    from = from.parentGroup
  }
  return names.join('/')
}

TrackerGroup.prototype.addUnit = function (unit, weight) {
  if (unit.addUnit) {
    var toTest = this
    while (toTest) {
      if (unit === toTest) {
        throw new Error(
          'Attempted to add tracker group ' +
          unit.name + ' to tree that already includes it ' +
          this.nameInTree(this))
      }
      toTest = toTest.parentGroup
    }
    unit.parentGroup = this
  }
  this.weight[unit.id] = weight || 1
  this.totalWeight += this.weight[unit.id]
  this.trackers.push(unit)
  this.completion[unit.id] = unit.completed()
  unit.on('change', this.bubbleChange)
  if (!this.finished) {
    this.emit('change', unit.name, this.completion[unit.id], unit)
  }
  return unit
}

TrackerGroup.prototype.completed = function () {
  if (this.trackers.length === 0) {
    return 0
  }
  var valPerWeight = 1 / this.totalWeight
  var completed = 0
  for (var ii = 0; ii < this.trackers.length; ii++) {
    var trackerId = this.trackers[ii].id
    completed +=
      valPerWeight * this.weight[trackerId] * this.completion[trackerId]
  }
  return completed
}

TrackerGroup.prototype.newGroup = function (name, weight) {
  return this.addUnit(new TrackerGroup(name), weight)
}

TrackerGroup.prototype.newItem = function (name, todo, weight) {
  return this.addUnit(new Tracker(name, todo), weight)
}

TrackerGroup.prototype.newStream = function (name, todo, weight) {
  return this.addUnit(new TrackerStream(name, todo), weight)
}

TrackerGroup.prototype.finish = function () {
  this.finished = true
  if (!this.trackers.length) {
    this.addUnit(new Tracker(), 1, true)
  }
  for (var ii = 0; ii < this.trackers.length; ii++) {
    var tracker = this.trackers[ii]
    tracker.finish()
    tracker.removeListener('change', this.bubbleChange)
  }
  this.emit('change', this.name, 1, this)
}

var buffer = '                                  '
TrackerGroup.prototype.debug = function (depth) {
  depth = depth || 0
  var indent = depth ? buffer.slice(0, depth) : ''
  var output = indent + (this.name || 'top') + ': ' + this.completed() + '\n'
  this.trackers.forEach(function (tracker) {
    if (tracker instanceof TrackerGroup) {
      output += tracker.debug(depth + 1)
    } else {
      output += indent + ' ' + tracker.name + ': ' + tracker.completed() + '\n'
    }
  })
  return output
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\are-we-there-yet\lib\tracker-stream.js 
------------------------------------------------------ 
'use strict'
var util = require('util')
var stream = require('readable-stream')
var delegate = require('delegates')
var Tracker = require('./tracker.js')

var TrackerStream = module.exports = function (name, size, options) {
  stream.Transform.call(this, options)
  this.tracker = new Tracker(name, size)
  this.name = name
  this.id = this.tracker.id
  this.tracker.on('change', delegateChange(this))
}
util.inherits(TrackerStream, stream.Transform)

function delegateChange (trackerStream) {
  return function (name, completion, tracker) {
    trackerStream.emit('change', name, completion, trackerStream)
  }
}

TrackerStream.prototype._transform = function (data, encoding, cb) {
  this.tracker.completeWork(data.length ? data.length : 1)
  this.push(data)
  cb()
}

TrackerStream.prototype._flush = function (cb) {
  this.tracker.finish()
  cb()
}

delegate(TrackerStream.prototype, 'tracker')
  .method('completed')
  .method('addWork')
  .method('finish')
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\are-we-there-yet\lib\tracker.js 
------------------------------------------------------ 
'use strict'
var util = require('util')
var TrackerBase = require('./tracker-base.js')

var Tracker = module.exports = function (name, todo) {
  TrackerBase.call(this, name)
  this.workDone = 0
  this.workTodo = todo || 0
}
util.inherits(Tracker, TrackerBase)

Tracker.prototype.completed = function () {
  return this.workTodo === 0 ? 0 : this.workDone / this.workTodo
}

Tracker.prototype.addWork = function (work) {
  this.workTodo += work
  this.emit('change', this.name, this.completed(), this)
}

Tracker.prototype.completeWork = function (work) {
  this.workDone += work
  if (this.workDone > this.workTodo) {
    this.workDone = this.workTodo
  }
  this.emit('change', this.name, this.completed(), this)
}

Tracker.prototype.finish = function () {
  this.workTodo = this.workDone = 1
  this.emit('change', this.name, 1, this)
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\are-we-there-yet\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\balanced-match\index.js 
------------------------------------------------------ 
'use strict';
module.exports = balanced;
function balanced(a, b, str) {
  if (a instanceof RegExp) a = maybeMatch(a, str);
  if (b instanceof RegExp) b = maybeMatch(b, str);

  var r = range(a, b, str);

  return r && {
    start: r[0],
    end: r[1],
    pre: str.slice(0, r[0]),
    body: str.slice(r[0] + a.length, r[1]),
    post: str.slice(r[1] + b.length)
  };
}

function maybeMatch(reg, str) {
  var m = str.match(reg);
  return m ? m[0] : null;
}

balanced.range = range;
function range(a, b, str) {
  var begs, beg, left, right, result;
  var ai = str.indexOf(a);
  var bi = str.indexOf(b, ai + 1);
  var i = ai;

  if (ai >= 0 && bi > 0) {
    if(a===b) {
      return [ai, bi];
    }
    begs = [];
    left = str.length;

    while (i >= 0 && !result) {
      if (i == ai) {
        begs.push(i);
        ai = str.indexOf(a, i + 1);
      } else if (begs.length == 1) {
        result = [ begs.pop(), bi ];
      } else {
        beg = begs.pop();
        if (beg < left) {
          left = beg;
          right = bi;
        }

        bi = str.indexOf(b, i + 1);
      }

      i = ai < bi && ai >= 0 ? ai : bi;
    }

    if (begs.length) {
      result = [ left, right ];
    }
  }

  return result;
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\balanced-match\package.json 
------------------------------------------------------ 
{
  "name": "balanced-match",
  "description": "Match balanced character pairs, like \"{\" and \"}\"",
  "version": "1.0.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/juliangruber/balanced-match.git"
  },
  "homepage": "https://github.com/juliangruber/balanced-match",
  "main": "index.js",
  "scripts": {
    "test": "tape test/test.js",
    "bench": "matcha test/bench.js"
  },
  "devDependencies": {
    "matcha": "^0.7.0",
    "tape": "^4.6.0"
  },
  "keywords": [
    "match",
    "regexp",
    "test",
    "balanced",
    "parse"
  ],
  "author": {
    "name": "Julian Gruber",
    "email": "mail@juliangruber.com",
    "url": "http://juliangruber.com"
  },
  "license": "MIT",
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "firefox/20..latest",
      "firefox/nightly",
      "chrome/25..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\balanced-match\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\base64-js\base64js.min.js 
------------------------------------------------------ 
(function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?this:self:global:window,b.base64js=a()}})(function(){return function(){function b(d,e,g){function a(j,i){if(!e[j]){if(!d[j]){var f="function"==typeof require&&require;if(!i&&f)return f(j,!0);if(h)return h(j,!0);var c=new Error("Cannot find module '"+j+"'");throw c.code="MODULE_NOT_FOUND",c}var k=e[j]={exports:{}};d[j][0].call(k.exports,function(b){var c=d[j][1][b];return a(c||b)},k,k.exports,b,d,e,g)}return e[j].exports}for(var h="function"==typeof require&&require,c=0;c<g.length;c++)a(g[c]);return a}return b}()({"/":[function(a,b,c){'use strict';function d(a){var b=a.length;if(0<b%4)throw new Error("Invalid string. Length must be a multiple of 4");var c=a.indexOf("=");-1===c&&(c=b);var d=c===b?0:4-c%4;return[c,d]}function e(a,b,c){return 3*(b+c)/4-c}function f(a){var b,c,f=d(a),g=f[0],h=f[1],j=new m(e(a,g,h)),k=0,n=0<h?g-4:g;for(c=0;c<n;c+=4)b=l[a.charCodeAt(c)]<<18|l[a.charCodeAt(c+1)]<<12|l[a.charCodeAt(c+2)]<<6|l[a.charCodeAt(c+3)],j[k++]=255&b>>16,j[k++]=255&b>>8,j[k++]=255&b;return 2===h&&(b=l[a.charCodeAt(c)]<<2|l[a.charCodeAt(c+1)]>>4,j[k++]=255&b),1===h&&(b=l[a.charCodeAt(c)]<<10|l[a.charCodeAt(c+1)]<<4|l[a.charCodeAt(c+2)]>>2,j[k++]=255&b>>8,j[k++]=255&b),j}function g(a){return k[63&a>>18]+k[63&a>>12]+k[63&a>>6]+k[63&a]}function h(a,b,c){for(var d,e=[],f=b;f<c;f+=3)d=(16711680&a[f]<<16)+(65280&a[f+1]<<8)+(255&a[f+2]),e.push(g(d));return e.join("")}function j(a){for(var b,c=a.length,d=c%3,e=[],f=16383,g=0,j=c-d;g<j;g+=f)e.push(h(a,g,g+f>j?j:g+f));return 1===d?(b=a[c-1],e.push(k[b>>2]+k[63&b<<4]+"==")):2===d&&(b=(a[c-2]<<8)+a[c-1],e.push(k[b>>10]+k[63&b>>4]+k[63&b<<2]+"=")),e.join("")}c.byteLength=function(a){var b=d(a),c=b[0],e=b[1];return 3*(c+e)/4-e},c.toByteArray=f,c.fromByteArray=j;for(var k=[],l=[],m="undefined"==typeof Uint8Array?Array:Uint8Array,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,p=n.length;o<p;++o)k[o]=n[o],l[n.charCodeAt(o)]=o;l[45]=62,l[95]=63},{}]},{},[])("/")}); 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\base64-js\index.js 
------------------------------------------------------ 
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\base64-js\package.json 
------------------------------------------------------ 
{
  "name": "base64-js",
  "description": "Base64 encoding/decoding in pure JS",
  "version": "1.5.1",
  "author": "T. Jameson Little <t.jameson.little@gmail.com>",
  "typings": "index.d.ts",
  "bugs": {
    "url": "https://github.com/beatgammit/base64-js/issues"
  },
  "devDependencies": {
    "babel-minify": "^0.5.1",
    "benchmark": "^2.1.4",
    "browserify": "^16.3.0",
    "standard": "*",
    "tape": "4.x"
  },
  "homepage": "https://github.com/beatgammit/base64-js",
  "keywords": [
    "base64"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/beatgammit/base64-js.git"
  },
  "scripts": {
    "build": "browserify -s base64js -r ./ | minify > base64js.min.js",
    "lint": "standard",
    "test": "npm run lint && npm run unit",
    "unit": "tape test/*.js"
  },
  "funding": [
    {
      "type": "github",
      "url": "https://github.com/sponsors/feross"
    },
    {
      "type": "patreon",
      "url": "https://www.patreon.com/feross"
    },
    {
      "type": "consulting",
      "url": "https://feross.org/support"
    }
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bcryptjs\index.js 
------------------------------------------------------ 
/*
 Copyright (c) 2012 Nevins Bartolomeo <nevins.bartolomeo@gmail.com>
 Copyright (c) 2012 Shane Girish <shaneGirish@gmail.com>
 Copyright (c) 2025 Daniel Wirtz <dcode@dcode.io>

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:
 1. Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright
 notice, this list of conditions and the following disclaimer in the
 documentation and/or other materials provided with the distribution.
 3. The name of the author may not be used to endorse or promote products
 derived from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// The Node.js crypto module is used as a fallback for the Web Crypto API. When
// building for the browser, inclusion of the crypto module should be disabled,
// which the package hints at in its package.json for bundlers that support it.
import nodeCrypto from "crypto";

/**
 * The random implementation to use as a fallback.
 * @type {?function(number):!Array.<number>}
 * @inner
 */
var randomFallback = null;

/**
 * Generates cryptographically secure random bytes.
 * @function
 * @param {number} len Bytes length
 * @returns {!Array.<number>} Random bytes
 * @throws {Error} If no random implementation is available
 * @inner
 */
function randomBytes(len) {
  // Web Crypto API. Globally available in the browser and in Node.js >=23.
  try {
    return crypto.getRandomValues(new Uint8Array(len));
  } catch {}
  // Node.js crypto module for non-browser environments.
  try {
    return nodeCrypto.randomBytes(len);
  } catch {}
  // Custom fallback specified with `setRandomFallback`.
  if (!randomFallback) {
    throw Error(
      "Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative",
    );
  }
  return randomFallback(len);
}

/**
 * Sets the pseudo random number generator to use as a fallback if neither node's `crypto` module nor the Web Crypto
 *  API is available. Please note: It is highly important that the PRNG used is cryptographically secure and that it
 *  is seeded properly!
 * @param {?function(number):!Array.<number>} random Function taking the number of bytes to generate as its
 *  sole argument, returning the corresponding array of cryptographically secure random byte values.
 * @see http://nodejs.org/api/crypto.html
 * @see http://www.w3.org/TR/WebCryptoAPI/
 */
export function setRandomFallback(random) {
  randomFallback = random;
}

/**
 * Synchronously generates a salt.
 * @param {number=} rounds Number of rounds to use, defaults to 10 if omitted
 * @param {number=} seed_length Not supported.
 * @returns {string} Resulting salt
 * @throws {Error} If a random fallback is required but not set
 */
export function genSaltSync(rounds, seed_length) {
  rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;
  if (typeof rounds !== "number")
    throw Error(
      "Illegal arguments: " + typeof rounds + ", " + typeof seed_length,
    );
  if (rounds < 4) rounds = 4;
  else if (rounds > 31) rounds = 31;
  var salt = [];
  salt.push("$2b$");
  if (rounds < 10) salt.push("0");
  salt.push(rounds.toString());
  salt.push("$");
  salt.push(base64_encode(randomBytes(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN)); // May throw
  return salt.join("");
}

/**
 * Asynchronously generates a salt.
 * @param {(number|function(Error, string=))=} rounds Number of rounds to use, defaults to 10 if omitted
 * @param {(number|function(Error, string=))=} seed_length Not supported.
 * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting salt
 * @returns {!Promise} If `callback` has been omitted
 * @throws {Error} If `callback` is present but not a function
 */
export function genSalt(rounds, seed_length, callback) {
  if (typeof seed_length === "function")
    (callback = seed_length), (seed_length = undefined); // Not supported.
  if (typeof rounds === "function") (callback = rounds), (rounds = undefined);
  if (typeof rounds === "undefined") rounds = GENSALT_DEFAULT_LOG2_ROUNDS;
  else if (typeof rounds !== "number")
    throw Error("illegal arguments: " + typeof rounds);

  function _async(callback) {
    nextTick(function () {
      // Pretty thin, but salting is fast enough
      try {
        callback(null, genSaltSync(rounds));
      } catch (err) {
        callback(err);
      }
    });
  }

  if (callback) {
    if (typeof callback !== "function")
      throw Error("Illegal callback: " + typeof callback);
    _async(callback);
  } else
    return new Promise(function (resolve, reject) {
      _async(function (err, res) {
        if (err) {
          reject(err);
          return;
        }
        resolve(res);
      });
    });
}

/**
 * Synchronously generates a hash for the given password.
 * @param {string} password Password to hash
 * @param {(number|string)=} salt Salt length to generate or salt to use, default to 10
 * @returns {string} Resulting hash
 */
export function hashSync(password, salt) {
  if (typeof salt === "undefined") salt = GENSALT_DEFAULT_LOG2_ROUNDS;
  if (typeof salt === "number") salt = genSaltSync(salt);
  if (typeof password !== "string" || typeof salt !== "string")
    throw Error("Illegal arguments: " + typeof password + ", " + typeof salt);
  return _hash(password, salt);
}

/**
 * Asynchronously generates a hash for the given password.
 * @param {string} password Password to hash
 * @param {number|string} salt Salt length to generate or salt to use
 * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash
 * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed
 *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.
 * @returns {!Promise} If `callback` has been omitted
 * @throws {Error} If `callback` is present but not a function
 */
export function hash(password, salt, callback, progressCallback) {
  function _async(callback) {
    if (typeof password === "string" && typeof salt === "number")
      genSalt(salt, function (err, salt) {
        _hash(password, salt, callback, progressCallback);
      });
    else if (typeof password === "string" && typeof salt === "string")
      _hash(password, salt, callback, progressCallback);
    else
      nextTick(
        callback.bind(
          this,
          Error("Illegal arguments: " + typeof password + ", " + typeof salt),
        ),
      );
  }

  if (callback) {
    if (typeof callback !== "function")
      throw Error("Illegal callback: " + typeof callback);
    _async(callback);
  } else
    return new Promise(function (resolve, reject) {
      _async(function (err, res) {
        if (err) {
          reject(err);
          return;
        }
        resolve(res);
      });
    });
}

/**
 * Compares two strings of the same length in constant time.
 * @param {string} known Must be of the correct length
 * @param {string} unknown Must be the same length as `known`
 * @returns {boolean}
 * @inner
 */
function safeStringCompare(known, unknown) {
  var diff = known.length ^ unknown.length;
  for (var i = 0; i < known.length; ++i) {
    diff |= known.charCodeAt(i) ^ unknown.charCodeAt(i);
  }
  return diff === 0;
}

/**
 * Synchronously tests a password against a hash.
 * @param {string} password Password to compare
 * @param {string} hash Hash to test against
 * @returns {boolean} true if matching, otherwise false
 * @throws {Error} If an argument is illegal
 */
export function compareSync(password, hash) {
  if (typeof password !== "string" || typeof hash !== "string")
    throw Error("Illegal arguments: " + typeof password + ", " + typeof hash);
  if (hash.length !== 60) return false;
  return safeStringCompare(
    hashSync(password, hash.substring(0, hash.length - 31)),
    hash,
  );
}

/**
 * Asynchronously tests a password against a hash.
 * @param {string} password Password to compare
 * @param {string} hashValue Hash to test against
 * @param {function(Error, boolean)=} callback Callback receiving the error, if any, otherwise the result
 * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed
 *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.
 * @returns {!Promise} If `callback` has been omitted
 * @throws {Error} If `callback` is present but not a function
 */
export function compare(password, hashValue, callback, progressCallback) {
  function _async(callback) {
    if (typeof password !== "string" || typeof hashValue !== "string") {
      nextTick(
        callback.bind(
          this,
          Error(
            "Illegal arguments: " + typeof password + ", " + typeof hashValue,
          ),
        ),
      );
      return;
    }
    if (hashValue.length !== 60) {
      nextTick(callback.bind(this, null, false));
      return;
    }
    hash(
      password,
      hashValue.substring(0, 29),
      function (err, comp) {
        if (err) callback(err);
        else callback(null, safeStringCompare(comp, hashValue));
      },
      progressCallback,
    );
  }

  if (callback) {
    if (typeof callback !== "function")
      throw Error("Illegal callback: " + typeof callback);
    _async(callback);
  } else
    return new Promise(function (resolve, reject) {
      _async(function (err, res) {
        if (err) {
          reject(err);
          return;
        }
        resolve(res);
      });
    });
}

/**
 * Gets the number of rounds used to encrypt the specified hash.
 * @param {string} hash Hash to extract the used number of rounds from
 * @returns {number} Number of rounds used
 * @throws {Error} If `hash` is not a string
 */
export function getRounds(hash) {
  if (typeof hash !== "string")
    throw Error("Illegal arguments: " + typeof hash);
  return parseInt(hash.split("$")[2], 10);
}

/**
 * Gets the salt portion from a hash. Does not validate the hash.
 * @param {string} hash Hash to extract the salt from
 * @returns {string} Extracted salt part
 * @throws {Error} If `hash` is not a string or otherwise invalid
 */
export function getSalt(hash) {
  if (typeof hash !== "string")
    throw Error("Illegal arguments: " + typeof hash);
  if (hash.length !== 60)
    throw Error("Illegal hash length: " + hash.length + " != 60");
  return hash.substring(0, 29);
}

/**
 * Tests if a password will be truncated when hashed, that is its length is
 * greater than 72 bytes when converted to UTF-8.
 * @param {string} password The password to test
 * @returns {boolean} `true` if truncated, otherwise `false`
 */
export function truncates(password) {
  if (typeof password !== "string")
    throw Error("Illegal arguments: " + typeof password);
  return utf8Length(password) > 72;
}

/**
 * Continues with the callback on the next tick.
 * @function
 * @param {function(...[*])} callback Callback to execute
 * @inner
 */
var nextTick =
  typeof process !== "undefined" &&
  process &&
  typeof process.nextTick === "function"
    ? typeof setImmediate === "function"
      ? setImmediate
      : process.nextTick
    : setTimeout;

/** Calculates the byte length of a string encoded as UTF8. */
function utf8Length(string) {
  var len = 0,
    c = 0;
  for (var i = 0; i < string.length; ++i) {
    c = string.charCodeAt(i);
    if (c < 128) len += 1;
    else if (c < 2048) len += 2;
    else if (
      (c & 0xfc00) === 0xd800 &&
      (string.charCodeAt(i + 1) & 0xfc00) === 0xdc00
    ) {
      ++i;
      len += 4;
    } else len += 3;
  }
  return len;
}

/** Converts a string to an array of UTF8 bytes. */
function utf8Array(string) {
  var offset = 0,
    c1,
    c2;
  var buffer = new Array(utf8Length(string));
  for (var i = 0, k = string.length; i < k; ++i) {
    c1 = string.charCodeAt(i);
    if (c1 < 128) {
      buffer[offset++] = c1;
    } else if (c1 < 2048) {
      buffer[offset++] = (c1 >> 6) | 192;
      buffer[offset++] = (c1 & 63) | 128;
    } else if (
      (c1 & 0xfc00) === 0xd800 &&
      ((c2 = string.charCodeAt(i + 1)) & 0xfc00) === 0xdc00
    ) {
      c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);
      ++i;
      buffer[offset++] = (c1 >> 18) | 240;
      buffer[offset++] = ((c1 >> 12) & 63) | 128;
      buffer[offset++] = ((c1 >> 6) & 63) | 128;
      buffer[offset++] = (c1 & 63) | 128;
    } else {
      buffer[offset++] = (c1 >> 12) | 224;
      buffer[offset++] = ((c1 >> 6) & 63) | 128;
      buffer[offset++] = (c1 & 63) | 128;
    }
  }
  return buffer;
}

// A base64 implementation for the bcrypt algorithm. This is partly non-standard.

/**
 * bcrypt's own non-standard base64 dictionary.
 * @type {!Array.<string>}
 * @const
 * @inner
 **/
var BASE64_CODE =
  "./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split("");

/**
 * @type {!Array.<number>}
 * @const
 * @inner
 **/
var BASE64_INDEX = [
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
  -1, -1, -1, -1, -1, -1, -1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, -1, -1, -1, -1, -1, -1, 28,
  29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
  48, 49, 50, 51, 52, 53, -1, -1, -1, -1, -1,
];

/**
 * Encodes a byte array to base64 with up to len bytes of input.
 * @param {!Array.<number>} b Byte array
 * @param {number} len Maximum input length
 * @returns {string}
 * @inner
 */
function base64_encode(b, len) {
  var off = 0,
    rs = [],
    c1,
    c2;
  if (len <= 0 || len > b.length) throw Error("Illegal len: " + len);
  while (off < len) {
    c1 = b[off++] & 0xff;
    rs.push(BASE64_CODE[(c1 >> 2) & 0x3f]);
    c1 = (c1 & 0x03) << 4;
    if (off >= len) {
      rs.push(BASE64_CODE[c1 & 0x3f]);
      break;
    }
    c2 = b[off++] & 0xff;
    c1 |= (c2 >> 4) & 0x0f;
    rs.push(BASE64_CODE[c1 & 0x3f]);
    c1 = (c2 & 0x0f) << 2;
    if (off >= len) {
      rs.push(BASE64_CODE[c1 & 0x3f]);
      break;
    }
    c2 = b[off++] & 0xff;
    c1 |= (c2 >> 6) & 0x03;
    rs.push(BASE64_CODE[c1 & 0x3f]);
    rs.push(BASE64_CODE[c2 & 0x3f]);
  }
  return rs.join("");
}

/**
 * Decodes a base64 encoded string to up to len bytes of output.
 * @param {string} s String to decode
 * @param {number} len Maximum output length
 * @returns {!Array.<number>}
 * @inner
 */
function base64_decode(s, len) {
  var off = 0,
    slen = s.length,
    olen = 0,
    rs = [],
    c1,
    c2,
    c3,
    c4,
    o,
    code;
  if (len <= 0) throw Error("Illegal len: " + len);
  while (off < slen - 1 && olen < len) {
    code = s.charCodeAt(off++);
    c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
    code = s.charCodeAt(off++);
    c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
    if (c1 == -1 || c2 == -1) break;
    o = (c1 << 2) >>> 0;
    o |= (c2 & 0x30) >> 4;
    rs.push(String.fromCharCode(o));
    if (++olen >= len || off >= slen) break;
    code = s.charCodeAt(off++);
    c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
    if (c3 == -1) break;
    o = ((c2 & 0x0f) << 4) >>> 0;
    o |= (c3 & 0x3c) >> 2;
    rs.push(String.fromCharCode(o));
    if (++olen >= len || off >= slen) break;
    code = s.charCodeAt(off++);
    c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
    o = ((c3 & 0x03) << 6) >>> 0;
    o |= c4;
    rs.push(String.fromCharCode(o));
    ++olen;
  }
  var res = [];
  for (off = 0; off < olen; off++) res.push(rs[off].charCodeAt(0));
  return res;
}

/**
 * @type {number}
 * @const
 * @inner
 */
var BCRYPT_SALT_LEN = 16;

/**
 * @type {number}
 * @const
 * @inner
 */
var GENSALT_DEFAULT_LOG2_ROUNDS = 10;

/**
 * @type {number}
 * @const
 * @inner
 */
var BLOWFISH_NUM_ROUNDS = 16;

/**
 * @type {number}
 * @const
 * @inner
 */
var MAX_EXECUTION_TIME = 100;

/**
 * @type {Array.<number>}
 * @const
 * @inner
 */
var P_ORIG = [
  0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0,
  0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,
  0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917, 0x9216d5d9, 0x8979fb1b,
];

/**
 * @type {Array.<number>}
 * @const
 * @inner
 */
var S_ORIG = [
  0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed, 0x6a267e96,
  0xba7c9045, 0xf12c7f99, 0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16,
  0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e, 0x0d95748f, 0x728eb658,
  0x718bcd58, 0x82154aee, 0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,
  0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e,
  0x6c9e0e8b, 0xb01e8a3e, 0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60,
  0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440, 0x55ca396a, 0x2aab10b6,
  0xb4cc5c34, 0x1141e8ce, 0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,
  0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c,
  0x7a325381, 0x28958677, 0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,
  0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032, 0xef845d5d, 0xe98575b1,
  0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,
  0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e, 0x21c66842, 0xf6e96c9a,
  0x670c9c61, 0xabd388f0, 0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3,
  0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98, 0xa1f1651d, 0x39af0176,
  0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe,
  0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6, 0x4ed3aa62, 0x363f7706,
  0x1bfedf72, 0x429b023d, 0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b,
  0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7, 0xe3fe501a, 0xb6794c3b,
  0x976ce0bd, 0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,
  0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f, 0x9b30952c,
  0xcc814544, 0xaf5ebd09, 0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3,
  0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb, 0x5579c0bd, 0x1a60320a,
  0xd6a100c6, 0x402c7279, 0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8,
  0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760,
  0x53317b48, 0x3e00df82, 0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db,
  0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573, 0x695b27b0, 0xbbca58c8,
  0xe1ffa35d, 0xb8f011a0, 0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,
  0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33,
  0x62fb1341, 0xcee4c6e8, 0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,
  0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0, 0xd08ed1d0, 0xafc725e0,
  0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c,
  0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777,
  0xea752dfe, 0x8b021fa1, 0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299,
  0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9, 0x165fa266, 0x80957705,
  0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,
  0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49, 0x00250e2d, 0x2071b35e,
  0x226800bb, 0x57b8e0af, 0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa,
  0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5, 0x83260376, 0x6295cfa9,
  0x11c81968, 0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,
  0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5, 0x571be91f,
  0xf296ec6b, 0x2a0dd915, 0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664,
  0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a, 0x4b7a70e9, 0xb5b32944,
  0xdb75092e, 0xc4192623, 0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266,
  0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1, 0x193602a5, 0x75094c29,
  0xa0591340, 0xe4183a3e, 0x3f54989a, 0x5b429d65, 0x6b8fe4d6, 0x99f73fd6,
  0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1, 0x4cdd2086, 0x8470eb26,
  0x6382e9c6, 0x021ecc5e, 0x09686b3f, 0x3ebaefc9, 0x3c971814, 0x6b6a70a1,
  0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737, 0x3e07841c, 0x7fdeae5c,
  0x8e7d44ec, 0x5716f2b8, 0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,
  0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd, 0xd19113f9, 0x7ca92ff6,
  0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc, 0xc8b57634, 0x9af3dda7,
  0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41, 0xe238cd99, 0x3bea0e2f,
  0x3280bba1, 0x183eb331, 0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf,
  0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af, 0xde9a771f, 0xd9930810,
  0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124, 0x501adde6, 0x9f84cd87,
  0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c, 0xec7aec3a, 0xdb851dfa,
  0x63094366, 0xc464c3d2, 0xef1c1847, 0x3215d908, 0xdd433b37, 0x24c2ba16,
  0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd, 0x71dff89e, 0x10314e55,
  0x81ac77d6, 0x5f11199b, 0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,
  0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e, 0x86e34570, 0xeae96fb1,
  0x860e5e0a, 0x5a3e2ab3, 0x771fe71c, 0x4e3d06fa, 0x2965dcb9, 0x99e71d0f,
  0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a, 0xc6150eba, 0x94e2ea78,
  0xa5fc3c53, 0x1e0a2df4, 0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960,
  0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66, 0xe3bc4595, 0xa67bc883,
  0xb17f37d1, 0x018cff28, 0xc332ddef, 0xbe6c5aa5, 0x65582185, 0x68ab9802,
  0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84, 0x1521b628, 0x29076170,
  0xecdd4775, 0x619f1510, 0x13cca830, 0xeb61bd96, 0x0334fe1e, 0xaa0363cf,
  0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14, 0xeecc86bc, 0x60622ca7,
  0x9cab5cab, 0xb2f3846e, 0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,
  0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7, 0x9b540b19, 0x875fa099,
  0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77, 0x11ed935f, 0x16681281,
  0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99, 0x57f584a5, 0x1b227263,
  0x9b83c3ff, 0x1ac24696, 0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128,
  0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73, 0x5d4a14d9, 0xe864b7e3,
  0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea, 0xdb6c4f15, 0xfacb4fd0,
  0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105, 0xd81e799e, 0x86854dc7,
  0xe44b476a, 0x3d816250, 0xcf62a1f2, 0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3,
  0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285, 0x095bbf00, 0xad19489d,
  0x1462b174, 0x23820e00, 0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,
  0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb, 0x7cde3759, 0xcbee7460,
  0x4085f2a7, 0xce77326e, 0xa6078084, 0x19f8509e, 0xe8efd855, 0x61d99735,
  0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc, 0x9e447a2e, 0xc3453484,
  0xfdd56705, 0x0e1e9ec9, 0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340,
  0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20, 0x153e21e7, 0x8fb03d4a,
  0xe6e39f2b, 0xdb83adf7, 0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934,
  0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068, 0xd4082471, 0x3320f46a,
  0x43b7d4b7, 0x500061af, 0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840,
  0x4d95fc1d, 0x96b591af, 0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785,
  0x7fac6dd0, 0x31cb8504, 0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,
  0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb, 0x68dc1462, 0xd7486900,
  0x680ec0a4, 0x27a18dee, 0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6,
  0xaace1e7c, 0xd3375fec, 0xce78a399, 0x406b2a42, 0x20fe9e35, 0xd9f385b9,
  0xee39d7ab, 0x3b124e8b, 0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2,
  0x3a6efa74, 0xdd5b4332, 0x6841e7f7, 0xca7820fb, 0xfb0af54e, 0xd8feb397,
  0x454056ac, 0xba489527, 0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b,
  0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33, 0xa62a4a56, 0x3f3125f9,
  0x5ef47e1c, 0x9029317c, 0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3,
  0x95c11548, 0xe4c66d22, 0x48c1133f, 0xc70f86dc, 0x07f9c9ee, 0x41041f0f,
  0x404779a4, 0x5d886e17, 0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,
  0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2, 0x02e1329e,
  0xaf664fd1, 0xcad18115, 0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922,
  0x85b2a20e, 0xe6ba0d99, 0xde720c8c, 0x2da2f728, 0xd0127845, 0x95b794fd,
  0x647d0862, 0xe7ccf5f0, 0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e,
  0x0a476341, 0x992eff74, 0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8,
  0x991be14c, 0xdb6e6b0d, 0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804,
  0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b, 0x667b9ffb, 0xcedb7d9c,
  0xa091cf0b, 0xd9155ea3, 0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb,
  0x37392eb3, 0xcc115979, 0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b,
  0x12754ccc, 0x782ef11c, 0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,
  0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9, 0x44421659, 0x0a121386,
  0xd90cec6e, 0xd5abea2a, 0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe,
  0x9dbc8057, 0xf0f7c086, 0x60787bf8, 0x6003604d, 0xd1fd8346, 0xf6381fb0,
  0x7745ae04, 0xd736fccc, 0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f,
  0x77a057be, 0xbde8ae24, 0x55464299, 0xbf582e61, 0x4e58f48f, 0xf2ddfda2,
  0xf474ef38, 0x8789bdc2, 0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9,
  0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2, 0x466e598e, 0x20b45770,
  0x8cd55591, 0xc902de4c, 0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e,
  0xb77f19b6, 0xe0a9dc09, 0x662d09a1, 0xc4324633, 0xe85a1f02, 0x09f0be8c,
  0x4a99a025, 0x1d6efe10, 0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,
  0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52, 0x50115e01, 0xa70683fa,
  0xa002b5c4, 0x0de6d027, 0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5,
  0xf0177a28, 0xc0f586e0, 0x006058aa, 0x30dc7d62, 0x11e69ed7, 0x2338ea63,
  0x53c2dd94, 0xc2c21634, 0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76,
  0x6f05e409, 0x4b7c0188, 0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9,
  0x1ac15bb4, 0xd39eb8fc, 0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4,
  0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c, 0x6fd5c7e7, 0x56e14ec4,
  0x362abfce, 0xddc6c837, 0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0,
  0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742,
  0xd3822740, 0x99bc9bbe, 0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,
  0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4, 0x5748ab2f, 0xbc946e79,
  0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6,
  0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304, 0xa1fad5f0, 0x6a2d519a,
  0x63ef8ce2, 0x9a86ee22, 0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4,
  0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6, 0x2826a2f9, 0xa73a3ae1,
  0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59,
  0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593, 0xe990fd5a, 0x9e34d797,
  0x2cf0b7d9, 0x022b8b51, 0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28,
  0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c, 0xe029ac71, 0xe019a5e6,
  0x47b0acfd, 0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,
  0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4, 0x88f46dba,
  0x03a16125, 0x0564f0bd, 0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a,
  0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319, 0x7533d928, 0xb155fdf5,
  0x03563482, 0x8aba3cbb, 0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f,
  0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce,
  0x5121ce64, 0x774fbe32, 0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680,
  0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166, 0xb39a460a, 0x6445c0dd,
  0x586cdecf, 0x1c20c8ae, 0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,
  0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb,
  0x8d6612ae, 0xbf3c6f47, 0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,
  0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d, 0x4040cb08, 0x4eb4e2cc,
  0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,
  0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8, 0x611560b1, 0xe7933fdc,
  0xbb3a792b, 0x344525bd, 0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9,
  0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7, 0x1a908749, 0xd44fbd9a,
  0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f,
  0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c, 0xbf97222c, 0x15e6fc2a,
  0x0f91fc71, 0x9b941525, 0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1,
  0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442, 0xe0ec6e0e, 0x1698db3b,
  0x4c98a0be, 0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,
  0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d, 0x9b992f2e,
  0xe60b6f47, 0x0fe3f11d, 0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f,
  0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299, 0xf523f357, 0xa6327623,
  0x93a83531, 0x56cccd02, 0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc,
  0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a,
  0x45e1d006, 0xc3f27b9a, 0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6,
  0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b, 0x53113ec0, 0x1640e3d3,
  0x38abbd60, 0x2547adf0, 0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,
  0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c,
  0x01c36ae4, 0xd6ebe1f9, 0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,
  0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6,
];

/**
 * @type {Array.<number>}
 * @const
 * @inner
 */
var C_ORIG = [
  0x4f727068, 0x65616e42, 0x65686f6c, 0x64657253, 0x63727944, 0x6f756274,
];

/**
 * @param {Array.<number>} lr
 * @param {number} off
 * @param {Array.<number>} P
 * @param {Array.<number>} S
 * @returns {Array.<number>}
 * @inner
 */
function _encipher(lr, off, P, S) {
  // This is our bottleneck: 1714/1905 ticks / 90% - see profile.txt
  var n,
    l = lr[off],
    r = lr[off + 1];

  l ^= P[0];

  /*
    for (var i=0, k=BLOWFISH_NUM_ROUNDS-2; i<=k;)
        // Feistel substitution on left word
        n  = S[l >>> 24],
        n += S[0x100 | ((l >> 16) & 0xff)],
        n ^= S[0x200 | ((l >> 8) & 0xff)],
        n += S[0x300 | (l & 0xff)],
        r ^= n ^ P[++i],
        // Feistel substitution on right word
        n  = S[r >>> 24],
        n += S[0x100 | ((r >> 16) & 0xff)],
        n ^= S[0x200 | ((r >> 8) & 0xff)],
        n += S[0x300 | (r & 0xff)],
        l ^= n ^ P[++i];
    */

  //The following is an unrolled version of the above loop.
  //Iteration 0
  n = S[l >>> 24];
  n += S[0x100 | ((l >> 16) & 0xff)];
  n ^= S[0x200 | ((l >> 8) & 0xff)];
  n += S[0x300 | (l & 0xff)];
  r ^= n ^ P[1];
  n = S[r >>> 24];
  n += S[0x100 | ((r >> 16) & 0xff)];
  n ^= S[0x200 | ((r >> 8) & 0xff)];
  n += S[0x300 | (r & 0xff)];
  l ^= n ^ P[2];
  //Iteration 1
  n = S[l >>> 24];
  n += S[0x100 | ((l >> 16) & 0xff)];
  n ^= S[0x200 | ((l >> 8) & 0xff)];
  n += S[0x300 | (l & 0xff)];
  r ^= n ^ P[3];
  n = S[r >>> 24];
  n += S[0x100 | ((r >> 16) & 0xff)];
  n ^= S[0x200 | ((r >> 8) & 0xff)];
  n += S[0x300 | (r & 0xff)];
  l ^= n ^ P[4];
  //Iteration 2
  n = S[l >>> 24];
  n += S[0x100 | ((l >> 16) & 0xff)];
  n ^= S[0x200 | ((l >> 8) & 0xff)];
  n += S[0x300 | (l & 0xff)];
  r ^= n ^ P[5];
  n = S[r >>> 24];
  n += S[0x100 | ((r >> 16) & 0xff)];
  n ^= S[0x200 | ((r >> 8) & 0xff)];
  n += S[0x300 | (r & 0xff)];
  l ^= n ^ P[6];
  //Iteration 3
  n = S[l >>> 24];
  n += S[0x100 | ((l >> 16) & 0xff)];
  n ^= S[0x200 | ((l >> 8) & 0xff)];
  n += S[0x300 | (l & 0xff)];
  r ^= n ^ P[7];
  n = S[r >>> 24];
  n += S[0x100 | ((r >> 16) & 0xff)];
  n ^= S[0x200 | ((r >> 8) & 0xff)];
  n += S[0x300 | (r & 0xff)];
  l ^= n ^ P[8];
  //Iteration 4
  n = S[l >>> 24];
  n += S[0x100 | ((l >> 16) & 0xff)];
  n ^= S[0x200 | ((l >> 8) & 0xff)];
  n += S[0x300 | (l & 0xff)];
  r ^= n ^ P[9];
  n = S[r >>> 24];
  n += S[0x100 | ((r >> 16) & 0xff)];
  n ^= S[0x200 | ((r >> 8) & 0xff)];
  n += S[0x300 | (r & 0xff)];
  l ^= n ^ P[10];
  //Iteration 5
  n = S[l >>> 24];
  n += S[0x100 | ((l >> 16) & 0xff)];
  n ^= S[0x200 | ((l >> 8) & 0xff)];
  n += S[0x300 | (l & 0xff)];
  r ^= n ^ P[11];
  n = S[r >>> 24];
  n += S[0x100 | ((r >> 16) & 0xff)];
  n ^= S[0x200 | ((r >> 8) & 0xff)];
  n += S[0x300 | (r & 0xff)];
  l ^= n ^ P[12];
  //Iteration 6
  n = S[l >>> 24];
  n += S[0x100 | ((l >> 16) & 0xff)];
  n ^= S[0x200 | ((l >> 8) & 0xff)];
  n += S[0x300 | (l & 0xff)];
  r ^= n ^ P[13];
  n = S[r >>> 24];
  n += S[0x100 | ((r >> 16) & 0xff)];
  n ^= S[0x200 | ((r >> 8) & 0xff)];
  n += S[0x300 | (r & 0xff)];
  l ^= n ^ P[14];
  //Iteration 7
  n = S[l >>> 24];
  n += S[0x100 | ((l >> 16) & 0xff)];
  n ^= S[0x200 | ((l >> 8) & 0xff)];
  n += S[0x300 | (l & 0xff)];
  r ^= n ^ P[15];
  n = S[r >>> 24];
  n += S[0x100 | ((r >> 16) & 0xff)];
  n ^= S[0x200 | ((r >> 8) & 0xff)];
  n += S[0x300 | (r & 0xff)];
  l ^= n ^ P[16];

  lr[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];
  lr[off + 1] = l;
  return lr;
}

/**
 * @param {Array.<number>} data
 * @param {number} offp
 * @returns {{key: number, offp: number}}
 * @inner
 */
function _streamtoword(data, offp) {
  for (var i = 0, word = 0; i < 4; ++i)
    (word = (word << 8) | (data[offp] & 0xff)),
      (offp = (offp + 1) % data.length);
  return { key: word, offp: offp };
}

/**
 * @param {Array.<number>} key
 * @param {Array.<number>} P
 * @param {Array.<number>} S
 * @inner
 */
function _key(key, P, S) {
  var offset = 0,
    lr = [0, 0],
    plen = P.length,
    slen = S.length,
    sw;
  for (var i = 0; i < plen; i++)
    (sw = _streamtoword(key, offset)),
      (offset = sw.offp),
      (P[i] = P[i] ^ sw.key);
  for (i = 0; i < plen; i += 2)
    (lr = _encipher(lr, 0, P, S)), (P[i] = lr[0]), (P[i + 1] = lr[1]);
  for (i = 0; i < slen; i += 2)
    (lr = _encipher(lr, 0, P, S)), (S[i] = lr[0]), (S[i + 1] = lr[1]);
}

/**
 * Expensive key schedule Blowfish.
 * @param {Array.<number>} data
 * @param {Array.<number>} key
 * @param {Array.<number>} P
 * @param {Array.<number>} S
 * @inner
 */
function _ekskey(data, key, P, S) {
  var offp = 0,
    lr = [0, 0],
    plen = P.length,
    slen = S.length,
    sw;
  for (var i = 0; i < plen; i++)
    (sw = _streamtoword(key, offp)), (offp = sw.offp), (P[i] = P[i] ^ sw.key);
  offp = 0;
  for (i = 0; i < plen; i += 2)
    (sw = _streamtoword(data, offp)),
      (offp = sw.offp),
      (lr[0] ^= sw.key),
      (sw = _streamtoword(data, offp)),
      (offp = sw.offp),
      (lr[1] ^= sw.key),
      (lr = _encipher(lr, 0, P, S)),
      (P[i] = lr[0]),
      (P[i + 1] = lr[1]);
  for (i = 0; i < slen; i += 2)
    (sw = _streamtoword(data, offp)),
      (offp = sw.offp),
      (lr[0] ^= sw.key),
      (sw = _streamtoword(data, offp)),
      (offp = sw.offp),
      (lr[1] ^= sw.key),
      (lr = _encipher(lr, 0, P, S)),
      (S[i] = lr[0]),
      (S[i + 1] = lr[1]);
}

/**
 * Internaly crypts a string.
 * @param {Array.<number>} b Bytes to crypt
 * @param {Array.<number>} salt Salt bytes to use
 * @param {number} rounds Number of rounds
 * @param {function(Error, Array.<number>=)=} callback Callback receiving the error, if any, and the resulting bytes. If
 *  omitted, the operation will be performed synchronously.
 *  @param {function(number)=} progressCallback Callback called with the current progress
 * @returns {!Array.<number>|undefined} Resulting bytes if callback has been omitted, otherwise `undefined`
 * @inner
 */
function _crypt(b, salt, rounds, callback, progressCallback) {
  var cdata = C_ORIG.slice(),
    clen = cdata.length,
    err;

  // Validate
  if (rounds < 4 || rounds > 31) {
    err = Error("Illegal number of rounds (4-31): " + rounds);
    if (callback) {
      nextTick(callback.bind(this, err));
      return;
    } else throw err;
  }
  if (salt.length !== BCRYPT_SALT_LEN) {
    err = Error(
      "Illegal salt length: " + salt.length + " != " + BCRYPT_SALT_LEN,
    );
    if (callback) {
      nextTick(callback.bind(this, err));
      return;
    } else throw err;
  }
  rounds = (1 << rounds) >>> 0;

  var P,
    S,
    i = 0,
    j;

  //Use typed arrays when available - huge speedup!
  if (typeof Int32Array === "function") {
    P = new Int32Array(P_ORIG);
    S = new Int32Array(S_ORIG);
  } else {
    P = P_ORIG.slice();
    S = S_ORIG.slice();
  }

  _ekskey(salt, b, P, S);

  /**
   * Calcualtes the next round.
   * @returns {Array.<number>|undefined} Resulting array if callback has been omitted, otherwise `undefined`
   * @inner
   */
  function next() {
    if (progressCallback) progressCallback(i / rounds);
    if (i < rounds) {
      var start = Date.now();
      for (; i < rounds; ) {
        i = i + 1;
        _key(b, P, S);
        _key(salt, P, S);
        if (Date.now() - start > MAX_EXECUTION_TIME) break;
      }
    } else {
      for (i = 0; i < 64; i++)
        for (j = 0; j < clen >> 1; j++) _encipher(cdata, j << 1, P, S);
      var ret = [];
      for (i = 0; i < clen; i++)
        ret.push(((cdata[i] >> 24) & 0xff) >>> 0),
          ret.push(((cdata[i] >> 16) & 0xff) >>> 0),
          ret.push(((cdata[i] >> 8) & 0xff) >>> 0),
          ret.push((cdata[i] & 0xff) >>> 0);
      if (callback) {
        callback(null, ret);
        return;
      } else return ret;
    }
    if (callback) nextTick(next);
  }

  // Async
  if (typeof callback !== "undefined") {
    next();

    // Sync
  } else {
    var res;
    while (true) if (typeof (res = next()) !== "undefined") return res || [];
  }
}

/**
 * Internally hashes a password.
 * @param {string} password Password to hash
 * @param {?string} salt Salt to use, actually never null
 * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash. If omitted,
 *  hashing is performed synchronously.
 *  @param {function(number)=} progressCallback Callback called with the current progress
 * @returns {string|undefined} Resulting hash if callback has been omitted, otherwise `undefined`
 * @inner
 */
function _hash(password, salt, callback, progressCallback) {
  var err;
  if (typeof password !== "string" || typeof salt !== "string") {
    err = Error("Invalid string / salt: Not a string");
    if (callback) {
      nextTick(callback.bind(this, err));
      return;
    } else throw err;
  }

  // Validate the salt
  var minor, offset;
  if (salt.charAt(0) !== "$" || salt.charAt(1) !== "2") {
    err = Error("Invalid salt version: " + salt.substring(0, 2));
    if (callback) {
      nextTick(callback.bind(this, err));
      return;
    } else throw err;
  }
  if (salt.charAt(2) === "$") (minor = String.fromCharCode(0)), (offset = 3);
  else {
    minor = salt.charAt(2);
    if (
      (minor !== "a" && minor !== "b" && minor !== "y") ||
      salt.charAt(3) !== "$"
    ) {
      err = Error("Invalid salt revision: " + salt.substring(2, 4));
      if (callback) {
        nextTick(callback.bind(this, err));
        return;
      } else throw err;
    }
    offset = 4;
  }

  // Extract number of rounds
  if (salt.charAt(offset + 2) > "$") {
    err = Error("Missing salt rounds");
    if (callback) {
      nextTick(callback.bind(this, err));
      return;
    } else throw err;
  }
  var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10,
    r2 = parseInt(salt.substring(offset + 1, offset + 2), 10),
    rounds = r1 + r2,
    real_salt = salt.substring(offset + 3, offset + 25);
  password += minor >= "a" ? "\x00" : "";

  var passwordb = utf8Array(password),
    saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);

  /**
   * Finishes hashing.
   * @param {Array.<number>} bytes Byte array
   * @returns {string}
   * @inner
   */
  function finish(bytes) {
    var res = [];
    res.push("$2");
    if (minor >= "a") res.push(minor);
    res.push("$");
    if (rounds < 10) res.push("0");
    res.push(rounds.toString());
    res.push("$");
    res.push(base64_encode(saltb, saltb.length));
    res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));
    return res.join("");
  }

  // Sync
  if (typeof callback == "undefined")
    return finish(_crypt(passwordb, saltb, rounds));
  // Async
  else {
    _crypt(
      passwordb,
      saltb,
      rounds,
      function (err, bytes) {
        if (err) callback(err, null);
        else callback(null, finish(bytes));
      },
      progressCallback,
    );
  }
}

/**
 * Encodes a byte array to base64 with up to len bytes of input, using the custom bcrypt alphabet.
 * @function
 * @param {!Array.<number>} bytes Byte array
 * @param {number} length Maximum input length
 * @returns {string}
 */
export function encodeBase64(bytes, length) {
  return base64_encode(bytes, length);
}

/**
 * Decodes a base64 encoded string to up to len bytes of output, using the custom bcrypt alphabet.
 * @function
 * @param {string} string String to decode
 * @param {number} length Maximum output length
 * @returns {!Array.<number>}
 */
export function decodeBase64(string, length) {
  return base64_decode(string, length);
}

export default {
  setRandomFallback,
  genSaltSync,
  genSalt,
  hashSync,
  hash,
  compareSync,
  compare,
  getRounds,
  getSalt,
  truncates,
  encodeBase64,
  decodeBase64,
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bcryptjs\package.json 
------------------------------------------------------ 
{
  "name": "bcryptjs",
  "description": "Optimized bcrypt in plain JavaScript with zero dependencies, with TypeScript support. Compatible to 'bcrypt'.",
  "version": "3.0.2",
  "author": "Daniel Wirtz <dcode@dcode.io>",
  "contributors": [
    "Shane Girish <shaneGirish@gmail.com> (https://github.com/shaneGirish)",
    "Alex Murray <> (https://github.com/alexmurray)",
    "Nicolas Pelletier <> (https://github.com/NicolasPelletier)",
    "Josh Rogers <> (https://github.com/geekymole)",
    "Noah Isaacson <noah@nisaacson.com> (https://github.com/nisaacson)"
  ],
  "repository": {
    "type": "url",
    "url": "https://github.com/dcodeIO/bcrypt.js.git"
  },
  "bugs": {
    "url": "https://github.com/dcodeIO/bcrypt.js/issues"
  },
  "keywords": [
    "bcrypt",
    "password",
    "auth",
    "authentication",
    "encryption",
    "crypt",
    "crypto"
  ],
  "type": "module",
  "main": "umd/index.js",
  "types": "umd/index.d.ts",
  "exports": {
    ".": {
      "import": {
        "types": "./index.d.ts",
        "default": "./index.js"
      },
      "require": {
        "types": "./umd/index.d.ts",
        "default": "./umd/index.js"
      }
    }
  },
  "bin": {
    "bcrypt": "bin/bcrypt"
  },
  "license": "BSD-3-Clause",
  "scripts": {
    "build": "node scripts/build.js",
    "lint": "prettier --check .",
    "format": "prettier --write .",
    "test": "npm run test:unit && npm run test:typescript",
    "test:unit": "node tests",
    "test:typescript": "tsc --project tests/typescript/tsconfig.esnext.json && tsc --project tests/typescript/tsconfig.nodenext.json && tsc --project tests/typescript/tsconfig.commonjs.json && tsc --project tests/typescript/tsconfig.global.json"
  },
  "files": [
    "index.js",
    "index.d.ts",
    "types.d.ts",
    "umd/index.js",
    "umd/index.d.ts",
    "umd/types.d.ts",
    "umd/package.json",
    "LICENSE",
    "README.md"
  ],
  "browser": {
    "crypto": false
  },
  "devDependencies": {
    "bcrypt": "^5.1.1",
    "esm2umd": "^0.3.1",
    "prettier": "^3.5.0",
    "typescript": "^5.7.3"
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bcryptjs\bin\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bcryptjs\umd\index.js 
------------------------------------------------------ 
// GENERATED FILE. DO NOT EDIT.
(function (global, factory) {
  function preferDefault(exports) {
    return exports.default || exports;
  }
  if (typeof define === "function" && define.amd) {
    define(["crypto"], function (_crypto) {
      var exports = {};
      factory(exports, _crypto);
      return preferDefault(exports);
    });
  } else if (typeof exports === "object") {
    factory(exports, require("crypto"));
    if (typeof module === "object") module.exports = preferDefault(exports);
  } else {
    (function () {
      var exports = {};
      factory(exports, global.crypto);
      global.bcrypt = preferDefault(exports);
    })();
  }
})(
  typeof globalThis !== "undefined"
    ? globalThis
    : typeof self !== "undefined"
      ? self
      : this,
  function (_exports, _crypto) {
    "use strict";

    Object.defineProperty(_exports, "__esModule", {
      value: true,
    });
    _exports.compare = compare;
    _exports.compareSync = compareSync;
    _exports.decodeBase64 = decodeBase64;
    _exports.default = void 0;
    _exports.encodeBase64 = encodeBase64;
    _exports.genSalt = genSalt;
    _exports.genSaltSync = genSaltSync;
    _exports.getRounds = getRounds;
    _exports.getSalt = getSalt;
    _exports.hash = hash;
    _exports.hashSync = hashSync;
    _exports.setRandomFallback = setRandomFallback;
    _exports.truncates = truncates;
    _crypto = _interopRequireDefault(_crypto);
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    /*
   Copyright (c) 2012 Nevins Bartolomeo <nevins.bartolomeo@gmail.com>
   Copyright (c) 2012 Shane Girish <shaneGirish@gmail.com>
   Copyright (c) 2025 Daniel Wirtz <dcode@dcode.io>
  
   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:
   1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
   2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
   3. The name of the author may not be used to endorse or promote products
   derived from this software without specific prior written permission.
  
   THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
   IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
   THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   */

    // The Node.js crypto module is used as a fallback for the Web Crypto API. When
    // building for the browser, inclusion of the crypto module should be disabled,
    // which the package hints at in its package.json for bundlers that support it.

    /**
     * The random implementation to use as a fallback.
     * @type {?function(number):!Array.<number>}
     * @inner
     */
    var randomFallback = null;

    /**
     * Generates cryptographically secure random bytes.
     * @function
     * @param {number} len Bytes length
     * @returns {!Array.<number>} Random bytes
     * @throws {Error} If no random implementation is available
     * @inner
     */
    function randomBytes(len) {
      // Web Crypto API. Globally available in the browser and in Node.js >=23.
      try {
        return crypto.getRandomValues(new Uint8Array(len));
      } catch {}
      // Node.js crypto module for non-browser environments.
      try {
        return _crypto.default.randomBytes(len);
      } catch {}
      // Custom fallback specified with `setRandomFallback`.
      if (!randomFallback) {
        throw Error(
          "Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative",
        );
      }
      return randomFallback(len);
    }

    /**
     * Sets the pseudo random number generator to use as a fallback if neither node's `crypto` module nor the Web Crypto
     *  API is available. Please note: It is highly important that the PRNG used is cryptographically secure and that it
     *  is seeded properly!
     * @param {?function(number):!Array.<number>} random Function taking the number of bytes to generate as its
     *  sole argument, returning the corresponding array of cryptographically secure random byte values.
     * @see http://nodejs.org/api/crypto.html
     * @see http://www.w3.org/TR/WebCryptoAPI/
     */
    function setRandomFallback(random) {
      randomFallback = random;
    }

    /**
     * Synchronously generates a salt.
     * @param {number=} rounds Number of rounds to use, defaults to 10 if omitted
     * @param {number=} seed_length Not supported.
     * @returns {string} Resulting salt
     * @throws {Error} If a random fallback is required but not set
     */
    function genSaltSync(rounds, seed_length) {
      rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;
      if (typeof rounds !== "number")
        throw Error(
          "Illegal arguments: " + typeof rounds + ", " + typeof seed_length,
        );
      if (rounds < 4) rounds = 4;
      else if (rounds > 31) rounds = 31;
      var salt = [];
      salt.push("$2b$");
      if (rounds < 10) salt.push("0");
      salt.push(rounds.toString());
      salt.push("$");
      salt.push(base64_encode(randomBytes(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN)); // May throw
      return salt.join("");
    }

    /**
     * Asynchronously generates a salt.
     * @param {(number|function(Error, string=))=} rounds Number of rounds to use, defaults to 10 if omitted
     * @param {(number|function(Error, string=))=} seed_length Not supported.
     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting salt
     * @returns {!Promise} If `callback` has been omitted
     * @throws {Error} If `callback` is present but not a function
     */
    function genSalt(rounds, seed_length, callback) {
      if (typeof seed_length === "function")
        (callback = seed_length), (seed_length = undefined); // Not supported.
      if (typeof rounds === "function")
        (callback = rounds), (rounds = undefined);
      if (typeof rounds === "undefined") rounds = GENSALT_DEFAULT_LOG2_ROUNDS;
      else if (typeof rounds !== "number")
        throw Error("illegal arguments: " + typeof rounds);
      function _async(callback) {
        nextTick(function () {
          // Pretty thin, but salting is fast enough
          try {
            callback(null, genSaltSync(rounds));
          } catch (err) {
            callback(err);
          }
        });
      }
      if (callback) {
        if (typeof callback !== "function")
          throw Error("Illegal callback: " + typeof callback);
        _async(callback);
      } else
        return new Promise(function (resolve, reject) {
          _async(function (err, res) {
            if (err) {
              reject(err);
              return;
            }
            resolve(res);
          });
        });
    }

    /**
     * Synchronously generates a hash for the given password.
     * @param {string} password Password to hash
     * @param {(number|string)=} salt Salt length to generate or salt to use, default to 10
     * @returns {string} Resulting hash
     */
    function hashSync(password, salt) {
      if (typeof salt === "undefined") salt = GENSALT_DEFAULT_LOG2_ROUNDS;
      if (typeof salt === "number") salt = genSaltSync(salt);
      if (typeof password !== "string" || typeof salt !== "string")
        throw Error(
          "Illegal arguments: " + typeof password + ", " + typeof salt,
        );
      return _hash(password, salt);
    }

    /**
     * Asynchronously generates a hash for the given password.
     * @param {string} password Password to hash
     * @param {number|string} salt Salt length to generate or salt to use
     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash
     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed
     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.
     * @returns {!Promise} If `callback` has been omitted
     * @throws {Error} If `callback` is present but not a function
     */
    function hash(password, salt, callback, progressCallback) {
      function _async(callback) {
        if (typeof password === "string" && typeof salt === "number")
          genSalt(salt, function (err, salt) {
            _hash(password, salt, callback, progressCallback);
          });
        else if (typeof password === "string" && typeof salt === "string")
          _hash(password, salt, callback, progressCallback);
        else
          nextTick(
            callback.bind(
              this,
              Error(
                "Illegal arguments: " + typeof password + ", " + typeof salt,
              ),
            ),
          );
      }
      if (callback) {
        if (typeof callback !== "function")
          throw Error("Illegal callback: " + typeof callback);
        _async(callback);
      } else
        return new Promise(function (resolve, reject) {
          _async(function (err, res) {
            if (err) {
              reject(err);
              return;
            }
            resolve(res);
          });
        });
    }

    /**
     * Compares two strings of the same length in constant time.
     * @param {string} known Must be of the correct length
     * @param {string} unknown Must be the same length as `known`
     * @returns {boolean}
     * @inner
     */
    function safeStringCompare(known, unknown) {
      var diff = known.length ^ unknown.length;
      for (var i = 0; i < known.length; ++i) {
        diff |= known.charCodeAt(i) ^ unknown.charCodeAt(i);
      }
      return diff === 0;
    }

    /**
     * Synchronously tests a password against a hash.
     * @param {string} password Password to compare
     * @param {string} hash Hash to test against
     * @returns {boolean} true if matching, otherwise false
     * @throws {Error} If an argument is illegal
     */
    function compareSync(password, hash) {
      if (typeof password !== "string" || typeof hash !== "string")
        throw Error(
          "Illegal arguments: " + typeof password + ", " + typeof hash,
        );
      if (hash.length !== 60) return false;
      return safeStringCompare(
        hashSync(password, hash.substring(0, hash.length - 31)),
        hash,
      );
    }

    /**
     * Asynchronously tests a password against a hash.
     * @param {string} password Password to compare
     * @param {string} hashValue Hash to test against
     * @param {function(Error, boolean)=} callback Callback receiving the error, if any, otherwise the result
     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed
     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.
     * @returns {!Promise} If `callback` has been omitted
     * @throws {Error} If `callback` is present but not a function
     */
    function compare(password, hashValue, callback, progressCallback) {
      function _async(callback) {
        if (typeof password !== "string" || typeof hashValue !== "string") {
          nextTick(
            callback.bind(
              this,
              Error(
                "Illegal arguments: " +
                  typeof password +
                  ", " +
                  typeof hashValue,
              ),
            ),
          );
          return;
        }
        if (hashValue.length !== 60) {
          nextTick(callback.bind(this, null, false));
          return;
        }
        hash(
          password,
          hashValue.substring(0, 29),
          function (err, comp) {
            if (err) callback(err);
            else callback(null, safeStringCompare(comp, hashValue));
          },
          progressCallback,
        );
      }
      if (callback) {
        if (typeof callback !== "function")
          throw Error("Illegal callback: " + typeof callback);
        _async(callback);
      } else
        return new Promise(function (resolve, reject) {
          _async(function (err, res) {
            if (err) {
              reject(err);
              return;
            }
            resolve(res);
          });
        });
    }

    /**
     * Gets the number of rounds used to encrypt the specified hash.
     * @param {string} hash Hash to extract the used number of rounds from
     * @returns {number} Number of rounds used
     * @throws {Error} If `hash` is not a string
     */
    function getRounds(hash) {
      if (typeof hash !== "string")
        throw Error("Illegal arguments: " + typeof hash);
      return parseInt(hash.split("$")[2], 10);
    }

    /**
     * Gets the salt portion from a hash. Does not validate the hash.
     * @param {string} hash Hash to extract the salt from
     * @returns {string} Extracted salt part
     * @throws {Error} If `hash` is not a string or otherwise invalid
     */
    function getSalt(hash) {
      if (typeof hash !== "string")
        throw Error("Illegal arguments: " + typeof hash);
      if (hash.length !== 60)
        throw Error("Illegal hash length: " + hash.length + " != 60");
      return hash.substring(0, 29);
    }

    /**
     * Tests if a password will be truncated when hashed, that is its length is
     * greater than 72 bytes when converted to UTF-8.
     * @param {string} password The password to test
     * @returns {boolean} `true` if truncated, otherwise `false`
     */
    function truncates(password) {
      if (typeof password !== "string")
        throw Error("Illegal arguments: " + typeof password);
      return utf8Length(password) > 72;
    }

    /**
     * Continues with the callback on the next tick.
     * @function
     * @param {function(...[*])} callback Callback to execute
     * @inner
     */
    var nextTick =
      typeof process !== "undefined" &&
      process &&
      typeof process.nextTick === "function"
        ? typeof setImmediate === "function"
          ? setImmediate
          : process.nextTick
        : setTimeout;

    /** Calculates the byte length of a string encoded as UTF8. */
    function utf8Length(string) {
      var len = 0,
        c = 0;
      for (var i = 0; i < string.length; ++i) {
        c = string.charCodeAt(i);
        if (c < 128) len += 1;
        else if (c < 2048) len += 2;
        else if (
          (c & 0xfc00) === 0xd800 &&
          (string.charCodeAt(i + 1) & 0xfc00) === 0xdc00
        ) {
          ++i;
          len += 4;
        } else len += 3;
      }
      return len;
    }

    /** Converts a string to an array of UTF8 bytes. */
    function utf8Array(string) {
      var offset = 0,
        c1,
        c2;
      var buffer = new Array(utf8Length(string));
      for (var i = 0, k = string.length; i < k; ++i) {
        c1 = string.charCodeAt(i);
        if (c1 < 128) {
          buffer[offset++] = c1;
        } else if (c1 < 2048) {
          buffer[offset++] = (c1 >> 6) | 192;
          buffer[offset++] = (c1 & 63) | 128;
        } else if (
          (c1 & 0xfc00) === 0xd800 &&
          ((c2 = string.charCodeAt(i + 1)) & 0xfc00) === 0xdc00
        ) {
          c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);
          ++i;
          buffer[offset++] = (c1 >> 18) | 240;
          buffer[offset++] = ((c1 >> 12) & 63) | 128;
          buffer[offset++] = ((c1 >> 6) & 63) | 128;
          buffer[offset++] = (c1 & 63) | 128;
        } else {
          buffer[offset++] = (c1 >> 12) | 224;
          buffer[offset++] = ((c1 >> 6) & 63) | 128;
          buffer[offset++] = (c1 & 63) | 128;
        }
      }
      return buffer;
    }

    // A base64 implementation for the bcrypt algorithm. This is partly non-standard.

    /**
     * bcrypt's own non-standard base64 dictionary.
     * @type {!Array.<string>}
     * @const
     * @inner
     **/
    var BASE64_CODE =
      "./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(
        "",
      );

    /**
     * @type {!Array.<number>}
     * @const
     * @inner
     **/
    var BASE64_INDEX = [
      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 54, 55, 56, 57, 58, 59, 60,
      61, 62, 63, -1, -1, -1, -1, -1, -1, -1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
      12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, -1, -1,
      -1, -1, -1, -1, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
      42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, -1, -1, -1, -1, -1,
    ];

    /**
     * Encodes a byte array to base64 with up to len bytes of input.
     * @param {!Array.<number>} b Byte array
     * @param {number} len Maximum input length
     * @returns {string}
     * @inner
     */
    function base64_encode(b, len) {
      var off = 0,
        rs = [],
        c1,
        c2;
      if (len <= 0 || len > b.length) throw Error("Illegal len: " + len);
      while (off < len) {
        c1 = b[off++] & 0xff;
        rs.push(BASE64_CODE[(c1 >> 2) & 0x3f]);
        c1 = (c1 & 0x03) << 4;
        if (off >= len) {
          rs.push(BASE64_CODE[c1 & 0x3f]);
          break;
        }
        c2 = b[off++] & 0xff;
        c1 |= (c2 >> 4) & 0x0f;
        rs.push(BASE64_CODE[c1 & 0x3f]);
        c1 = (c2 & 0x0f) << 2;
        if (off >= len) {
          rs.push(BASE64_CODE[c1 & 0x3f]);
          break;
        }
        c2 = b[off++] & 0xff;
        c1 |= (c2 >> 6) & 0x03;
        rs.push(BASE64_CODE[c1 & 0x3f]);
        rs.push(BASE64_CODE[c2 & 0x3f]);
      }
      return rs.join("");
    }

    /**
     * Decodes a base64 encoded string to up to len bytes of output.
     * @param {string} s String to decode
     * @param {number} len Maximum output length
     * @returns {!Array.<number>}
     * @inner
     */
    function base64_decode(s, len) {
      var off = 0,
        slen = s.length,
        olen = 0,
        rs = [],
        c1,
        c2,
        c3,
        c4,
        o,
        code;
      if (len <= 0) throw Error("Illegal len: " + len);
      while (off < slen - 1 && olen < len) {
        code = s.charCodeAt(off++);
        c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
        code = s.charCodeAt(off++);
        c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
        if (c1 == -1 || c2 == -1) break;
        o = (c1 << 2) >>> 0;
        o |= (c2 & 0x30) >> 4;
        rs.push(String.fromCharCode(o));
        if (++olen >= len || off >= slen) break;
        code = s.charCodeAt(off++);
        c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
        if (c3 == -1) break;
        o = ((c2 & 0x0f) << 4) >>> 0;
        o |= (c3 & 0x3c) >> 2;
        rs.push(String.fromCharCode(o));
        if (++olen >= len || off >= slen) break;
        code = s.charCodeAt(off++);
        c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
        o = ((c3 & 0x03) << 6) >>> 0;
        o |= c4;
        rs.push(String.fromCharCode(o));
        ++olen;
      }
      var res = [];
      for (off = 0; off < olen; off++) res.push(rs[off].charCodeAt(0));
      return res;
    }

    /**
     * @type {number}
     * @const
     * @inner
     */
    var BCRYPT_SALT_LEN = 16;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var GENSALT_DEFAULT_LOG2_ROUNDS = 10;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var BLOWFISH_NUM_ROUNDS = 16;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var MAX_EXECUTION_TIME = 100;

    /**
     * @type {Array.<number>}
     * @const
     * @inner
     */
    var P_ORIG = [
      0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0,
      0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,
      0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917, 0x9216d5d9, 0x8979fb1b,
    ];

    /**
     * @type {Array.<number>}
     * @const
     * @inner
     */
    var S_ORIG = [
      0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed, 0x6a267e96,
      0xba7c9045, 0xf12c7f99, 0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16,
      0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e, 0x0d95748f, 0x728eb658,
      0x718bcd58, 0x82154aee, 0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,
      0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e,
      0x6c9e0e8b, 0xb01e8a3e, 0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60,
      0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440, 0x55ca396a, 0x2aab10b6,
      0xb4cc5c34, 0x1141e8ce, 0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,
      0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c,
      0x7a325381, 0x28958677, 0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,
      0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032, 0xef845d5d, 0xe98575b1,
      0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,
      0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e, 0x21c66842, 0xf6e96c9a,
      0x670c9c61, 0xabd388f0, 0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3,
      0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98, 0xa1f1651d, 0x39af0176,
      0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe,
      0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6, 0x4ed3aa62, 0x363f7706,
      0x1bfedf72, 0x429b023d, 0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b,
      0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7, 0xe3fe501a, 0xb6794c3b,
      0x976ce0bd, 0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,
      0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f, 0x9b30952c,
      0xcc814544, 0xaf5ebd09, 0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3,
      0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb, 0x5579c0bd, 0x1a60320a,
      0xd6a100c6, 0x402c7279, 0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8,
      0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760,
      0x53317b48, 0x3e00df82, 0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db,
      0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573, 0x695b27b0, 0xbbca58c8,
      0xe1ffa35d, 0xb8f011a0, 0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,
      0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33,
      0x62fb1341, 0xcee4c6e8, 0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,
      0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0, 0xd08ed1d0, 0xafc725e0,
      0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c,
      0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777,
      0xea752dfe, 0x8b021fa1, 0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299,
      0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9, 0x165fa266, 0x80957705,
      0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,
      0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49, 0x00250e2d, 0x2071b35e,
      0x226800bb, 0x57b8e0af, 0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa,
      0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5, 0x83260376, 0x6295cfa9,
      0x11c81968, 0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,
      0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5, 0x571be91f,
      0xf296ec6b, 0x2a0dd915, 0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664,
      0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a, 0x4b7a70e9, 0xb5b32944,
      0xdb75092e, 0xc4192623, 0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266,
      0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1, 0x193602a5, 0x75094c29,
      0xa0591340, 0xe4183a3e, 0x3f54989a, 0x5b429d65, 0x6b8fe4d6, 0x99f73fd6,
      0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1, 0x4cdd2086, 0x8470eb26,
      0x6382e9c6, 0x021ecc5e, 0x09686b3f, 0x3ebaefc9, 0x3c971814, 0x6b6a70a1,
      0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737, 0x3e07841c, 0x7fdeae5c,
      0x8e7d44ec, 0x5716f2b8, 0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,
      0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd, 0xd19113f9, 0x7ca92ff6,
      0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc, 0xc8b57634, 0x9af3dda7,
      0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41, 0xe238cd99, 0x3bea0e2f,
      0x3280bba1, 0x183eb331, 0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf,
      0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af, 0xde9a771f, 0xd9930810,
      0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124, 0x501adde6, 0x9f84cd87,
      0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c, 0xec7aec3a, 0xdb851dfa,
      0x63094366, 0xc464c3d2, 0xef1c1847, 0x3215d908, 0xdd433b37, 0x24c2ba16,
      0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd, 0x71dff89e, 0x10314e55,
      0x81ac77d6, 0x5f11199b, 0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,
      0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e, 0x86e34570, 0xeae96fb1,
      0x860e5e0a, 0x5a3e2ab3, 0x771fe71c, 0x4e3d06fa, 0x2965dcb9, 0x99e71d0f,
      0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a, 0xc6150eba, 0x94e2ea78,
      0xa5fc3c53, 0x1e0a2df4, 0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960,
      0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66, 0xe3bc4595, 0xa67bc883,
      0xb17f37d1, 0x018cff28, 0xc332ddef, 0xbe6c5aa5, 0x65582185, 0x68ab9802,
      0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84, 0x1521b628, 0x29076170,
      0xecdd4775, 0x619f1510, 0x13cca830, 0xeb61bd96, 0x0334fe1e, 0xaa0363cf,
      0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14, 0xeecc86bc, 0x60622ca7,
      0x9cab5cab, 0xb2f3846e, 0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,
      0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7, 0x9b540b19, 0x875fa099,
      0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77, 0x11ed935f, 0x16681281,
      0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99, 0x57f584a5, 0x1b227263,
      0x9b83c3ff, 0x1ac24696, 0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128,
      0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73, 0x5d4a14d9, 0xe864b7e3,
      0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea, 0xdb6c4f15, 0xfacb4fd0,
      0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105, 0xd81e799e, 0x86854dc7,
      0xe44b476a, 0x3d816250, 0xcf62a1f2, 0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3,
      0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285, 0x095bbf00, 0xad19489d,
      0x1462b174, 0x23820e00, 0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,
      0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb, 0x7cde3759, 0xcbee7460,
      0x4085f2a7, 0xce77326e, 0xa6078084, 0x19f8509e, 0xe8efd855, 0x61d99735,
      0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc, 0x9e447a2e, 0xc3453484,
      0xfdd56705, 0x0e1e9ec9, 0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340,
      0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20, 0x153e21e7, 0x8fb03d4a,
      0xe6e39f2b, 0xdb83adf7, 0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934,
      0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068, 0xd4082471, 0x3320f46a,
      0x43b7d4b7, 0x500061af, 0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840,
      0x4d95fc1d, 0x96b591af, 0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785,
      0x7fac6dd0, 0x31cb8504, 0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,
      0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb, 0x68dc1462, 0xd7486900,
      0x680ec0a4, 0x27a18dee, 0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6,
      0xaace1e7c, 0xd3375fec, 0xce78a399, 0x406b2a42, 0x20fe9e35, 0xd9f385b9,
      0xee39d7ab, 0x3b124e8b, 0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2,
      0x3a6efa74, 0xdd5b4332, 0x6841e7f7, 0xca7820fb, 0xfb0af54e, 0xd8feb397,
      0x454056ac, 0xba489527, 0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b,
      0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33, 0xa62a4a56, 0x3f3125f9,
      0x5ef47e1c, 0x9029317c, 0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3,
      0x95c11548, 0xe4c66d22, 0x48c1133f, 0xc70f86dc, 0x07f9c9ee, 0x41041f0f,
      0x404779a4, 0x5d886e17, 0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,
      0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2, 0x02e1329e,
      0xaf664fd1, 0xcad18115, 0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922,
      0x85b2a20e, 0xe6ba0d99, 0xde720c8c, 0x2da2f728, 0xd0127845, 0x95b794fd,
      0x647d0862, 0xe7ccf5f0, 0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e,
      0x0a476341, 0x992eff74, 0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8,
      0x991be14c, 0xdb6e6b0d, 0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804,
      0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b, 0x667b9ffb, 0xcedb7d9c,
      0xa091cf0b, 0xd9155ea3, 0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb,
      0x37392eb3, 0xcc115979, 0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b,
      0x12754ccc, 0x782ef11c, 0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,
      0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9, 0x44421659, 0x0a121386,
      0xd90cec6e, 0xd5abea2a, 0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe,
      0x9dbc8057, 0xf0f7c086, 0x60787bf8, 0x6003604d, 0xd1fd8346, 0xf6381fb0,
      0x7745ae04, 0xd736fccc, 0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f,
      0x77a057be, 0xbde8ae24, 0x55464299, 0xbf582e61, 0x4e58f48f, 0xf2ddfda2,
      0xf474ef38, 0x8789bdc2, 0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9,
      0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2, 0x466e598e, 0x20b45770,
      0x8cd55591, 0xc902de4c, 0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e,
      0xb77f19b6, 0xe0a9dc09, 0x662d09a1, 0xc4324633, 0xe85a1f02, 0x09f0be8c,
      0x4a99a025, 0x1d6efe10, 0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,
      0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52, 0x50115e01, 0xa70683fa,
      0xa002b5c4, 0x0de6d027, 0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5,
      0xf0177a28, 0xc0f586e0, 0x006058aa, 0x30dc7d62, 0x11e69ed7, 0x2338ea63,
      0x53c2dd94, 0xc2c21634, 0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76,
      0x6f05e409, 0x4b7c0188, 0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9,
      0x1ac15bb4, 0xd39eb8fc, 0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4,
      0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c, 0x6fd5c7e7, 0x56e14ec4,
      0x362abfce, 0xddc6c837, 0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0,
      0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742,
      0xd3822740, 0x99bc9bbe, 0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,
      0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4, 0x5748ab2f, 0xbc946e79,
      0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6,
      0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304, 0xa1fad5f0, 0x6a2d519a,
      0x63ef8ce2, 0x9a86ee22, 0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4,
      0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6, 0x2826a2f9, 0xa73a3ae1,
      0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59,
      0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593, 0xe990fd5a, 0x9e34d797,
      0x2cf0b7d9, 0x022b8b51, 0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28,
      0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c, 0xe029ac71, 0xe019a5e6,
      0x47b0acfd, 0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,
      0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4, 0x88f46dba,
      0x03a16125, 0x0564f0bd, 0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a,
      0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319, 0x7533d928, 0xb155fdf5,
      0x03563482, 0x8aba3cbb, 0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f,
      0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce,
      0x5121ce64, 0x774fbe32, 0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680,
      0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166, 0xb39a460a, 0x6445c0dd,
      0x586cdecf, 0x1c20c8ae, 0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,
      0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb,
      0x8d6612ae, 0xbf3c6f47, 0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,
      0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d, 0x4040cb08, 0x4eb4e2cc,
      0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,
      0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8, 0x611560b1, 0xe7933fdc,
      0xbb3a792b, 0x344525bd, 0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9,
      0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7, 0x1a908749, 0xd44fbd9a,
      0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f,
      0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c, 0xbf97222c, 0x15e6fc2a,
      0x0f91fc71, 0x9b941525, 0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1,
      0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442, 0xe0ec6e0e, 0x1698db3b,
      0x4c98a0be, 0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,
      0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d, 0x9b992f2e,
      0xe60b6f47, 0x0fe3f11d, 0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f,
      0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299, 0xf523f357, 0xa6327623,
      0x93a83531, 0x56cccd02, 0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc,
      0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a,
      0x45e1d006, 0xc3f27b9a, 0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6,
      0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b, 0x53113ec0, 0x1640e3d3,
      0x38abbd60, 0x2547adf0, 0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,
      0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c,
      0x01c36ae4, 0xd6ebe1f9, 0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,
      0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6,
    ];

    /**
     * @type {Array.<number>}
     * @const
     * @inner
     */
    var C_ORIG = [
      0x4f727068, 0x65616e42, 0x65686f6c, 0x64657253, 0x63727944, 0x6f756274,
    ];

    /**
     * @param {Array.<number>} lr
     * @param {number} off
     * @param {Array.<number>} P
     * @param {Array.<number>} S
     * @returns {Array.<number>}
     * @inner
     */
    function _encipher(lr, off, P, S) {
      // This is our bottleneck: 1714/1905 ticks / 90% - see profile.txt
      var n,
        l = lr[off],
        r = lr[off + 1];
      l ^= P[0];

      /*
      for (var i=0, k=BLOWFISH_NUM_ROUNDS-2; i<=k;)
          // Feistel substitution on left word
          n  = S[l >>> 24],
          n += S[0x100 | ((l >> 16) & 0xff)],
          n ^= S[0x200 | ((l >> 8) & 0xff)],
          n += S[0x300 | (l & 0xff)],
          r ^= n ^ P[++i],
          // Feistel substitution on right word
          n  = S[r >>> 24],
          n += S[0x100 | ((r >> 16) & 0xff)],
          n ^= S[0x200 | ((r >> 8) & 0xff)],
          n += S[0x300 | (r & 0xff)],
          l ^= n ^ P[++i];
      */

      //The following is an unrolled version of the above loop.
      //Iteration 0
      n = S[l >>> 24];
      n += S[0x100 | ((l >> 16) & 0xff)];
      n ^= S[0x200 | ((l >> 8) & 0xff)];
      n += S[0x300 | (l & 0xff)];
      r ^= n ^ P[1];
      n = S[r >>> 24];
      n += S[0x100 | ((r >> 16) & 0xff)];
      n ^= S[0x200 | ((r >> 8) & 0xff)];
      n += S[0x300 | (r & 0xff)];
      l ^= n ^ P[2];
      //Iteration 1
      n = S[l >>> 24];
      n += S[0x100 | ((l >> 16) & 0xff)];
      n ^= S[0x200 | ((l >> 8) & 0xff)];
      n += S[0x300 | (l & 0xff)];
      r ^= n ^ P[3];
      n = S[r >>> 24];
      n += S[0x100 | ((r >> 16) & 0xff)];
      n ^= S[0x200 | ((r >> 8) & 0xff)];
      n += S[0x300 | (r & 0xff)];
      l ^= n ^ P[4];
      //Iteration 2
      n = S[l >>> 24];
      n += S[0x100 | ((l >> 16) & 0xff)];
      n ^= S[0x200 | ((l >> 8) & 0xff)];
      n += S[0x300 | (l & 0xff)];
      r ^= n ^ P[5];
      n = S[r >>> 24];
      n += S[0x100 | ((r >> 16) & 0xff)];
      n ^= S[0x200 | ((r >> 8) & 0xff)];
      n += S[0x300 | (r & 0xff)];
      l ^= n ^ P[6];
      //Iteration 3
      n = S[l >>> 24];
      n += S[0x100 | ((l >> 16) & 0xff)];
      n ^= S[0x200 | ((l >> 8) & 0xff)];
      n += S[0x300 | (l & 0xff)];
      r ^= n ^ P[7];
      n = S[r >>> 24];
      n += S[0x100 | ((r >> 16) & 0xff)];
      n ^= S[0x200 | ((r >> 8) & 0xff)];
      n += S[0x300 | (r & 0xff)];
      l ^= n ^ P[8];
      //Iteration 4
      n = S[l >>> 24];
      n += S[0x100 | ((l >> 16) & 0xff)];
      n ^= S[0x200 | ((l >> 8) & 0xff)];
      n += S[0x300 | (l & 0xff)];
      r ^= n ^ P[9];
      n = S[r >>> 24];
      n += S[0x100 | ((r >> 16) & 0xff)];
      n ^= S[0x200 | ((r >> 8) & 0xff)];
      n += S[0x300 | (r & 0xff)];
      l ^= n ^ P[10];
      //Iteration 5
      n = S[l >>> 24];
      n += S[0x100 | ((l >> 16) & 0xff)];
      n ^= S[0x200 | ((l >> 8) & 0xff)];
      n += S[0x300 | (l & 0xff)];
      r ^= n ^ P[11];
      n = S[r >>> 24];
      n += S[0x100 | ((r >> 16) & 0xff)];
      n ^= S[0x200 | ((r >> 8) & 0xff)];
      n += S[0x300 | (r & 0xff)];
      l ^= n ^ P[12];
      //Iteration 6
      n = S[l >>> 24];
      n += S[0x100 | ((l >> 16) & 0xff)];
      n ^= S[0x200 | ((l >> 8) & 0xff)];
      n += S[0x300 | (l & 0xff)];
      r ^= n ^ P[13];
      n = S[r >>> 24];
      n += S[0x100 | ((r >> 16) & 0xff)];
      n ^= S[0x200 | ((r >> 8) & 0xff)];
      n += S[0x300 | (r & 0xff)];
      l ^= n ^ P[14];
      //Iteration 7
      n = S[l >>> 24];
      n += S[0x100 | ((l >> 16) & 0xff)];
      n ^= S[0x200 | ((l >> 8) & 0xff)];
      n += S[0x300 | (l & 0xff)];
      r ^= n ^ P[15];
      n = S[r >>> 24];
      n += S[0x100 | ((r >> 16) & 0xff)];
      n ^= S[0x200 | ((r >> 8) & 0xff)];
      n += S[0x300 | (r & 0xff)];
      l ^= n ^ P[16];
      lr[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];
      lr[off + 1] = l;
      return lr;
    }

    /**
     * @param {Array.<number>} data
     * @param {number} offp
     * @returns {{key: number, offp: number}}
     * @inner
     */
    function _streamtoword(data, offp) {
      for (var i = 0, word = 0; i < 4; ++i)
        (word = (word << 8) | (data[offp] & 0xff)),
          (offp = (offp + 1) % data.length);
      return {
        key: word,
        offp: offp,
      };
    }

    /**
     * @param {Array.<number>} key
     * @param {Array.<number>} P
     * @param {Array.<number>} S
     * @inner
     */
    function _key(key, P, S) {
      var offset = 0,
        lr = [0, 0],
        plen = P.length,
        slen = S.length,
        sw;
      for (var i = 0; i < plen; i++)
        (sw = _streamtoword(key, offset)),
          (offset = sw.offp),
          (P[i] = P[i] ^ sw.key);
      for (i = 0; i < plen; i += 2)
        (lr = _encipher(lr, 0, P, S)), (P[i] = lr[0]), (P[i + 1] = lr[1]);
      for (i = 0; i < slen; i += 2)
        (lr = _encipher(lr, 0, P, S)), (S[i] = lr[0]), (S[i + 1] = lr[1]);
    }

    /**
     * Expensive key schedule Blowfish.
     * @param {Array.<number>} data
     * @param {Array.<number>} key
     * @param {Array.<number>} P
     * @param {Array.<number>} S
     * @inner
     */
    function _ekskey(data, key, P, S) {
      var offp = 0,
        lr = [0, 0],
        plen = P.length,
        slen = S.length,
        sw;
      for (var i = 0; i < plen; i++)
        (sw = _streamtoword(key, offp)),
          (offp = sw.offp),
          (P[i] = P[i] ^ sw.key);
      offp = 0;
      for (i = 0; i < plen; i += 2)
        (sw = _streamtoword(data, offp)),
          (offp = sw.offp),
          (lr[0] ^= sw.key),
          (sw = _streamtoword(data, offp)),
          (offp = sw.offp),
          (lr[1] ^= sw.key),
          (lr = _encipher(lr, 0, P, S)),
          (P[i] = lr[0]),
          (P[i + 1] = lr[1]);
      for (i = 0; i < slen; i += 2)
        (sw = _streamtoword(data, offp)),
          (offp = sw.offp),
          (lr[0] ^= sw.key),
          (sw = _streamtoword(data, offp)),
          (offp = sw.offp),
          (lr[1] ^= sw.key),
          (lr = _encipher(lr, 0, P, S)),
          (S[i] = lr[0]),
          (S[i + 1] = lr[1]);
    }

    /**
     * Internaly crypts a string.
     * @param {Array.<number>} b Bytes to crypt
     * @param {Array.<number>} salt Salt bytes to use
     * @param {number} rounds Number of rounds
     * @param {function(Error, Array.<number>=)=} callback Callback receiving the error, if any, and the resulting bytes. If
     *  omitted, the operation will be performed synchronously.
     *  @param {function(number)=} progressCallback Callback called with the current progress
     * @returns {!Array.<number>|undefined} Resulting bytes if callback has been omitted, otherwise `undefined`
     * @inner
     */
    function _crypt(b, salt, rounds, callback, progressCallback) {
      var cdata = C_ORIG.slice(),
        clen = cdata.length,
        err;

      // Validate
      if (rounds < 4 || rounds > 31) {
        err = Error("Illegal number of rounds (4-31): " + rounds);
        if (callback) {
          nextTick(callback.bind(this, err));
          return;
        } else throw err;
      }
      if (salt.length !== BCRYPT_SALT_LEN) {
        err = Error(
          "Illegal salt length: " + salt.length + " != " + BCRYPT_SALT_LEN,
        );
        if (callback) {
          nextTick(callback.bind(this, err));
          return;
        } else throw err;
      }
      rounds = (1 << rounds) >>> 0;
      var P,
        S,
        i = 0,
        j;

      //Use typed arrays when available - huge speedup!
      if (typeof Int32Array === "function") {
        P = new Int32Array(P_ORIG);
        S = new Int32Array(S_ORIG);
      } else {
        P = P_ORIG.slice();
        S = S_ORIG.slice();
      }
      _ekskey(salt, b, P, S);

      /**
       * Calcualtes the next round.
       * @returns {Array.<number>|undefined} Resulting array if callback has been omitted, otherwise `undefined`
       * @inner
       */
      function next() {
        if (progressCallback) progressCallback(i / rounds);
        if (i < rounds) {
          var start = Date.now();
          for (; i < rounds; ) {
            i = i + 1;
            _key(b, P, S);
            _key(salt, P, S);
            if (Date.now() - start > MAX_EXECUTION_TIME) break;
          }
        } else {
          for (i = 0; i < 64; i++)
            for (j = 0; j < clen >> 1; j++) _encipher(cdata, j << 1, P, S);
          var ret = [];
          for (i = 0; i < clen; i++)
            ret.push(((cdata[i] >> 24) & 0xff) >>> 0),
              ret.push(((cdata[i] >> 16) & 0xff) >>> 0),
              ret.push(((cdata[i] >> 8) & 0xff) >>> 0),
              ret.push((cdata[i] & 0xff) >>> 0);
          if (callback) {
            callback(null, ret);
            return;
          } else return ret;
        }
        if (callback) nextTick(next);
      }

      // Async
      if (typeof callback !== "undefined") {
        next();

        // Sync
      } else {
        var res;
        while (true)
          if (typeof (res = next()) !== "undefined") return res || [];
      }
    }

    /**
     * Internally hashes a password.
     * @param {string} password Password to hash
     * @param {?string} salt Salt to use, actually never null
     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash. If omitted,
     *  hashing is performed synchronously.
     *  @param {function(number)=} progressCallback Callback called with the current progress
     * @returns {string|undefined} Resulting hash if callback has been omitted, otherwise `undefined`
     * @inner
     */
    function _hash(password, salt, callback, progressCallback) {
      var err;
      if (typeof password !== "string" || typeof salt !== "string") {
        err = Error("Invalid string / salt: Not a string");
        if (callback) {
          nextTick(callback.bind(this, err));
          return;
        } else throw err;
      }

      // Validate the salt
      var minor, offset;
      if (salt.charAt(0) !== "$" || salt.charAt(1) !== "2") {
        err = Error("Invalid salt version: " + salt.substring(0, 2));
        if (callback) {
          nextTick(callback.bind(this, err));
          return;
        } else throw err;
      }
      if (salt.charAt(2) === "$")
        (minor = String.fromCharCode(0)), (offset = 3);
      else {
        minor = salt.charAt(2);
        if (
          (minor !== "a" && minor !== "b" && minor !== "y") ||
          salt.charAt(3) !== "$"
        ) {
          err = Error("Invalid salt revision: " + salt.substring(2, 4));
          if (callback) {
            nextTick(callback.bind(this, err));
            return;
          } else throw err;
        }
        offset = 4;
      }

      // Extract number of rounds
      if (salt.charAt(offset + 2) > "$") {
        err = Error("Missing salt rounds");
        if (callback) {
          nextTick(callback.bind(this, err));
          return;
        } else throw err;
      }
      var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10,
        r2 = parseInt(salt.substring(offset + 1, offset + 2), 10),
        rounds = r1 + r2,
        real_salt = salt.substring(offset + 3, offset + 25);
      password += minor >= "a" ? "\x00" : "";
      var passwordb = utf8Array(password),
        saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);

      /**
       * Finishes hashing.
       * @param {Array.<number>} bytes Byte array
       * @returns {string}
       * @inner
       */
      function finish(bytes) {
        var res = [];
        res.push("$2");
        if (minor >= "a") res.push(minor);
        res.push("$");
        if (rounds < 10) res.push("0");
        res.push(rounds.toString());
        res.push("$");
        res.push(base64_encode(saltb, saltb.length));
        res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));
        return res.join("");
      }

      // Sync
      if (typeof callback == "undefined")
        return finish(_crypt(passwordb, saltb, rounds));
      // Async
      else {
        _crypt(
          passwordb,
          saltb,
          rounds,
          function (err, bytes) {
            if (err) callback(err, null);
            else callback(null, finish(bytes));
          },
          progressCallback,
        );
      }
    }

    /**
     * Encodes a byte array to base64 with up to len bytes of input, using the custom bcrypt alphabet.
     * @function
     * @param {!Array.<number>} bytes Byte array
     * @param {number} length Maximum input length
     * @returns {string}
     */
    function encodeBase64(bytes, length) {
      return base64_encode(bytes, length);
    }

    /**
     * Decodes a base64 encoded string to up to len bytes of output, using the custom bcrypt alphabet.
     * @function
     * @param {string} string String to decode
     * @param {number} length Maximum output length
     * @returns {!Array.<number>}
     */
    function decodeBase64(string, length) {
      return base64_decode(string, length);
    }
    var _default = (_exports.default = {
      setRandomFallback,
      genSaltSync,
      genSalt,
      hashSync,
      hash,
      compareSync,
      compare,
      getRounds,
      getSalt,
      truncates,
      encodeBase64,
      decodeBase64,
    });
  },
);
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bcryptjs\umd\package.json 
------------------------------------------------------ 
{
  "type": "commonjs"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bindings\bindings.js 
------------------------------------------------------ 
/**
 * Module dependencies.
 */

var fs = require('fs'),
  path = require('path'),
  fileURLToPath = require('file-uri-to-path'),
  join = path.join,
  dirname = path.dirname,
  exists =
    (fs.accessSync &&
      function(path) {
        try {
          fs.accessSync(path);
        } catch (e) {
          return false;
        }
        return true;
      }) ||
    fs.existsSync ||
    path.existsSync,
  defaults = {
    arrow: process.env.NODE_BINDINGS_ARROW || ' → ',
    compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',
    platform: process.platform,
    arch: process.arch,
    nodePreGyp:
      'node-v' +
      process.versions.modules +
      '-' +
      process.platform +
      '-' +
      process.arch,
    version: process.versions.node,
    bindings: 'bindings.node',
    try: [
      // node-gyp's linked version in the "build" dir
      ['module_root', 'build', 'bindings'],
      // node-waf and gyp_addon (a.k.a node-gyp)
      ['module_root', 'build', 'Debug', 'bindings'],
      ['module_root', 'build', 'Release', 'bindings'],
      // Debug files, for development (legacy behavior, remove for node v0.9)
      ['module_root', 'out', 'Debug', 'bindings'],
      ['module_root', 'Debug', 'bindings'],
      // Release files, but manually compiled (legacy behavior, remove for node v0.9)
      ['module_root', 'out', 'Release', 'bindings'],
      ['module_root', 'Release', 'bindings'],
      // Legacy from node-waf, node <= 0.4.x
      ['module_root', 'build', 'default', 'bindings'],
      // Production "Release" buildtype binary (meh...)
      ['module_root', 'compiled', 'version', 'platform', 'arch', 'bindings'],
      // node-qbs builds
      ['module_root', 'addon-build', 'release', 'install-root', 'bindings'],
      ['module_root', 'addon-build', 'debug', 'install-root', 'bindings'],
      ['module_root', 'addon-build', 'default', 'install-root', 'bindings'],
      // node-pre-gyp path ./lib/binding/{node_abi}-{platform}-{arch}
      ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings']
    ]
  };

/**
 * The main `bindings()` function loads the compiled bindings for a given module.
 * It uses V8's Error API to determine the parent filename that this function is
 * being invoked from, which is then used to find the root directory.
 */

function bindings(opts) {
  // Argument surgery
  if (typeof opts == 'string') {
    opts = { bindings: opts };
  } else if (!opts) {
    opts = {};
  }

  // maps `defaults` onto `opts` object
  Object.keys(defaults).map(function(i) {
    if (!(i in opts)) opts[i] = defaults[i];
  });

  // Get the module root
  if (!opts.module_root) {
    opts.module_root = exports.getRoot(exports.getFileName());
  }

  // Ensure the given bindings name ends with .node
  if (path.extname(opts.bindings) != '.node') {
    opts.bindings += '.node';
  }

  // https://github.com/webpack/webpack/issues/4175#issuecomment-342931035
  var requireFunc =
    typeof __webpack_require__ === 'function'
      ? __non_webpack_require__
      : require;

  var tries = [],
    i = 0,
    l = opts.try.length,
    n,
    b,
    err;

  for (; i < l; i++) {
    n = join.apply(
      null,
      opts.try[i].map(function(p) {
        return opts[p] || p;
      })
    );
    tries.push(n);
    try {
      b = opts.path ? requireFunc.resolve(n) : requireFunc(n);
      if (!opts.path) {
        b.path = n;
      }
      return b;
    } catch (e) {
      if (e.code !== 'MODULE_NOT_FOUND' &&
          e.code !== 'QUALIFIED_PATH_RESOLUTION_FAILED' &&
          !/not find/i.test(e.message)) {
        throw e;
      }
    }
  }

  err = new Error(
    'Could not locate the bindings file. Tried:\n' +
      tries
        .map(function(a) {
          return opts.arrow + a;
        })
        .join('\n')
  );
  err.tries = tries;
  throw err;
}
module.exports = exports = bindings;

/**
 * Gets the filename of the JavaScript file that invokes this function.
 * Used to help find the root directory of a module.
 * Optionally accepts an filename argument to skip when searching for the invoking filename
 */

exports.getFileName = function getFileName(calling_file) {
  var origPST = Error.prepareStackTrace,
    origSTL = Error.stackTraceLimit,
    dummy = {},
    fileName;

  Error.stackTraceLimit = 10;

  Error.prepareStackTrace = function(e, st) {
    for (var i = 0, l = st.length; i < l; i++) {
      fileName = st[i].getFileName();
      if (fileName !== __filename) {
        if (calling_file) {
          if (fileName !== calling_file) {
            return;
          }
        } else {
          return;
        }
      }
    }
  };

  // run the 'prepareStackTrace' function above
  Error.captureStackTrace(dummy);
  dummy.stack;

  // cleanup
  Error.prepareStackTrace = origPST;
  Error.stackTraceLimit = origSTL;

  // handle filename that starts with "file://"
  var fileSchema = 'file://';
  if (fileName.indexOf(fileSchema) === 0) {
    fileName = fileURLToPath(fileName);
  }

  return fileName;
};

/**
 * Gets the root directory of a module, given an arbitrary filename
 * somewhere in the module tree. The "root directory" is the directory
 * containing the `package.json` file.
 *
 *   In:  /home/nate/node-native-module/lib/index.js
 *   Out: /home/nate/node-native-module
 */

exports.getRoot = function getRoot(file) {
  var dir = dirname(file),
    prev;
  while (true) {
    if (dir === '.') {
      // Avoids an infinite loop in rare cases, like the REPL
      dir = process.cwd();
    }
    if (
      exists(join(dir, 'package.json')) ||
      exists(join(dir, 'node_modules'))
    ) {
      // Found the 'package.json' file or 'node_modules' dir; we're done
      return dir;
    }
    if (prev === dir) {
      // Got to the top
      throw new Error(
        'Could not find module root given file: "' +
          file +
          '". Do you have a `package.json` file? '
      );
    }
    // Try the parent dir next
    prev = dir;
    dir = join(dir, '..');
  }
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bindings\package.json 
------------------------------------------------------ 
{
  "name": "bindings",
  "description": "Helper module for loading your native module's .node file",
  "keywords": [
    "native",
    "addon",
    "bindings",
    "gyp",
    "waf",
    "c",
    "c++"
  ],
  "version": "1.5.0",
  "author": "Nathan Rajlich <nathan@tootallnate.net> (http://tootallnate.net)",
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/node-bindings.git"
  },
  "main": "./bindings.js",
  "bugs": {
    "url": "https://github.com/TooTallNate/node-bindings/issues"
  },
  "homepage": "https://github.com/TooTallNate/node-bindings",
  "license": "MIT",
  "dependencies": {
    "file-uri-to-path": "1.0.0"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bl\bl.js 
------------------------------------------------------ 
'use strict'

const DuplexStream = require('readable-stream').Duplex
const inherits = require('inherits')
const BufferList = require('./BufferList')

function BufferListStream (callback) {
  if (!(this instanceof BufferListStream)) {
    return new BufferListStream(callback)
  }

  if (typeof callback === 'function') {
    this._callback = callback

    const piper = function piper (err) {
      if (this._callback) {
        this._callback(err)
        this._callback = null
      }
    }.bind(this)

    this.on('pipe', function onPipe (src) {
      src.on('error', piper)
    })
    this.on('unpipe', function onUnpipe (src) {
      src.removeListener('error', piper)
    })

    callback = null
  }

  BufferList._init.call(this, callback)
  DuplexStream.call(this)
}

inherits(BufferListStream, DuplexStream)
Object.assign(BufferListStream.prototype, BufferList.prototype)

BufferListStream.prototype._new = function _new (callback) {
  return new BufferListStream(callback)
}

BufferListStream.prototype._write = function _write (buf, encoding, callback) {
  this._appendBuffer(buf)

  if (typeof callback === 'function') {
    callback()
  }
}

BufferListStream.prototype._read = function _read (size) {
  if (!this.length) {
    return this.push(null)
  }

  size = Math.min(size, this.length)
  this.push(this.slice(0, size))
  this.consume(size)
}

BufferListStream.prototype.end = function end (chunk) {
  DuplexStream.prototype.end.call(this, chunk)

  if (this._callback) {
    this._callback(null, this.slice())
    this._callback = null
  }
}

BufferListStream.prototype._destroy = function _destroy (err, cb) {
  this._bufs.length = 0
  this.length = 0
  cb(err)
}

BufferListStream.prototype._isBufferList = function _isBufferList (b) {
  return b instanceof BufferListStream || b instanceof BufferList || BufferListStream.isBufferList(b)
}

BufferListStream.isBufferList = BufferList.isBufferList

module.exports = BufferListStream
module.exports.BufferListStream = BufferListStream
module.exports.BufferList = BufferList
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bl\BufferList.js 
------------------------------------------------------ 
'use strict'

const { Buffer } = require('buffer')
const symbol = Symbol.for('BufferList')

function BufferList (buf) {
  if (!(this instanceof BufferList)) {
    return new BufferList(buf)
  }

  BufferList._init.call(this, buf)
}

BufferList._init = function _init (buf) {
  Object.defineProperty(this, symbol, { value: true })

  this._bufs = []
  this.length = 0

  if (buf) {
    this.append(buf)
  }
}

BufferList.prototype._new = function _new (buf) {
  return new BufferList(buf)
}

BufferList.prototype._offset = function _offset (offset) {
  if (offset === 0) {
    return [0, 0]
  }

  let tot = 0

  for (let i = 0; i < this._bufs.length; i++) {
    const _t = tot + this._bufs[i].length
    if (offset < _t || i === this._bufs.length - 1) {
      return [i, offset - tot]
    }
    tot = _t
  }
}

BufferList.prototype._reverseOffset = function (blOffset) {
  const bufferId = blOffset[0]
  let offset = blOffset[1]

  for (let i = 0; i < bufferId; i++) {
    offset += this._bufs[i].length
  }

  return offset
}

BufferList.prototype.get = function get (index) {
  if (index > this.length || index < 0) {
    return undefined
  }

  const offset = this._offset(index)

  return this._bufs[offset[0]][offset[1]]
}

BufferList.prototype.slice = function slice (start, end) {
  if (typeof start === 'number' && start < 0) {
    start += this.length
  }

  if (typeof end === 'number' && end < 0) {
    end += this.length
  }

  return this.copy(null, 0, start, end)
}

BufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {
  if (typeof srcStart !== 'number' || srcStart < 0) {
    srcStart = 0
  }

  if (typeof srcEnd !== 'number' || srcEnd > this.length) {
    srcEnd = this.length
  }

  if (srcStart >= this.length) {
    return dst || Buffer.alloc(0)
  }

  if (srcEnd <= 0) {
    return dst || Buffer.alloc(0)
  }

  const copy = !!dst
  const off = this._offset(srcStart)
  const len = srcEnd - srcStart
  let bytes = len
  let bufoff = (copy && dstStart) || 0
  let start = off[1]

  // copy/slice everything
  if (srcStart === 0 && srcEnd === this.length) {
    if (!copy) {
      // slice, but full concat if multiple buffers
      return this._bufs.length === 1
        ? this._bufs[0]
        : Buffer.concat(this._bufs, this.length)
    }

    // copy, need to copy individual buffers
    for (let i = 0; i < this._bufs.length; i++) {
      this._bufs[i].copy(dst, bufoff)
      bufoff += this._bufs[i].length
    }

    return dst
  }

  // easy, cheap case where it's a subset of one of the buffers
  if (bytes <= this._bufs[off[0]].length - start) {
    return copy
      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)
      : this._bufs[off[0]].slice(start, start + bytes)
  }

  if (!copy) {
    // a slice, we need something to copy in to
    dst = Buffer.allocUnsafe(len)
  }

  for (let i = off[0]; i < this._bufs.length; i++) {
    const l = this._bufs[i].length - start

    if (bytes > l) {
      this._bufs[i].copy(dst, bufoff, start)
      bufoff += l
    } else {
      this._bufs[i].copy(dst, bufoff, start, start + bytes)
      bufoff += l
      break
    }

    bytes -= l

    if (start) {
      start = 0
    }
  }

  // safeguard so that we don't return uninitialized memory
  if (dst.length > bufoff) return dst.slice(0, bufoff)

  return dst
}

BufferList.prototype.shallowSlice = function shallowSlice (start, end) {
  start = start || 0
  end = typeof end !== 'number' ? this.length : end

  if (start < 0) {
    start += this.length
  }

  if (end < 0) {
    end += this.length
  }

  if (start === end) {
    return this._new()
  }

  const startOffset = this._offset(start)
  const endOffset = this._offset(end)
  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)

  if (endOffset[1] === 0) {
    buffers.pop()
  } else {
    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])
  }

  if (startOffset[1] !== 0) {
    buffers[0] = buffers[0].slice(startOffset[1])
  }

  return this._new(buffers)
}

BufferList.prototype.toString = function toString (encoding, start, end) {
  return this.slice(start, end).toString(encoding)
}

BufferList.prototype.consume = function consume (bytes) {
  // first, normalize the argument, in accordance with how Buffer does it
  bytes = Math.trunc(bytes)
  // do nothing if not a positive number
  if (Number.isNaN(bytes) || bytes <= 0) return this

  while (this._bufs.length) {
    if (bytes >= this._bufs[0].length) {
      bytes -= this._bufs[0].length
      this.length -= this._bufs[0].length
      this._bufs.shift()
    } else {
      this._bufs[0] = this._bufs[0].slice(bytes)
      this.length -= bytes
      break
    }
  }

  return this
}

BufferList.prototype.duplicate = function duplicate () {
  const copy = this._new()

  for (let i = 0; i < this._bufs.length; i++) {
    copy.append(this._bufs[i])
  }

  return copy
}

BufferList.prototype.append = function append (buf) {
  if (buf == null) {
    return this
  }

  if (buf.buffer) {
    // append a view of the underlying ArrayBuffer
    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))
  } else if (Array.isArray(buf)) {
    for (let i = 0; i < buf.length; i++) {
      this.append(buf[i])
    }
  } else if (this._isBufferList(buf)) {
    // unwrap argument into individual BufferLists
    for (let i = 0; i < buf._bufs.length; i++) {
      this.append(buf._bufs[i])
    }
  } else {
    // coerce number arguments to strings, since Buffer(number) does
    // uninitialized memory allocation
    if (typeof buf === 'number') {
      buf = buf.toString()
    }

    this._appendBuffer(Buffer.from(buf))
  }

  return this
}

BufferList.prototype._appendBuffer = function appendBuffer (buf) {
  this._bufs.push(buf)
  this.length += buf.length
}

BufferList.prototype.indexOf = function (search, offset, encoding) {
  if (encoding === undefined && typeof offset === 'string') {
    encoding = offset
    offset = undefined
  }

  if (typeof search === 'function' || Array.isArray(search)) {
    throw new TypeError('The "value" argument must be one of type string, Buffer, BufferList, or Uint8Array.')
  } else if (typeof search === 'number') {
    search = Buffer.from([search])
  } else if (typeof search === 'string') {
    search = Buffer.from(search, encoding)
  } else if (this._isBufferList(search)) {
    search = search.slice()
  } else if (Array.isArray(search.buffer)) {
    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)
  } else if (!Buffer.isBuffer(search)) {
    search = Buffer.from(search)
  }

  offset = Number(offset || 0)

  if (isNaN(offset)) {
    offset = 0
  }

  if (offset < 0) {
    offset = this.length + offset
  }

  if (offset < 0) {
    offset = 0
  }

  if (search.length === 0) {
    return offset > this.length ? this.length : offset
  }

  const blOffset = this._offset(offset)
  let blIndex = blOffset[0] // index of which internal buffer we're working on
  let buffOffset = blOffset[1] // offset of the internal buffer we're working on

  // scan over each buffer
  for (; blIndex < this._bufs.length; blIndex++) {
    const buff = this._bufs[blIndex]

    while (buffOffset < buff.length) {
      const availableWindow = buff.length - buffOffset

      if (availableWindow >= search.length) {
        const nativeSearchResult = buff.indexOf(search, buffOffset)

        if (nativeSearchResult !== -1) {
          return this._reverseOffset([blIndex, nativeSearchResult])
        }

        buffOffset = buff.length - search.length + 1 // end of native search window
      } else {
        const revOffset = this._reverseOffset([blIndex, buffOffset])

        if (this._match(revOffset, search)) {
          return revOffset
        }

        buffOffset++
      }
    }

    buffOffset = 0
  }

  return -1
}

BufferList.prototype._match = function (offset, search) {
  if (this.length - offset < search.length) {
    return false
  }

  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {
    if (this.get(offset + searchOffset) !== search[searchOffset]) {
      return false
    }
  }
  return true
}

;(function () {
  const methods = {
    readDoubleBE: 8,
    readDoubleLE: 8,
    readFloatBE: 4,
    readFloatLE: 4,
    readInt32BE: 4,
    readInt32LE: 4,
    readUInt32BE: 4,
    readUInt32LE: 4,
    readInt16BE: 2,
    readInt16LE: 2,
    readUInt16BE: 2,
    readUInt16LE: 2,
    readInt8: 1,
    readUInt8: 1,
    readIntBE: null,
    readIntLE: null,
    readUIntBE: null,
    readUIntLE: null
  }

  for (const m in methods) {
    (function (m) {
      if (methods[m] === null) {
        BufferList.prototype[m] = function (offset, byteLength) {
          return this.slice(offset, offset + byteLength)[m](0, byteLength)
        }
      } else {
        BufferList.prototype[m] = function (offset = 0) {
          return this.slice(offset, offset + methods[m])[m](0)
        }
      }
    }(m))
  }
}())

// Used internally by the class and also as an indicator of this object being
// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser
// environment because there could be multiple different copies of the
// BufferList class and some `BufferList`s might be `BufferList`s.
BufferList.prototype._isBufferList = function _isBufferList (b) {
  return b instanceof BufferList || BufferList.isBufferList(b)
}

BufferList.isBufferList = function isBufferList (b) {
  return b != null && b[symbol]
}

module.exports = BufferList
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bl\package.json 
------------------------------------------------------ 
{
  "name": "bl",
  "version": "4.1.0",
  "description": "Buffer List: collect buffers and access with a standard readable Buffer interface, streamable too!",
  "license": "MIT",
  "main": "bl.js",
  "scripts": {
    "lint": "standard *.js test/*.js",
    "test": "npm run lint && node test/test.js | faucet"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rvagg/bl.git"
  },
  "homepage": "https://github.com/rvagg/bl",
  "authors": [
    "Rod Vagg <rod@vagg.org> (https://github.com/rvagg)",
    "Matteo Collina <matteo.collina@gmail.com> (https://github.com/mcollina)",
    "Jarett Cruger <jcrugzz@gmail.com> (https://github.com/jcrugzz)"
  ],
  "keywords": [
    "buffer",
    "buffers",
    "stream",
    "awesomesauce"
  ],
  "dependencies": {
    "buffer": "^5.5.0",
    "inherits": "^2.0.4",
    "readable-stream": "^3.4.0"
  },
  "devDependencies": {
    "faucet": "~0.0.1",
    "standard": "^14.3.0",
    "tape": "^4.11.0"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bl\test\convert.js 
------------------------------------------------------ 
'use strict'

const tape = require('tape')
const { BufferList, BufferListStream } = require('../')
const { Buffer } = require('buffer')

tape('convert from BufferList to BufferListStream', (t) => {
  const data = Buffer.from(`TEST-${Date.now()}`)
  const bl = new BufferList(data)
  const bls = new BufferListStream(bl)
  t.ok(bl.slice().equals(bls.slice()))
  t.end()
})

tape('convert from BufferListStream to BufferList', (t) => {
  const data = Buffer.from(`TEST-${Date.now()}`)
  const bls = new BufferListStream(data)
  const bl = new BufferList(bls)
  t.ok(bl.slice().equals(bls.slice()))
  t.end()
})
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bl\test\indexOf.js 
------------------------------------------------------ 
'use strict'

const tape = require('tape')
const BufferList = require('../')
const { Buffer } = require('buffer')

tape('indexOf single byte needle', (t) => {
  const bl = new BufferList(['abcdefg', 'abcdefg', '12345'])

  t.equal(bl.indexOf('e'), 4)
  t.equal(bl.indexOf('e', 5), 11)
  t.equal(bl.indexOf('e', 12), -1)
  t.equal(bl.indexOf('5'), 18)

  t.end()
})

tape('indexOf multiple byte needle', (t) => {
  const bl = new BufferList(['abcdefg', 'abcdefg'])

  t.equal(bl.indexOf('ef'), 4)
  t.equal(bl.indexOf('ef', 5), 11)

  t.end()
})

tape('indexOf multiple byte needles across buffer boundaries', (t) => {
  const bl = new BufferList(['abcdefg', 'abcdefg'])

  t.equal(bl.indexOf('fgabc'), 5)

  t.end()
})

tape('indexOf takes a Uint8Array search', (t) => {
  const bl = new BufferList(['abcdefg', 'abcdefg'])
  const search = new Uint8Array([102, 103, 97, 98, 99]) // fgabc

  t.equal(bl.indexOf(search), 5)

  t.end()
})

tape('indexOf takes a buffer list search', (t) => {
  const bl = new BufferList(['abcdefg', 'abcdefg'])
  const search = new BufferList('fgabc')

  t.equal(bl.indexOf(search), 5)

  t.end()
})

tape('indexOf a zero byte needle', (t) => {
  const b = new BufferList('abcdef')
  const bufEmpty = Buffer.from('')

  t.equal(b.indexOf(''), 0)
  t.equal(b.indexOf('', 1), 1)
  t.equal(b.indexOf('', b.length + 1), b.length)
  t.equal(b.indexOf('', Infinity), b.length)
  t.equal(b.indexOf(bufEmpty), 0)
  t.equal(b.indexOf(bufEmpty, 1), 1)
  t.equal(b.indexOf(bufEmpty, b.length + 1), b.length)
  t.equal(b.indexOf(bufEmpty, Infinity), b.length)

  t.end()
})

tape('indexOf buffers smaller and larger than the needle', (t) => {
  const bl = new BufferList(['abcdefg', 'a', 'bcdefg', 'a', 'bcfgab'])

  t.equal(bl.indexOf('fgabc'), 5)
  t.equal(bl.indexOf('fgabc', 6), 12)
  t.equal(bl.indexOf('fgabc', 13), -1)

  t.end()
})

// only present in node 6+
;(process.version.substr(1).split('.')[0] >= 6) && tape('indexOf latin1 and binary encoding', (t) => {
  const b = new BufferList('abcdef')

  // test latin1 encoding
  t.equal(
    new BufferList(Buffer.from(b.toString('latin1'), 'latin1'))
      .indexOf('d', 0, 'latin1'),
    3
  )
  t.equal(
    new BufferList(Buffer.from(b.toString('latin1'), 'latin1'))
      .indexOf(Buffer.from('d', 'latin1'), 0, 'latin1'),
    3
  )
  t.equal(
    new BufferList(Buffer.from('aa\u00e8aa', 'latin1'))
      .indexOf('\u00e8', 'latin1'),
    2
  )
  t.equal(
    new BufferList(Buffer.from('\u00e8', 'latin1'))
      .indexOf('\u00e8', 'latin1'),
    0
  )
  t.equal(
    new BufferList(Buffer.from('\u00e8', 'latin1'))
      .indexOf(Buffer.from('\u00e8', 'latin1'), 'latin1'),
    0
  )

  // test binary encoding
  t.equal(
    new BufferList(Buffer.from(b.toString('binary'), 'binary'))
      .indexOf('d', 0, 'binary'),
    3
  )
  t.equal(
    new BufferList(Buffer.from(b.toString('binary'), 'binary'))
      .indexOf(Buffer.from('d', 'binary'), 0, 'binary'),
    3
  )
  t.equal(
    new BufferList(Buffer.from('aa\u00e8aa', 'binary'))
      .indexOf('\u00e8', 'binary'),
    2
  )
  t.equal(
    new BufferList(Buffer.from('\u00e8', 'binary'))
      .indexOf('\u00e8', 'binary'),
    0
  )
  t.equal(
    new BufferList(Buffer.from('\u00e8', 'binary'))
      .indexOf(Buffer.from('\u00e8', 'binary'), 'binary'),
    0
  )

  t.end()
})

tape('indexOf the entire nodejs10 buffer test suite', (t) => {
  const b = new BufferList('abcdef')
  const bufA = Buffer.from('a')
  const bufBc = Buffer.from('bc')
  const bufF = Buffer.from('f')
  const bufZ = Buffer.from('z')

  const stringComparison = 'abcdef'

  t.equal(b.indexOf('a'), 0)
  t.equal(b.indexOf('a', 1), -1)
  t.equal(b.indexOf('a', -1), -1)
  t.equal(b.indexOf('a', -4), -1)
  t.equal(b.indexOf('a', -b.length), 0)
  t.equal(b.indexOf('a', NaN), 0)
  t.equal(b.indexOf('a', -Infinity), 0)
  t.equal(b.indexOf('a', Infinity), -1)
  t.equal(b.indexOf('bc'), 1)
  t.equal(b.indexOf('bc', 2), -1)
  t.equal(b.indexOf('bc', -1), -1)
  t.equal(b.indexOf('bc', -3), -1)
  t.equal(b.indexOf('bc', -5), 1)
  t.equal(b.indexOf('bc', NaN), 1)
  t.equal(b.indexOf('bc', -Infinity), 1)
  t.equal(b.indexOf('bc', Infinity), -1)
  t.equal(b.indexOf('f'), b.length - 1)
  t.equal(b.indexOf('z'), -1)

  // empty search tests
  t.equal(b.indexOf(bufA), 0)
  t.equal(b.indexOf(bufA, 1), -1)
  t.equal(b.indexOf(bufA, -1), -1)
  t.equal(b.indexOf(bufA, -4), -1)
  t.equal(b.indexOf(bufA, -b.length), 0)
  t.equal(b.indexOf(bufA, NaN), 0)
  t.equal(b.indexOf(bufA, -Infinity), 0)
  t.equal(b.indexOf(bufA, Infinity), -1)
  t.equal(b.indexOf(bufBc), 1)
  t.equal(b.indexOf(bufBc, 2), -1)
  t.equal(b.indexOf(bufBc, -1), -1)
  t.equal(b.indexOf(bufBc, -3), -1)
  t.equal(b.indexOf(bufBc, -5), 1)
  t.equal(b.indexOf(bufBc, NaN), 1)
  t.equal(b.indexOf(bufBc, -Infinity), 1)
  t.equal(b.indexOf(bufBc, Infinity), -1)
  t.equal(b.indexOf(bufF), b.length - 1)
  t.equal(b.indexOf(bufZ), -1)
  t.equal(b.indexOf(0x61), 0)
  t.equal(b.indexOf(0x61, 1), -1)
  t.equal(b.indexOf(0x61, -1), -1)
  t.equal(b.indexOf(0x61, -4), -1)
  t.equal(b.indexOf(0x61, -b.length), 0)
  t.equal(b.indexOf(0x61, NaN), 0)
  t.equal(b.indexOf(0x61, -Infinity), 0)
  t.equal(b.indexOf(0x61, Infinity), -1)
  t.equal(b.indexOf(0x0), -1)

  // test offsets
  t.equal(b.indexOf('d', 2), 3)
  t.equal(b.indexOf('f', 5), 5)
  t.equal(b.indexOf('f', -1), 5)
  t.equal(b.indexOf('f', 6), -1)

  t.equal(b.indexOf(Buffer.from('d'), 2), 3)
  t.equal(b.indexOf(Buffer.from('f'), 5), 5)
  t.equal(b.indexOf(Buffer.from('f'), -1), 5)
  t.equal(b.indexOf(Buffer.from('f'), 6), -1)

  t.equal(Buffer.from('ff').indexOf(Buffer.from('f'), 1, 'ucs2'), -1)

  // test invalid and uppercase encoding
  t.equal(b.indexOf('b', 'utf8'), 1)
  t.equal(b.indexOf('b', 'UTF8'), 1)
  t.equal(b.indexOf('62', 'HEX'), 1)
  t.throws(() => b.indexOf('bad', 'enc'), TypeError)

  // test hex encoding
  t.equal(
    Buffer.from(b.toString('hex'), 'hex')
      .indexOf('64', 0, 'hex'),
    3
  )
  t.equal(
    Buffer.from(b.toString('hex'), 'hex')
      .indexOf(Buffer.from('64', 'hex'), 0, 'hex'),
    3
  )

  // test base64 encoding
  t.equal(
    Buffer.from(b.toString('base64'), 'base64')
      .indexOf('ZA==', 0, 'base64'),
    3
  )
  t.equal(
    Buffer.from(b.toString('base64'), 'base64')
      .indexOf(Buffer.from('ZA==', 'base64'), 0, 'base64'),
    3
  )

  // test ascii encoding
  t.equal(
    Buffer.from(b.toString('ascii'), 'ascii')
      .indexOf('d', 0, 'ascii'),
    3
  )
  t.equal(
    Buffer.from(b.toString('ascii'), 'ascii')
      .indexOf(Buffer.from('d', 'ascii'), 0, 'ascii'),
    3
  )

  // test optional offset with passed encoding
  t.equal(Buffer.from('aaaa0').indexOf('30', 'hex'), 4)
  t.equal(Buffer.from('aaaa00a').indexOf('3030', 'hex'), 4)

  {
    // test usc2 encoding
    const twoByteString = Buffer.from('\u039a\u0391\u03a3\u03a3\u0395', 'ucs2')

    t.equal(8, twoByteString.indexOf('\u0395', 4, 'ucs2'))
    t.equal(6, twoByteString.indexOf('\u03a3', -4, 'ucs2'))
    t.equal(4, twoByteString.indexOf('\u03a3', -6, 'ucs2'))
    t.equal(4, twoByteString.indexOf(
      Buffer.from('\u03a3', 'ucs2'), -6, 'ucs2'))
    t.equal(-1, twoByteString.indexOf('\u03a3', -2, 'ucs2'))
  }

  const mixedByteStringUcs2 =
      Buffer.from('\u039a\u0391abc\u03a3\u03a3\u0395', 'ucs2')

  t.equal(6, mixedByteStringUcs2.indexOf('bc', 0, 'ucs2'))
  t.equal(10, mixedByteStringUcs2.indexOf('\u03a3', 0, 'ucs2'))
  t.equal(-1, mixedByteStringUcs2.indexOf('\u0396', 0, 'ucs2'))

  t.equal(
    6, mixedByteStringUcs2.indexOf(Buffer.from('bc', 'ucs2'), 0, 'ucs2'))
  t.equal(
    10, mixedByteStringUcs2.indexOf(Buffer.from('\u03a3', 'ucs2'), 0, 'ucs2'))
  t.equal(
    -1, mixedByteStringUcs2.indexOf(Buffer.from('\u0396', 'ucs2'), 0, 'ucs2'))

  {
    const twoByteString = Buffer.from('\u039a\u0391\u03a3\u03a3\u0395', 'ucs2')

    // Test single char pattern
    t.equal(0, twoByteString.indexOf('\u039a', 0, 'ucs2'))
    let index = twoByteString.indexOf('\u0391', 0, 'ucs2')
    t.equal(2, index, `Alpha - at index ${index}`)
    index = twoByteString.indexOf('\u03a3', 0, 'ucs2')
    t.equal(4, index, `First Sigma - at index ${index}`)
    index = twoByteString.indexOf('\u03a3', 6, 'ucs2')
    t.equal(6, index, `Second Sigma - at index ${index}`)
    index = twoByteString.indexOf('\u0395', 0, 'ucs2')
    t.equal(8, index, `Epsilon - at index ${index}`)
    index = twoByteString.indexOf('\u0392', 0, 'ucs2')
    t.equal(-1, index, `Not beta - at index ${index}`)

    // Test multi-char pattern
    index = twoByteString.indexOf('\u039a\u0391', 0, 'ucs2')
    t.equal(0, index, `Lambda Alpha - at index ${index}`)
    index = twoByteString.indexOf('\u0391\u03a3', 0, 'ucs2')
    t.equal(2, index, `Alpha Sigma - at index ${index}`)
    index = twoByteString.indexOf('\u03a3\u03a3', 0, 'ucs2')
    t.equal(4, index, `Sigma Sigma - at index ${index}`)
    index = twoByteString.indexOf('\u03a3\u0395', 0, 'ucs2')
    t.equal(6, index, `Sigma Epsilon - at index ${index}`)
  }

  const mixedByteStringUtf8 = Buffer.from('\u039a\u0391abc\u03a3\u03a3\u0395')

  t.equal(5, mixedByteStringUtf8.indexOf('bc'))
  t.equal(5, mixedByteStringUtf8.indexOf('bc', 5))
  t.equal(5, mixedByteStringUtf8.indexOf('bc', -8))
  t.equal(7, mixedByteStringUtf8.indexOf('\u03a3'))
  t.equal(-1, mixedByteStringUtf8.indexOf('\u0396'))

  // Test complex string indexOf algorithms. Only trigger for long strings.
  // Long string that isn't a simple repeat of a shorter string.
  let longString = 'A'
  for (let i = 66; i < 76; i++) { // from 'B' to 'K'
    longString = longString + String.fromCharCode(i) + longString
  }

  const longBufferString = Buffer.from(longString)

  // pattern of 15 chars, repeated every 16 chars in long
  let pattern = 'ABACABADABACABA'
  for (let i = 0; i < longBufferString.length - pattern.length; i += 7) {
    const index = longBufferString.indexOf(pattern, i)
    t.equal((i + 15) & ~0xf, index,
      `Long ABACABA...-string at index ${i}`)
  }

  let index = longBufferString.indexOf('AJABACA')
  t.equal(510, index, `Long AJABACA, First J - at index ${index}`)
  index = longBufferString.indexOf('AJABACA', 511)
  t.equal(1534, index, `Long AJABACA, Second J - at index ${index}`)

  pattern = 'JABACABADABACABA'
  index = longBufferString.indexOf(pattern)
  t.equal(511, index, `Long JABACABA..., First J - at index ${index}`)
  index = longBufferString.indexOf(pattern, 512)
  t.equal(
    1535, index, `Long JABACABA..., Second J - at index ${index}`)

  // Search for a non-ASCII string in a pure ASCII string.
  const asciiString = Buffer.from(
    'somethingnotatallsinisterwhichalsoworks')
  t.equal(-1, asciiString.indexOf('\x2061'))
  t.equal(3, asciiString.indexOf('eth', 0))

  // Search in string containing many non-ASCII chars.
  const allCodePoints = []
  for (let i = 0; i < 65536; i++) {
    allCodePoints[i] = i
  }

  const allCharsString = String.fromCharCode.apply(String, allCodePoints)
  const allCharsBufferUtf8 = Buffer.from(allCharsString)
  const allCharsBufferUcs2 = Buffer.from(allCharsString, 'ucs2')

  // Search for string long enough to trigger complex search with ASCII pattern
  // and UC16 subject.
  t.equal(-1, allCharsBufferUtf8.indexOf('notfound'))
  t.equal(-1, allCharsBufferUcs2.indexOf('notfound'))

  // Needle is longer than haystack, but only because it's encoded as UTF-16
  t.equal(Buffer.from('aaaa').indexOf('a'.repeat(4), 'ucs2'), -1)

  t.equal(Buffer.from('aaaa').indexOf('a'.repeat(4), 'utf8'), 0)
  t.equal(Buffer.from('aaaa').indexOf('你好', 'ucs2'), -1)

  // Haystack has odd length, but the needle is UCS2.
  t.equal(Buffer.from('aaaaa').indexOf('b', 'ucs2'), -1)

  {
    // Find substrings in Utf8.
    const lengths = [1, 3, 15] // Single char, simple and complex.
    const indices = [0x5, 0x60, 0x400, 0x680, 0x7ee, 0xFF02, 0x16610, 0x2f77b]
    for (let lengthIndex = 0; lengthIndex < lengths.length; lengthIndex++) {
      for (let i = 0; i < indices.length; i++) {
        const index = indices[i]
        let length = lengths[lengthIndex]

        if (index + length > 0x7F) {
          length = 2 * length
        }

        if (index + length > 0x7FF) {
          length = 3 * length
        }

        if (index + length > 0xFFFF) {
          length = 4 * length
        }

        const patternBufferUtf8 = allCharsBufferUtf8.slice(index, index + length)
        t.equal(index, allCharsBufferUtf8.indexOf(patternBufferUtf8))

        const patternStringUtf8 = patternBufferUtf8.toString()
        t.equal(index, allCharsBufferUtf8.indexOf(patternStringUtf8))
      }
    }
  }

  {
    // Find substrings in Usc2.
    const lengths = [2, 4, 16] // Single char, simple and complex.
    const indices = [0x5, 0x65, 0x105, 0x205, 0x285, 0x2005, 0x2085, 0xfff0]

    for (let lengthIndex = 0; lengthIndex < lengths.length; lengthIndex++) {
      for (let i = 0; i < indices.length; i++) {
        const index = indices[i] * 2
        const length = lengths[lengthIndex]

        const patternBufferUcs2 =
            allCharsBufferUcs2.slice(index, index + length)
        t.equal(
          index, allCharsBufferUcs2.indexOf(patternBufferUcs2, 0, 'ucs2'))

        const patternStringUcs2 = patternBufferUcs2.toString('ucs2')
        t.equal(
          index, allCharsBufferUcs2.indexOf(patternStringUcs2, 0, 'ucs2'))
      }
    }
  }

  [
    () => {},
    {},
    []
  ].forEach((val) => {
    t.throws(() => b.indexOf(val), TypeError, `"${JSON.stringify(val)}" should throw`)
  })

  // Test weird offset arguments.
  // The following offsets coerce to NaN or 0, searching the whole Buffer
  t.equal(b.indexOf('b', undefined), 1)
  t.equal(b.indexOf('b', {}), 1)
  t.equal(b.indexOf('b', 0), 1)
  t.equal(b.indexOf('b', null), 1)
  t.equal(b.indexOf('b', []), 1)

  // The following offset coerces to 2, in other words +[2] === 2
  t.equal(b.indexOf('b', [2]), -1)

  // Behavior should match String.indexOf()
  t.equal(
    b.indexOf('b', undefined),
    stringComparison.indexOf('b', undefined))
  t.equal(
    b.indexOf('b', {}),
    stringComparison.indexOf('b', {}))
  t.equal(
    b.indexOf('b', 0),
    stringComparison.indexOf('b', 0))
  t.equal(
    b.indexOf('b', null),
    stringComparison.indexOf('b', null))
  t.equal(
    b.indexOf('b', []),
    stringComparison.indexOf('b', []))
  t.equal(
    b.indexOf('b', [2]),
    stringComparison.indexOf('b', [2]))

  // test truncation of Number arguments to uint8
  {
    const buf = Buffer.from('this is a test')

    t.equal(buf.indexOf(0x6973), 3)
    t.equal(buf.indexOf(0x697320), 4)
    t.equal(buf.indexOf(0x69732069), 2)
    t.equal(buf.indexOf(0x697374657374), 0)
    t.equal(buf.indexOf(0x69737374), 0)
    t.equal(buf.indexOf(0x69737465), 11)
    t.equal(buf.indexOf(0x69737465), 11)
    t.equal(buf.indexOf(-140), 0)
    t.equal(buf.indexOf(-152), 1)
    t.equal(buf.indexOf(0xff), -1)
    t.equal(buf.indexOf(0xffff), -1)
  }

  // Test that Uint8Array arguments are okay.
  {
    const needle = new Uint8Array([0x66, 0x6f, 0x6f])
    const haystack = new BufferList(Buffer.from('a foo b foo'))
    t.equal(haystack.indexOf(needle), 2)
  }

  t.end()
})
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bl\test\isBufferList.js 
------------------------------------------------------ 
'use strict'

const tape = require('tape')
const { BufferList, BufferListStream } = require('../')
const { Buffer } = require('buffer')

tape('isBufferList positives', (t) => {
  t.ok(BufferList.isBufferList(new BufferList()))
  t.ok(BufferList.isBufferList(new BufferListStream()))

  t.end()
})

tape('isBufferList negatives', (t) => {
  const types = [
    null,
    undefined,
    NaN,
    true,
    false,
    {},
    [],
    Buffer.alloc(0),
    [Buffer.alloc(0)]
  ]

  for (const obj of types) {
    t.notOk(BufferList.isBufferList(obj))
  }

  t.end()
})
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bl\test\test.js 
------------------------------------------------------ 
'use strict'

const tape = require('tape')
const crypto = require('crypto')
const fs = require('fs')
const path = require('path')
const BufferList = require('../')
const { Buffer } = require('buffer')

const encodings =
      ('hex utf8 utf-8 ascii binary base64' +
          (process.browser ? '' : ' ucs2 ucs-2 utf16le utf-16le')).split(' ')

require('./indexOf')
require('./isBufferList')
require('./convert')

tape('single bytes from single buffer', function (t) {
  const bl = new BufferList()

  bl.append(Buffer.from('abcd'))

  t.equal(bl.length, 4)
  t.equal(bl.get(-1), undefined)
  t.equal(bl.get(0), 97)
  t.equal(bl.get(1), 98)
  t.equal(bl.get(2), 99)
  t.equal(bl.get(3), 100)
  t.equal(bl.get(4), undefined)

  t.end()
})

tape('single bytes from multiple buffers', function (t) {
  const bl = new BufferList()

  bl.append(Buffer.from('abcd'))
  bl.append(Buffer.from('efg'))
  bl.append(Buffer.from('hi'))
  bl.append(Buffer.from('j'))

  t.equal(bl.length, 10)

  t.equal(bl.get(0), 97)
  t.equal(bl.get(1), 98)
  t.equal(bl.get(2), 99)
  t.equal(bl.get(3), 100)
  t.equal(bl.get(4), 101)
  t.equal(bl.get(5), 102)
  t.equal(bl.get(6), 103)
  t.equal(bl.get(7), 104)
  t.equal(bl.get(8), 105)
  t.equal(bl.get(9), 106)

  t.end()
})

tape('multi bytes from single buffer', function (t) {
  const bl = new BufferList()

  bl.append(Buffer.from('abcd'))

  t.equal(bl.length, 4)

  t.equal(bl.slice(0, 4).toString('ascii'), 'abcd')
  t.equal(bl.slice(0, 3).toString('ascii'), 'abc')
  t.equal(bl.slice(1, 4).toString('ascii'), 'bcd')
  t.equal(bl.slice(-4, -1).toString('ascii'), 'abc')

  t.end()
})

tape('multi bytes from single buffer (negative indexes)', function (t) {
  const bl = new BufferList()

  bl.append(Buffer.from('buffer'))

  t.equal(bl.length, 6)

  t.equal(bl.slice(-6, -1).toString('ascii'), 'buffe')
  t.equal(bl.slice(-6, -2).toString('ascii'), 'buff')
  t.equal(bl.slice(-5, -2).toString('ascii'), 'uff')

  t.end()
})

tape('multiple bytes from multiple buffers', function (t) {
  const bl = new BufferList()

  bl.append(Buffer.from('abcd'))
  bl.append(Buffer.from('efg'))
  bl.append(Buffer.from('hi'))
  bl.append(Buffer.from('j'))

  t.equal(bl.length, 10)

  t.equal(bl.slice(0, 10).toString('ascii'), 'abcdefghij')
  t.equal(bl.slice(3, 10).toString('ascii'), 'defghij')
  t.equal(bl.slice(3, 6).toString('ascii'), 'def')
  t.equal(bl.slice(3, 8).toString('ascii'), 'defgh')
  t.equal(bl.slice(5, 10).toString('ascii'), 'fghij')
  t.equal(bl.slice(-7, -4).toString('ascii'), 'def')

  t.end()
})

tape('multiple bytes from multiple buffer lists', function (t) {
  const bl = new BufferList()

  bl.append(new BufferList([Buffer.from('abcd'), Buffer.from('efg')]))
  bl.append(new BufferList([Buffer.from('hi'), Buffer.from('j')]))

  t.equal(bl.length, 10)

  t.equal(bl.slice(0, 10).toString('ascii'), 'abcdefghij')

  t.equal(bl.slice(3, 10).toString('ascii'), 'defghij')
  t.equal(bl.slice(3, 6).toString('ascii'), 'def')
  t.equal(bl.slice(3, 8).toString('ascii'), 'defgh')
  t.equal(bl.slice(5, 10).toString('ascii'), 'fghij')

  t.end()
})

// same data as previous test, just using nested constructors
tape('multiple bytes from crazy nested buffer lists', function (t) {
  const bl = new BufferList()

  bl.append(new BufferList([
    new BufferList([
      new BufferList(Buffer.from('abc')),
      Buffer.from('d'),
      new BufferList(Buffer.from('efg'))
    ]),
    new BufferList([Buffer.from('hi')]),
    new BufferList(Buffer.from('j'))
  ]))

  t.equal(bl.length, 10)

  t.equal(bl.slice(0, 10).toString('ascii'), 'abcdefghij')

  t.equal(bl.slice(3, 10).toString('ascii'), 'defghij')
  t.equal(bl.slice(3, 6).toString('ascii'), 'def')
  t.equal(bl.slice(3, 8).toString('ascii'), 'defgh')
  t.equal(bl.slice(5, 10).toString('ascii'), 'fghij')

  t.end()
})

tape('append accepts arrays of Buffers', function (t) {
  const bl = new BufferList()

  bl.append(Buffer.from('abc'))
  bl.append([Buffer.from('def')])
  bl.append([Buffer.from('ghi'), Buffer.from('jkl')])
  bl.append([Buffer.from('mnop'), Buffer.from('qrstu'), Buffer.from('vwxyz')])
  t.equal(bl.length, 26)
  t.equal(bl.slice().toString('ascii'), 'abcdefghijklmnopqrstuvwxyz')

  t.end()
})

tape('append accepts arrays of Uint8Arrays', function (t) {
  const bl = new BufferList()

  bl.append(new Uint8Array([97, 98, 99]))
  bl.append([Uint8Array.from([100, 101, 102])])
  bl.append([new Uint8Array([103, 104, 105]), new Uint8Array([106, 107, 108])])
  bl.append([new Uint8Array([109, 110, 111, 112]), new Uint8Array([113, 114, 115, 116, 117]), new Uint8Array([118, 119, 120, 121, 122])])
  t.equal(bl.length, 26)
  t.equal(bl.slice().toString('ascii'), 'abcdefghijklmnopqrstuvwxyz')

  t.end()
})

tape('append accepts arrays of BufferLists', function (t) {
  const bl = new BufferList()

  bl.append(Buffer.from('abc'))
  bl.append([new BufferList('def')])
  bl.append(new BufferList([Buffer.from('ghi'), new BufferList('jkl')]))
  bl.append([Buffer.from('mnop'), new BufferList([Buffer.from('qrstu'), Buffer.from('vwxyz')])])
  t.equal(bl.length, 26)
  t.equal(bl.slice().toString('ascii'), 'abcdefghijklmnopqrstuvwxyz')

  t.end()
})

tape('append chainable', function (t) {
  const bl = new BufferList()

  t.ok(bl.append(Buffer.from('abcd')) === bl)
  t.ok(bl.append([Buffer.from('abcd')]) === bl)
  t.ok(bl.append(new BufferList(Buffer.from('abcd'))) === bl)
  t.ok(bl.append([new BufferList(Buffer.from('abcd'))]) === bl)

  t.end()
})

tape('append chainable (test results)', function (t) {
  const bl = new BufferList('abc')
    .append([new BufferList('def')])
    .append(new BufferList([Buffer.from('ghi'), new BufferList('jkl')]))
    .append([Buffer.from('mnop'), new BufferList([Buffer.from('qrstu'), Buffer.from('vwxyz')])])

  t.equal(bl.length, 26)
  t.equal(bl.slice().toString('ascii'), 'abcdefghijklmnopqrstuvwxyz')

  t.end()
})

tape('consuming from multiple buffers', function (t) {
  const bl = new BufferList()

  bl.append(Buffer.from('abcd'))
  bl.append(Buffer.from('efg'))
  bl.append(Buffer.from('hi'))
  bl.append(Buffer.from('j'))

  t.equal(bl.length, 10)

  t.equal(bl.slice(0, 10).toString('ascii'), 'abcdefghij')

  bl.consume(3)
  t.equal(bl.length, 7)
  t.equal(bl.slice(0, 7).toString('ascii'), 'defghij')

  bl.consume(2)
  t.equal(bl.length, 5)
  t.equal(bl.slice(0, 5).toString('ascii'), 'fghij')

  bl.consume(1)
  t.equal(bl.length, 4)
  t.equal(bl.slice(0, 4).toString('ascii'), 'ghij')

  bl.consume(1)
  t.equal(bl.length, 3)
  t.equal(bl.slice(0, 3).toString('ascii'), 'hij')

  bl.consume(2)
  t.equal(bl.length, 1)
  t.equal(bl.slice(0, 1).toString('ascii'), 'j')

  t.end()
})

tape('complete consumption', function (t) {
  const bl = new BufferList()

  bl.append(Buffer.from('a'))
  bl.append(Buffer.from('b'))

  bl.consume(2)

  t.equal(bl.length, 0)
  t.equal(bl._bufs.length, 0)

  t.end()
})

tape('test readUInt8 / readInt8', function (t) {
  const buf1 = Buffer.alloc(1)
  const buf2 = Buffer.alloc(3)
  const buf3 = Buffer.alloc(3)
  const bl = new BufferList()

  buf1[0] = 0x1
  buf2[1] = 0x3
  buf2[2] = 0x4
  buf3[0] = 0x23
  buf3[1] = 0x42

  bl.append(buf1)
  bl.append(buf2)
  bl.append(buf3)

  t.equal(bl.readUInt8(), 0x1)
  t.equal(bl.readUInt8(2), 0x3)
  t.equal(bl.readInt8(2), 0x3)
  t.equal(bl.readUInt8(3), 0x4)
  t.equal(bl.readInt8(3), 0x4)
  t.equal(bl.readUInt8(4), 0x23)
  t.equal(bl.readInt8(4), 0x23)
  t.equal(bl.readUInt8(5), 0x42)
  t.equal(bl.readInt8(5), 0x42)

  t.end()
})

tape('test readUInt16LE / readUInt16BE / readInt16LE / readInt16BE', function (t) {
  const buf1 = Buffer.alloc(1)
  const buf2 = Buffer.alloc(3)
  const buf3 = Buffer.alloc(3)
  const bl = new BufferList()

  buf1[0] = 0x1
  buf2[1] = 0x3
  buf2[2] = 0x4
  buf3[0] = 0x23
  buf3[1] = 0x42

  bl.append(buf1)
  bl.append(buf2)
  bl.append(buf3)

  t.equal(bl.readUInt16BE(), 0x0100)
  t.equal(bl.readUInt16LE(), 0x0001)
  t.equal(bl.readUInt16BE(2), 0x0304)
  t.equal(bl.readUInt16LE(2), 0x0403)
  t.equal(bl.readInt16BE(2), 0x0304)
  t.equal(bl.readInt16LE(2), 0x0403)
  t.equal(bl.readUInt16BE(3), 0x0423)
  t.equal(bl.readUInt16LE(3), 0x2304)
  t.equal(bl.readInt16BE(3), 0x0423)
  t.equal(bl.readInt16LE(3), 0x2304)
  t.equal(bl.readUInt16BE(4), 0x2342)
  t.equal(bl.readUInt16LE(4), 0x4223)
  t.equal(bl.readInt16BE(4), 0x2342)
  t.equal(bl.readInt16LE(4), 0x4223)

  t.end()
})

tape('test readUInt32LE / readUInt32BE / readInt32LE / readInt32BE', function (t) {
  const buf1 = Buffer.alloc(1)
  const buf2 = Buffer.alloc(3)
  const buf3 = Buffer.alloc(3)
  const bl = new BufferList()

  buf1[0] = 0x1
  buf2[1] = 0x3
  buf2[2] = 0x4
  buf3[0] = 0x23
  buf3[1] = 0x42

  bl.append(buf1)
  bl.append(buf2)
  bl.append(buf3)

  t.equal(bl.readUInt32BE(), 0x01000304)
  t.equal(bl.readUInt32LE(), 0x04030001)
  t.equal(bl.readUInt32BE(2), 0x03042342)
  t.equal(bl.readUInt32LE(2), 0x42230403)
  t.equal(bl.readInt32BE(2), 0x03042342)
  t.equal(bl.readInt32LE(2), 0x42230403)

  t.end()
})

tape('test readUIntLE / readUIntBE / readIntLE / readIntBE', function (t) {
  const buf1 = Buffer.alloc(1)
  const buf2 = Buffer.alloc(3)
  const buf3 = Buffer.alloc(3)
  const bl = new BufferList()

  buf2[0] = 0x2
  buf2[1] = 0x3
  buf2[2] = 0x4
  buf3[0] = 0x23
  buf3[1] = 0x42
  buf3[2] = 0x61

  bl.append(buf1)
  bl.append(buf2)
  bl.append(buf3)

  t.equal(bl.readUIntBE(1, 1), 0x02)
  t.equal(bl.readUIntBE(1, 2), 0x0203)
  t.equal(bl.readUIntBE(1, 3), 0x020304)
  t.equal(bl.readUIntBE(1, 4), 0x02030423)
  t.equal(bl.readUIntBE(1, 5), 0x0203042342)
  t.equal(bl.readUIntBE(1, 6), 0x020304234261)
  t.equal(bl.readUIntLE(1, 1), 0x02)
  t.equal(bl.readUIntLE(1, 2), 0x0302)
  t.equal(bl.readUIntLE(1, 3), 0x040302)
  t.equal(bl.readUIntLE(1, 4), 0x23040302)
  t.equal(bl.readUIntLE(1, 5), 0x4223040302)
  t.equal(bl.readUIntLE(1, 6), 0x614223040302)
  t.equal(bl.readIntBE(1, 1), 0x02)
  t.equal(bl.readIntBE(1, 2), 0x0203)
  t.equal(bl.readIntBE(1, 3), 0x020304)
  t.equal(bl.readIntBE(1, 4), 0x02030423)
  t.equal(bl.readIntBE(1, 5), 0x0203042342)
  t.equal(bl.readIntBE(1, 6), 0x020304234261)
  t.equal(bl.readIntLE(1, 1), 0x02)
  t.equal(bl.readIntLE(1, 2), 0x0302)
  t.equal(bl.readIntLE(1, 3), 0x040302)
  t.equal(bl.readIntLE(1, 4), 0x23040302)
  t.equal(bl.readIntLE(1, 5), 0x4223040302)
  t.equal(bl.readIntLE(1, 6), 0x614223040302)

  t.end()
})

tape('test readFloatLE / readFloatBE', function (t) {
  const buf1 = Buffer.alloc(1)
  const buf2 = Buffer.alloc(3)
  const buf3 = Buffer.alloc(3)
  const bl = new BufferList()

  buf1[0] = 0x01
  buf2[1] = 0x00
  buf2[2] = 0x00
  buf3[0] = 0x80
  buf3[1] = 0x3f

  bl.append(buf1)
  bl.append(buf2)
  bl.append(buf3)

  const canonical = Buffer.concat([buf1, buf2, buf3])
  t.equal(bl.readFloatLE(), canonical.readFloatLE())
  t.equal(bl.readFloatBE(), canonical.readFloatBE())
  t.equal(bl.readFloatLE(2), canonical.readFloatLE(2))
  t.equal(bl.readFloatBE(2), canonical.readFloatBE(2))

  t.end()
})

tape('test readDoubleLE / readDoubleBE', function (t) {
  const buf1 = Buffer.alloc(1)
  const buf2 = Buffer.alloc(3)
  const buf3 = Buffer.alloc(10)
  const bl = new BufferList()

  buf1[0] = 0x01
  buf2[1] = 0x55
  buf2[2] = 0x55
  buf3[0] = 0x55
  buf3[1] = 0x55
  buf3[2] = 0x55
  buf3[3] = 0x55
  buf3[4] = 0xd5
  buf3[5] = 0x3f

  bl.append(buf1)
  bl.append(buf2)
  bl.append(buf3)

  const canonical = Buffer.concat([buf1, buf2, buf3])
  t.equal(bl.readDoubleBE(), canonical.readDoubleBE())
  t.equal(bl.readDoubleLE(), canonical.readDoubleLE())
  t.equal(bl.readDoubleBE(2), canonical.readDoubleBE(2))
  t.equal(bl.readDoubleLE(2), canonical.readDoubleLE(2))

  t.end()
})

tape('test toString', function (t) {
  const bl = new BufferList()

  bl.append(Buffer.from('abcd'))
  bl.append(Buffer.from('efg'))
  bl.append(Buffer.from('hi'))
  bl.append(Buffer.from('j'))

  t.equal(bl.toString('ascii', 0, 10), 'abcdefghij')
  t.equal(bl.toString('ascii', 3, 10), 'defghij')
  t.equal(bl.toString('ascii', 3, 6), 'def')
  t.equal(bl.toString('ascii', 3, 8), 'defgh')
  t.equal(bl.toString('ascii', 5, 10), 'fghij')

  t.end()
})

tape('test toString encoding', function (t) {
  const bl = new BufferList()
  const b = Buffer.from('abcdefghij\xff\x00')

  bl.append(Buffer.from('abcd'))
  bl.append(Buffer.from('efg'))
  bl.append(Buffer.from('hi'))
  bl.append(Buffer.from('j'))
  bl.append(Buffer.from('\xff\x00'))

  encodings.forEach(function (enc) {
    t.equal(bl.toString(enc), b.toString(enc), enc)
  })

  t.end()
})

tape('uninitialized memory', function (t) {
  const secret = crypto.randomBytes(256)
  for (let i = 0; i < 1e6; i++) {
    const clone = Buffer.from(secret)
    const bl = new BufferList()
    bl.append(Buffer.from('a'))
    bl.consume(-1024)
    const buf = bl.slice(1)
    if (buf.indexOf(clone) !== -1) {
      t.fail(`Match (at ${i})`)
      break
    }
  }
  t.end()
})

!process.browser && tape('test stream', function (t) {
  const random = crypto.randomBytes(65534)

  const bl = new BufferList((err, buf) => {
    t.ok(Buffer.isBuffer(buf))
    t.ok(err === null)
    t.ok(random.equals(bl.slice()))
    t.ok(random.equals(buf.slice()))

    bl.pipe(fs.createWriteStream('/tmp/bl_test_rnd_out.dat'))
      .on('close', function () {
        const rndhash = crypto.createHash('md5').update(random).digest('hex')
        const md5sum = crypto.createHash('md5')
        const s = fs.createReadStream('/tmp/bl_test_rnd_out.dat')

        s.on('data', md5sum.update.bind(md5sum))
        s.on('end', function () {
          t.equal(rndhash, md5sum.digest('hex'), 'woohoo! correct hash!')
          t.end()
        })
      })
  })

  fs.writeFileSync('/tmp/bl_test_rnd.dat', random)
  fs.createReadStream('/tmp/bl_test_rnd.dat').pipe(bl)
})

tape('instantiation with Buffer', function (t) {
  const buf = crypto.randomBytes(1024)
  const buf2 = crypto.randomBytes(1024)
  let b = BufferList(buf)

  t.equal(buf.toString('hex'), b.slice().toString('hex'), 'same buffer')
  b = BufferList([buf, buf2])
  t.equal(b.slice().toString('hex'), Buffer.concat([buf, buf2]).toString('hex'), 'same buffer')

  t.end()
})

tape('test String appendage', function (t) {
  const bl = new BufferList()
  const b = Buffer.from('abcdefghij\xff\x00')

  bl.append('abcd')
  bl.append('efg')
  bl.append('hi')
  bl.append('j')
  bl.append('\xff\x00')

  encodings.forEach(function (enc) {
    t.equal(bl.toString(enc), b.toString(enc))
  })

  t.end()
})

tape('test Number appendage', function (t) {
  const bl = new BufferList()
  const b = Buffer.from('1234567890')

  bl.append(1234)
  bl.append(567)
  bl.append(89)
  bl.append(0)

  encodings.forEach(function (enc) {
    t.equal(bl.toString(enc), b.toString(enc))
  })

  t.end()
})

tape('write nothing, should get empty buffer', function (t) {
  t.plan(3)
  BufferList(function (err, data) {
    t.notOk(err, 'no error')
    t.ok(Buffer.isBuffer(data), 'got a buffer')
    t.equal(0, data.length, 'got a zero-length buffer')
    t.end()
  }).end()
})

tape('unicode string', function (t) {
  t.plan(2)

  const inp1 = '\u2600'
  const inp2 = '\u2603'
  const exp = inp1 + ' and ' + inp2
  const bl = BufferList()

  bl.write(inp1)
  bl.write(' and ')
  bl.write(inp2)
  t.equal(exp, bl.toString())
  t.equal(Buffer.from(exp).toString('hex'), bl.toString('hex'))
})

tape('should emit finish', function (t) {
  const source = BufferList()
  const dest = BufferList()

  source.write('hello')
  source.pipe(dest)

  dest.on('finish', function () {
    t.equal(dest.toString('utf8'), 'hello')
    t.end()
  })
})

tape('basic copy', function (t) {
  const buf = crypto.randomBytes(1024)
  const buf2 = Buffer.alloc(1024)
  const b = BufferList(buf)

  b.copy(buf2)
  t.equal(b.slice().toString('hex'), buf2.toString('hex'), 'same buffer')

  t.end()
})

tape('copy after many appends', function (t) {
  const buf = crypto.randomBytes(512)
  const buf2 = Buffer.alloc(1024)
  const b = BufferList(buf)

  b.append(buf)
  b.copy(buf2)
  t.equal(b.slice().toString('hex'), buf2.toString('hex'), 'same buffer')

  t.end()
})

tape('copy at a precise position', function (t) {
  const buf = crypto.randomBytes(1004)
  const buf2 = Buffer.alloc(1024)
  const b = BufferList(buf)

  b.copy(buf2, 20)
  t.equal(b.slice().toString('hex'), buf2.slice(20).toString('hex'), 'same buffer')

  t.end()
})

tape('copy starting from a precise location', function (t) {
  const buf = crypto.randomBytes(10)
  const buf2 = Buffer.alloc(5)
  const b = BufferList(buf)

  b.copy(buf2, 0, 5)
  t.equal(b.slice(5).toString('hex'), buf2.toString('hex'), 'same buffer')

  t.end()
})

tape('copy in an interval', function (t) {
  const rnd = crypto.randomBytes(10)
  const b = BufferList(rnd) // put the random bytes there
  const actual = Buffer.alloc(3)
  const expected = Buffer.alloc(3)

  rnd.copy(expected, 0, 5, 8)
  b.copy(actual, 0, 5, 8)

  t.equal(actual.toString('hex'), expected.toString('hex'), 'same buffer')

  t.end()
})

tape('copy an interval between two buffers', function (t) {
  const buf = crypto.randomBytes(10)
  const buf2 = Buffer.alloc(10)
  const b = BufferList(buf)

  b.append(buf)
  b.copy(buf2, 0, 5, 15)

  t.equal(b.slice(5, 15).toString('hex'), buf2.toString('hex'), 'same buffer')

  t.end()
})

tape('shallow slice across buffer boundaries', function (t) {
  const bl = new BufferList(['First', 'Second', 'Third'])

  t.equal(bl.shallowSlice(3, 13).toString(), 'stSecondTh')

  t.end()
})

tape('shallow slice within single buffer', function (t) {
  t.plan(2)

  const bl = new BufferList(['First', 'Second', 'Third'])

  t.equal(bl.shallowSlice(5, 10).toString(), 'Secon')
  t.equal(bl.shallowSlice(7, 10).toString(), 'con')

  t.end()
})

tape('shallow slice single buffer', function (t) {
  t.plan(3)

  const bl = new BufferList(['First', 'Second', 'Third'])

  t.equal(bl.shallowSlice(0, 5).toString(), 'First')
  t.equal(bl.shallowSlice(5, 11).toString(), 'Second')
  t.equal(bl.shallowSlice(11, 16).toString(), 'Third')
})

tape('shallow slice with negative or omitted indices', function (t) {
  t.plan(4)

  const bl = new BufferList(['First', 'Second', 'Third'])

  t.equal(bl.shallowSlice().toString(), 'FirstSecondThird')
  t.equal(bl.shallowSlice(5).toString(), 'SecondThird')
  t.equal(bl.shallowSlice(5, -3).toString(), 'SecondTh')
  t.equal(bl.shallowSlice(-8).toString(), 'ondThird')
})

tape('shallow slice does not make a copy', function (t) {
  t.plan(1)

  const buffers = [Buffer.from('First'), Buffer.from('Second'), Buffer.from('Third')]
  const bl = (new BufferList(buffers)).shallowSlice(5, -3)

  buffers[1].fill('h')
  buffers[2].fill('h')

  t.equal(bl.toString(), 'hhhhhhhh')
})

tape('shallow slice with 0 length', function (t) {
  t.plan(1)

  const buffers = [Buffer.from('First'), Buffer.from('Second'), Buffer.from('Third')]
  const bl = (new BufferList(buffers)).shallowSlice(0, 0)

  t.equal(bl.length, 0)
})

tape('shallow slice with 0 length from middle', function (t) {
  t.plan(1)

  const buffers = [Buffer.from('First'), Buffer.from('Second'), Buffer.from('Third')]
  const bl = (new BufferList(buffers)).shallowSlice(10, 10)

  t.equal(bl.length, 0)
})

tape('duplicate', function (t) {
  t.plan(2)

  const bl = new BufferList('abcdefghij\xff\x00')
  const dup = bl.duplicate()

  t.equal(bl.prototype, dup.prototype)
  t.equal(bl.toString('hex'), dup.toString('hex'))
})

tape('destroy no pipe', function (t) {
  t.plan(2)

  const bl = new BufferList('alsdkfja;lsdkfja;lsdk')

  bl.destroy()

  t.equal(bl._bufs.length, 0)
  t.equal(bl.length, 0)
})

tape('destroy with error', function (t) {
  t.plan(3)

  const bl = new BufferList('alsdkfja;lsdkfja;lsdk')
  const err = new Error('kaboom')

  bl.destroy(err)
  bl.on('error', function (_err) {
    t.equal(_err, err)
  })

  t.equal(bl._bufs.length, 0)
  t.equal(bl.length, 0)
})

!process.browser && tape('destroy with pipe before read end', function (t) {
  t.plan(2)

  const bl = new BufferList()
  fs.createReadStream(path.join(__dirname, '/test.js'))
    .pipe(bl)

  bl.destroy()

  t.equal(bl._bufs.length, 0)
  t.equal(bl.length, 0)
})

!process.browser && tape('destroy with pipe before read end with race', function (t) {
  t.plan(2)

  const bl = new BufferList()

  fs.createReadStream(path.join(__dirname, '/test.js'))
    .pipe(bl)

  setTimeout(function () {
    bl.destroy()
    setTimeout(function () {
      t.equal(bl._bufs.length, 0)
      t.equal(bl.length, 0)
    }, 500)
  }, 500)
})

!process.browser && tape('destroy with pipe after read end', function (t) {
  t.plan(2)

  const bl = new BufferList()

  fs.createReadStream(path.join(__dirname, '/test.js'))
    .on('end', onEnd)
    .pipe(bl)

  function onEnd () {
    bl.destroy()

    t.equal(bl._bufs.length, 0)
    t.equal(bl.length, 0)
  }
})

!process.browser && tape('destroy with pipe while writing to a destination', function (t) {
  t.plan(4)

  const bl = new BufferList()
  const ds = new BufferList()

  fs.createReadStream(path.join(__dirname, '/test.js'))
    .on('end', onEnd)
    .pipe(bl)

  function onEnd () {
    bl.pipe(ds)

    setTimeout(function () {
      bl.destroy()

      t.equals(bl._bufs.length, 0)
      t.equals(bl.length, 0)

      ds.destroy()

      t.equals(bl._bufs.length, 0)
      t.equals(bl.length, 0)
    }, 100)
  }
})

!process.browser && tape('handle error', function (t) {
  t.plan(2)

  fs.createReadStream('/does/not/exist').pipe(BufferList(function (err, data) {
    t.ok(err instanceof Error, 'has error')
    t.notOk(data, 'no data')
  }))
})
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bl\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\body-parser\index.js 
------------------------------------------------------ 
/*!
 * body-parser
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * @typedef Parsers
 * @type {function}
 * @property {function} json
 * @property {function} raw
 * @property {function} text
 * @property {function} urlencoded
 */

/**
 * Module exports.
 * @type {Parsers}
 */

exports = module.exports = bodyParser

/**
 * JSON parser.
 * @public
 */

Object.defineProperty(exports, 'json', {
  configurable: true,
  enumerable: true,
  get: () => require('./lib/types/json')
})

/**
 * Raw parser.
 * @public
 */

Object.defineProperty(exports, 'raw', {
  configurable: true,
  enumerable: true,
  get: () => require('./lib/types/raw')
})

/**
 * Text parser.
 * @public
 */

Object.defineProperty(exports, 'text', {
  configurable: true,
  enumerable: true,
  get: () => require('./lib/types/text')
})

/**
 * URL-encoded parser.
 * @public
 */

Object.defineProperty(exports, 'urlencoded', {
  configurable: true,
  enumerable: true,
  get: () => require('./lib/types/urlencoded')
})

/**
 * Create a middleware to parse json and urlencoded bodies.
 *
 * @param {object} [options]
 * @return {function}
 * @deprecated
 * @public
 */

function bodyParser () {
  throw new Error('The bodyParser() generic has been split into individual middleware to use instead.')
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\body-parser\package.json 
------------------------------------------------------ 
{
  "name": "body-parser",
  "description": "Node.js body parsing middleware",
  "version": "2.2.0",
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>",
    "Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)"
  ],
  "license": "MIT",
  "repository": "expressjs/body-parser",
  "dependencies": {
    "bytes": "^3.1.2",
    "content-type": "^1.0.5",
    "debug": "^4.4.0",
    "http-errors": "^2.0.0",
    "iconv-lite": "^0.6.3",
    "on-finished": "^2.4.1",
    "qs": "^6.14.0",
    "raw-body": "^3.0.0",
    "type-is": "^2.0.0"
  },
  "devDependencies": {
    "eslint": "8.34.0",
    "eslint-config-standard": "14.1.1",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-markdown": "3.0.0",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "6.1.1",
    "eslint-plugin-standard": "4.1.0",
    "mocha": "^11.1.0",
    "nyc": "^17.1.0",
    "supertest": "^7.0.0"
  },
  "files": [
    "lib/",
    "LICENSE",
    "HISTORY.md",
    "index.js"
  ],
  "engines": {
    "node": ">=18"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "mocha --reporter spec --check-leaks test/",
    "test-ci": "nyc --reporter=lcovonly --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\body-parser\lib\read.js 
------------------------------------------------------ 
/*!
 * body-parser
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module dependencies.
 * @private
 */

var createError = require('http-errors')
var getBody = require('raw-body')
var iconv = require('iconv-lite')
var onFinished = require('on-finished')
var zlib = require('node:zlib')

/**
 * Module exports.
 */

module.exports = read

/**
 * Read a request into a buffer and parse.
 *
 * @param {object} req
 * @param {object} res
 * @param {function} next
 * @param {function} parse
 * @param {function} debug
 * @param {object} options
 * @private
 */

function read (req, res, next, parse, debug, options) {
  var length
  var opts = options
  var stream

  // read options
  var encoding = opts.encoding !== null
    ? opts.encoding
    : null
  var verify = opts.verify

  try {
    // get the content stream
    stream = contentstream(req, debug, opts.inflate)
    length = stream.length
    stream.length = undefined
  } catch (err) {
    return next(err)
  }

  // set raw-body options
  opts.length = length
  opts.encoding = verify
    ? null
    : encoding

  // assert charset is supported
  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {
    return next(createError(415, 'unsupported charset "' + encoding.toUpperCase() + '"', {
      charset: encoding.toLowerCase(),
      type: 'charset.unsupported'
    }))
  }

  // read body
  debug('read body')
  getBody(stream, opts, function (error, body) {
    if (error) {
      var _error

      if (error.type === 'encoding.unsupported') {
        // echo back charset
        _error = createError(415, 'unsupported charset "' + encoding.toUpperCase() + '"', {
          charset: encoding.toLowerCase(),
          type: 'charset.unsupported'
        })
      } else {
        // set status code on error
        _error = createError(400, error)
      }

      // unpipe from stream and destroy
      if (stream !== req) {
        req.unpipe()
        stream.destroy()
      }

      // read off entire request
      dump(req, function onfinished () {
        next(createError(400, _error))
      })
      return
    }

    // verify
    if (verify) {
      try {
        debug('verify body')
        verify(req, res, body, encoding)
      } catch (err) {
        next(createError(403, err, {
          body: body,
          type: err.type || 'entity.verify.failed'
        }))
        return
      }
    }

    // parse
    var str = body
    try {
      debug('parse body')
      str = typeof body !== 'string' && encoding !== null
        ? iconv.decode(body, encoding)
        : body
      req.body = parse(str, encoding)
    } catch (err) {
      next(createError(400, err, {
        body: str,
        type: err.type || 'entity.parse.failed'
      }))
      return
    }

    next()
  })
}

/**
 * Get the content stream of the request.
 *
 * @param {object} req
 * @param {function} debug
 * @param {boolean} [inflate=true]
 * @return {object}
 * @api private
 */

function contentstream (req, debug, inflate) {
  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()
  var length = req.headers['content-length']

  debug('content-encoding "%s"', encoding)

  if (inflate === false && encoding !== 'identity') {
    throw createError(415, 'content encoding unsupported', {
      encoding: encoding,
      type: 'encoding.unsupported'
    })
  }

  if (encoding === 'identity') {
    req.length = length
    return req
  }

  var stream = createDecompressionStream(encoding, debug)
  req.pipe(stream)
  return stream
}

/**
 * Create a decompression stream for the given encoding.
 * @param {string} encoding
 * @param {function} debug
 * @return {object}
 * @api private
 */
function createDecompressionStream (encoding, debug) {
  switch (encoding) {
    case 'deflate':
      debug('inflate body')
      return zlib.createInflate()
    case 'gzip':
      debug('gunzip body')
      return zlib.createGunzip()
    case 'br':
      debug('brotli decompress body')
      return zlib.createBrotliDecompress()
    default:
      throw createError(415, 'unsupported content encoding "' + encoding + '"', {
        encoding: encoding,
        type: 'encoding.unsupported'
      })
  }
}

/**
 * Dump the contents of a request.
 *
 * @param {object} req
 * @param {function} callback
 * @api private
 */

function dump (req, callback) {
  if (onFinished.isFinished(req)) {
    callback(null)
  } else {
    onFinished(req, callback)
    req.resume()
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\body-parser\lib\utils.js 
------------------------------------------------------ 
'use strict'

/**
 * Module dependencies.
 */

var bytes = require('bytes')
var contentType = require('content-type')
var typeis = require('type-is')

/**
 * Module exports.
 */

module.exports = {
  getCharset,
  normalizeOptions
}

/**
 * Get the charset of a request.
 *
 * @param {object} req
 * @api private
 */

function getCharset (req) {
  try {
    return (contentType.parse(req).parameters.charset || '').toLowerCase()
  } catch {
    return undefined
  }
}

/**
 * Get the simple type checker.
 *
 * @param {string | string[]} type
 * @return {function}
 */

function typeChecker (type) {
  return function checkType (req) {
    return Boolean(typeis(req, type))
  }
}

/**
 * Normalizes the common options for all parsers.
 *
 * @param {object} options options to normalize
 * @param {string | string[] | function} defaultType default content type(s) or a function to determine it
 * @returns {object}
 */
function normalizeOptions (options, defaultType) {
  if (!defaultType) {
    // Parsers must define a default content type
    throw new TypeError('defaultType must be provided')
  }

  var inflate = options?.inflate !== false
  var limit = typeof options?.limit !== 'number'
    ? bytes.parse(options?.limit || '100kb')
    : options?.limit
  var type = options?.type || defaultType
  var verify = options?.verify || false

  if (verify !== false && typeof verify !== 'function') {
    throw new TypeError('option verify must be function')
  }

  // create the appropriate type checking function
  var shouldParse = typeof type !== 'function'
    ? typeChecker(type)
    : type

  return {
    inflate,
    limit,
    verify,
    shouldParse
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\body-parser\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\body-parser\lib\types\json.js 
------------------------------------------------------ 
/*!
 * body-parser
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module dependencies.
 * @private
 */

var createError = require('http-errors')
var debug = require('debug')('body-parser:json')
var isFinished = require('on-finished').isFinished
var read = require('../read')
var typeis = require('type-is')
var { getCharset, normalizeOptions } = require('../utils')

/**
 * Module exports.
 */

module.exports = json

/**
 * RegExp to match the first non-space in a string.
 *
 * Allowed whitespace is defined in RFC 7159:
 *
 *    ws = *(
 *            %x20 /              ; Space
 *            %x09 /              ; Horizontal tab
 *            %x0A /              ; Line feed or New line
 *            %x0D )              ; Carriage return
 */

var FIRST_CHAR_REGEXP = /^[\x20\x09\x0a\x0d]*([^\x20\x09\x0a\x0d])/ // eslint-disable-line no-control-regex

var JSON_SYNTAX_CHAR = '#'
var JSON_SYNTAX_REGEXP = /#+/g

/**
 * Create a middleware to parse JSON bodies.
 *
 * @param {object} [options]
 * @return {function}
 * @public
 */

function json (options) {
  var { inflate, limit, verify, shouldParse } = normalizeOptions(options, 'application/json')

  var reviver = options?.reviver
  var strict = options?.strict !== false

  function parse (body) {
    if (body.length === 0) {
      // special-case empty json body, as it's a common client-side mistake
      // TODO: maybe make this configurable or part of "strict" option
      return {}
    }

    if (strict) {
      var first = firstchar(body)

      if (first !== '{' && first !== '[') {
        debug('strict violation')
        throw createStrictSyntaxError(body, first)
      }
    }

    try {
      debug('parse json')
      return JSON.parse(body, reviver)
    } catch (e) {
      throw normalizeJsonSyntaxError(e, {
        message: e.message,
        stack: e.stack
      })
    }
  }

  return function jsonParser (req, res, next) {
    if (isFinished(req)) {
      debug('body already parsed')
      next()
      return
    }

    if (!('body' in req)) {
      req.body = undefined
    }

    // skip requests without bodies
    if (!typeis.hasBody(req)) {
      debug('skip empty body')
      next()
      return
    }

    debug('content-type %j', req.headers['content-type'])

    // determine if request should be parsed
    if (!shouldParse(req)) {
      debug('skip parsing')
      next()
      return
    }

    // assert charset per RFC 7159 sec 8.1
    var charset = getCharset(req) || 'utf-8'
    if (charset.slice(0, 4) !== 'utf-') {
      debug('invalid charset')
      next(createError(415, 'unsupported charset "' + charset.toUpperCase() + '"', {
        charset: charset,
        type: 'charset.unsupported'
      }))
      return
    }

    // read
    read(req, res, next, parse, debug, {
      encoding: charset,
      inflate,
      limit,
      verify
    })
  }
}

/**
 * Create strict violation syntax error matching native error.
 *
 * @param {string} str
 * @param {string} char
 * @return {Error}
 * @private
 */

function createStrictSyntaxError (str, char) {
  var index = str.indexOf(char)
  var partial = ''

  if (index !== -1) {
    partial = str.substring(0, index) + JSON_SYNTAX_CHAR

    for (var i = index + 1; i < str.length; i++) {
      partial += JSON_SYNTAX_CHAR
    }
  }

  try {
    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')
  } catch (e) {
    return normalizeJsonSyntaxError(e, {
      message: e.message.replace(JSON_SYNTAX_REGEXP, function (placeholder) {
        return str.substring(index, index + placeholder.length)
      }),
      stack: e.stack
    })
  }
}

/**
 * Get the first non-whitespace character in a string.
 *
 * @param {string} str
 * @return {function}
 * @private
 */

function firstchar (str) {
  var match = FIRST_CHAR_REGEXP.exec(str)

  return match
    ? match[1]
    : undefined
}

/**
 * Normalize a SyntaxError for JSON.parse.
 *
 * @param {SyntaxError} error
 * @param {object} obj
 * @return {SyntaxError}
 */

function normalizeJsonSyntaxError (error, obj) {
  var keys = Object.getOwnPropertyNames(error)

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i]
    if (key !== 'stack' && key !== 'message') {
      delete error[key]
    }
  }

  // replace stack before message for Node.js 0.10 and below
  error.stack = obj.stack.replace(error.message, obj.message)
  error.message = obj.message

  return error
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\body-parser\lib\types\raw.js 
------------------------------------------------------ 
/*!
 * body-parser
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module dependencies.
 */

var debug = require('debug')('body-parser:raw')
var isFinished = require('on-finished').isFinished
var read = require('../read')
var typeis = require('type-is')
var { normalizeOptions } = require('../utils')

/**
 * Module exports.
 */

module.exports = raw

/**
 * Create a middleware to parse raw bodies.
 *
 * @param {object} [options]
 * @return {function}
 * @api public
 */

function raw (options) {
  var { inflate, limit, verify, shouldParse } = normalizeOptions(options, 'application/octet-stream')

  function parse (buf) {
    return buf
  }

  return function rawParser (req, res, next) {
    if (isFinished(req)) {
      debug('body already parsed')
      next()
      return
    }

    if (!('body' in req)) {
      req.body = undefined
    }

    // skip requests without bodies
    if (!typeis.hasBody(req)) {
      debug('skip empty body')
      next()
      return
    }

    debug('content-type %j', req.headers['content-type'])

    // determine if request should be parsed
    if (!shouldParse(req)) {
      debug('skip parsing')
      next()
      return
    }

    // read
    read(req, res, next, parse, debug, {
      encoding: null,
      inflate,
      limit,
      verify
    })
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\body-parser\lib\types\text.js 
------------------------------------------------------ 
/*!
 * body-parser
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module dependencies.
 */

var debug = require('debug')('body-parser:text')
var isFinished = require('on-finished').isFinished
var read = require('../read')
var typeis = require('type-is')
var { getCharset, normalizeOptions } = require('../utils')

/**
 * Module exports.
 */

module.exports = text

/**
 * Create a middleware to parse text bodies.
 *
 * @param {object} [options]
 * @return {function}
 * @api public
 */

function text (options) {
  var { inflate, limit, verify, shouldParse } = normalizeOptions(options, 'text/plain')

  var defaultCharset = options?.defaultCharset || 'utf-8'

  function parse (buf) {
    return buf
  }

  return function textParser (req, res, next) {
    if (isFinished(req)) {
      debug('body already parsed')
      next()
      return
    }

    if (!('body' in req)) {
      req.body = undefined
    }

    // skip requests without bodies
    if (!typeis.hasBody(req)) {
      debug('skip empty body')
      next()
      return
    }

    debug('content-type %j', req.headers['content-type'])

    // determine if request should be parsed
    if (!shouldParse(req)) {
      debug('skip parsing')
      next()
      return
    }

    // get charset
    var charset = getCharset(req) || defaultCharset

    // read
    read(req, res, next, parse, debug, {
      encoding: charset,
      inflate,
      limit,
      verify
    })
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\body-parser\lib\types\urlencoded.js 
------------------------------------------------------ 
/*!
 * body-parser
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module dependencies.
 * @private
 */

var createError = require('http-errors')
var debug = require('debug')('body-parser:urlencoded')
var isFinished = require('on-finished').isFinished
var read = require('../read')
var typeis = require('type-is')
var qs = require('qs')
var { getCharset, normalizeOptions } = require('../utils')

/**
 * Module exports.
 */

module.exports = urlencoded

/**
 * Create a middleware to parse urlencoded bodies.
 *
 * @param {object} [options]
 * @return {function}
 * @public
 */

function urlencoded (options) {
  var { inflate, limit, verify, shouldParse } = normalizeOptions(options, 'application/x-www-form-urlencoded')

  var defaultCharset = options?.defaultCharset || 'utf-8'
  if (defaultCharset !== 'utf-8' && defaultCharset !== 'iso-8859-1') {
    throw new TypeError('option defaultCharset must be either utf-8 or iso-8859-1')
  }

  // create the appropriate query parser
  var queryparse = createQueryParser(options)

  function parse (body, encoding) {
    return body.length
      ? queryparse(body, encoding)
      : {}
  }

  return function urlencodedParser (req, res, next) {
    if (isFinished(req)) {
      debug('body already parsed')
      next()
      return
    }

    if (!('body' in req)) {
      req.body = undefined
    }

    // skip requests without bodies
    if (!typeis.hasBody(req)) {
      debug('skip empty body')
      next()
      return
    }

    debug('content-type %j', req.headers['content-type'])

    // determine if request should be parsed
    if (!shouldParse(req)) {
      debug('skip parsing')
      next()
      return
    }

    // assert charset
    var charset = getCharset(req) || defaultCharset
    if (charset !== 'utf-8' && charset !== 'iso-8859-1') {
      debug('invalid charset')
      next(createError(415, 'unsupported charset "' + charset.toUpperCase() + '"', {
        charset: charset,
        type: 'charset.unsupported'
      }))
      return
    }

    // read
    read(req, res, next, parse, debug, {
      encoding: charset,
      inflate,
      limit,
      verify
    })
  }
}

/**
 * Get the extended query parser.
 *
 * @param {object} options
 */

function createQueryParser (options) {
  var extended = Boolean(options?.extended)
  var parameterLimit = options?.parameterLimit !== undefined
    ? options?.parameterLimit
    : 1000
  var charsetSentinel = options?.charsetSentinel
  var interpretNumericEntities = options?.interpretNumericEntities
  var depth = extended ? (options?.depth !== undefined ? options?.depth : 32) : 0

  if (isNaN(parameterLimit) || parameterLimit < 1) {
    throw new TypeError('option parameterLimit must be a positive number')
  }

  if (isNaN(depth) || depth < 0) {
    throw new TypeError('option depth must be a zero or a positive number')
  }

  if (isFinite(parameterLimit)) {
    parameterLimit = parameterLimit | 0
  }

  return function queryparse (body, encoding) {
    var paramCount = parameterCount(body, parameterLimit)

    if (paramCount === undefined) {
      debug('too many parameters')
      throw createError(413, 'too many parameters', {
        type: 'parameters.too.many'
      })
    }

    var arrayLimit = extended ? Math.max(100, paramCount) : 0

    debug('parse ' + (extended ? 'extended ' : '') + 'urlencoding')
    try {
      return qs.parse(body, {
        allowPrototypes: true,
        arrayLimit: arrayLimit,
        depth: depth,
        charsetSentinel: charsetSentinel,
        interpretNumericEntities: interpretNumericEntities,
        charset: encoding,
        parameterLimit: parameterLimit,
        strictDepth: true
      })
    } catch (err) {
      if (err instanceof RangeError) {
        throw createError(400, 'The input exceeded the depth', {
          type: 'querystring.parse.rangeError'
        })
      } else {
        throw err
      }
    }
  }
}

/**
 * Count the number of parameters, stopping once limit reached
 *
 * @param {string} body
 * @param {number} limit
 * @api private
 */

function parameterCount (body, limit) {
  var len = body.split('&').length

  return len > limit ? undefined : len - 1
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\body-parser\lib\types\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\brace-expansion\index.js 
------------------------------------------------------ 
var concatMap = require('concat-map');
var balanced = require('balanced-match');

module.exports = expandTop;

var escSlash = '\0SLASH'+Math.random()+'\0';
var escOpen = '\0OPEN'+Math.random()+'\0';
var escClose = '\0CLOSE'+Math.random()+'\0';
var escComma = '\0COMMA'+Math.random()+'\0';
var escPeriod = '\0PERIOD'+Math.random()+'\0';

function numeric(str) {
  return parseInt(str, 10) == str
    ? parseInt(str, 10)
    : str.charCodeAt(0);
}

function escapeBraces(str) {
  return str.split('\\\\').join(escSlash)
            .split('\\{').join(escOpen)
            .split('\\}').join(escClose)
            .split('\\,').join(escComma)
            .split('\\.').join(escPeriod);
}

function unescapeBraces(str) {
  return str.split(escSlash).join('\\')
            .split(escOpen).join('{')
            .split(escClose).join('}')
            .split(escComma).join(',')
            .split(escPeriod).join('.');
}


// Basically just str.split(","), but handling cases
// where we have nested braced sections, which should be
// treated as individual members, like {a,{b,c},d}
function parseCommaParts(str) {
  if (!str)
    return [''];

  var parts = [];
  var m = balanced('{', '}', str);

  if (!m)
    return str.split(',');

  var pre = m.pre;
  var body = m.body;
  var post = m.post;
  var p = pre.split(',');

  p[p.length-1] += '{' + body + '}';
  var postParts = parseCommaParts(post);
  if (post.length) {
    p[p.length-1] += postParts.shift();
    p.push.apply(p, postParts);
  }

  parts.push.apply(parts, p);

  return parts;
}

function expandTop(str) {
  if (!str)
    return [];

  // I don't know why Bash 4.3 does this, but it does.
  // Anything starting with {} will have the first two bytes preserved
  // but *only* at the top level, so {},a}b will not expand to anything,
  // but a{},b}c will be expanded to [a}c,abc].
  // One could argue that this is a bug in Bash, but since the goal of
  // this module is to match Bash's rules, we escape a leading {}
  if (str.substr(0, 2) === '{}') {
    str = '\\{\\}' + str.substr(2);
  }

  return expand(escapeBraces(str), true).map(unescapeBraces);
}

function identity(e) {
  return e;
}

function embrace(str) {
  return '{' + str + '}';
}
function isPadded(el) {
  return /^-?0\d/.test(el);
}

function lte(i, y) {
  return i <= y;
}
function gte(i, y) {
  return i >= y;
}

function expand(str, isTop) {
  var expansions = [];

  var m = balanced('{', '}', str);
  if (!m || /\$$/.test(m.pre)) return [str];

  var isNumericSequence = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);
  var isAlphaSequence = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);
  var isSequence = isNumericSequence || isAlphaSequence;
  var isOptions = m.body.indexOf(',') >= 0;
  if (!isSequence && !isOptions) {
    // {a},b}
    if (m.post.match(/,(?!,).*\}/)) {
      str = m.pre + '{' + m.body + escClose + m.post;
      return expand(str);
    }
    return [str];
  }

  var n;
  if (isSequence) {
    n = m.body.split(/\.\./);
  } else {
    n = parseCommaParts(m.body);
    if (n.length === 1) {
      // x{{a,b}}y ==> x{a}y x{b}y
      n = expand(n[0], false).map(embrace);
      if (n.length === 1) {
        var post = m.post.length
          ? expand(m.post, false)
          : [''];
        return post.map(function(p) {
          return m.pre + n[0] + p;
        });
      }
    }
  }

  // at this point, n is the parts, and we know it's not a comma set
  // with a single entry.

  // no need to expand pre, since it is guaranteed to be free of brace-sets
  var pre = m.pre;
  var post = m.post.length
    ? expand(m.post, false)
    : [''];

  var N;

  if (isSequence) {
    var x = numeric(n[0]);
    var y = numeric(n[1]);
    var width = Math.max(n[0].length, n[1].length)
    var incr = n.length == 3
      ? Math.abs(numeric(n[2]))
      : 1;
    var test = lte;
    var reverse = y < x;
    if (reverse) {
      incr *= -1;
      test = gte;
    }
    var pad = n.some(isPadded);

    N = [];

    for (var i = x; test(i, y); i += incr) {
      var c;
      if (isAlphaSequence) {
        c = String.fromCharCode(i);
        if (c === '\\')
          c = '';
      } else {
        c = String(i);
        if (pad) {
          var need = width - c.length;
          if (need > 0) {
            var z = new Array(need + 1).join('0');
            if (i < 0)
              c = '-' + z + c.slice(1);
            else
              c = z + c;
          }
        }
      }
      N.push(c);
    }
  } else {
    N = concatMap(n, function(el) { return expand(el, false) });
  }

  for (var j = 0; j < N.length; j++) {
    for (var k = 0; k < post.length; k++) {
      var expansion = pre + N[j] + post[k];
      if (!isTop || isSequence || expansion)
        expansions.push(expansion);
    }
  }

  return expansions;
}

 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\brace-expansion\package.json 
------------------------------------------------------ 
{
  "name": "brace-expansion",
  "description": "Brace expansion as known from sh/bash",
  "version": "1.1.12",
  "repository": {
    "type": "git",
    "url": "git://github.com/juliangruber/brace-expansion.git"
  },
  "homepage": "https://github.com/juliangruber/brace-expansion",
  "main": "index.js",
  "scripts": {
    "test": "tape test/*.js",
    "gentest": "bash test/generate.sh",
    "bench": "matcha test/perf/bench.js"
  },
  "dependencies": {
    "balanced-match": "^1.0.0",
    "concat-map": "0.0.1"
  },
  "devDependencies": {
    "matcha": "^0.7.0",
    "tape": "^4.6.0"
  },
  "keywords": [],
  "author": {
    "name": "Julian Gruber",
    "email": "mail@juliangruber.com",
    "url": "http://juliangruber.com"
  },
  "license": "MIT",
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "firefox/20..latest",
      "firefox/nightly",
      "chrome/25..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "publishConfig": {
    "tag": "1.x"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\buffer\index.js 
------------------------------------------------------ 
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var customInspectSymbol =
  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation
    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
    : null

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    var proto = { foo: function () { return 42 } }
    Object.setPrototypeOf(proto, Uint8Array.prototype)
    Object.setPrototypeOf(arr, proto)
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  Object.setPrototypeOf(buf, Buffer.prototype)
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayView(value)
  }

  if (value == null) {
    throw new TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof SharedArrayBuffer !== 'undefined' &&
      (isInstance(value, SharedArrayBuffer) ||
      (value && isInstance(value.buffer, SharedArrayBuffer)))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)
Object.setPrototypeOf(Buffer, Uint8Array)

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayView (arrayView) {
  if (isInstance(arrayView, Uint8Array)) {
    var copy = new Uint8Array(arrayView)
    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)
  }
  return fromArrayLike(arrayView)
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(buf, Buffer.prototype)

  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      if (pos + buf.length > buffer.length) {
        Buffer.from(buf).copy(buffer, pos)
      } else {
        Uint8Array.prototype.set.call(
          buffer,
          buf,
          pos
        )
      }
    } else if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    } else {
      buf.copy(buffer, pos)
    }
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}
if (customInspectSymbol) {
  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
      case 'latin1':
      case 'binary':
        return asciiWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF)
      ? 4
      : (firstByte > 0xDF)
          ? 3
          : (firstByte > 0xBF)
              ? 2
              : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += hexSliceLookupTable[buf[i]]
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
  for (var i = 0; i < bytes.length - 1; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(newBuf, Buffer.prototype)

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUintLE =
Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUintBE =
Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUint8 =
Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUint16LE =
Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUint16BE =
Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUint32LE =
Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUint32BE =
Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUintLE =
Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUintBE =
Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUint8 =
Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUint16LE =
Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUint16BE =
Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUint32LE =
Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUint32BE =
Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  } else if (typeof val === 'boolean') {
    val = Number(val)
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
var hexSliceLookupTable = (function () {
  var alphabet = '0123456789abcdef'
  var table = new Array(256)
  for (var i = 0; i < 16; ++i) {
    var i16 = i * 16
    for (var j = 0; j < 16; ++j) {
      table[i16 + j] = alphabet[i] + alphabet[j]
    }
  }
  return table
})()
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\buffer\package.json 
------------------------------------------------------ 
{
  "name": "buffer",
  "description": "Node.js Buffer API, for the browser",
  "version": "5.7.1",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "https://feross.org"
  },
  "bugs": {
    "url": "https://github.com/feross/buffer/issues"
  },
  "contributors": [
    "Romain Beauxis <toots@rastageeks.org>",
    "James Halliday <mail@substack.net>"
  ],
  "dependencies": {
    "base64-js": "^1.3.1",
    "ieee754": "^1.1.13"
  },
  "devDependencies": {
    "airtap": "^3.0.0",
    "benchmark": "^2.1.4",
    "browserify": "^17.0.0",
    "concat-stream": "^2.0.0",
    "hyperquest": "^2.1.3",
    "is-buffer": "^2.0.4",
    "is-nan": "^1.3.0",
    "split": "^1.0.1",
    "standard": "*",
    "tape": "^5.0.1",
    "through2": "^4.0.2",
    "uglify-js": "^3.11.3"
  },
  "homepage": "https://github.com/feross/buffer",
  "jspm": {
    "map": {
      "./index.js": {
        "node": "@node/buffer"
      }
    }
  },
  "keywords": [
    "arraybuffer",
    "browser",
    "browserify",
    "buffer",
    "compatible",
    "dataview",
    "uint8array"
  ],
  "license": "MIT",
  "main": "index.js",
  "types": "index.d.ts",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/buffer.git"
  },
  "scripts": {
    "perf": "browserify --debug perf/bracket-notation.js > perf/bundle.js && open perf/index.html",
    "perf-node": "node perf/bracket-notation.js && node perf/concat.js && node perf/copy-big.js && node perf/copy.js && node perf/new-big.js && node perf/new.js && node perf/readDoubleBE.js && node perf/readFloatBE.js && node perf/readUInt32LE.js && node perf/slice.js && node perf/writeFloatBE.js",
    "size": "browserify -r ./ | uglifyjs -c -m | gzip | wc -c",
    "test": "standard && node ./bin/test.js",
    "test-browser-es5": "airtap -- test/*.js",
    "test-browser-es5-local": "airtap --local -- test/*.js",
    "test-browser-es6": "airtap -- test/*.js test/node/*.js",
    "test-browser-es6-local": "airtap --local -- test/*.js test/node/*.js",
    "test-node": "tape test/*.js test/node/*.js",
    "update-authors": "./bin/update-authors.sh"
  },
  "standard": {
    "ignore": [
      "test/node/**/*.js",
      "test/common.js",
      "test/_polyfill.js",
      "perf/**/*.js"
    ],
    "globals": [
      "SharedArrayBuffer"
    ]
  },
  "funding": [
    {
      "type": "github",
      "url": "https://github.com/sponsors/feross"
    },
    {
      "type": "patreon",
      "url": "https://www.patreon.com/feross"
    },
    {
      "type": "consulting",
      "url": "https://feross.org/support"
    }
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\buffer-equal-constant-time\index.js 
------------------------------------------------------ 
/*jshint node:true */
'use strict';
var Buffer = require('buffer').Buffer; // browserify
var SlowBuffer = require('buffer').SlowBuffer;

module.exports = bufferEq;

function bufferEq(a, b) {

  // shortcutting on type is necessary for correctness
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    return false;
  }

  // buffer sizes should be well-known information, so despite this
  // shortcutting, it doesn't leak any information about the *contents* of the
  // buffers.
  if (a.length !== b.length) {
    return false;
  }

  var c = 0;
  for (var i = 0; i < a.length; i++) {
    /*jshint bitwise:false */
    c |= a[i] ^ b[i]; // XOR
  }
  return c === 0;
}

bufferEq.install = function() {
  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {
    return bufferEq(this, that);
  };
};

var origBufEqual = Buffer.prototype.equal;
var origSlowBufEqual = SlowBuffer.prototype.equal;
bufferEq.restore = function() {
  Buffer.prototype.equal = origBufEqual;
  SlowBuffer.prototype.equal = origSlowBufEqual;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\buffer-equal-constant-time\test.js 
------------------------------------------------------ 
/*jshint node:true */
'use strict';

var bufferEq = require('./index');
var assert = require('assert');

describe('buffer-equal-constant-time', function() {
  var a = new Buffer('asdfasdf123456');
  var b = new Buffer('asdfasdf123456');
  var c = new Buffer('asdfasdf');

  describe('bufferEq', function() {
    it('says a == b', function() {
      assert.strictEqual(bufferEq(a, b), true);
    });

    it('says a != c', function() {
      assert.strictEqual(bufferEq(a, c), false);
    });
  });

  describe('install/restore', function() {
    before(function() {
      bufferEq.install();
    });
    after(function() {
      bufferEq.restore();
    });

    it('installed an .equal method', function() {
      var SlowBuffer = require('buffer').SlowBuffer;
      assert.ok(Buffer.prototype.equal);
      assert.ok(SlowBuffer.prototype.equal);
    });

    it('infected existing Buffers', function() {
      assert.strictEqual(a.equal(b), true);
      assert.strictEqual(a.equal(c), false);
    });
  });

});
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\buffer-equal-constant-time\package.json 
------------------------------------------------------ 
{
  "name": "buffer-equal-constant-time",
  "version": "1.0.1",
  "description": "Constant-time comparison of Buffers",
  "main": "index.js",
  "scripts": {
    "test": "mocha test.js"
  },
  "repository": "git@github.com:goinstant/buffer-equal-constant-time.git",
  "keywords": [
    "buffer",
    "equal",
    "constant-time",
    "crypto"
  ],
  "author": "GoInstant Inc., a salesforce.com company",
  "license": "BSD-3-Clause",
  "devDependencies": {
    "mocha": "~1.15.1"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bytes\index.js 
------------------------------------------------------ 
/*!
 * bytes
 * Copyright(c) 2012-2014 TJ Holowaychuk
 * Copyright(c) 2015 Jed Watson
 * MIT Licensed
 */

'use strict';

/**
 * Module exports.
 * @public
 */

module.exports = bytes;
module.exports.format = format;
module.exports.parse = parse;

/**
 * Module variables.
 * @private
 */

var formatThousandsRegExp = /\B(?=(\d{3})+(?!\d))/g;

var formatDecimalsRegExp = /(?:\.0*|(\.[^0]+)0+)$/;

var map = {
  b:  1,
  kb: 1 << 10,
  mb: 1 << 20,
  gb: 1 << 30,
  tb: Math.pow(1024, 4),
  pb: Math.pow(1024, 5),
};

var parseRegExp = /^((-|\+)?(\d+(?:\.\d+)?)) *(kb|mb|gb|tb|pb)$/i;

/**
 * Convert the given value in bytes into a string or parse to string to an integer in bytes.
 *
 * @param {string|number} value
 * @param {{
 *  case: [string],
 *  decimalPlaces: [number]
 *  fixedDecimals: [boolean]
 *  thousandsSeparator: [string]
 *  unitSeparator: [string]
 *  }} [options] bytes options.
 *
 * @returns {string|number|null}
 */

function bytes(value, options) {
  if (typeof value === 'string') {
    return parse(value);
  }

  if (typeof value === 'number') {
    return format(value, options);
  }

  return null;
}

/**
 * Format the given value in bytes into a string.
 *
 * If the value is negative, it is kept as such. If it is a float,
 * it is rounded.
 *
 * @param {number} value
 * @param {object} [options]
 * @param {number} [options.decimalPlaces=2]
 * @param {number} [options.fixedDecimals=false]
 * @param {string} [options.thousandsSeparator=]
 * @param {string} [options.unit=]
 * @param {string} [options.unitSeparator=]
 *
 * @returns {string|null}
 * @public
 */

function format(value, options) {
  if (!Number.isFinite(value)) {
    return null;
  }

  var mag = Math.abs(value);
  var thousandsSeparator = (options && options.thousandsSeparator) || '';
  var unitSeparator = (options && options.unitSeparator) || '';
  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;
  var fixedDecimals = Boolean(options && options.fixedDecimals);
  var unit = (options && options.unit) || '';

  if (!unit || !map[unit.toLowerCase()]) {
    if (mag >= map.pb) {
      unit = 'PB';
    } else if (mag >= map.tb) {
      unit = 'TB';
    } else if (mag >= map.gb) {
      unit = 'GB';
    } else if (mag >= map.mb) {
      unit = 'MB';
    } else if (mag >= map.kb) {
      unit = 'KB';
    } else {
      unit = 'B';
    }
  }

  var val = value / map[unit.toLowerCase()];
  var str = val.toFixed(decimalPlaces);

  if (!fixedDecimals) {
    str = str.replace(formatDecimalsRegExp, '$1');
  }

  if (thousandsSeparator) {
    str = str.split('.').map(function (s, i) {
      return i === 0
        ? s.replace(formatThousandsRegExp, thousandsSeparator)
        : s
    }).join('.');
  }

  return str + unitSeparator + unit;
}

/**
 * Parse the string value into an integer in bytes.
 *
 * If no unit is given, it is assumed the value is in bytes.
 *
 * @param {number|string} val
 *
 * @returns {number|null}
 * @public
 */

function parse(val) {
  if (typeof val === 'number' && !isNaN(val)) {
    return val;
  }

  if (typeof val !== 'string') {
    return null;
  }

  // Test if the string passed is valid
  var results = parseRegExp.exec(val);
  var floatValue;
  var unit = 'b';

  if (!results) {
    // Nothing could be extracted from the given string
    floatValue = parseInt(val, 10);
    unit = 'b'
  } else {
    // Retrieve the value and the unit
    floatValue = parseFloat(results[1]);
    unit = results[4].toLowerCase();
  }

  if (isNaN(floatValue)) {
    return null;
  }

  return Math.floor(map[unit] * floatValue);
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\bytes\package.json 
------------------------------------------------------ 
{
  "name": "bytes",
  "description": "Utility to parse a string bytes to bytes and vice-versa",
  "version": "3.1.2",
  "author": "TJ Holowaychuk <tj@vision-media.ca> (http://tjholowaychuk.com)",
  "contributors": [
    "Jed Watson <jed.watson@me.com>",
    "Théo FIDRY <theo.fidry@gmail.com>"
  ],
  "license": "MIT",
  "keywords": [
    "byte",
    "bytes",
    "utility",
    "parse",
    "parser",
    "convert",
    "converter"
  ],
  "repository": "visionmedia/bytes.js",
  "devDependencies": {
    "eslint": "7.32.0",
    "eslint-plugin-markdown": "2.2.1",
    "mocha": "9.2.0",
    "nyc": "15.1.0"
  },
  "files": [
    "History.md",
    "LICENSE",
    "Readme.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.8"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "mocha --check-leaks --reporter spec",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\get.js 
------------------------------------------------------ 
'use strict'

const Collect = require('minipass-collect')
const Minipass = require('minipass')
const Pipeline = require('minipass-pipeline')
const fs = require('fs')
const util = require('util')

const index = require('./lib/entry-index')
const memo = require('./lib/memoization')
const read = require('./lib/content/read')

const writeFile = util.promisify(fs.writeFile)

function getData (cache, key, opts = {}) {
  const { integrity, memoize, size } = opts
  const memoized = memo.get(cache, key, opts)
  if (memoized && memoize !== false) {
    return Promise.resolve({
      metadata: memoized.entry.metadata,
      data: memoized.data,
      integrity: memoized.entry.integrity,
      size: memoized.entry.size,
    })
  }

  return index.find(cache, key, opts).then((entry) => {
    if (!entry)
      throw new index.NotFoundError(cache, key)

    return read(cache, entry.integrity, { integrity, size }).then((data) => {
      if (memoize)
        memo.put(cache, entry, data, opts)

      return {
        data,
        metadata: entry.metadata,
        size: entry.size,
        integrity: entry.integrity,
      }
    })
  })
}
module.exports = getData

function getDataByDigest (cache, key, opts = {}) {
  const { integrity, memoize, size } = opts
  const memoized = memo.get.byDigest(cache, key, opts)
  if (memoized && memoize !== false)
    return Promise.resolve(memoized)

  return read(cache, key, { integrity, size }).then((res) => {
    if (memoize)
      memo.put.byDigest(cache, key, res, opts)
    return res
  })
}
module.exports.byDigest = getDataByDigest

function getDataSync (cache, key, opts = {}) {
  const { integrity, memoize, size } = opts
  const memoized = memo.get(cache, key, opts)

  if (memoized && memoize !== false) {
    return {
      metadata: memoized.entry.metadata,
      data: memoized.data,
      integrity: memoized.entry.integrity,
      size: memoized.entry.size,
    }
  }
  const entry = index.find.sync(cache, key, opts)
  if (!entry)
    throw new index.NotFoundError(cache, key)
  const data = read.sync(cache, entry.integrity, {
    integrity: integrity,
    size: size,
  })
  const res = {
    metadata: entry.metadata,
    data: data,
    size: entry.size,
    integrity: entry.integrity,
  }
  if (memoize)
    memo.put(cache, entry, res.data, opts)

  return res
}

module.exports.sync = getDataSync

function getDataByDigestSync (cache, digest, opts = {}) {
  const { integrity, memoize, size } = opts
  const memoized = memo.get.byDigest(cache, digest, opts)

  if (memoized && memoize !== false)
    return memoized

  const res = read.sync(cache, digest, {
    integrity: integrity,
    size: size,
  })
  if (memoize)
    memo.put.byDigest(cache, digest, res, opts)

  return res
}
module.exports.sync.byDigest = getDataByDigestSync

const getMemoizedStream = (memoized) => {
  const stream = new Minipass()
  stream.on('newListener', function (ev, cb) {
    ev === 'metadata' && cb(memoized.entry.metadata)
    ev === 'integrity' && cb(memoized.entry.integrity)
    ev === 'size' && cb(memoized.entry.size)
  })
  stream.end(memoized.data)
  return stream
}

function getStream (cache, key, opts = {}) {
  const { memoize, size } = opts
  const memoized = memo.get(cache, key, opts)
  if (memoized && memoize !== false)
    return getMemoizedStream(memoized)

  const stream = new Pipeline()
  index
    .find(cache, key)
    .then((entry) => {
      if (!entry)
        throw new index.NotFoundError(cache, key)

      stream.emit('metadata', entry.metadata)
      stream.emit('integrity', entry.integrity)
      stream.emit('size', entry.size)
      stream.on('newListener', function (ev, cb) {
        ev === 'metadata' && cb(entry.metadata)
        ev === 'integrity' && cb(entry.integrity)
        ev === 'size' && cb(entry.size)
      })

      const src = read.readStream(
        cache,
        entry.integrity,
        { ...opts, size: typeof size !== 'number' ? entry.size : size }
      )

      if (memoize) {
        const memoStream = new Collect.PassThrough()
        memoStream.on('collect', data => memo.put(cache, entry, data, opts))
        stream.unshift(memoStream)
      }
      stream.unshift(src)
    })
    .catch((err) => stream.emit('error', err))

  return stream
}

module.exports.stream = getStream

function getStreamDigest (cache, integrity, opts = {}) {
  const { memoize } = opts
  const memoized = memo.get.byDigest(cache, integrity, opts)
  if (memoized && memoize !== false) {
    const stream = new Minipass()
    stream.end(memoized)
    return stream
  } else {
    const stream = read.readStream(cache, integrity, opts)
    if (!memoize)
      return stream

    const memoStream = new Collect.PassThrough()
    memoStream.on('collect', data => memo.put.byDigest(
      cache,
      integrity,
      data,
      opts
    ))
    return new Pipeline(stream, memoStream)
  }
}

module.exports.stream.byDigest = getStreamDigest

function info (cache, key, opts = {}) {
  const { memoize } = opts
  const memoized = memo.get(cache, key, opts)
  if (memoized && memoize !== false)
    return Promise.resolve(memoized.entry)
  else
    return index.find(cache, key)
}
module.exports.info = info

function copy (cache, key, dest, opts = {}) {
  if (read.copy) {
    return index.find(cache, key, opts).then((entry) => {
      if (!entry)
        throw new index.NotFoundError(cache, key)
      return read.copy(cache, entry.integrity, dest, opts)
        .then(() => {
          return {
            metadata: entry.metadata,
            size: entry.size,
            integrity: entry.integrity,
          }
        })
    })
  }

  return getData(cache, key, opts).then((res) => {
    return writeFile(dest, res.data).then(() => {
      return {
        metadata: res.metadata,
        size: res.size,
        integrity: res.integrity,
      }
    })
  })
}
module.exports.copy = copy

function copyByDigest (cache, key, dest, opts = {}) {
  if (read.copy)
    return read.copy(cache, key, dest, opts).then(() => key)

  return getDataByDigest(cache, key, opts).then((res) => {
    return writeFile(dest, res).then(() => key)
  })
}
module.exports.copy.byDigest = copyByDigest

module.exports.hasContent = read.hasContent
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\index.js 
------------------------------------------------------ 
'use strict'

const ls = require('./ls.js')
const get = require('./get.js')
const put = require('./put.js')
const rm = require('./rm.js')
const verify = require('./verify.js')
const { clearMemoized } = require('./lib/memoization.js')
const tmp = require('./lib/util/tmp.js')
const index = require('./lib/entry-index.js')

module.exports.index = {}
module.exports.index.compact = index.compact
module.exports.index.insert = index.insert

module.exports.ls = ls
module.exports.ls.stream = ls.stream

module.exports.get = get
module.exports.get.byDigest = get.byDigest
module.exports.get.sync = get.sync
module.exports.get.sync.byDigest = get.sync.byDigest
module.exports.get.stream = get.stream
module.exports.get.stream.byDigest = get.stream.byDigest
module.exports.get.copy = get.copy
module.exports.get.copy.byDigest = get.copy.byDigest
module.exports.get.info = get.info
module.exports.get.hasContent = get.hasContent
module.exports.get.hasContent.sync = get.hasContent.sync

module.exports.put = put
module.exports.put.stream = put.stream

module.exports.rm = rm.entry
module.exports.rm.all = rm.all
module.exports.rm.entry = module.exports.rm
module.exports.rm.content = rm.content

module.exports.clearMemoized = clearMemoized

module.exports.tmp = {}
module.exports.tmp.mkdir = tmp.mkdir
module.exports.tmp.withTmp = tmp.withTmp

module.exports.verify = verify
module.exports.verify.lastRun = verify.lastRun
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\ls.js 
------------------------------------------------------ 
'use strict'

const index = require('./lib/entry-index')

module.exports = index.ls
module.exports.stream = index.lsStream
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\put.js 
------------------------------------------------------ 
'use strict'

const index = require('./lib/entry-index')
const memo = require('./lib/memoization')
const write = require('./lib/content/write')
const Flush = require('minipass-flush')
const { PassThrough } = require('minipass-collect')
const Pipeline = require('minipass-pipeline')

const putOpts = (opts) => ({
  algorithms: ['sha512'],
  ...opts,
})

module.exports = putData

function putData (cache, key, data, opts = {}) {
  const { memoize } = opts
  opts = putOpts(opts)
  return write(cache, data, opts).then((res) => {
    return index
      .insert(cache, key, res.integrity, { ...opts, size: res.size })
      .then((entry) => {
        if (memoize)
          memo.put(cache, entry, data, opts)

        return res.integrity
      })
  })
}

module.exports.stream = putStream

function putStream (cache, key, opts = {}) {
  const { memoize } = opts
  opts = putOpts(opts)
  let integrity
  let size

  let memoData
  const pipeline = new Pipeline()
  // first item in the pipeline is the memoizer, because we need
  // that to end first and get the collected data.
  if (memoize) {
    const memoizer = new PassThrough().on('collect', data => {
      memoData = data
    })
    pipeline.push(memoizer)
  }

  // contentStream is a write-only, not a passthrough
  // no data comes out of it.
  const contentStream = write.stream(cache, opts)
    .on('integrity', (int) => {
      integrity = int
    })
    .on('size', (s) => {
      size = s
    })

  pipeline.push(contentStream)

  // last but not least, we write the index and emit hash and size,
  // and memoize if we're doing that
  pipeline.push(new Flush({
    flush () {
      return index
        .insert(cache, key, integrity, { ...opts, size })
        .then((entry) => {
          if (memoize && memoData)
            memo.put(cache, entry, memoData, opts)

          if (integrity)
            pipeline.emit('integrity', integrity)

          if (size)
            pipeline.emit('size', size)
        })
    },
  }))

  return pipeline
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\rm.js 
------------------------------------------------------ 
'use strict'

const util = require('util')

const index = require('./lib/entry-index')
const memo = require('./lib/memoization')
const path = require('path')
const rimraf = util.promisify(require('rimraf'))
const rmContent = require('./lib/content/rm')

module.exports = entry
module.exports.entry = entry

function entry (cache, key, opts) {
  memo.clearMemoized()
  return index.delete(cache, key, opts)
}

module.exports.content = content

function content (cache, integrity) {
  memo.clearMemoized()
  return rmContent(cache, integrity)
}

module.exports.all = all

function all (cache) {
  memo.clearMemoized()
  return rimraf(path.join(cache, '*(content-*|index-*)'))
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\verify.js 
------------------------------------------------------ 
'use strict'

module.exports = require('./lib/verify')
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\package.json 
------------------------------------------------------ 
{
  "name": "cacache",
  "version": "15.3.0",
  "cache-version": {
    "content": "2",
    "index": "5"
  },
  "description": "Fast, fault-tolerant, cross-platform, disk-based, data-agnostic, content-addressable cache.",
  "main": "index.js",
  "files": [
    "*.js",
    "lib"
  ],
  "scripts": {
    "benchmarks": "node test/benchmarks",
    "preversion": "npm test",
    "postversion": "npm publish",
    "prepublishOnly": "git push origin --follow-tags",
    "test": "tap",
    "snap": "tap",
    "coverage": "tap",
    "test-docker": "docker run -it --rm --name pacotest -v \"$PWD\":/tmp -w /tmp node:latest npm test",
    "lint": "npm run npmclilint -- \"*.*js\" \"lib/**/*.*js\" \"test/**/*.*js\"",
    "npmclilint": "npmcli-lint",
    "lintfix": "npm run lint -- --fix",
    "postsnap": "npm run lintfix --"
  },
  "repository": "https://github.com/npm/cacache",
  "keywords": [
    "cache",
    "caching",
    "content-addressable",
    "sri",
    "sri hash",
    "subresource integrity",
    "cache",
    "storage",
    "store",
    "file store",
    "filesystem",
    "disk cache",
    "disk storage"
  ],
  "license": "ISC",
  "dependencies": {
    "@npmcli/fs": "^1.0.0",
    "@npmcli/move-file": "^1.0.1",
    "chownr": "^2.0.0",
    "fs-minipass": "^2.0.0",
    "glob": "^7.1.4",
    "infer-owner": "^1.0.4",
    "lru-cache": "^6.0.0",
    "minipass": "^3.1.1",
    "minipass-collect": "^1.0.2",
    "minipass-flush": "^1.0.5",
    "minipass-pipeline": "^1.2.2",
    "mkdirp": "^1.0.3",
    "p-map": "^4.0.0",
    "promise-inflight": "^1.0.1",
    "rimraf": "^3.0.2",
    "ssri": "^8.0.1",
    "tar": "^6.0.2",
    "unique-filename": "^1.1.1"
  },
  "devDependencies": {
    "@npmcli/lint": "^1.0.1",
    "benchmark": "^2.1.4",
    "chalk": "^4.0.0",
    "require-inject": "^1.4.4",
    "tacks": "^1.3.0",
    "tap": "^15.0.9"
  },
  "tap": {
    "100": true,
    "test-regex": "test/[^/]*.js"
  },
  "engines": {
    "node": ">= 10"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\entry-index.js 
------------------------------------------------------ 
'use strict'

const util = require('util')
const crypto = require('crypto')
const fs = require('fs')
const Minipass = require('minipass')
const path = require('path')
const ssri = require('ssri')
const uniqueFilename = require('unique-filename')

const { disposer } = require('./util/disposer')
const contentPath = require('./content/path')
const fixOwner = require('./util/fix-owner')
const hashToSegments = require('./util/hash-to-segments')
const indexV = require('../package.json')['cache-version'].index
const moveFile = require('@npmcli/move-file')
const _rimraf = require('rimraf')
const rimraf = util.promisify(_rimraf)
rimraf.sync = _rimraf.sync

const appendFile = util.promisify(fs.appendFile)
const readFile = util.promisify(fs.readFile)
const readdir = util.promisify(fs.readdir)
const writeFile = util.promisify(fs.writeFile)

module.exports.NotFoundError = class NotFoundError extends Error {
  constructor (cache, key) {
    super(`No cache entry for ${key} found in ${cache}`)
    this.code = 'ENOENT'
    this.cache = cache
    this.key = key
  }
}

module.exports.compact = compact

async function compact (cache, key, matchFn, opts = {}) {
  const bucket = bucketPath(cache, key)
  const entries = await bucketEntries(bucket)
  const newEntries = []
  // we loop backwards because the bottom-most result is the newest
  // since we add new entries with appendFile
  for (let i = entries.length - 1; i >= 0; --i) {
    const entry = entries[i]
    // a null integrity could mean either a delete was appended
    // or the user has simply stored an index that does not map
    // to any content. we determine if the user wants to keep the
    // null integrity based on the validateEntry function passed in options.
    // if the integrity is null and no validateEntry is provided, we break
    // as we consider the null integrity to be a deletion of everything
    // that came before it.
    if (entry.integrity === null && !opts.validateEntry)
      break

    // if this entry is valid, and it is either the first entry or
    // the newEntries array doesn't already include an entry that
    // matches this one based on the provided matchFn, then we add
    // it to the beginning of our list
    if ((!opts.validateEntry || opts.validateEntry(entry) === true) &&
      (newEntries.length === 0 ||
        !newEntries.find((oldEntry) => matchFn(oldEntry, entry))))
      newEntries.unshift(entry)
  }

  const newIndex = '\n' + newEntries.map((entry) => {
    const stringified = JSON.stringify(entry)
    const hash = hashEntry(stringified)
    return `${hash}\t${stringified}`
  }).join('\n')

  const setup = async () => {
    const target = uniqueFilename(path.join(cache, 'tmp'), opts.tmpPrefix)
    await fixOwner.mkdirfix(cache, path.dirname(target))
    return {
      target,
      moved: false,
    }
  }

  const teardown = async (tmp) => {
    if (!tmp.moved)
      return rimraf(tmp.target)
  }

  const write = async (tmp) => {
    await writeFile(tmp.target, newIndex, { flag: 'wx' })
    await fixOwner.mkdirfix(cache, path.dirname(bucket))
    // we use @npmcli/move-file directly here because we
    // want to overwrite the existing file
    await moveFile(tmp.target, bucket)
    tmp.moved = true
    try {
      await fixOwner.chownr(cache, bucket)
    } catch (err) {
      if (err.code !== 'ENOENT')
        throw err
    }
  }

  // write the file atomically
  await disposer(setup(), teardown, write)

  // we reverse the list we generated such that the newest
  // entries come first in order to make looping through them easier
  // the true passed to formatEntry tells it to keep null
  // integrity values, if they made it this far it's because
  // validateEntry returned true, and as such we should return it
  return newEntries.reverse().map((entry) => formatEntry(cache, entry, true))
}

module.exports.insert = insert

function insert (cache, key, integrity, opts = {}) {
  const { metadata, size } = opts
  const bucket = bucketPath(cache, key)
  const entry = {
    key,
    integrity: integrity && ssri.stringify(integrity),
    time: Date.now(),
    size,
    metadata,
  }
  return fixOwner
    .mkdirfix(cache, path.dirname(bucket))
    .then(() => {
      const stringified = JSON.stringify(entry)
      // NOTE - Cleverness ahoy!
      //
      // This works because it's tremendously unlikely for an entry to corrupt
      // another while still preserving the string length of the JSON in
      // question. So, we just slap the length in there and verify it on read.
      //
      // Thanks to @isaacs for the whiteboarding session that ended up with
      // this.
      return appendFile(bucket, `\n${hashEntry(stringified)}\t${stringified}`)
    })
    .then(() => fixOwner.chownr(cache, bucket))
    .catch((err) => {
      if (err.code === 'ENOENT')
        return undefined

      throw err
      // There's a class of race conditions that happen when things get deleted
      // during fixOwner, or between the two mkdirfix/chownr calls.
      //
      // It's perfectly fine to just not bother in those cases and lie
      // that the index entry was written. Because it's a cache.
    })
    .then(() => {
      return formatEntry(cache, entry)
    })
}

module.exports.insert.sync = insertSync

function insertSync (cache, key, integrity, opts = {}) {
  const { metadata, size } = opts
  const bucket = bucketPath(cache, key)
  const entry = {
    key,
    integrity: integrity && ssri.stringify(integrity),
    time: Date.now(),
    size,
    metadata,
  }
  fixOwner.mkdirfix.sync(cache, path.dirname(bucket))
  const stringified = JSON.stringify(entry)
  fs.appendFileSync(bucket, `\n${hashEntry(stringified)}\t${stringified}`)
  try {
    fixOwner.chownr.sync(cache, bucket)
  } catch (err) {
    if (err.code !== 'ENOENT')
      throw err
  }
  return formatEntry(cache, entry)
}

module.exports.find = find

function find (cache, key) {
  const bucket = bucketPath(cache, key)
  return bucketEntries(bucket)
    .then((entries) => {
      return entries.reduce((latest, next) => {
        if (next && next.key === key)
          return formatEntry(cache, next)
        else
          return latest
      }, null)
    })
    .catch((err) => {
      if (err.code === 'ENOENT')
        return null
      else
        throw err
    })
}

module.exports.find.sync = findSync

function findSync (cache, key) {
  const bucket = bucketPath(cache, key)
  try {
    return bucketEntriesSync(bucket).reduce((latest, next) => {
      if (next && next.key === key)
        return formatEntry(cache, next)
      else
        return latest
    }, null)
  } catch (err) {
    if (err.code === 'ENOENT')
      return null
    else
      throw err
  }
}

module.exports.delete = del

function del (cache, key, opts = {}) {
  if (!opts.removeFully)
    return insert(cache, key, null, opts)

  const bucket = bucketPath(cache, key)
  return rimraf(bucket)
}

module.exports.delete.sync = delSync

function delSync (cache, key, opts = {}) {
  if (!opts.removeFully)
    return insertSync(cache, key, null, opts)

  const bucket = bucketPath(cache, key)
  return rimraf.sync(bucket)
}

module.exports.lsStream = lsStream

function lsStream (cache) {
  const indexDir = bucketDir(cache)
  const stream = new Minipass({ objectMode: true })

  readdirOrEmpty(indexDir).then(buckets => Promise.all(
    buckets.map(bucket => {
      const bucketPath = path.join(indexDir, bucket)
      return readdirOrEmpty(bucketPath).then(subbuckets => Promise.all(
        subbuckets.map(subbucket => {
          const subbucketPath = path.join(bucketPath, subbucket)

          // "/cachename/<bucket 0xFF>/<bucket 0xFF>./*"
          return readdirOrEmpty(subbucketPath).then(entries => Promise.all(
            entries.map(entry => {
              const entryPath = path.join(subbucketPath, entry)
              return bucketEntries(entryPath).then(entries =>
                // using a Map here prevents duplicate keys from
                // showing up twice, I guess?
                entries.reduce((acc, entry) => {
                  acc.set(entry.key, entry)
                  return acc
                }, new Map())
              ).then(reduced => {
                // reduced is a map of key => entry
                for (const entry of reduced.values()) {
                  const formatted = formatEntry(cache, entry)
                  if (formatted)
                    stream.write(formatted)
                }
              }).catch(err => {
                if (err.code === 'ENOENT')
                  return undefined
                throw err
              })
            })
          ))
        })
      ))
    })
  ))
    .then(
      () => stream.end(),
      err => stream.emit('error', err)
    )

  return stream
}

module.exports.ls = ls

function ls (cache) {
  return lsStream(cache).collect().then(entries =>
    entries.reduce((acc, xs) => {
      acc[xs.key] = xs
      return acc
    }, {})
  )
}

module.exports.bucketEntries = bucketEntries

function bucketEntries (bucket, filter) {
  return readFile(bucket, 'utf8').then((data) => _bucketEntries(data, filter))
}

module.exports.bucketEntries.sync = bucketEntriesSync

function bucketEntriesSync (bucket, filter) {
  const data = fs.readFileSync(bucket, 'utf8')
  return _bucketEntries(data, filter)
}

function _bucketEntries (data, filter) {
  const entries = []
  data.split('\n').forEach((entry) => {
    if (!entry)
      return

    const pieces = entry.split('\t')
    if (!pieces[1] || hashEntry(pieces[1]) !== pieces[0]) {
      // Hash is no good! Corruption or malice? Doesn't matter!
      // EJECT EJECT
      return
    }
    let obj
    try {
      obj = JSON.parse(pieces[1])
    } catch (e) {
      // Entry is corrupted!
      return
    }
    if (obj)
      entries.push(obj)
  })
  return entries
}

module.exports.bucketDir = bucketDir

function bucketDir (cache) {
  return path.join(cache, `index-v${indexV}`)
}

module.exports.bucketPath = bucketPath

function bucketPath (cache, key) {
  const hashed = hashKey(key)
  return path.join.apply(
    path,
    [bucketDir(cache)].concat(hashToSegments(hashed))
  )
}

module.exports.hashKey = hashKey

function hashKey (key) {
  return hash(key, 'sha256')
}

module.exports.hashEntry = hashEntry

function hashEntry (str) {
  return hash(str, 'sha1')
}

function hash (str, digest) {
  return crypto
    .createHash(digest)
    .update(str)
    .digest('hex')
}

function formatEntry (cache, entry, keepAll) {
  // Treat null digests as deletions. They'll shadow any previous entries.
  if (!entry.integrity && !keepAll)
    return null

  return {
    key: entry.key,
    integrity: entry.integrity,
    path: entry.integrity ? contentPath(cache, entry.integrity) : undefined,
    size: entry.size,
    time: entry.time,
    metadata: entry.metadata,
  }
}

function readdirOrEmpty (dir) {
  return readdir(dir).catch((err) => {
    if (err.code === 'ENOENT' || err.code === 'ENOTDIR')
      return []

    throw err
  })
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\memoization.js 
------------------------------------------------------ 
'use strict'

const LRU = require('lru-cache')

const MAX_SIZE = 50 * 1024 * 1024 // 50MB
const MAX_AGE = 3 * 60 * 1000

const MEMOIZED = new LRU({
  max: MAX_SIZE,
  maxAge: MAX_AGE,
  length: (entry, key) => key.startsWith('key:') ? entry.data.length : entry.length,
})

module.exports.clearMemoized = clearMemoized

function clearMemoized () {
  const old = {}
  MEMOIZED.forEach((v, k) => {
    old[k] = v
  })
  MEMOIZED.reset()
  return old
}

module.exports.put = put

function put (cache, entry, data, opts) {
  pickMem(opts).set(`key:${cache}:${entry.key}`, { entry, data })
  putDigest(cache, entry.integrity, data, opts)
}

module.exports.put.byDigest = putDigest

function putDigest (cache, integrity, data, opts) {
  pickMem(opts).set(`digest:${cache}:${integrity}`, data)
}

module.exports.get = get

function get (cache, key, opts) {
  return pickMem(opts).get(`key:${cache}:${key}`)
}

module.exports.get.byDigest = getDigest

function getDigest (cache, integrity, opts) {
  return pickMem(opts).get(`digest:${cache}:${integrity}`)
}

class ObjProxy {
  constructor (obj) {
    this.obj = obj
  }

  get (key) {
    return this.obj[key]
  }

  set (key, val) {
    this.obj[key] = val
  }
}

function pickMem (opts) {
  if (!opts || !opts.memoize)
    return MEMOIZED
  else if (opts.memoize.get && opts.memoize.set)
    return opts.memoize
  else if (typeof opts.memoize === 'object')
    return new ObjProxy(opts.memoize)
  else
    return MEMOIZED
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\verify.js 
------------------------------------------------------ 
'use strict'

const util = require('util')

const pMap = require('p-map')
const contentPath = require('./content/path')
const fixOwner = require('./util/fix-owner')
const fs = require('fs')
const fsm = require('fs-minipass')
const glob = util.promisify(require('glob'))
const index = require('./entry-index')
const path = require('path')
const rimraf = util.promisify(require('rimraf'))
const ssri = require('ssri')

const hasOwnProperty = (obj, key) =>
  Object.prototype.hasOwnProperty.call(obj, key)

const stat = util.promisify(fs.stat)
const truncate = util.promisify(fs.truncate)
const writeFile = util.promisify(fs.writeFile)
const readFile = util.promisify(fs.readFile)

const verifyOpts = (opts) => ({
  concurrency: 20,
  log: { silly () {} },
  ...opts,
})

module.exports = verify

function verify (cache, opts) {
  opts = verifyOpts(opts)
  opts.log.silly('verify', 'verifying cache at', cache)

  const steps = [
    markStartTime,
    fixPerms,
    garbageCollect,
    rebuildIndex,
    cleanTmp,
    writeVerifile,
    markEndTime,
  ]

  return steps
    .reduce((promise, step, i) => {
      const label = step.name
      const start = new Date()
      return promise.then((stats) => {
        return step(cache, opts).then((s) => {
          s &&
            Object.keys(s).forEach((k) => {
              stats[k] = s[k]
            })
          const end = new Date()
          if (!stats.runTime)
            stats.runTime = {}

          stats.runTime[label] = end - start
          return Promise.resolve(stats)
        })
      })
    }, Promise.resolve({}))
    .then((stats) => {
      stats.runTime.total = stats.endTime - stats.startTime
      opts.log.silly(
        'verify',
        'verification finished for',
        cache,
        'in',
        `${stats.runTime.total}ms`
      )
      return stats
    })
}

function markStartTime (cache, opts) {
  return Promise.resolve({ startTime: new Date() })
}

function markEndTime (cache, opts) {
  return Promise.resolve({ endTime: new Date() })
}

function fixPerms (cache, opts) {
  opts.log.silly('verify', 'fixing cache permissions')
  return fixOwner
    .mkdirfix(cache, cache)
    .then(() => {
      // TODO - fix file permissions too
      return fixOwner.chownr(cache, cache)
    })
    .then(() => null)
}

// Implements a naive mark-and-sweep tracing garbage collector.
//
// The algorithm is basically as follows:
// 1. Read (and filter) all index entries ("pointers")
// 2. Mark each integrity value as "live"
// 3. Read entire filesystem tree in `content-vX/` dir
// 4. If content is live, verify its checksum and delete it if it fails
// 5. If content is not marked as live, rimraf it.
//
function garbageCollect (cache, opts) {
  opts.log.silly('verify', 'garbage collecting content')
  const indexStream = index.lsStream(cache)
  const liveContent = new Set()
  indexStream.on('data', (entry) => {
    if (opts.filter && !opts.filter(entry))
      return

    liveContent.add(entry.integrity.toString())
  })
  return new Promise((resolve, reject) => {
    indexStream.on('end', resolve).on('error', reject)
  }).then(() => {
    const contentDir = contentPath.contentDir(cache)
    return glob(path.join(contentDir, '**'), {
      follow: false,
      nodir: true,
      nosort: true,
    }).then((files) => {
      return Promise.resolve({
        verifiedContent: 0,
        reclaimedCount: 0,
        reclaimedSize: 0,
        badContentCount: 0,
        keptSize: 0,
      }).then((stats) =>
        pMap(
          files,
          (f) => {
            const split = f.split(/[/\\]/)
            const digest = split.slice(split.length - 3).join('')
            const algo = split[split.length - 4]
            const integrity = ssri.fromHex(digest, algo)
            if (liveContent.has(integrity.toString())) {
              return verifyContent(f, integrity).then((info) => {
                if (!info.valid) {
                  stats.reclaimedCount++
                  stats.badContentCount++
                  stats.reclaimedSize += info.size
                } else {
                  stats.verifiedContent++
                  stats.keptSize += info.size
                }
                return stats
              })
            } else {
              // No entries refer to this content. We can delete.
              stats.reclaimedCount++
              return stat(f).then((s) => {
                return rimraf(f).then(() => {
                  stats.reclaimedSize += s.size
                  return stats
                })
              })
            }
          },
          { concurrency: opts.concurrency }
        ).then(() => stats)
      )
    })
  })
}

function verifyContent (filepath, sri) {
  return stat(filepath)
    .then((s) => {
      const contentInfo = {
        size: s.size,
        valid: true,
      }
      return ssri
        .checkStream(new fsm.ReadStream(filepath), sri)
        .catch((err) => {
          if (err.code !== 'EINTEGRITY')
            throw err

          return rimraf(filepath).then(() => {
            contentInfo.valid = false
          })
        })
        .then(() => contentInfo)
    })
    .catch((err) => {
      if (err.code === 'ENOENT')
        return { size: 0, valid: false }

      throw err
    })
}

function rebuildIndex (cache, opts) {
  opts.log.silly('verify', 'rebuilding index')
  return index.ls(cache).then((entries) => {
    const stats = {
      missingContent: 0,
      rejectedEntries: 0,
      totalEntries: 0,
    }
    const buckets = {}
    for (const k in entries) {
      /* istanbul ignore else */
      if (hasOwnProperty(entries, k)) {
        const hashed = index.hashKey(k)
        const entry = entries[k]
        const excluded = opts.filter && !opts.filter(entry)
        excluded && stats.rejectedEntries++
        if (buckets[hashed] && !excluded)
          buckets[hashed].push(entry)
        else if (buckets[hashed] && excluded) {
          // skip
        } else if (excluded) {
          buckets[hashed] = []
          buckets[hashed]._path = index.bucketPath(cache, k)
        } else {
          buckets[hashed] = [entry]
          buckets[hashed]._path = index.bucketPath(cache, k)
        }
      }
    }
    return pMap(
      Object.keys(buckets),
      (key) => {
        return rebuildBucket(cache, buckets[key], stats, opts)
      },
      { concurrency: opts.concurrency }
    ).then(() => stats)
  })
}

function rebuildBucket (cache, bucket, stats, opts) {
  return truncate(bucket._path).then(() => {
    // This needs to be serialized because cacache explicitly
    // lets very racy bucket conflicts clobber each other.
    return bucket.reduce((promise, entry) => {
      return promise.then(() => {
        const content = contentPath(cache, entry.integrity)
        return stat(content)
          .then(() => {
            return index
              .insert(cache, entry.key, entry.integrity, {
                metadata: entry.metadata,
                size: entry.size,
              })
              .then(() => {
                stats.totalEntries++
              })
          })
          .catch((err) => {
            if (err.code === 'ENOENT') {
              stats.rejectedEntries++
              stats.missingContent++
              return
            }
            throw err
          })
      })
    }, Promise.resolve())
  })
}

function cleanTmp (cache, opts) {
  opts.log.silly('verify', 'cleaning tmp directory')
  return rimraf(path.join(cache, 'tmp'))
}

function writeVerifile (cache, opts) {
  const verifile = path.join(cache, '_lastverified')
  opts.log.silly('verify', 'writing verifile to ' + verifile)
  try {
    return writeFile(verifile, '' + +new Date())
  } finally {
    fixOwner.chownr.sync(cache, verifile)
  }
}

module.exports.lastRun = lastRun

function lastRun (cache) {
  return readFile(path.join(cache, '_lastverified'), 'utf8').then(
    (data) => new Date(+data)
  )
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\content\path.js 
------------------------------------------------------ 
'use strict'

const contentVer = require('../../package.json')['cache-version'].content
const hashToSegments = require('../util/hash-to-segments')
const path = require('path')
const ssri = require('ssri')

// Current format of content file path:
//
// sha512-BaSE64Hex= ->
// ~/.my-cache/content-v2/sha512/ba/da/55deadbeefc0ffee
//
module.exports = contentPath

function contentPath (cache, integrity) {
  const sri = ssri.parse(integrity, { single: true })
  // contentPath is the *strongest* algo given
  return path.join(
    contentDir(cache),
    sri.algorithm,
    ...hashToSegments(sri.hexDigest())
  )
}

module.exports.contentDir = contentDir

function contentDir (cache) {
  return path.join(cache, `content-v${contentVer}`)
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\content\read.js 
------------------------------------------------------ 
'use strict'

const util = require('util')

const fs = require('fs')
const fsm = require('fs-minipass')
const ssri = require('ssri')
const contentPath = require('./path')
const Pipeline = require('minipass-pipeline')

const lstat = util.promisify(fs.lstat)
const readFile = util.promisify(fs.readFile)

module.exports = read

const MAX_SINGLE_READ_SIZE = 64 * 1024 * 1024
function read (cache, integrity, opts = {}) {
  const { size } = opts
  return withContentSri(cache, integrity, (cpath, sri) => {
    // get size
    return lstat(cpath).then(stat => ({ stat, cpath, sri }))
  }).then(({ stat, cpath, sri }) => {
    if (typeof size === 'number' && stat.size !== size)
      throw sizeError(size, stat.size)

    if (stat.size > MAX_SINGLE_READ_SIZE)
      return readPipeline(cpath, stat.size, sri, new Pipeline()).concat()

    return readFile(cpath, null).then((data) => {
      if (!ssri.checkData(data, sri))
        throw integrityError(sri, cpath)

      return data
    })
  })
}

const readPipeline = (cpath, size, sri, stream) => {
  stream.push(
    new fsm.ReadStream(cpath, {
      size,
      readSize: MAX_SINGLE_READ_SIZE,
    }),
    ssri.integrityStream({
      integrity: sri,
      size,
    })
  )
  return stream
}

module.exports.sync = readSync

function readSync (cache, integrity, opts = {}) {
  const { size } = opts
  return withContentSriSync(cache, integrity, (cpath, sri) => {
    const data = fs.readFileSync(cpath)
    if (typeof size === 'number' && size !== data.length)
      throw sizeError(size, data.length)

    if (ssri.checkData(data, sri))
      return data

    throw integrityError(sri, cpath)
  })
}

module.exports.stream = readStream
module.exports.readStream = readStream

function readStream (cache, integrity, opts = {}) {
  const { size } = opts
  const stream = new Pipeline()
  withContentSri(cache, integrity, (cpath, sri) => {
    // just lstat to ensure it exists
    return lstat(cpath).then((stat) => ({ stat, cpath, sri }))
  }).then(({ stat, cpath, sri }) => {
    if (typeof size === 'number' && size !== stat.size)
      return stream.emit('error', sizeError(size, stat.size))

    readPipeline(cpath, stat.size, sri, stream)
  }, er => stream.emit('error', er))

  return stream
}

let copyFile
if (fs.copyFile) {
  module.exports.copy = copy
  module.exports.copy.sync = copySync
  copyFile = util.promisify(fs.copyFile)
}

function copy (cache, integrity, dest) {
  return withContentSri(cache, integrity, (cpath, sri) => {
    return copyFile(cpath, dest)
  })
}

function copySync (cache, integrity, dest) {
  return withContentSriSync(cache, integrity, (cpath, sri) => {
    return fs.copyFileSync(cpath, dest)
  })
}

module.exports.hasContent = hasContent

function hasContent (cache, integrity) {
  if (!integrity)
    return Promise.resolve(false)

  return withContentSri(cache, integrity, (cpath, sri) => {
    return lstat(cpath).then((stat) => ({ size: stat.size, sri, stat }))
  }).catch((err) => {
    if (err.code === 'ENOENT')
      return false

    if (err.code === 'EPERM') {
      /* istanbul ignore else */
      if (process.platform !== 'win32')
        throw err
      else
        return false
    }
  })
}

module.exports.hasContent.sync = hasContentSync

function hasContentSync (cache, integrity) {
  if (!integrity)
    return false

  return withContentSriSync(cache, integrity, (cpath, sri) => {
    try {
      const stat = fs.lstatSync(cpath)
      return { size: stat.size, sri, stat }
    } catch (err) {
      if (err.code === 'ENOENT')
        return false

      if (err.code === 'EPERM') {
        /* istanbul ignore else */
        if (process.platform !== 'win32')
          throw err
        else
          return false
      }
    }
  })
}

function withContentSri (cache, integrity, fn) {
  const tryFn = () => {
    const sri = ssri.parse(integrity)
    // If `integrity` has multiple entries, pick the first digest
    // with available local data.
    const algo = sri.pickAlgorithm()
    const digests = sri[algo]

    if (digests.length <= 1) {
      const cpath = contentPath(cache, digests[0])
      return fn(cpath, digests[0])
    } else {
      // Can't use race here because a generic error can happen before
      // a ENOENT error, and can happen before a valid result
      return Promise
        .all(digests.map((meta) => {
          return withContentSri(cache, meta, fn)
            .catch((err) => {
              if (err.code === 'ENOENT') {
                return Object.assign(
                  new Error('No matching content found for ' + sri.toString()),
                  { code: 'ENOENT' }
                )
              }
              return err
            })
        }))
        .then((results) => {
          // Return the first non error if it is found
          const result = results.find((r) => !(r instanceof Error))
          if (result)
            return result

          // Throw the No matching content found error
          const enoentError = results.find((r) => r.code === 'ENOENT')
          if (enoentError)
            throw enoentError

          // Throw generic error
          throw results.find((r) => r instanceof Error)
        })
    }
  }

  return new Promise((resolve, reject) => {
    try {
      tryFn()
        .then(resolve)
        .catch(reject)
    } catch (err) {
      reject(err)
    }
  })
}

function withContentSriSync (cache, integrity, fn) {
  const sri = ssri.parse(integrity)
  // If `integrity` has multiple entries, pick the first digest
  // with available local data.
  const algo = sri.pickAlgorithm()
  const digests = sri[algo]
  if (digests.length <= 1) {
    const cpath = contentPath(cache, digests[0])
    return fn(cpath, digests[0])
  } else {
    let lastErr = null
    for (const meta of digests) {
      try {
        return withContentSriSync(cache, meta, fn)
      } catch (err) {
        lastErr = err
      }
    }
    throw lastErr
  }
}

function sizeError (expected, found) {
  const err = new Error(`Bad data size: expected inserted data to be ${expected} bytes, but got ${found} instead`)
  err.expected = expected
  err.found = found
  err.code = 'EBADSIZE'
  return err
}

function integrityError (sri, path) {
  const err = new Error(`Integrity verification failed for ${sri} (${path})`)
  err.code = 'EINTEGRITY'
  err.sri = sri
  err.path = path
  return err
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\content\rm.js 
------------------------------------------------------ 
'use strict'

const util = require('util')

const contentPath = require('./path')
const { hasContent } = require('./read')
const rimraf = util.promisify(require('rimraf'))

module.exports = rm

function rm (cache, integrity) {
  return hasContent(cache, integrity).then((content) => {
    // ~pretty~ sure we can't end up with a content lacking sri, but be safe
    if (content && content.sri)
      return rimraf(contentPath(cache, content.sri)).then(() => true)
    else
      return false
  })
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\content\write.js 
------------------------------------------------------ 
'use strict'

const util = require('util')

const contentPath = require('./path')
const fixOwner = require('../util/fix-owner')
const fs = require('fs')
const moveFile = require('../util/move-file')
const Minipass = require('minipass')
const Pipeline = require('minipass-pipeline')
const Flush = require('minipass-flush')
const path = require('path')
const rimraf = util.promisify(require('rimraf'))
const ssri = require('ssri')
const uniqueFilename = require('unique-filename')
const { disposer } = require('./../util/disposer')
const fsm = require('fs-minipass')

const writeFile = util.promisify(fs.writeFile)

module.exports = write

function write (cache, data, opts = {}) {
  const { algorithms, size, integrity } = opts
  if (algorithms && algorithms.length > 1)
    throw new Error('opts.algorithms only supports a single algorithm for now')

  if (typeof size === 'number' && data.length !== size)
    return Promise.reject(sizeError(size, data.length))

  const sri = ssri.fromData(data, algorithms ? { algorithms } : {})
  if (integrity && !ssri.checkData(data, integrity, opts))
    return Promise.reject(checksumError(integrity, sri))

  return disposer(makeTmp(cache, opts), makeTmpDisposer,
    (tmp) => {
      return writeFile(tmp.target, data, { flag: 'wx' })
        .then(() => moveToDestination(tmp, cache, sri, opts))
    })
    .then(() => ({ integrity: sri, size: data.length }))
}

module.exports.stream = writeStream

// writes proxied to the 'inputStream' that is passed to the Promise
// 'end' is deferred until content is handled.
class CacacheWriteStream extends Flush {
  constructor (cache, opts) {
    super()
    this.opts = opts
    this.cache = cache
    this.inputStream = new Minipass()
    this.inputStream.on('error', er => this.emit('error', er))
    this.inputStream.on('drain', () => this.emit('drain'))
    this.handleContentP = null
  }

  write (chunk, encoding, cb) {
    if (!this.handleContentP) {
      this.handleContentP = handleContent(
        this.inputStream,
        this.cache,
        this.opts
      )
    }
    return this.inputStream.write(chunk, encoding, cb)
  }

  flush (cb) {
    this.inputStream.end(() => {
      if (!this.handleContentP) {
        const e = new Error('Cache input stream was empty')
        e.code = 'ENODATA'
        // empty streams are probably emitting end right away.
        // defer this one tick by rejecting a promise on it.
        return Promise.reject(e).catch(cb)
      }
      this.handleContentP.then(
        (res) => {
          res.integrity && this.emit('integrity', res.integrity)
          res.size !== null && this.emit('size', res.size)
          cb()
        },
        (er) => cb(er)
      )
    })
  }
}

function writeStream (cache, opts = {}) {
  return new CacacheWriteStream(cache, opts)
}

function handleContent (inputStream, cache, opts) {
  return disposer(makeTmp(cache, opts), makeTmpDisposer, (tmp) => {
    return pipeToTmp(inputStream, cache, tmp.target, opts)
      .then((res) => {
        return moveToDestination(
          tmp,
          cache,
          res.integrity,
          opts
        ).then(() => res)
      })
  })
}

function pipeToTmp (inputStream, cache, tmpTarget, opts) {
  let integrity
  let size
  const hashStream = ssri.integrityStream({
    integrity: opts.integrity,
    algorithms: opts.algorithms,
    size: opts.size,
  })
  hashStream.on('integrity', i => {
    integrity = i
  })
  hashStream.on('size', s => {
    size = s
  })

  const outStream = new fsm.WriteStream(tmpTarget, {
    flags: 'wx',
  })

  // NB: this can throw if the hashStream has a problem with
  // it, and the data is fully written.  but pipeToTmp is only
  // called in promisory contexts where that is handled.
  const pipeline = new Pipeline(
    inputStream,
    hashStream,
    outStream
  )

  return pipeline.promise()
    .then(() => ({ integrity, size }))
    .catch(er => rimraf(tmpTarget).then(() => {
      throw er
    }))
}

function makeTmp (cache, opts) {
  const tmpTarget = uniqueFilename(path.join(cache, 'tmp'), opts.tmpPrefix)
  return fixOwner.mkdirfix(cache, path.dirname(tmpTarget)).then(() => ({
    target: tmpTarget,
    moved: false,
  }))
}

function makeTmpDisposer (tmp) {
  if (tmp.moved)
    return Promise.resolve()

  return rimraf(tmp.target)
}

function moveToDestination (tmp, cache, sri, opts) {
  const destination = contentPath(cache, sri)
  const destDir = path.dirname(destination)

  return fixOwner
    .mkdirfix(cache, destDir)
    .then(() => {
      return moveFile(tmp.target, destination)
    })
    .then(() => {
      tmp.moved = true
      return fixOwner.chownr(cache, destination)
    })
}

function sizeError (expected, found) {
  const err = new Error(`Bad data size: expected inserted data to be ${expected} bytes, but got ${found} instead`)
  err.expected = expected
  err.found = found
  err.code = 'EBADSIZE'
  return err
}

function checksumError (expected, found) {
  const err = new Error(`Integrity check failed:
  Wanted: ${expected}
   Found: ${found}`)
  err.code = 'EINTEGRITY'
  err.expected = expected
  err.found = found
  return err
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\content\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\util\disposer.js 
------------------------------------------------------ 
'use strict'

module.exports.disposer = disposer

function disposer (creatorFn, disposerFn, fn) {
  const runDisposer = (resource, result, shouldThrow = false) => {
    return disposerFn(resource)
      .then(
        // disposer resolved, do something with original fn's promise
        () => {
          if (shouldThrow)
            throw result

          return result
        },
        // Disposer fn failed, crash process
        (err) => {
          throw err
          // Or process.exit?
        })
  }

  return creatorFn
    .then((resource) => {
      // fn(resource) can throw, so wrap in a promise here
      return Promise.resolve().then(() => fn(resource))
        .then((result) => runDisposer(resource, result))
        .catch((err) => runDisposer(resource, err, true))
    })
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\util\fix-owner.js 
------------------------------------------------------ 
'use strict'

const util = require('util')

const chownr = util.promisify(require('chownr'))
const mkdirp = require('mkdirp')
const inflight = require('promise-inflight')
const inferOwner = require('infer-owner')

// Memoize getuid()/getgid() calls.
// patch process.setuid/setgid to invalidate cached value on change
const self = { uid: null, gid: null }
const getSelf = () => {
  if (typeof self.uid !== 'number') {
    self.uid = process.getuid()
    const setuid = process.setuid
    process.setuid = (uid) => {
      self.uid = null
      process.setuid = setuid
      return process.setuid(uid)
    }
  }
  if (typeof self.gid !== 'number') {
    self.gid = process.getgid()
    const setgid = process.setgid
    process.setgid = (gid) => {
      self.gid = null
      process.setgid = setgid
      return process.setgid(gid)
    }
  }
}

module.exports.chownr = fixOwner

function fixOwner (cache, filepath) {
  if (!process.getuid) {
    // This platform doesn't need ownership fixing
    return Promise.resolve()
  }

  getSelf()
  if (self.uid !== 0) {
    // almost certainly can't chown anyway
    return Promise.resolve()
  }

  return Promise.resolve(inferOwner(cache)).then((owner) => {
    const { uid, gid } = owner

    // No need to override if it's already what we used.
    if (self.uid === uid && self.gid === gid)
      return

    return inflight('fixOwner: fixing ownership on ' + filepath, () =>
      chownr(
        filepath,
        typeof uid === 'number' ? uid : self.uid,
        typeof gid === 'number' ? gid : self.gid
      ).catch((err) => {
        if (err.code === 'ENOENT')
          return null

        throw err
      })
    )
  })
}

module.exports.chownr.sync = fixOwnerSync

function fixOwnerSync (cache, filepath) {
  if (!process.getuid) {
    // This platform doesn't need ownership fixing
    return
  }
  const { uid, gid } = inferOwner.sync(cache)
  getSelf()
  if (self.uid !== 0) {
    // almost certainly can't chown anyway
    return
  }

  if (self.uid === uid && self.gid === gid) {
    // No need to override if it's already what we used.
    return
  }
  try {
    chownr.sync(
      filepath,
      typeof uid === 'number' ? uid : self.uid,
      typeof gid === 'number' ? gid : self.gid
    )
  } catch (err) {
    // only catch ENOENT, any other error is a problem.
    if (err.code === 'ENOENT')
      return null

    throw err
  }
}

module.exports.mkdirfix = mkdirfix

function mkdirfix (cache, p, cb) {
  // we have to infer the owner _before_ making the directory, even though
  // we aren't going to use the results, since the cache itself might not
  // exist yet.  If we mkdirp it, then our current uid/gid will be assumed
  // to be correct if it creates the cache folder in the process.
  return Promise.resolve(inferOwner(cache)).then(() => {
    return mkdirp(p)
      .then((made) => {
        if (made)
          return fixOwner(cache, made).then(() => made)
      })
      .catch((err) => {
        if (err.code === 'EEXIST')
          return fixOwner(cache, p).then(() => null)

        throw err
      })
  })
}

module.exports.mkdirfix.sync = mkdirfixSync

function mkdirfixSync (cache, p) {
  try {
    inferOwner.sync(cache)
    const made = mkdirp.sync(p)
    if (made) {
      fixOwnerSync(cache, made)
      return made
    }
  } catch (err) {
    if (err.code === 'EEXIST') {
      fixOwnerSync(cache, p)
      return null
    } else
      throw err
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\util\hash-to-segments.js 
------------------------------------------------------ 
'use strict'

module.exports = hashToSegments

function hashToSegments (hash) {
  return [hash.slice(0, 2), hash.slice(2, 4), hash.slice(4)]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\util\move-file.js 
------------------------------------------------------ 
'use strict'

const fs = require('fs')
const util = require('util')
const chmod = util.promisify(fs.chmod)
const unlink = util.promisify(fs.unlink)
const stat = util.promisify(fs.stat)
const move = require('@npmcli/move-file')
const pinflight = require('promise-inflight')

module.exports = moveFile

function moveFile (src, dest) {
  const isWindows = global.__CACACHE_TEST_FAKE_WINDOWS__ ||
    process.platform === 'win32'

  // This isn't quite an fs.rename -- the assumption is that
  // if `dest` already exists, and we get certain errors while
  // trying to move it, we should just not bother.
  //
  // In the case of cache corruption, users will receive an
  // EINTEGRITY error elsewhere, and can remove the offending
  // content their own way.
  //
  // Note that, as the name suggests, this strictly only supports file moves.
  return new Promise((resolve, reject) => {
    fs.link(src, dest, (err) => {
      if (err) {
        if (isWindows && err.code === 'EPERM') {
          // XXX This is a really weird way to handle this situation, as it
          // results in the src file being deleted even though the dest
          // might not exist.  Since we pretty much always write files to
          // deterministic locations based on content hash, this is likely
          // ok (or at worst, just ends in a future cache miss).  But it would
          // be worth investigating at some time in the future if this is
          // really what we want to do here.
          return resolve()
        } else if (err.code === 'EEXIST' || err.code === 'EBUSY') {
          // file already exists, so whatever
          return resolve()
        } else
          return reject(err)
      } else
        return resolve()
    })
  })
    .then(() => {
      // content should never change for any reason, so make it read-only
      return Promise.all([
        unlink(src),
        !isWindows && chmod(dest, '0444'),
      ])
    })
    .catch(() => {
      return pinflight('cacache-move-file:' + dest, () => {
        return stat(dest).catch((err) => {
          if (err.code !== 'ENOENT') {
            // Something else is wrong here. Bail bail bail
            throw err
          }
          // file doesn't already exist! let's try a rename -> copy fallback
          // only delete if it successfully copies
          return move(src, dest)
        })
      })
    })
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\util\tmp.js 
------------------------------------------------------ 
'use strict'

const fs = require('@npmcli/fs')

const fixOwner = require('./fix-owner')
const path = require('path')

module.exports.mkdir = mktmpdir

function mktmpdir (cache, opts = {}) {
  const { tmpPrefix } = opts
  const tmpDir = path.join(cache, 'tmp')
  return fs.mkdir(tmpDir, { recursive: true, owner: 'inherit' })
    .then(() => {
      // do not use path.join(), it drops the trailing / if tmpPrefix is unset
      const target = `${tmpDir}${path.sep}${tmpPrefix || ''}`
      return fs.mkdtemp(target, { owner: 'inherit' })
    })
}

module.exports.withTmp = withTmp

function withTmp (cache, opts, cb) {
  if (!cb) {
    cb = opts
    opts = {}
  }
  return fs.withTempDir(path.join(cache, 'tmp'), cb, opts)
}

module.exports.fix = fixtmpdir

function fixtmpdir (cache) {
  return fixOwner(cache, path.join(cache, 'tmp'))
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cacache\lib\util\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bind-apply-helpers\actualApply.js 
------------------------------------------------------ 
'use strict';

var bind = require('function-bind');

var $apply = require('./functionApply');
var $call = require('./functionCall');
var $reflectApply = require('./reflectApply');

/** @type {import('./actualApply')} */
module.exports = $reflectApply || bind.call($call, $apply);
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bind-apply-helpers\applyBind.js 
------------------------------------------------------ 
'use strict';

var bind = require('function-bind');
var $apply = require('./functionApply');
var actualApply = require('./actualApply');

/** @type {import('./applyBind')} */
module.exports = function applyBind() {
	return actualApply(bind, $apply, arguments);
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bind-apply-helpers\functionApply.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./functionApply')} */
module.exports = Function.prototype.apply;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bind-apply-helpers\functionCall.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./functionCall')} */
module.exports = Function.prototype.call;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bind-apply-helpers\index.js 
------------------------------------------------------ 
'use strict';

var bind = require('function-bind');
var $TypeError = require('es-errors/type');

var $call = require('./functionCall');
var $actualApply = require('./actualApply');

/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */
module.exports = function callBindBasic(args) {
	if (args.length < 1 || typeof args[0] !== 'function') {
		throw new $TypeError('a function is required');
	}
	return $actualApply(bind, $call, args);
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bind-apply-helpers\reflectApply.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./reflectApply')} */
module.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bind-apply-helpers\package.json 
------------------------------------------------------ 
{
	"name": "call-bind-apply-helpers",
	"version": "1.0.2",
	"description": "Helper functions around Function call/apply/bind, for use in `call-bind`",
	"main": "index.js",
	"exports": {
		".": "./index.js",
		"./actualApply": "./actualApply.js",
		"./applyBind": "./applyBind.js",
		"./functionApply": "./functionApply.js",
		"./functionCall": "./functionCall.js",
		"./reflectApply": "./reflectApply.js",
		"./package.json": "./package.json"
	},
	"scripts": {
		"prepack": "npmignore --auto --commentLines=auto",
		"prepublish": "not-in-publish || npm run prepublishOnly",
		"prepublishOnly": "safe-publish-latest",
		"prelint": "evalmd README.md",
		"lint": "eslint --ext=.js,.mjs .",
		"postlint": "tsc -p . && attw -P",
		"pretest": "npm run lint",
		"tests-only": "nyc tape 'test/**/*.js'",
		"test": "npm run tests-only",
		"posttest": "npx npm@'>=10.2' audit --production",
		"version": "auto-changelog && git add CHANGELOG.md",
		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ljharb/call-bind-apply-helpers.git"
	},
	"author": "Jordan Harband <ljharb@gmail.com>",
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/ljharb/call-bind-apply-helpers/issues"
	},
	"homepage": "https://github.com/ljharb/call-bind-apply-helpers#readme",
	"dependencies": {
		"es-errors": "^1.3.0",
		"function-bind": "^1.1.2"
	},
	"devDependencies": {
		"@arethetypeswrong/cli": "^0.17.3",
		"@ljharb/eslint-config": "^21.1.1",
		"@ljharb/tsconfig": "^0.2.3",
		"@types/for-each": "^0.3.3",
		"@types/function-bind": "^1.1.10",
		"@types/object-inspect": "^1.13.0",
		"@types/tape": "^5.8.1",
		"auto-changelog": "^2.5.0",
		"encoding": "^0.1.13",
		"es-value-fixtures": "^1.7.1",
		"eslint": "=8.8.0",
		"evalmd": "^0.0.19",
		"for-each": "^0.3.5",
		"has-strict-mode": "^1.1.0",
		"in-publish": "^2.0.1",
		"npmignore": "^0.3.1",
		"nyc": "^10.3.2",
		"object-inspect": "^1.13.4",
		"safe-publish-latest": "^2.0.0",
		"tape": "^5.9.0",
		"typescript": "next"
	},
	"testling": {
		"files": "test/index.js"
	},
	"auto-changelog": {
		"output": "CHANGELOG.md",
		"template": "keepachangelog",
		"unreleased": false,
		"commitLimit": false,
		"backfillLimit": false,
		"hideCredit": true
	},
	"publishConfig": {
		"ignore": [
			".github/workflows"
		]
	},
	"engines": {
		"node": ">= 0.4"
	}
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bind-apply-helpers\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bind-apply-helpers\test\index.js 
------------------------------------------------------ 
'use strict';

var callBind = require('../');
var hasStrictMode = require('has-strict-mode')();
var forEach = require('for-each');
var inspect = require('object-inspect');
var v = require('es-value-fixtures');

var test = require('tape');

test('callBindBasic', function (t) {
	forEach(v.nonFunctions, function (nonFunction) {
		t['throws'](
			// @ts-expect-error
			function () { callBind([nonFunction]); },
			TypeError,
			inspect(nonFunction) + ' is not a function'
		);
	});

	var sentinel = { sentinel: true };
	/** @type {<T, A extends number, B extends number>(this: T, a: A, b: B) => [T | undefined, A, B]} */
	var func = function (a, b) {
		// eslint-disable-next-line no-invalid-this
		return [!hasStrictMode && this === global ? undefined : this, a, b];
	};
	t.equal(func.length, 2, 'original function length is 2');

	/** type {(thisArg: unknown, a: number, b: number) => [unknown, number, number]} */
	var bound = callBind([func]);
	/** type {((a: number, b: number) => [typeof sentinel, typeof a, typeof b])} */
	var boundR = callBind([func, sentinel]);
	/** type {((b: number) => [typeof sentinel, number, typeof b])} */
	var boundArg = callBind([func, sentinel, /** @type {const} */ (1)]);

	// @ts-expect-error
	t.deepEqual(bound(), [undefined, undefined, undefined], 'bound func with no args');

	// @ts-expect-error
	t.deepEqual(func(), [undefined, undefined, undefined], 'unbound func with too few args');
	// @ts-expect-error
	t.deepEqual(bound(1, 2), [hasStrictMode ? 1 : Object(1), 2, undefined], 'bound func too few args');
	// @ts-expect-error
	t.deepEqual(boundR(), [sentinel, undefined, undefined], 'bound func with receiver, with too few args');
	// @ts-expect-error
	t.deepEqual(boundArg(), [sentinel, 1, undefined], 'bound func with receiver and arg, with too few args');

	t.deepEqual(func(1, 2), [undefined, 1, 2], 'unbound func with right args');
	t.deepEqual(bound(1, 2, 3), [hasStrictMode ? 1 : Object(1), 2, 3], 'bound func with right args');
	t.deepEqual(boundR(1, 2), [sentinel, 1, 2], 'bound func with receiver, with right args');
	t.deepEqual(boundArg(2), [sentinel, 1, 2], 'bound func with receiver and arg, with right arg');

	// @ts-expect-error
	t.deepEqual(func(1, 2, 3), [undefined, 1, 2], 'unbound func with too many args');
	// @ts-expect-error
	t.deepEqual(bound(1, 2, 3, 4), [hasStrictMode ? 1 : Object(1), 2, 3], 'bound func with too many args');
	// @ts-expect-error
	t.deepEqual(boundR(1, 2, 3), [sentinel, 1, 2], 'bound func with receiver, with too many args');
	// @ts-expect-error
	t.deepEqual(boundArg(2, 3), [sentinel, 1, 2], 'bound func with receiver and arg, with too many args');

	t.end();
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bind-apply-helpers\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bound\index.js 
------------------------------------------------------ 
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBindBasic = require('call-bind-apply-helpers');

/** @type {(thisArg: string, searchString: string, position?: number) => number} */
var $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);

/** @type {import('.')} */
module.exports = function callBoundIntrinsic(name, allowMissing) {
	/* eslint no-extra-parens: 0 */

	var intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBindBasic(/** @type {const} */ ([intrinsic]));
	}
	return intrinsic;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bound\package.json 
------------------------------------------------------ 
{
	"name": "call-bound",
	"version": "1.0.4",
	"description": "Robust call-bound JavaScript intrinsics, using `call-bind` and `get-intrinsic`.",
	"main": "index.js",
	"exports": {
		".": "./index.js",
		"./package.json": "./package.json"
	},
	"sideEffects": false,
	"scripts": {
		"prepack": "npmignore --auto --commentLines=auto",
		"prepublish": "not-in-publish || npm run prepublishOnly",
		"prepublishOnly": "safe-publish-latest",
		"prelint": "evalmd README.md",
		"lint": "eslint --ext=.js,.mjs .",
		"postlint": "tsc -p . && attw -P",
		"pretest": "npm run lint",
		"tests-only": "nyc tape 'test/**/*.js'",
		"test": "npm run tests-only",
		"posttest": "npx npm@'>=10.2' audit --production",
		"version": "auto-changelog && git add CHANGELOG.md",
		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ljharb/call-bound.git"
	},
	"keywords": [
		"javascript",
		"ecmascript",
		"es",
		"js",
		"callbind",
		"callbound",
		"call",
		"bind",
		"bound",
		"call-bind",
		"call-bound",
		"function",
		"es-abstract"
	],
	"author": "Jordan Harband <ljharb@gmail.com>",
	"funding": {
		"url": "https://github.com/sponsors/ljharb"
	},
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/ljharb/call-bound/issues"
	},
	"homepage": "https://github.com/ljharb/call-bound#readme",
	"dependencies": {
		"call-bind-apply-helpers": "^1.0.2",
		"get-intrinsic": "^1.3.0"
	},
	"devDependencies": {
		"@arethetypeswrong/cli": "^0.17.4",
		"@ljharb/eslint-config": "^21.1.1",
		"@ljharb/tsconfig": "^0.3.0",
		"@types/call-bind": "^1.0.5",
		"@types/get-intrinsic": "^1.2.3",
		"@types/tape": "^5.8.1",
		"auto-changelog": "^2.5.0",
		"encoding": "^0.1.13",
		"es-value-fixtures": "^1.7.1",
		"eslint": "=8.8.0",
		"evalmd": "^0.0.19",
		"for-each": "^0.3.5",
		"gopd": "^1.2.0",
		"has-strict-mode": "^1.1.0",
		"in-publish": "^2.0.1",
		"npmignore": "^0.3.1",
		"nyc": "^10.3.2",
		"object-inspect": "^1.13.4",
		"safe-publish-latest": "^2.0.0",
		"tape": "^5.9.0",
		"typescript": "next"
	},
	"testling": {
		"files": "test/index.js"
	},
	"auto-changelog": {
		"output": "CHANGELOG.md",
		"template": "keepachangelog",
		"unreleased": false,
		"commitLimit": false,
		"backfillLimit": false,
		"hideCredit": true
	},
	"publishConfig": {
		"ignore": [
			".github/workflows"
		]
	},
	"engines": {
		"node": ">= 0.4"
	}
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bound\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bound\test\index.js 
------------------------------------------------------ 
'use strict';

var test = require('tape');

var callBound = require('../');

/** @template {true} T @template U @typedef {T extends U ? T : never} AssertType */

test('callBound', function (t) {
	// static primitive
	t.equal(callBound('Array.length'), Array.length, 'Array.length yields itself');
	t.equal(callBound('%Array.length%'), Array.length, '%Array.length% yields itself');

	// static non-function object
	t.equal(callBound('Array.prototype'), Array.prototype, 'Array.prototype yields itself');
	t.equal(callBound('%Array.prototype%'), Array.prototype, '%Array.prototype% yields itself');
	t.equal(callBound('Array.constructor'), Array.constructor, 'Array.constructor yields itself');
	t.equal(callBound('%Array.constructor%'), Array.constructor, '%Array.constructor% yields itself');

	// static function
	t.equal(callBound('Date.parse'), Date.parse, 'Date.parse yields itself');
	t.equal(callBound('%Date.parse%'), Date.parse, '%Date.parse% yields itself');

	// prototype primitive
	t.equal(callBound('Error.prototype.message'), Error.prototype.message, 'Error.prototype.message yields itself');
	t.equal(callBound('%Error.prototype.message%'), Error.prototype.message, '%Error.prototype.message% yields itself');

	var x = callBound('Object.prototype.toString');
	var y = callBound('%Object.prototype.toString%');

	// prototype function
	t.notEqual(x, Object.prototype.toString, 'Object.prototype.toString does not yield itself');
	t.notEqual(y, Object.prototype.toString, '%Object.prototype.toString% does not yield itself');
	t.equal(x(true), Object.prototype.toString.call(true), 'call-bound Object.prototype.toString calls into the original');
	t.equal(y(true), Object.prototype.toString.call(true), 'call-bound %Object.prototype.toString% calls into the original');

	t['throws'](
		// @ts-expect-error
		function () { callBound('does not exist'); },
		SyntaxError,
		'nonexistent intrinsic throws'
	);
	t['throws'](
		// @ts-expect-error
		function () { callBound('does not exist', true); },
		SyntaxError,
		'allowMissing arg still throws for unknown intrinsic'
	);

	t.test('real but absent intrinsic', { skip: typeof WeakRef !== 'undefined' }, function (st) {
		st['throws'](
			function () { callBound('WeakRef'); },
			TypeError,
			'real but absent intrinsic throws'
		);
		st.equal(callBound('WeakRef', true), undefined, 'allowMissing arg avoids exception');
		st.end();
	});

	t.end();
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\call-bound\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\chownr\chownr.js 
------------------------------------------------------ 
'use strict'
const fs = require('fs')
const path = require('path')

/* istanbul ignore next */
const LCHOWN = fs.lchown ? 'lchown' : 'chown'
/* istanbul ignore next */
const LCHOWNSYNC = fs.lchownSync ? 'lchownSync' : 'chownSync'

/* istanbul ignore next */
const needEISDIRHandled = fs.lchown &&
  !process.version.match(/v1[1-9]+\./) &&
  !process.version.match(/v10\.[6-9]/)

const lchownSync = (path, uid, gid) => {
  try {
    return fs[LCHOWNSYNC](path, uid, gid)
  } catch (er) {
    if (er.code !== 'ENOENT')
      throw er
  }
}

/* istanbul ignore next */
const chownSync = (path, uid, gid) => {
  try {
    return fs.chownSync(path, uid, gid)
  } catch (er) {
    if (er.code !== 'ENOENT')
      throw er
  }
}

/* istanbul ignore next */
const handleEISDIR =
  needEISDIRHandled ? (path, uid, gid, cb) => er => {
    // Node prior to v10 had a very questionable implementation of
    // fs.lchown, which would always try to call fs.open on a directory
    // Fall back to fs.chown in those cases.
    if (!er || er.code !== 'EISDIR')
      cb(er)
    else
      fs.chown(path, uid, gid, cb)
  }
  : (_, __, ___, cb) => cb

/* istanbul ignore next */
const handleEISDirSync =
  needEISDIRHandled ? (path, uid, gid) => {
    try {
      return lchownSync(path, uid, gid)
    } catch (er) {
      if (er.code !== 'EISDIR')
        throw er
      chownSync(path, uid, gid)
    }
  }
  : (path, uid, gid) => lchownSync(path, uid, gid)

// fs.readdir could only accept an options object as of node v6
const nodeVersion = process.version
let readdir = (path, options, cb) => fs.readdir(path, options, cb)
let readdirSync = (path, options) => fs.readdirSync(path, options)
/* istanbul ignore next */
if (/^v4\./.test(nodeVersion))
  readdir = (path, options, cb) => fs.readdir(path, cb)

const chown = (cpath, uid, gid, cb) => {
  fs[LCHOWN](cpath, uid, gid, handleEISDIR(cpath, uid, gid, er => {
    // Skip ENOENT error
    cb(er && er.code !== 'ENOENT' ? er : null)
  }))
}

const chownrKid = (p, child, uid, gid, cb) => {
  if (typeof child === 'string')
    return fs.lstat(path.resolve(p, child), (er, stats) => {
      // Skip ENOENT error
      if (er)
        return cb(er.code !== 'ENOENT' ? er : null)
      stats.name = child
      chownrKid(p, stats, uid, gid, cb)
    })

  if (child.isDirectory()) {
    chownr(path.resolve(p, child.name), uid, gid, er => {
      if (er)
        return cb(er)
      const cpath = path.resolve(p, child.name)
      chown(cpath, uid, gid, cb)
    })
  } else {
    const cpath = path.resolve(p, child.name)
    chown(cpath, uid, gid, cb)
  }
}


const chownr = (p, uid, gid, cb) => {
  readdir(p, { withFileTypes: true }, (er, children) => {
    // any error other than ENOTDIR or ENOTSUP means it's not readable,
    // or doesn't exist.  give up.
    if (er) {
      if (er.code === 'ENOENT')
        return cb()
      else if (er.code !== 'ENOTDIR' && er.code !== 'ENOTSUP')
        return cb(er)
    }
    if (er || !children.length)
      return chown(p, uid, gid, cb)

    let len = children.length
    let errState = null
    const then = er => {
      if (errState)
        return
      if (er)
        return cb(errState = er)
      if (-- len === 0)
        return chown(p, uid, gid, cb)
    }

    children.forEach(child => chownrKid(p, child, uid, gid, then))
  })
}

const chownrKidSync = (p, child, uid, gid) => {
  if (typeof child === 'string') {
    try {
      const stats = fs.lstatSync(path.resolve(p, child))
      stats.name = child
      child = stats
    } catch (er) {
      if (er.code === 'ENOENT')
        return
      else
        throw er
    }
  }

  if (child.isDirectory())
    chownrSync(path.resolve(p, child.name), uid, gid)

  handleEISDirSync(path.resolve(p, child.name), uid, gid)
}

const chownrSync = (p, uid, gid) => {
  let children
  try {
    children = readdirSync(p, { withFileTypes: true })
  } catch (er) {
    if (er.code === 'ENOENT')
      return
    else if (er.code === 'ENOTDIR' || er.code === 'ENOTSUP')
      return handleEISDirSync(p, uid, gid)
    else
      throw er
  }

  if (children && children.length)
    children.forEach(child => chownrKidSync(p, child, uid, gid))

  return handleEISDirSync(p, uid, gid)
}

module.exports = chownr
chownr.sync = chownrSync
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\chownr\package.json 
------------------------------------------------------ 
{
  "author": "Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)",
  "name": "chownr",
  "description": "like `chown -R`",
  "version": "2.0.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/chownr.git"
  },
  "main": "chownr.js",
  "files": [
    "chownr.js"
  ],
  "devDependencies": {
    "mkdirp": "0.3",
    "rimraf": "^2.7.1",
    "tap": "^14.10.6"
  },
  "tap": {
    "check-coverage": true
  },
  "scripts": {
    "test": "tap",
    "preversion": "npm test",
    "postversion": "npm publish",
    "prepublishOnly": "git push origin --follow-tags"
  },
  "license": "ISC",
  "engines": {
    "node": ">=10"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\clean-stack\index.js 
------------------------------------------------------ 
'use strict';
const os = require('os');

const extractPathRegex = /\s+at.*(?:\(|\s)(.*)\)?/;
const pathRegex = /^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/;
const homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir();

module.exports = (stack, options) => {
	options = Object.assign({pretty: false}, options);

	return stack.replace(/\\/g, '/')
		.split('\n')
		.filter(line => {
			const pathMatches = line.match(extractPathRegex);
			if (pathMatches === null || !pathMatches[1]) {
				return true;
			}

			const match = pathMatches[1];

			// Electron
			if (
				match.includes('.app/Contents/Resources/electron.asar') ||
				match.includes('.app/Contents/Resources/default_app.asar')
			) {
				return false;
			}

			return !pathRegex.test(match);
		})
		.filter(line => line.trim() !== '')
		.map(line => {
			if (options.pretty) {
				return line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));
			}

			return line;
		})
		.join('\n');
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\clean-stack\package.json 
------------------------------------------------------ 
{
	"name": "clean-stack",
	"version": "2.2.0",
	"description": "Clean up error stack traces",
	"license": "MIT",
	"repository": "sindresorhus/clean-stack",
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "sindresorhus.com"
	},
	"engines": {
		"node": ">=6"
	},
	"scripts": {
		"test": "xo && ava && tsd"
	},
	"files": [
		"index.js",
		"index.d.ts"
	],
	"keywords": [
		"clean",
		"stack",
		"trace",
		"traces",
		"error",
		"err",
		"electron"
	],
	"devDependencies": {
		"ava": "^1.4.1",
		"tsd": "^0.7.2",
		"xo": "^0.24.0"
	},
	"browser": {
		"os": false
	}
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\color-support\bin.js 
------------------------------------------------------ 
#!/usr/bin/env node
var colorSupport = require('./')({alwaysReturn: true })
console.log(JSON.stringify(colorSupport, null, 2))
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\color-support\browser.js 
------------------------------------------------------ 
module.exports = colorSupport({ alwaysReturn: true }, colorSupport)

function colorSupport(options, obj) {
  obj = obj || {}
  options = options || {}
  obj.level = 0
  obj.hasBasic = false
  obj.has256 = false
  obj.has16m = false
  if (!options.alwaysReturn) {
    return false
  }
  return obj
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\color-support\index.js 
------------------------------------------------------ 
// call it on itself so we can test the export val for basic stuff
module.exports = colorSupport({ alwaysReturn: true }, colorSupport)

function hasNone (obj, options) {
  obj.level = 0
  obj.hasBasic = false
  obj.has256 = false
  obj.has16m = false
  if (!options.alwaysReturn) {
    return false
  }
  return obj
}

function hasBasic (obj) {
  obj.hasBasic = true
  obj.has256 = false
  obj.has16m = false
  obj.level = 1
  return obj
}

function has256 (obj) {
  obj.hasBasic = true
  obj.has256 = true
  obj.has16m = false
  obj.level = 2
  return obj
}

function has16m (obj) {
  obj.hasBasic = true
  obj.has256 = true
  obj.has16m = true
  obj.level = 3
  return obj
}

function colorSupport (options, obj) {
  options = options || {}

  obj = obj || {}

  // if just requesting a specific level, then return that.
  if (typeof options.level === 'number') {
    switch (options.level) {
      case 0:
        return hasNone(obj, options)
      case 1:
        return hasBasic(obj)
      case 2:
        return has256(obj)
      case 3:
        return has16m(obj)
    }
  }

  obj.level = 0
  obj.hasBasic = false
  obj.has256 = false
  obj.has16m = false

  if (typeof process === 'undefined' ||
      !process ||
      !process.stdout ||
      !process.env ||
      !process.platform) {
    return hasNone(obj, options)
  }

  var env = options.env || process.env
  var stream = options.stream || process.stdout
  var term = options.term || env.TERM || ''
  var platform = options.platform || process.platform

  if (!options.ignoreTTY && !stream.isTTY) {
    return hasNone(obj, options)
  }

  if (!options.ignoreDumb && term === 'dumb' && !env.COLORTERM) {
    return hasNone(obj, options)
  }

  if (platform === 'win32') {
    return hasBasic(obj)
  }

  if (env.TMUX) {
    return has256(obj)
  }

  if (!options.ignoreCI && (env.CI || env.TEAMCITY_VERSION)) {
    if (env.TRAVIS) {
      return has256(obj)
    } else {
      return hasNone(obj, options)
    }
  }

  // TODO: add more term programs
  switch (env.TERM_PROGRAM) {
    case 'iTerm.app':
      var ver = env.TERM_PROGRAM_VERSION || '0.'
      if (/^[0-2]\./.test(ver)) {
        return has256(obj)
      } else {
        return has16m(obj)
      }

    case 'HyperTerm':
    case 'Hyper':
      return has16m(obj)

    case 'MacTerm':
      return has16m(obj)

    case 'Apple_Terminal':
      return has256(obj)
  }

  if (/^xterm-256/.test(term)) {
    return has256(obj)
  }

  if (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(term)) {
    return hasBasic(obj)
  }

  if (env.COLORTERM) {
    return hasBasic(obj)
  }

  return hasNone(obj, options)
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\color-support\package.json 
------------------------------------------------------ 
{
  "name": "color-support",
  "version": "1.1.3",
  "description": "A module which will endeavor to guess your terminal's level of color support.",
  "main": "index.js",
  "browser": "browser.js",
  "bin": "bin.js",
  "devDependencies": {
    "tap": "^10.3.3"
  },
  "scripts": {
    "test": "tap test/*.js --100 -J",
    "preversion": "npm test",
    "postversion": "npm publish",
    "postpublish": "git push origin --all; git push origin --tags"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/isaacs/color-support.git"
  },
  "keywords": [
    "terminal",
    "color",
    "support",
    "xterm",
    "truecolor",
    "256"
  ],
  "author": "Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)",
  "license": "ISC",
  "files": [
    "browser.js",
    "index.js",
    "bin.js"
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\concat-map\index.js 
------------------------------------------------------ 
module.exports = function (xs, fn) {
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        var x = fn(xs[i], i);
        if (isArray(x)) res.push.apply(res, x);
        else res.push(x);
    }
    return res;
};

var isArray = Array.isArray || function (xs) {
    return Object.prototype.toString.call(xs) === '[object Array]';
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\concat-map\package.json 
------------------------------------------------------ 
{
    "name" : "concat-map",
    "description" : "concatenative mapdashery",
    "version" : "0.0.1",
    "repository" : {
        "type" : "git",
        "url" : "git://github.com/substack/node-concat-map.git"
    },
    "main" : "index.js",
    "keywords" : [
        "concat",
        "concatMap",
        "map",
        "functional",
        "higher-order"
    ],
    "directories" : {
        "example" : "example",
        "test" : "test"
    },
    "scripts" : {
        "test" : "tape test/*.js"
    },
    "devDependencies" : {
        "tape" : "~2.4.0"
    },
    "license" : "MIT",
    "author" : {
        "name" : "James Halliday",
        "email" : "mail@substack.net",
        "url" : "http://substack.net"
    },
    "testling" : {
        "files" : "test/*.js",
        "browsers" : {
            "ie" : [ 6, 7, 8, 9 ],
            "ff" : [ 3.5, 10, 15.0 ],
            "chrome" : [ 10, 22 ],
            "safari" : [ 5.1 ],
            "opera" : [ 12 ]
        }
    }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\concat-map\example\map.js 
------------------------------------------------------ 
var concatMap = require('../');
var xs = [ 1, 2, 3, 4, 5, 6 ];
var ys = concatMap(xs, function (x) {
    return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];
});
console.dir(ys);
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\concat-map\example\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\concat-map\test\map.js 
------------------------------------------------------ 
var concatMap = require('../');
var test = require('tape');

test('empty or not', function (t) {
    var xs = [ 1, 2, 3, 4, 5, 6 ];
    var ixes = [];
    var ys = concatMap(xs, function (x, ix) {
        ixes.push(ix);
        return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];
    });
    t.same(ys, [ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]);
    t.same(ixes, [ 0, 1, 2, 3, 4, 5 ]);
    t.end();
});

test('always something', function (t) {
    var xs = [ 'a', 'b', 'c', 'd' ];
    var ys = concatMap(xs, function (x) {
        return x === 'b' ? [ 'B', 'B', 'B' ] : [ x ];
    });
    t.same(ys, [ 'a', 'B', 'B', 'B', 'c', 'd' ]);
    t.end();
});

test('scalars', function (t) {
    var xs = [ 'a', 'b', 'c', 'd' ];
    var ys = concatMap(xs, function (x) {
        return x === 'b' ? [ 'B', 'B', 'B' ] : x;
    });
    t.same(ys, [ 'a', 'B', 'B', 'B', 'c', 'd' ]);
    t.end();
});

test('undefs', function (t) {
    var xs = [ 'a', 'b', 'c', 'd' ];
    var ys = concatMap(xs, function () {});
    t.same(ys, [ undefined, undefined, undefined, undefined ]);
    t.end();
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\concat-map\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\console-control-strings\index.js 
------------------------------------------------------ 
'use strict'

// These tables borrowed from `ansi`

var prefix = '\x1b['

exports.up = function up (num) {
  return prefix + (num || '') + 'A'
}

exports.down = function down (num) {
  return prefix + (num || '') + 'B'
}

exports.forward = function forward (num) {
  return prefix + (num || '') + 'C'
}

exports.back = function back (num) {
  return prefix + (num || '') + 'D'
}

exports.nextLine = function nextLine (num) {
  return prefix + (num || '') + 'E'
}

exports.previousLine = function previousLine (num) {
  return prefix + (num || '') + 'F'
}

exports.horizontalAbsolute = function horizontalAbsolute (num) {
  if (num == null) throw new Error('horizontalAboslute requires a column to position to')
  return prefix + num + 'G'
}

exports.eraseData = function eraseData () {
  return prefix + 'J'
}

exports.eraseLine = function eraseLine () {
  return prefix + 'K'
}

exports.goto = function (x, y) {
  return prefix + y + ';' + x + 'H'
}

exports.gotoSOL = function () {
  return '\r'
}

exports.beep = function () {
  return '\x07'
}

exports.hideCursor = function hideCursor () {
  return prefix + '?25l'
}

exports.showCursor = function showCursor () {
  return prefix + '?25h'
}

var colors = {
  reset: 0,
// styles
  bold: 1,
  italic: 3,
  underline: 4,
  inverse: 7,
// resets
  stopBold: 22,
  stopItalic: 23,
  stopUnderline: 24,
  stopInverse: 27,
// colors
  white: 37,
  black: 30,
  blue: 34,
  cyan: 36,
  green: 32,
  magenta: 35,
  red: 31,
  yellow: 33,
  bgWhite: 47,
  bgBlack: 40,
  bgBlue: 44,
  bgCyan: 46,
  bgGreen: 42,
  bgMagenta: 45,
  bgRed: 41,
  bgYellow: 43,

  grey: 90,
  brightBlack: 90,
  brightRed: 91,
  brightGreen: 92,
  brightYellow: 93,
  brightBlue: 94,
  brightMagenta: 95,
  brightCyan: 96,
  brightWhite: 97,

  bgGrey: 100,
  bgBrightBlack: 100,
  bgBrightRed: 101,
  bgBrightGreen: 102,
  bgBrightYellow: 103,
  bgBrightBlue: 104,
  bgBrightMagenta: 105,
  bgBrightCyan: 106,
  bgBrightWhite: 107
}

exports.color = function color (colorWith) {
  if (arguments.length !== 1 || !Array.isArray(colorWith)) {
    colorWith = Array.prototype.slice.call(arguments)
  }
  return prefix + colorWith.map(colorNameToCode).join(';') + 'm'
}

function colorNameToCode (color) {
  if (colors[color] != null) return colors[color]
  throw new Error('Unknown color or style name: ' + color)
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\console-control-strings\package.json 
------------------------------------------------------ 
{
  "name": "console-control-strings",
  "version": "1.1.0",
  "description": "A library of cross-platform tested terminal/console command strings for doing things like color and cursor positioning.  This is a subset of both ansi and vt100.  All control codes included work on both Windows & Unix-like OSes, except where noted.",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "standard && tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/iarna/console-control-strings"
  },
  "keywords": [],
  "author": "Rebecca Turner <me@re-becca.org> (http://re-becca.org/)",
  "license": "ISC",
  "files": [
    "LICENSE",
    "index.js"
  ],
  "devDependencies": {
    "standard": "^7.1.2",
    "tap": "^5.7.2"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\content-disposition\index.js 
------------------------------------------------------ 
/*!
 * content-disposition
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module exports.
 * @public
 */

module.exports = contentDisposition
module.exports.parse = parse

/**
 * Module dependencies.
 * @private
 */

var basename = require('path').basename
var Buffer = require('safe-buffer').Buffer

/**
 * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including "%")
 * @private
 */

var ENCODE_URL_ATTR_CHAR_REGEXP = /[\x00-\x20"'()*,/:;<=>?@[\\\]{}\x7f]/g // eslint-disable-line no-control-regex

/**
 * RegExp to match percent encoding escape.
 * @private
 */

var HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/
var HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g

/**
 * RegExp to match non-latin1 characters.
 * @private
 */

var NON_LATIN1_REGEXP = /[^\x20-\x7e\xa0-\xff]/g

/**
 * RegExp to match quoted-pair in RFC 2616
 *
 * quoted-pair = "\" CHAR
 * CHAR        = <any US-ASCII character (octets 0 - 127)>
 * @private
 */

var QESC_REGEXP = /\\([\u0000-\u007f])/g // eslint-disable-line no-control-regex

/**
 * RegExp to match chars that must be quoted-pair in RFC 2616
 * @private
 */

var QUOTE_REGEXP = /([\\"])/g

/**
 * RegExp for various RFC 2616 grammar
 *
 * parameter     = token "=" ( token | quoted-string )
 * token         = 1*<any CHAR except CTLs or separators>
 * separators    = "(" | ")" | "<" | ">" | "@"
 *               | "," | ";" | ":" | "\" | <">
 *               | "/" | "[" | "]" | "?" | "="
 *               | "{" | "}" | SP | HT
 * quoted-string = ( <"> *(qdtext | quoted-pair ) <"> )
 * qdtext        = <any TEXT except <">>
 * quoted-pair   = "\" CHAR
 * CHAR          = <any US-ASCII character (octets 0 - 127)>
 * TEXT          = <any OCTET except CTLs, but including LWS>
 * LWS           = [CRLF] 1*( SP | HT )
 * CRLF          = CR LF
 * CR            = <US-ASCII CR, carriage return (13)>
 * LF            = <US-ASCII LF, linefeed (10)>
 * SP            = <US-ASCII SP, space (32)>
 * HT            = <US-ASCII HT, horizontal-tab (9)>
 * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>
 * OCTET         = <any 8-bit sequence of data>
 * @private
 */

var PARAM_REGEXP = /;[\x09\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*=[\x09\x20]*("(?:[\x20!\x23-\x5b\x5d-\x7e\x80-\xff]|\\[\x20-\x7e])*"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*/g // eslint-disable-line no-control-regex
var TEXT_REGEXP = /^[\x20-\x7e\x80-\xff]+$/
var TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/

/**
 * RegExp for various RFC 5987 grammar
 *
 * ext-value     = charset  "'" [ language ] "'" value-chars
 * charset       = "UTF-8" / "ISO-8859-1" / mime-charset
 * mime-charset  = 1*mime-charsetc
 * mime-charsetc = ALPHA / DIGIT
 *               / "!" / "#" / "$" / "%" / "&"
 *               / "+" / "-" / "^" / "_" / "`"
 *               / "{" / "}" / "~"
 * language      = ( 2*3ALPHA [ extlang ] )
 *               / 4ALPHA
 *               / 5*8ALPHA
 * extlang       = *3( "-" 3ALPHA )
 * value-chars   = *( pct-encoded / attr-char )
 * pct-encoded   = "%" HEXDIG HEXDIG
 * attr-char     = ALPHA / DIGIT
 *               / "!" / "#" / "$" / "&" / "+" / "-" / "."
 *               / "^" / "_" / "`" / "|" / "~"
 * @private
 */

var EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/

/**
 * RegExp for various RFC 6266 grammar
 *
 * disposition-type = "inline" | "attachment" | disp-ext-type
 * disp-ext-type    = token
 * disposition-parm = filename-parm | disp-ext-parm
 * filename-parm    = "filename" "=" value
 *                  | "filename*" "=" ext-value
 * disp-ext-parm    = token "=" value
 *                  | ext-token "=" ext-value
 * ext-token        = <the characters in token, followed by "*">
 * @private
 */

var DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*(?:$|;)/ // eslint-disable-line no-control-regex

/**
 * Create an attachment Content-Disposition header.
 *
 * @param {string} [filename]
 * @param {object} [options]
 * @param {string} [options.type=attachment]
 * @param {string|boolean} [options.fallback=true]
 * @return {string}
 * @public
 */

function contentDisposition (filename, options) {
  var opts = options || {}

  // get type
  var type = opts.type || 'attachment'

  // get parameters
  var params = createparams(filename, opts.fallback)

  // format into string
  return format(new ContentDisposition(type, params))
}

/**
 * Create parameters object from filename and fallback.
 *
 * @param {string} [filename]
 * @param {string|boolean} [fallback=true]
 * @return {object}
 * @private
 */

function createparams (filename, fallback) {
  if (filename === undefined) {
    return
  }

  var params = {}

  if (typeof filename !== 'string') {
    throw new TypeError('filename must be a string')
  }

  // fallback defaults to true
  if (fallback === undefined) {
    fallback = true
  }

  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {
    throw new TypeError('fallback must be a string or boolean')
  }

  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {
    throw new TypeError('fallback must be ISO-8859-1 string')
  }

  // restrict to file base name
  var name = basename(filename)

  // determine if name is suitable for quoted string
  var isQuotedString = TEXT_REGEXP.test(name)

  // generate fallback name
  var fallbackName = typeof fallback !== 'string'
    ? fallback && getlatin1(name)
    : basename(fallback)
  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name

  // set extended filename parameter
  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {
    params['filename*'] = name
  }

  // set filename parameter
  if (isQuotedString || hasFallback) {
    params.filename = hasFallback
      ? fallbackName
      : name
  }

  return params
}

/**
 * Format object to Content-Disposition header.
 *
 * @param {object} obj
 * @param {string} obj.type
 * @param {object} [obj.parameters]
 * @return {string}
 * @private
 */

function format (obj) {
  var parameters = obj.parameters
  var type = obj.type

  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {
    throw new TypeError('invalid type')
  }

  // start with normalized type
  var string = String(type).toLowerCase()

  // append parameters
  if (parameters && typeof parameters === 'object') {
    var param
    var params = Object.keys(parameters).sort()

    for (var i = 0; i < params.length; i++) {
      param = params[i]

      var val = param.slice(-1) === '*'
        ? ustring(parameters[param])
        : qstring(parameters[param])

      string += '; ' + param + '=' + val
    }
  }

  return string
}

/**
 * Decode a RFC 5987 field value (gracefully).
 *
 * @param {string} str
 * @return {string}
 * @private
 */

function decodefield (str) {
  var match = EXT_VALUE_REGEXP.exec(str)

  if (!match) {
    throw new TypeError('invalid extended field value')
  }

  var charset = match[1].toLowerCase()
  var encoded = match[2]
  var value

  // to binary string
  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)

  switch (charset) {
    case 'iso-8859-1':
      value = getlatin1(binary)
      break
    case 'utf-8':
    case 'utf8':
      value = Buffer.from(binary, 'binary').toString('utf8')
      break
    default:
      throw new TypeError('unsupported charset in extended field')
  }

  return value
}

/**
 * Get ISO-8859-1 version of string.
 *
 * @param {string} val
 * @return {string}
 * @private
 */

function getlatin1 (val) {
  // simple Unicode -> ISO-8859-1 transformation
  return String(val).replace(NON_LATIN1_REGEXP, '?')
}

/**
 * Parse Content-Disposition header string.
 *
 * @param {string} string
 * @return {object}
 * @public
 */

function parse (string) {
  if (!string || typeof string !== 'string') {
    throw new TypeError('argument string is required')
  }

  var match = DISPOSITION_TYPE_REGEXP.exec(string)

  if (!match) {
    throw new TypeError('invalid type format')
  }

  // normalize type
  var index = match[0].length
  var type = match[1].toLowerCase()

  var key
  var names = []
  var params = {}
  var value

  // calculate index to start at
  index = PARAM_REGEXP.lastIndex = match[0].slice(-1) === ';'
    ? index - 1
    : index

  // match parameters
  while ((match = PARAM_REGEXP.exec(string))) {
    if (match.index !== index) {
      throw new TypeError('invalid parameter format')
    }

    index += match[0].length
    key = match[1].toLowerCase()
    value = match[2]

    if (names.indexOf(key) !== -1) {
      throw new TypeError('invalid duplicate parameter')
    }

    names.push(key)

    if (key.indexOf('*') + 1 === key.length) {
      // decode extended value
      key = key.slice(0, -1)
      value = decodefield(value)

      // overwrite existing value
      params[key] = value
      continue
    }

    if (typeof params[key] === 'string') {
      continue
    }

    if (value[0] === '"') {
      // remove quotes and escapes
      value = value
        .slice(1, -1)
        .replace(QESC_REGEXP, '$1')
    }

    params[key] = value
  }

  if (index !== -1 && index !== string.length) {
    throw new TypeError('invalid parameter format')
  }

  return new ContentDisposition(type, params)
}

/**
 * Percent decode a single character.
 *
 * @param {string} str
 * @param {string} hex
 * @return {string}
 * @private
 */

function pdecode (str, hex) {
  return String.fromCharCode(parseInt(hex, 16))
}

/**
 * Percent encode a single character.
 *
 * @param {string} char
 * @return {string}
 * @private
 */

function pencode (char) {
  return '%' + String(char)
    .charCodeAt(0)
    .toString(16)
    .toUpperCase()
}

/**
 * Quote a string for HTTP.
 *
 * @param {string} val
 * @return {string}
 * @private
 */

function qstring (val) {
  var str = String(val)

  return '"' + str.replace(QUOTE_REGEXP, '\\$1') + '"'
}

/**
 * Encode a Unicode string for HTTP (RFC 5987).
 *
 * @param {string} val
 * @return {string}
 * @private
 */

function ustring (val) {
  var str = String(val)

  // percent encode as UTF-8
  var encoded = encodeURIComponent(str)
    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)

  return 'UTF-8\'\'' + encoded
}

/**
 * Class for parsed Content-Disposition header for v8 optimization
 *
 * @public
 * @param {string} type
 * @param {object} parameters
 * @constructor
 */

function ContentDisposition (type, parameters) {
  this.type = type
  this.parameters = parameters
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\content-disposition\package.json 
------------------------------------------------------ 
{
  "name": "content-disposition",
  "description": "Create and parse Content-Disposition header",
  "version": "1.0.0",
  "author": "Douglas Christopher Wilson <doug@somethingdoug.com>",
  "license": "MIT",
  "keywords": [
    "content-disposition",
    "http",
    "rfc6266",
    "res"
  ],
  "repository": "jshttp/content-disposition",
  "dependencies": {
    "safe-buffer": "5.2.1"
  },
  "devDependencies": {
    "deep-equal": "1.0.1",
    "eslint": "7.32.0",
    "eslint-config-standard": "13.0.1",
    "eslint-plugin-import": "2.25.3",
    "eslint-plugin-markdown": "2.2.1",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "5.2.0",
    "eslint-plugin-standard": "4.1.0",
    "mocha": "^9.2.2",
    "nyc": "15.1.0"
  },
  "files": [
    "LICENSE",
    "HISTORY.md",
    "README.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-ci": "nyc --reporter=lcovonly --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\content-type\index.js 
------------------------------------------------------ 
/*!
 * content-type
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * RegExp to match *( ";" parameter ) in RFC 7231 sec 3.1.1.1
 *
 * parameter     = token "=" ( token / quoted-string )
 * token         = 1*tchar
 * tchar         = "!" / "#" / "$" / "%" / "&" / "'" / "*"
 *               / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~"
 *               / DIGIT / ALPHA
 *               ; any VCHAR, except delimiters
 * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE
 * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text
 * obs-text      = %x80-FF
 * quoted-pair   = "\" ( HTAB / SP / VCHAR / obs-text )
 */
var PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\u000b\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u000b\u0020-\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g // eslint-disable-line no-control-regex
var TEXT_REGEXP = /^[\u000b\u0020-\u007e\u0080-\u00ff]+$/ // eslint-disable-line no-control-regex
var TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/

/**
 * RegExp to match quoted-pair in RFC 7230 sec 3.2.6
 *
 * quoted-pair = "\" ( HTAB / SP / VCHAR / obs-text )
 * obs-text    = %x80-FF
 */
var QESC_REGEXP = /\\([\u000b\u0020-\u00ff])/g // eslint-disable-line no-control-regex

/**
 * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6
 */
var QUOTE_REGEXP = /([\\"])/g

/**
 * RegExp to match type in RFC 7231 sec 3.1.1.1
 *
 * media-type = type "/" subtype
 * type       = token
 * subtype    = token
 */
var TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/

/**
 * Module exports.
 * @public
 */

exports.format = format
exports.parse = parse

/**
 * Format object to media type.
 *
 * @param {object} obj
 * @return {string}
 * @public
 */

function format (obj) {
  if (!obj || typeof obj !== 'object') {
    throw new TypeError('argument obj is required')
  }

  var parameters = obj.parameters
  var type = obj.type

  if (!type || !TYPE_REGEXP.test(type)) {
    throw new TypeError('invalid type')
  }

  var string = type

  // append parameters
  if (parameters && typeof parameters === 'object') {
    var param
    var params = Object.keys(parameters).sort()

    for (var i = 0; i < params.length; i++) {
      param = params[i]

      if (!TOKEN_REGEXP.test(param)) {
        throw new TypeError('invalid parameter name')
      }

      string += '; ' + param + '=' + qstring(parameters[param])
    }
  }

  return string
}

/**
 * Parse media type to object.
 *
 * @param {string|object} string
 * @return {Object}
 * @public
 */

function parse (string) {
  if (!string) {
    throw new TypeError('argument string is required')
  }

  // support req/res-like objects as argument
  var header = typeof string === 'object'
    ? getcontenttype(string)
    : string

  if (typeof header !== 'string') {
    throw new TypeError('argument string is required to be a string')
  }

  var index = header.indexOf(';')
  var type = index !== -1
    ? header.slice(0, index).trim()
    : header.trim()

  if (!TYPE_REGEXP.test(type)) {
    throw new TypeError('invalid media type')
  }

  var obj = new ContentType(type.toLowerCase())

  // parse parameters
  if (index !== -1) {
    var key
    var match
    var value

    PARAM_REGEXP.lastIndex = index

    while ((match = PARAM_REGEXP.exec(header))) {
      if (match.index !== index) {
        throw new TypeError('invalid parameter format')
      }

      index += match[0].length
      key = match[1].toLowerCase()
      value = match[2]

      if (value.charCodeAt(0) === 0x22 /* " */) {
        // remove quotes
        value = value.slice(1, -1)

        // remove escapes
        if (value.indexOf('\\') !== -1) {
          value = value.replace(QESC_REGEXP, '$1')
        }
      }

      obj.parameters[key] = value
    }

    if (index !== header.length) {
      throw new TypeError('invalid parameter format')
    }
  }

  return obj
}

/**
 * Get content-type from req/res objects.
 *
 * @param {object}
 * @return {Object}
 * @private
 */

function getcontenttype (obj) {
  var header

  if (typeof obj.getHeader === 'function') {
    // res-like
    header = obj.getHeader('content-type')
  } else if (typeof obj.headers === 'object') {
    // req-like
    header = obj.headers && obj.headers['content-type']
  }

  if (typeof header !== 'string') {
    throw new TypeError('content-type header is missing from object')
  }

  return header
}

/**
 * Quote a string if necessary.
 *
 * @param {string} val
 * @return {string}
 * @private
 */

function qstring (val) {
  var str = String(val)

  // no need to quote tokens
  if (TOKEN_REGEXP.test(str)) {
    return str
  }

  if (str.length > 0 && !TEXT_REGEXP.test(str)) {
    throw new TypeError('invalid parameter value')
  }

  return '"' + str.replace(QUOTE_REGEXP, '\\$1') + '"'
}

/**
 * Class to represent a content type.
 * @private
 */
function ContentType (type) {
  this.parameters = Object.create(null)
  this.type = type
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\content-type\package.json 
------------------------------------------------------ 
{
  "name": "content-type",
  "description": "Create and parse HTTP Content-Type header",
  "version": "1.0.5",
  "author": "Douglas Christopher Wilson <doug@somethingdoug.com>",
  "license": "MIT",
  "keywords": [
    "content-type",
    "http",
    "req",
    "res",
    "rfc7231"
  ],
  "repository": "jshttp/content-type",
  "devDependencies": {
    "deep-equal": "1.0.1",
    "eslint": "8.32.0",
    "eslint-config-standard": "15.0.1",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "6.1.1",
    "eslint-plugin-standard": "4.1.0",
    "mocha": "10.2.0",
    "nyc": "15.1.0"
  },
  "files": [
    "LICENSE",
    "HISTORY.md",
    "README.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "mocha --reporter spec --check-leaks --bail test/",
    "test-ci": "nyc --reporter=lcovonly --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test",
    "version": "node scripts/version-history.js && git add HISTORY.md"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cookie\index.js 
------------------------------------------------------ 
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module exports.
 * @public
 */

exports.parse = parse;
exports.serialize = serialize;

/**
 * Module variables.
 * @private
 */

var __toString = Object.prototype.toString
var __hasOwnProperty = Object.prototype.hasOwnProperty

/**
 * RegExp to match cookie-name in RFC 6265 sec 4.1.1
 * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2
 * which has been replaced by the token definition in RFC 7230 appendix B.
 *
 * cookie-name       = token
 * token             = 1*tchar
 * tchar             = "!" / "#" / "$" / "%" / "&" / "'" /
 *                     "*" / "+" / "-" / "." / "^" / "_" /
 *                     "`" / "|" / "~" / DIGIT / ALPHA
 */

var cookieNameRegExp = /^[!#$%&'*+\-.^_`|~0-9A-Za-z]+$/;

/**
 * RegExp to match cookie-value in RFC 6265 sec 4.1.1
 *
 * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )
 * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E
 *                     ; US-ASCII characters excluding CTLs,
 *                     ; whitespace DQUOTE, comma, semicolon,
 *                     ; and backslash
 */

var cookieValueRegExp = /^("?)[\u0021\u0023-\u002B\u002D-\u003A\u003C-\u005B\u005D-\u007E]*\1$/;

/**
 * RegExp to match domain-value in RFC 6265 sec 4.1.1
 *
 * domain-value      = <subdomain>
 *                     ; defined in [RFC1034], Section 3.5, as
 *                     ; enhanced by [RFC1123], Section 2.1
 * <subdomain>       = <label> | <subdomain> "." <label>
 * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]
 *                     Labels must be 63 characters or less.
 *                     'let-dig' not 'letter' in the first char, per RFC1123
 * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>
 * <let-dig-hyp>     = <let-dig> | "-"
 * <let-dig>         = <letter> | <digit>
 * <letter>          = any one of the 52 alphabetic characters A through Z in
 *                     upper case and a through z in lower case
 * <digit>           = any one of the ten digits 0 through 9
 *
 * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173
 *
 * > (Note that a leading %x2E ("."), if present, is ignored even though that
 * character is not permitted, but a trailing %x2E ("."), if present, will
 * cause the user agent to ignore the attribute.)
 */

var domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;

/**
 * RegExp to match path-value in RFC 6265 sec 4.1.1
 *
 * path-value        = <any CHAR except CTLs or ";">
 * CHAR              = %x01-7F
 *                     ; defined in RFC 5234 appendix B.1
 */

var pathValueRegExp = /^[\u0020-\u003A\u003D-\u007E]*$/;

/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 *
 * @param {string} str
 * @param {object} [opt]
 * @return {object}
 * @public
 */

function parse(str, opt) {
  if (typeof str !== 'string') {
    throw new TypeError('argument str must be a string');
  }

  var obj = {};
  var len = str.length;
  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.
  if (len < 2) return obj;

  var dec = (opt && opt.decode) || decode;
  var index = 0;
  var eqIdx = 0;
  var endIdx = 0;

  do {
    eqIdx = str.indexOf('=', index);
    if (eqIdx === -1) break; // No more cookie pairs.

    endIdx = str.indexOf(';', index);

    if (endIdx === -1) {
      endIdx = len;
    } else if (eqIdx > endIdx) {
      // backtrack on prior semicolon
      index = str.lastIndexOf(';', eqIdx - 1) + 1;
      continue;
    }

    var keyStartIdx = startIndex(str, index, eqIdx);
    var keyEndIdx = endIndex(str, eqIdx, keyStartIdx);
    var key = str.slice(keyStartIdx, keyEndIdx);

    // only assign once
    if (!__hasOwnProperty.call(obj, key)) {
      var valStartIdx = startIndex(str, eqIdx + 1, endIdx);
      var valEndIdx = endIndex(str, endIdx, valStartIdx);

      if (str.charCodeAt(valStartIdx) === 0x22 /* " */ && str.charCodeAt(valEndIdx - 1) === 0x22 /* " */) {
        valStartIdx++;
        valEndIdx--;
      }

      var val = str.slice(valStartIdx, valEndIdx);
      obj[key] = tryDecode(val, dec);
    }

    index = endIdx + 1
  } while (index < len);

  return obj;
}

function startIndex(str, index, max) {
  do {
    var code = str.charCodeAt(index);
    if (code !== 0x20 /*   */ && code !== 0x09 /* \t */) return index;
  } while (++index < max);
  return max;
}

function endIndex(str, index, min) {
  while (index > min) {
    var code = str.charCodeAt(--index);
    if (code !== 0x20 /*   */ && code !== 0x09 /* \t */) return index + 1;
  }
  return min;
}

/**
 * Serialize data into a cookie header.
 *
 * Serialize a name value pair into a cookie string suitable for
 * http headers. An optional options object specifies cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 *
 * @param {string} name
 * @param {string} val
 * @param {object} [opt]
 * @return {string}
 * @public
 */

function serialize(name, val, opt) {
  var enc = (opt && opt.encode) || encodeURIComponent;

  if (typeof enc !== 'function') {
    throw new TypeError('option encode is invalid');
  }

  if (!cookieNameRegExp.test(name)) {
    throw new TypeError('argument name is invalid');
  }

  var value = enc(val);

  if (!cookieValueRegExp.test(value)) {
    throw new TypeError('argument val is invalid');
  }

  var str = name + '=' + value;
  if (!opt) return str;

  if (null != opt.maxAge) {
    var maxAge = Math.floor(opt.maxAge);

    if (!isFinite(maxAge)) {
      throw new TypeError('option maxAge is invalid')
    }

    str += '; Max-Age=' + maxAge;
  }

  if (opt.domain) {
    if (!domainValueRegExp.test(opt.domain)) {
      throw new TypeError('option domain is invalid');
    }

    str += '; Domain=' + opt.domain;
  }

  if (opt.path) {
    if (!pathValueRegExp.test(opt.path)) {
      throw new TypeError('option path is invalid');
    }

    str += '; Path=' + opt.path;
  }

  if (opt.expires) {
    var expires = opt.expires

    if (!isDate(expires) || isNaN(expires.valueOf())) {
      throw new TypeError('option expires is invalid');
    }

    str += '; Expires=' + expires.toUTCString()
  }

  if (opt.httpOnly) {
    str += '; HttpOnly';
  }

  if (opt.secure) {
    str += '; Secure';
  }

  if (opt.partitioned) {
    str += '; Partitioned'
  }

  if (opt.priority) {
    var priority = typeof opt.priority === 'string'
      ? opt.priority.toLowerCase() : opt.priority;

    switch (priority) {
      case 'low':
        str += '; Priority=Low'
        break
      case 'medium':
        str += '; Priority=Medium'
        break
      case 'high':
        str += '; Priority=High'
        break
      default:
        throw new TypeError('option priority is invalid')
    }
  }

  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === 'string'
      ? opt.sameSite.toLowerCase() : opt.sameSite;

    switch (sameSite) {
      case true:
        str += '; SameSite=Strict';
        break;
      case 'lax':
        str += '; SameSite=Lax';
        break;
      case 'strict':
        str += '; SameSite=Strict';
        break;
      case 'none':
        str += '; SameSite=None';
        break;
      default:
        throw new TypeError('option sameSite is invalid');
    }
  }

  return str;
}

/**
 * URL-decode string value. Optimized to skip native call when no %.
 *
 * @param {string} str
 * @returns {string}
 */

function decode (str) {
  return str.indexOf('%') !== -1
    ? decodeURIComponent(str)
    : str
}

/**
 * Determine if value is a Date.
 *
 * @param {*} val
 * @private
 */

function isDate (val) {
  return __toString.call(val) === '[object Date]';
}

/**
 * Try decoding a string using a decoding function.
 *
 * @param {string} str
 * @param {function} decode
 * @private
 */

function tryDecode(str, decode) {
  try {
    return decode(str);
  } catch (e) {
    return str;
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cookie\package.json 
------------------------------------------------------ 
{
  "name": "cookie",
  "description": "HTTP server cookie parsing and serialization",
  "version": "0.7.2",
  "author": "Roman Shtylman <shtylman@gmail.com>",
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>"
  ],
  "license": "MIT",
  "keywords": [
    "cookie",
    "cookies"
  ],
  "repository": "jshttp/cookie",
  "devDependencies": {
    "beautify-benchmark": "0.2.4",
    "benchmark": "2.1.4",
    "eslint": "8.53.0",
    "eslint-plugin-markdown": "3.0.1",
    "mocha": "10.2.0",
    "nyc": "15.1.0",
    "safe-buffer": "5.2.1",
    "top-sites": "1.1.194"
  },
  "files": [
    "HISTORY.md",
    "LICENSE",
    "README.md",
    "SECURITY.md",
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "bench": "node benchmark/index.js",
    "lint": "eslint .",
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test",
    "update-bench": "node scripts/update-benchmark.js"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cookie-signature\index.js 
------------------------------------------------------ 
/**
 * Module dependencies.
 */

var crypto = require('crypto');

/**
 * Sign the given `val` with `secret`.
 *
 * @param {String} val
 * @param {String|NodeJS.ArrayBufferView|crypto.KeyObject} secret
 * @return {String}
 * @api private
 */

exports.sign = function(val, secret){
  if ('string' != typeof val) throw new TypeError("Cookie value must be provided as a string.");
  if (null == secret) throw new TypeError("Secret key must be provided.");
  return val + '.' + crypto
    .createHmac('sha256', secret)
    .update(val)
    .digest('base64')
    .replace(/\=+$/, '');
};

/**
 * Unsign and decode the given `input` with `secret`,
 * returning `false` if the signature is invalid.
 *
 * @param {String} input
 * @param {String|NodeJS.ArrayBufferView|crypto.KeyObject} secret
 * @return {String|Boolean}
 * @api private
 */

exports.unsign = function(input, secret){
  if ('string' != typeof input) throw new TypeError("Signed cookie string must be provided.");
  if (null == secret) throw new TypeError("Secret key must be provided.");
  var tentativeValue = input.slice(0, input.lastIndexOf('.')),
      expectedInput = exports.sign(tentativeValue, secret),
      expectedBuffer = Buffer.from(expectedInput),
      inputBuffer = Buffer.from(input);
  return (
    expectedBuffer.length === inputBuffer.length &&
    crypto.timingSafeEqual(expectedBuffer, inputBuffer)
   ) ? tentativeValue : false;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cookie-signature\package.json 
------------------------------------------------------ 
{
  "name": "cookie-signature",
  "version": "1.2.2",
  "main": "index.js",
  "description": "Sign and unsign cookies",
  "keywords": ["cookie", "sign", "unsign"],
  "author": "TJ Holowaychuk <tj@learnboost.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/visionmedia/node-cookie-signature.git"
  },
  "dependencies": {},
  "engines": {
    "node": ">=6.6.0"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "mocha --require should --reporter spec"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cors\package.json 
------------------------------------------------------ 
{
  "name": "cors",
  "description": "Node.js CORS middleware",
  "version": "2.8.5",
  "author": "Troy Goode <troygoode@gmail.com> (https://github.com/troygoode/)",
  "license": "MIT",
  "keywords": [
    "cors",
    "express",
    "connect",
    "middleware"
  ],
  "repository": "expressjs/cors",
  "main": "./lib/index.js",
  "dependencies": {
    "object-assign": "^4",
    "vary": "^1"
  },
  "devDependencies": {
    "after": "0.8.2",
    "eslint": "2.13.1",
    "express": "4.16.3",
    "mocha": "5.2.0",
    "nyc": "13.1.0",
    "supertest": "3.3.0"
  },
  "files": [
    "lib/index.js",
    "CONTRIBUTING.md",
    "HISTORY.md",
    "LICENSE",
    "README.md"
  ],
  "engines": {
    "node": ">= 0.10"
  },
  "scripts": {
    "test": "npm run lint && nyc --reporter=html --reporter=text mocha --require test/support/env",
    "lint": "eslint lib test"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cors\lib\index.js 
------------------------------------------------------ 
(function () {

  'use strict';

  var assign = require('object-assign');
  var vary = require('vary');

  var defaults = {
    origin: '*',
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
    preflightContinue: false,
    optionsSuccessStatus: 204
  };

  function isString(s) {
    return typeof s === 'string' || s instanceof String;
  }

  function isOriginAllowed(origin, allowedOrigin) {
    if (Array.isArray(allowedOrigin)) {
      for (var i = 0; i < allowedOrigin.length; ++i) {
        if (isOriginAllowed(origin, allowedOrigin[i])) {
          return true;
        }
      }
      return false;
    } else if (isString(allowedOrigin)) {
      return origin === allowedOrigin;
    } else if (allowedOrigin instanceof RegExp) {
      return allowedOrigin.test(origin);
    } else {
      return !!allowedOrigin;
    }
  }

  function configureOrigin(options, req) {
    var requestOrigin = req.headers.origin,
      headers = [],
      isAllowed;

    if (!options.origin || options.origin === '*') {
      // allow any origin
      headers.push([{
        key: 'Access-Control-Allow-Origin',
        value: '*'
      }]);
    } else if (isString(options.origin)) {
      // fixed origin
      headers.push([{
        key: 'Access-Control-Allow-Origin',
        value: options.origin
      }]);
      headers.push([{
        key: 'Vary',
        value: 'Origin'
      }]);
    } else {
      isAllowed = isOriginAllowed(requestOrigin, options.origin);
      // reflect origin
      headers.push([{
        key: 'Access-Control-Allow-Origin',
        value: isAllowed ? requestOrigin : false
      }]);
      headers.push([{
        key: 'Vary',
        value: 'Origin'
      }]);
    }

    return headers;
  }

  function configureMethods(options) {
    var methods = options.methods;
    if (methods.join) {
      methods = options.methods.join(','); // .methods is an array, so turn it into a string
    }
    return {
      key: 'Access-Control-Allow-Methods',
      value: methods
    };
  }

  function configureCredentials(options) {
    if (options.credentials === true) {
      return {
        key: 'Access-Control-Allow-Credentials',
        value: 'true'
      };
    }
    return null;
  }

  function configureAllowedHeaders(options, req) {
    var allowedHeaders = options.allowedHeaders || options.headers;
    var headers = [];

    if (!allowedHeaders) {
      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers
      headers.push([{
        key: 'Vary',
        value: 'Access-Control-Request-Headers'
      }]);
    } else if (allowedHeaders.join) {
      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string
    }
    if (allowedHeaders && allowedHeaders.length) {
      headers.push([{
        key: 'Access-Control-Allow-Headers',
        value: allowedHeaders
      }]);
    }

    return headers;
  }

  function configureExposedHeaders(options) {
    var headers = options.exposedHeaders;
    if (!headers) {
      return null;
    } else if (headers.join) {
      headers = headers.join(','); // .headers is an array, so turn it into a string
    }
    if (headers && headers.length) {
      return {
        key: 'Access-Control-Expose-Headers',
        value: headers
      };
    }
    return null;
  }

  function configureMaxAge(options) {
    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()
    if (maxAge && maxAge.length) {
      return {
        key: 'Access-Control-Max-Age',
        value: maxAge
      };
    }
    return null;
  }

  function applyHeaders(headers, res) {
    for (var i = 0, n = headers.length; i < n; i++) {
      var header = headers[i];
      if (header) {
        if (Array.isArray(header)) {
          applyHeaders(header, res);
        } else if (header.key === 'Vary' && header.value) {
          vary(res, header.value);
        } else if (header.value) {
          res.setHeader(header.key, header.value);
        }
      }
    }
  }

  function cors(options, req, res, next) {
    var headers = [],
      method = req.method && req.method.toUpperCase && req.method.toUpperCase();

    if (method === 'OPTIONS') {
      // preflight
      headers.push(configureOrigin(options, req));
      headers.push(configureCredentials(options, req));
      headers.push(configureMethods(options, req));
      headers.push(configureAllowedHeaders(options, req));
      headers.push(configureMaxAge(options, req));
      headers.push(configureExposedHeaders(options, req));
      applyHeaders(headers, res);

      if (options.preflightContinue) {
        next();
      } else {
        // Safari (and potentially other browsers) need content-length 0,
        //   for 204 or they just hang waiting for a body
        res.statusCode = options.optionsSuccessStatus;
        res.setHeader('Content-Length', '0');
        res.end();
      }
    } else {
      // actual response
      headers.push(configureOrigin(options, req));
      headers.push(configureCredentials(options, req));
      headers.push(configureExposedHeaders(options, req));
      applyHeaders(headers, res);
      next();
    }
  }

  function middlewareWrapper(o) {
    // if options are static (either via defaults or custom options passed in), wrap in a function
    var optionsCallback = null;
    if (typeof o === 'function') {
      optionsCallback = o;
    } else {
      optionsCallback = function (req, cb) {
        cb(null, o);
      };
    }

    return function corsMiddleware(req, res, next) {
      optionsCallback(req, function (err, options) {
        if (err) {
          next(err);
        } else {
          var corsOptions = assign({}, defaults, options);
          var originCallback = null;
          if (corsOptions.origin && typeof corsOptions.origin === 'function') {
            originCallback = corsOptions.origin;
          } else if (corsOptions.origin) {
            originCallback = function (origin, cb) {
              cb(null, corsOptions.origin);
            };
          }

          if (originCallback) {
            originCallback(req.headers.origin, function (err2, origin) {
              if (err2 || !origin) {
                next(err2);
              } else {
                corsOptions.origin = origin;
                cors(corsOptions, req, res, next);
              }
            });
          } else {
            next();
          }
        }
      });
    };
  }

  // can pass either an options hash, an options delegate, or nothing
  module.exports = middlewareWrapper;

}());
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\cors\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\debug\package.json 
------------------------------------------------------ 
{
  "name": "debug",
  "version": "4.4.3",
  "repository": {
    "type": "git",
    "url": "git://github.com/debug-js/debug.git"
  },
  "description": "Lightweight debugging utility for Node.js and the browser",
  "keywords": [
    "debug",
    "log",
    "debugger"
  ],
  "files": [
    "src",
    "LICENSE",
    "README.md"
  ],
  "author": "Josh Junon (https://github.com/qix-)",
  "contributors": [
    "TJ Holowaychuk <tj@vision-media.ca>",
    "Nathan Rajlich <nathan@tootallnate.net> (http://n8.io)",
    "Andrew Rhyne <rhyneandrew@gmail.com>"
  ],
  "license": "MIT",
  "scripts": {
    "lint": "xo",
    "test": "npm run test:node && npm run test:browser && npm run lint",
    "test:node": "mocha test.js test.node.js",
    "test:browser": "karma start --single-run",
    "test:coverage": "cat ./coverage/lcov.info | coveralls"
  },
  "dependencies": {
    "ms": "^2.1.3"
  },
  "devDependencies": {
    "brfs": "^2.0.1",
    "browserify": "^16.2.3",
    "coveralls": "^3.0.2",
    "karma": "^3.1.4",
    "karma-browserify": "^6.0.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-mocha": "^1.3.0",
    "mocha": "^5.2.0",
    "mocha-lcov-reporter": "^1.2.0",
    "sinon": "^14.0.0",
    "xo": "^0.23.0"
  },
  "peerDependenciesMeta": {
    "supports-color": {
      "optional": true
    }
  },
  "main": "./src/index.js",
  "browser": "./src/browser.js",
  "engines": {
    "node": ">=6.0"
  },
  "xo": {
    "rules": {
      "import/extensions": "off"
    }
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\debug\src\browser.js 
------------------------------------------------------ 
/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	let m;

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	// eslint-disable-next-line no-return-assign
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(m[1], 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = require('./common')(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\debug\src\common.js 
------------------------------------------------------ 

/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = require('ms');
	createDebug.destroy = destroy;

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;
		let enableOverride = null;
		let namespacesCache;
		let enabledCache;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return '%';
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.extend = extend;
		debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

		Object.defineProperty(debug, 'enabled', {
			enumerable: true,
			configurable: false,
			get: () => {
				if (enableOverride !== null) {
					return enableOverride;
				}
				if (namespacesCache !== createDebug.namespaces) {
					namespacesCache = createDebug.namespaces;
					enabledCache = createDebug.enabled(namespace);
				}

				return enabledCache;
			},
			set: v => {
				enableOverride = v;
			}
		});

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		return debug;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);
		createDebug.namespaces = namespaces;

		createDebug.names = [];
		createDebug.skips = [];

		const split = (typeof namespaces === 'string' ? namespaces : '')
			.trim()
			.replace(/\s+/g, ',')
			.split(',')
			.filter(Boolean);

		for (const ns of split) {
			if (ns[0] === '-') {
				createDebug.skips.push(ns.slice(1));
			} else {
				createDebug.names.push(ns);
			}
		}
	}

	/**
	 * Checks if the given string matches a namespace template, honoring
	 * asterisks as wildcards.
	 *
	 * @param {String} search
	 * @param {String} template
	 * @return {Boolean}
	 */
	function matchesTemplate(search, template) {
		let searchIndex = 0;
		let templateIndex = 0;
		let starIndex = -1;
		let matchIndex = 0;

		while (searchIndex < search.length) {
			if (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {
				// Match character or proceed with wildcard
				if (template[templateIndex] === '*') {
					starIndex = templateIndex;
					matchIndex = searchIndex;
					templateIndex++; // Skip the '*'
				} else {
					searchIndex++;
					templateIndex++;
				}
			} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition
				// Backtrack to the last '*' and try to match more characters
				templateIndex = starIndex + 1;
				matchIndex++;
				searchIndex = matchIndex;
			} else {
				return false; // No match
			}
		}

		// Handle trailing '*' in template
		while (templateIndex < template.length && template[templateIndex] === '*') {
			templateIndex++;
		}

		return templateIndex === template.length;
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names,
			...createDebug.skips.map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		for (const skip of createDebug.skips) {
			if (matchesTemplate(name, skip)) {
				return false;
			}
		}

		for (const ns of createDebug.names) {
			if (matchesTemplate(name, ns)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	/**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/
	function destroy() {
		console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\debug\src\index.js 
------------------------------------------------------ 
/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = require('./browser.js');
} else {
	module.exports = require('./node.js');
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\debug\src\node.js 
------------------------------------------------------ 
/**
 * Module dependencies.
 */

const tty = require('tty');
const util = require('util');

/**
 * This is the Node.js implementation of `debug()`.
 */

exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.destroy = util.deprecate(
	() => {},
	'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
);

/**
 * Colors.
 */

exports.colors = [6, 2, 3, 4, 5, 1];

try {
	// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)
	// eslint-disable-next-line import/no-extraneous-dependencies
	const supportsColor = require('supports-color');

	if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
		exports.colors = [
			20,
			21,
			26,
			27,
			32,
			33,
			38,
			39,
			40,
			41,
			42,
			43,
			44,
			45,
			56,
			57,
			62,
			63,
			68,
			69,
			74,
			75,
			76,
			77,
			78,
			79,
			80,
			81,
			92,
			93,
			98,
			99,
			112,
			113,
			128,
			129,
			134,
			135,
			148,
			149,
			160,
			161,
			162,
			163,
			164,
			165,
			166,
			167,
			168,
			169,
			170,
			171,
			172,
			173,
			178,
			179,
			184,
			185,
			196,
			197,
			198,
			199,
			200,
			201,
			202,
			203,
			204,
			205,
			206,
			207,
			208,
			209,
			214,
			215,
			220,
			221
		];
	}
} catch (error) {
	// Swallow - we only care if `supports-color` is available; it doesn't have to be.
}

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(key => {
	return /^debug_/i.test(key);
}).reduce((obj, key) => {
	// Camel-case
	const prop = key
		.substring(6)
		.toLowerCase()
		.replace(/_([a-z])/g, (_, k) => {
			return k.toUpperCase();
		});

	// Coerce string value into JS value
	let val = process.env[key];
	if (/^(yes|on|true|enabled)$/i.test(val)) {
		val = true;
	} else if (/^(no|off|false|disabled)$/i.test(val)) {
		val = false;
	} else if (val === 'null') {
		val = null;
	} else {
		val = Number(val);
	}

	obj[prop] = val;
	return obj;
}, {});

/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
	return 'colors' in exports.inspectOpts ?
		Boolean(exports.inspectOpts.colors) :
		tty.isatty(process.stderr.fd);
}

/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	const {namespace: name, useColors} = this;

	if (useColors) {
		const c = this.color;
		const colorCode = '\u001B[3' + (c < 8 ? c : '8;5;' + c);
		const prefix = `  ${colorCode};1m${name} \u001B[0m`;

		args[0] = prefix + args[0].split('\n').join('\n' + prefix);
		args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\u001B[0m');
	} else {
		args[0] = getDate() + name + ' ' + args[0];
	}
}

function getDate() {
	if (exports.inspectOpts.hideDate) {
		return '';
	}
	return new Date().toISOString() + ' ';
}

/**
 * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.
 */

function log(...args) {
	return process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\n');
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	if (namespaces) {
		process.env.DEBUG = namespaces;
	} else {
		// If you set a process.env field to null or undefined, it gets cast to the
		// string 'null' or 'undefined'. Just delete instead.
		delete process.env.DEBUG;
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
	return process.env.DEBUG;
}

/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */

function init(debug) {
	debug.inspectOpts = {};

	const keys = Object.keys(exports.inspectOpts);
	for (let i = 0; i < keys.length; i++) {
		debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
	}
}

module.exports = require('./common')(exports);

const {formatters} = module.exports;

/**
 * Map %o to `util.inspect()`, all on a single line.
 */

formatters.o = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts)
		.split('\n')
		.map(str => str.trim())
		.join(' ');
};

/**
 * Map %O to `util.inspect()`, allowing multiple lines if needed.
 */

formatters.O = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts);
};
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\debug\src\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\decompress-response\index.js 
------------------------------------------------------ 
'use strict';
const {Transform, PassThrough} = require('stream');
const zlib = require('zlib');
const mimicResponse = require('mimic-response');

module.exports = response => {
	const contentEncoding = (response.headers['content-encoding'] || '').toLowerCase();

	if (!['gzip', 'deflate', 'br'].includes(contentEncoding)) {
		return response;
	}

	// TODO: Remove this when targeting Node.js 12.
	const isBrotli = contentEncoding === 'br';
	if (isBrotli && typeof zlib.createBrotliDecompress !== 'function') {
		response.destroy(new Error('Brotli is not supported on Node.js < 12'));
		return response;
	}

	let isEmpty = true;

	const checker = new Transform({
		transform(data, _encoding, callback) {
			isEmpty = false;

			callback(null, data);
		},

		flush(callback) {
			callback();
		}
	});

	const finalStream = new PassThrough({
		autoDestroy: false,
		destroy(error, callback) {
			response.destroy();

			callback(error);
		}
	});

	const decompressStream = isBrotli ? zlib.createBrotliDecompress() : zlib.createUnzip();

	decompressStream.once('error', error => {
		if (isEmpty && !response.readable) {
			finalStream.end();
			return;
		}

		finalStream.destroy(error);
	});

	mimicResponse(response, finalStream);
	response.pipe(checker).pipe(decompressStream).pipe(finalStream);

	return finalStream;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\decompress-response\package.json 
------------------------------------------------------ 
{
	"name": "decompress-response",
	"version": "6.0.0",
	"description": "Decompress a HTTP response if needed",
	"license": "MIT",
	"repository": "sindresorhus/decompress-response",
	"funding": "https://github.com/sponsors/sindresorhus",
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "https://sindresorhus.com"
	},
	"engines": {
		"node": ">=10"
	},
	"scripts": {
		"test": "xo && ava && tsd"
	},
	"files": [
		"index.js",
		"index.d.ts"
	],
	"keywords": [
		"decompress",
		"response",
		"http",
		"https",
		"zlib",
		"gzip",
		"zip",
		"deflate",
		"unzip",
		"ungzip",
		"incoming",
		"message",
		"stream",
		"compressed",
		"brotli"
	],
	"dependencies": {
		"mimic-response": "^3.1.0"
	},
	"devDependencies": {
		"@types/node": "^14.0.1",
		"ava": "^2.2.0",
		"get-stream": "^5.0.0",
		"pify": "^5.0.0",
		"tsd": "^0.11.0",
		"xo": "^0.30.0"
	},
	"xo": {
		"rules": {
			"@typescript-eslint/prefer-readonly-parameter-types": "off"
		}
	}
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\deep-extend\index.js 
------------------------------------------------------ 
module.exports = require('./lib/deep-extend');
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\deep-extend\package.json 
------------------------------------------------------ 
{
  "name": "deep-extend",
  "description": "Recursive object extending",
  "license": "MIT",
  "version": "0.6.0",
  "homepage": "https://github.com/unclechu/node-deep-extend",
  "keywords": [
    "deep-extend",
    "extend",
    "deep",
    "recursive",
    "xtend",
    "clone",
    "merge",
    "json"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.githubusercontent.com/unclechu/node-deep-extend/master/LICENSE"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/unclechu/node-deep-extend.git"
  },
  "author": "Viacheslav Lotsmanov <lotsmanov89@gmail.com>",
  "bugs": "https://github.com/unclechu/node-deep-extend/issues",
  "contributors": [
    {
      "name": "Romain Prieto",
      "url": "https://github.com/rprieto"
    },
    {
      "name": "Max Maximov",
      "url": "https://github.com/maxmaximov"
    },
    {
      "name": "Marshall Bowers",
      "url": "https://github.com/maxdeviant"
    },
    {
      "name": "Misha Wakerman",
      "url": "https://github.com/mwakerman"
    }
  ],
  "main": "lib/deep-extend.js",
  "engines": {
    "node": ">=4.0.0"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha"
  },
  "devDependencies": {
    "mocha": "5.2.0",
    "should": "13.2.1"
  },
  "files": [
    "index.js",
    "lib/"
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\deep-extend\lib\deep-extend.js 
------------------------------------------------------ 
/*!
 * @description Recursive object extending
 * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>
 * @license MIT
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2013-2018 Viacheslav Lotsmanov
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

'use strict';

function isSpecificValue(val) {
	return (
		val instanceof Buffer
		|| val instanceof Date
		|| val instanceof RegExp
	) ? true : false;
}

function cloneSpecificValue(val) {
	if (val instanceof Buffer) {
		var x = Buffer.alloc
			? Buffer.alloc(val.length)
			: new Buffer(val.length);
		val.copy(x);
		return x;
	} else if (val instanceof Date) {
		return new Date(val.getTime());
	} else if (val instanceof RegExp) {
		return new RegExp(val);
	} else {
		throw new Error('Unexpected situation');
	}
}

/**
 * Recursive cloning array.
 */
function deepCloneArray(arr) {
	var clone = [];
	arr.forEach(function (item, index) {
		if (typeof item === 'object' && item !== null) {
			if (Array.isArray(item)) {
				clone[index] = deepCloneArray(item);
			} else if (isSpecificValue(item)) {
				clone[index] = cloneSpecificValue(item);
			} else {
				clone[index] = deepExtend({}, item);
			}
		} else {
			clone[index] = item;
		}
	});
	return clone;
}

function safeGetProperty(object, property) {
	return property === '__proto__' ? undefined : object[property];
}

/**
 * Extening object that entered in first argument.
 *
 * Returns extended object or false if have no target object or incorrect type.
 *
 * If you wish to clone source object (without modify it), just use empty new
 * object as first argument, like this:
 *   deepExtend({}, yourObj_1, [yourObj_N]);
 */
var deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {
	if (arguments.length < 1 || typeof arguments[0] !== 'object') {
		return false;
	}

	if (arguments.length < 2) {
		return arguments[0];
	}

	var target = arguments[0];

	// convert arguments to array and cut off target object
	var args = Array.prototype.slice.call(arguments, 1);

	var val, src, clone;

	args.forEach(function (obj) {
		// skip argument if isn't an object, is null, or is an array
		if (typeof obj !== 'object' || obj === null || Array.isArray(obj)) {
			return;
		}

		Object.keys(obj).forEach(function (key) {
			src = safeGetProperty(target, key); // source value
			val = safeGetProperty(obj, key); // new value

			// recursion prevention
			if (val === target) {
				return;

			/**
			 * if new value isn't object then just overwrite by new value
			 * instead of extending.
			 */
			} else if (typeof val !== 'object' || val === null) {
				target[key] = val;
				return;

			// just clone arrays (and recursive clone objects inside)
			} else if (Array.isArray(val)) {
				target[key] = deepCloneArray(val);
				return;

			// custom cloning and overwrite for specific objects
			} else if (isSpecificValue(val)) {
				target[key] = cloneSpecificValue(val);
				return;

			// overwrite by new value if source isn't object or array
			} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {
				target[key] = deepExtend({}, val);
				return;

			// source value and new value is objects both, extending...
			} else {
				target[key] = deepExtend(src, val);
				return;
			}
		});
	});

	return target;
};
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\deep-extend\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\delegates\index.js 
------------------------------------------------------ 

/**
 * Expose `Delegator`.
 */

module.exports = Delegator;

/**
 * Initialize a delegator.
 *
 * @param {Object} proto
 * @param {String} target
 * @api public
 */

function Delegator(proto, target) {
  if (!(this instanceof Delegator)) return new Delegator(proto, target);
  this.proto = proto;
  this.target = target;
  this.methods = [];
  this.getters = [];
  this.setters = [];
  this.fluents = [];
}

/**
 * Delegate method `name`.
 *
 * @param {String} name
 * @return {Delegator} self
 * @api public
 */

Delegator.prototype.method = function(name){
  var proto = this.proto;
  var target = this.target;
  this.methods.push(name);

  proto[name] = function(){
    return this[target][name].apply(this[target], arguments);
  };

  return this;
};

/**
 * Delegator accessor `name`.
 *
 * @param {String} name
 * @return {Delegator} self
 * @api public
 */

Delegator.prototype.access = function(name){
  return this.getter(name).setter(name);
};

/**
 * Delegator getter `name`.
 *
 * @param {String} name
 * @return {Delegator} self
 * @api public
 */

Delegator.prototype.getter = function(name){
  var proto = this.proto;
  var target = this.target;
  this.getters.push(name);

  proto.__defineGetter__(name, function(){
    return this[target][name];
  });

  return this;
};

/**
 * Delegator setter `name`.
 *
 * @param {String} name
 * @return {Delegator} self
 * @api public
 */

Delegator.prototype.setter = function(name){
  var proto = this.proto;
  var target = this.target;
  this.setters.push(name);

  proto.__defineSetter__(name, function(val){
    return this[target][name] = val;
  });

  return this;
};

/**
 * Delegator fluent accessor
 *
 * @param {String} name
 * @return {Delegator} self
 * @api public
 */

Delegator.prototype.fluent = function (name) {
  var proto = this.proto;
  var target = this.target;
  this.fluents.push(name);

  proto[name] = function(val){
    if ('undefined' != typeof val) {
      this[target][name] = val;
      return this;
    } else {
      return this[target][name];
    }
  };

  return this;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\delegates\package.json 
------------------------------------------------------ 
{
  "name": "delegates",
  "version": "1.0.0",
  "repository": "visionmedia/node-delegates",
  "description": "delegate methods and accessors to another property",
  "keywords": ["delegate", "delegation"],
  "dependencies": {},
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "license": "MIT"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\delegates\test\index.js 
------------------------------------------------------ 

var assert = require('assert');
var delegate = require('..');

describe('.method(name)', function(){
  it('should delegate methods', function(){
    var obj = {};

    obj.request = {
      foo: function(bar){
        assert(this == obj.request);
        return bar;
      }
    };

    delegate(obj, 'request').method('foo');

    obj.foo('something').should.equal('something');
  })
})

describe('.getter(name)', function(){
  it('should delegate getters', function(){
    var obj = {};

    obj.request = {
      get type() {
        return 'text/html';
      }
    }

    delegate(obj, 'request').getter('type');

    obj.type.should.equal('text/html');
  })
})

describe('.setter(name)', function(){
  it('should delegate setters', function(){
    var obj = {};

    obj.request = {
      get type() {
        return this._type.toUpperCase();
      },

      set type(val) {
        this._type = val;
      }
    }

    delegate(obj, 'request').setter('type');

    obj.type = 'hey';
    obj.request.type.should.equal('HEY');
  })
})

describe('.access(name)', function(){
  it('should delegate getters and setters', function(){
    var obj = {};

    obj.request = {
      get type() {
        return this._type.toUpperCase();
      },

      set type(val) {
        this._type = val;
      }
    }

    delegate(obj, 'request').access('type');

    obj.type = 'hey';
    obj.type.should.equal('HEY');
  })
})

describe('.fluent(name)', function () {
  it('should delegate in a fluent fashion', function () {
    var obj = {
      settings: {
        env: 'development'
      }
    };

    delegate(obj, 'settings').fluent('env');

    obj.env().should.equal('development');
    obj.env('production').should.equal(obj);
    obj.settings.env.should.equal('production');
  })
})
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\delegates\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\depd\index.js 
------------------------------------------------------ 
/*!
 * depd
 * Copyright(c) 2014-2018 Douglas Christopher Wilson
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var relative = require('path').relative

/**
 * Module exports.
 */

module.exports = depd

/**
 * Get the path to base files on.
 */

var basePath = process.cwd()

/**
 * Determine if namespace is contained in the string.
 */

function containsNamespace (str, namespace) {
  var vals = str.split(/[ ,]+/)
  var ns = String(namespace).toLowerCase()

  for (var i = 0; i < vals.length; i++) {
    var val = vals[i]

    // namespace contained
    if (val && (val === '*' || val.toLowerCase() === ns)) {
      return true
    }
  }

  return false
}

/**
 * Convert a data descriptor to accessor descriptor.
 */

function convertDataDescriptorToAccessor (obj, prop, message) {
  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)
  var value = descriptor.value

  descriptor.get = function getter () { return value }

  if (descriptor.writable) {
    descriptor.set = function setter (val) { return (value = val) }
  }

  delete descriptor.value
  delete descriptor.writable

  Object.defineProperty(obj, prop, descriptor)

  return descriptor
}

/**
 * Create arguments string to keep arity.
 */

function createArgumentsString (arity) {
  var str = ''

  for (var i = 0; i < arity; i++) {
    str += ', arg' + i
  }

  return str.substr(2)
}

/**
 * Create stack string from stack.
 */

function createStackString (stack) {
  var str = this.name + ': ' + this.namespace

  if (this.message) {
    str += ' deprecated ' + this.message
  }

  for (var i = 0; i < stack.length; i++) {
    str += '\n    at ' + stack[i].toString()
  }

  return str
}

/**
 * Create deprecate for namespace in caller.
 */

function depd (namespace) {
  if (!namespace) {
    throw new TypeError('argument namespace is required')
  }

  var stack = getStack()
  var site = callSiteLocation(stack[1])
  var file = site[0]

  function deprecate (message) {
    // call to self as log
    log.call(deprecate, message)
  }

  deprecate._file = file
  deprecate._ignored = isignored(namespace)
  deprecate._namespace = namespace
  deprecate._traced = istraced(namespace)
  deprecate._warned = Object.create(null)

  deprecate.function = wrapfunction
  deprecate.property = wrapproperty

  return deprecate
}

/**
 * Determine if event emitter has listeners of a given type.
 *
 * The way to do this check is done three different ways in Node.js >= 0.8
 * so this consolidates them into a minimal set using instance methods.
 *
 * @param {EventEmitter} emitter
 * @param {string} type
 * @returns {boolean}
 * @private
 */

function eehaslisteners (emitter, type) {
  var count = typeof emitter.listenerCount !== 'function'
    ? emitter.listeners(type).length
    : emitter.listenerCount(type)

  return count > 0
}

/**
 * Determine if namespace is ignored.
 */

function isignored (namespace) {
  if (process.noDeprecation) {
    // --no-deprecation support
    return true
  }

  var str = process.env.NO_DEPRECATION || ''

  // namespace ignored
  return containsNamespace(str, namespace)
}

/**
 * Determine if namespace is traced.
 */

function istraced (namespace) {
  if (process.traceDeprecation) {
    // --trace-deprecation support
    return true
  }

  var str = process.env.TRACE_DEPRECATION || ''

  // namespace traced
  return containsNamespace(str, namespace)
}

/**
 * Display deprecation message.
 */

function log (message, site) {
  var haslisteners = eehaslisteners(process, 'deprecation')

  // abort early if no destination
  if (!haslisteners && this._ignored) {
    return
  }

  var caller
  var callFile
  var callSite
  var depSite
  var i = 0
  var seen = false
  var stack = getStack()
  var file = this._file

  if (site) {
    // provided site
    depSite = site
    callSite = callSiteLocation(stack[1])
    callSite.name = depSite.name
    file = callSite[0]
  } else {
    // get call site
    i = 2
    depSite = callSiteLocation(stack[i])
    callSite = depSite
  }

  // get caller of deprecated thing in relation to file
  for (; i < stack.length; i++) {
    caller = callSiteLocation(stack[i])
    callFile = caller[0]

    if (callFile === file) {
      seen = true
    } else if (callFile === this._file) {
      file = this._file
    } else if (seen) {
      break
    }
  }

  var key = caller
    ? depSite.join(':') + '__' + caller.join(':')
    : undefined

  if (key !== undefined && key in this._warned) {
    // already warned
    return
  }

  this._warned[key] = true

  // generate automatic message from call site
  var msg = message
  if (!msg) {
    msg = callSite === depSite || !callSite.name
      ? defaultMessage(depSite)
      : defaultMessage(callSite)
  }

  // emit deprecation if listeners exist
  if (haslisteners) {
    var err = DeprecationError(this._namespace, msg, stack.slice(i))
    process.emit('deprecation', err)
    return
  }

  // format and write message
  var format = process.stderr.isTTY
    ? formatColor
    : formatPlain
  var output = format.call(this, msg, caller, stack.slice(i))
  process.stderr.write(output + '\n', 'utf8')
}

/**
 * Get call site location as array.
 */

function callSiteLocation (callSite) {
  var file = callSite.getFileName() || '<anonymous>'
  var line = callSite.getLineNumber()
  var colm = callSite.getColumnNumber()

  if (callSite.isEval()) {
    file = callSite.getEvalOrigin() + ', ' + file
  }

  var site = [file, line, colm]

  site.callSite = callSite
  site.name = callSite.getFunctionName()

  return site
}

/**
 * Generate a default message from the site.
 */

function defaultMessage (site) {
  var callSite = site.callSite
  var funcName = site.name

  // make useful anonymous name
  if (!funcName) {
    funcName = '<anonymous@' + formatLocation(site) + '>'
  }

  var context = callSite.getThis()
  var typeName = context && callSite.getTypeName()

  // ignore useless type name
  if (typeName === 'Object') {
    typeName = undefined
  }

  // make useful type name
  if (typeName === 'Function') {
    typeName = context.name || typeName
  }

  return typeName && callSite.getMethodName()
    ? typeName + '.' + funcName
    : funcName
}

/**
 * Format deprecation message without color.
 */

function formatPlain (msg, caller, stack) {
  var timestamp = new Date().toUTCString()

  var formatted = timestamp +
    ' ' + this._namespace +
    ' deprecated ' + msg

  // add stack trace
  if (this._traced) {
    for (var i = 0; i < stack.length; i++) {
      formatted += '\n    at ' + stack[i].toString()
    }

    return formatted
  }

  if (caller) {
    formatted += ' at ' + formatLocation(caller)
  }

  return formatted
}

/**
 * Format deprecation message with color.
 */

function formatColor (msg, caller, stack) {
  var formatted = '\x1b[36;1m' + this._namespace + '\x1b[22;39m' + // bold cyan
    ' \x1b[33;1mdeprecated\x1b[22;39m' + // bold yellow
    ' \x1b[0m' + msg + '\x1b[39m' // reset

  // add stack trace
  if (this._traced) {
    for (var i = 0; i < stack.length; i++) {
      formatted += '\n    \x1b[36mat ' + stack[i].toString() + '\x1b[39m' // cyan
    }

    return formatted
  }

  if (caller) {
    formatted += ' \x1b[36m' + formatLocation(caller) + '\x1b[39m' // cyan
  }

  return formatted
}

/**
 * Format call site location.
 */

function formatLocation (callSite) {
  return relative(basePath, callSite[0]) +
    ':' + callSite[1] +
    ':' + callSite[2]
}

/**
 * Get the stack as array of call sites.
 */

function getStack () {
  var limit = Error.stackTraceLimit
  var obj = {}
  var prep = Error.prepareStackTrace

  Error.prepareStackTrace = prepareObjectStackTrace
  Error.stackTraceLimit = Math.max(10, limit)

  // capture the stack
  Error.captureStackTrace(obj)

  // slice this function off the top
  var stack = obj.stack.slice(1)

  Error.prepareStackTrace = prep
  Error.stackTraceLimit = limit

  return stack
}

/**
 * Capture call site stack from v8.
 */

function prepareObjectStackTrace (obj, stack) {
  return stack
}

/**
 * Return a wrapped function in a deprecation message.
 */

function wrapfunction (fn, message) {
  if (typeof fn !== 'function') {
    throw new TypeError('argument fn must be a function')
  }

  var args = createArgumentsString(fn.length)
  var stack = getStack()
  var site = callSiteLocation(stack[1])

  site.name = fn.name

  // eslint-disable-next-line no-new-func
  var deprecatedfn = new Function('fn', 'log', 'deprecate', 'message', 'site',
    '"use strict"\n' +
    'return function (' + args + ') {' +
    'log.call(deprecate, message, site)\n' +
    'return fn.apply(this, arguments)\n' +
    '}')(fn, log, this, message, site)

  return deprecatedfn
}

/**
 * Wrap property in a deprecation message.
 */

function wrapproperty (obj, prop, message) {
  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
    throw new TypeError('argument obj must be object')
  }

  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)

  if (!descriptor) {
    throw new TypeError('must call property on owner object')
  }

  if (!descriptor.configurable) {
    throw new TypeError('property must be configurable')
  }

  var deprecate = this
  var stack = getStack()
  var site = callSiteLocation(stack[1])

  // set site name
  site.name = prop

  // convert data descriptor
  if ('value' in descriptor) {
    descriptor = convertDataDescriptorToAccessor(obj, prop, message)
  }

  var get = descriptor.get
  var set = descriptor.set

  // wrap getter
  if (typeof get === 'function') {
    descriptor.get = function getter () {
      log.call(deprecate, message, site)
      return get.apply(this, arguments)
    }
  }

  // wrap setter
  if (typeof set === 'function') {
    descriptor.set = function setter () {
      log.call(deprecate, message, site)
      return set.apply(this, arguments)
    }
  }

  Object.defineProperty(obj, prop, descriptor)
}

/**
 * Create DeprecationError for deprecation
 */

function DeprecationError (namespace, message, stack) {
  var error = new Error()
  var stackString

  Object.defineProperty(error, 'constructor', {
    value: DeprecationError
  })

  Object.defineProperty(error, 'message', {
    configurable: true,
    enumerable: false,
    value: message,
    writable: true
  })

  Object.defineProperty(error, 'name', {
    enumerable: false,
    configurable: true,
    value: 'DeprecationError',
    writable: true
  })

  Object.defineProperty(error, 'namespace', {
    configurable: true,
    enumerable: false,
    value: namespace,
    writable: true
  })

  Object.defineProperty(error, 'stack', {
    configurable: true,
    enumerable: false,
    get: function () {
      if (stackString !== undefined) {
        return stackString
      }

      // prepare stack trace
      return (stackString = createStackString.call(this, stack))
    },
    set: function setter (val) {
      stackString = val
    }
  })

  return error
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\depd\package.json 
------------------------------------------------------ 
{
  "name": "depd",
  "description": "Deprecate all the things",
  "version": "2.0.0",
  "author": "Douglas Christopher Wilson <doug@somethingdoug.com>",
  "license": "MIT",
  "keywords": [
    "deprecate",
    "deprecated"
  ],
  "repository": "dougwilson/nodejs-depd",
  "browser": "lib/browser/index.js",
  "devDependencies": {
    "benchmark": "2.1.4",
    "beautify-benchmark": "0.2.4",
    "eslint": "5.7.0",
    "eslint-config-standard": "12.0.0",
    "eslint-plugin-import": "2.14.0",
    "eslint-plugin-markdown": "1.0.0-beta.7",
    "eslint-plugin-node": "7.0.1",
    "eslint-plugin-promise": "4.0.1",
    "eslint-plugin-standard": "4.0.0",
    "istanbul": "0.4.5",
    "mocha": "5.2.0",
    "safe-buffer": "5.1.2",
    "uid-safe": "2.1.5"
  },
  "files": [
    "lib/",
    "History.md",
    "LICENSE",
    "index.js",
    "Readme.md"
  ],
  "engines": {
    "node": ">= 0.8"
  },
  "scripts": {
    "bench": "node benchmark/index.js",
    "lint": "eslint --plugin markdown --ext js,md .",
    "test": "mocha --reporter spec --bail test/",
    "test-ci": "istanbul cover --print=none node_modules/mocha/bin/_mocha -- --reporter spec test/ && istanbul report lcovonly text-summary",
    "test-cov": "istanbul cover --print=none node_modules/mocha/bin/_mocha -- --reporter dot test/ && istanbul report lcov text-summary"
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\depd\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\depd\lib\browser\index.js 
------------------------------------------------------ 
/*!
 * depd
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module exports.
 * @public
 */

module.exports = depd

/**
 * Create deprecate for namespace in caller.
 */

function depd (namespace) {
  if (!namespace) {
    throw new TypeError('argument namespace is required')
  }

  function deprecate (message) {
    // no-op in browser
  }

  deprecate._file = undefined
  deprecate._ignored = true
  deprecate._namespace = namespace
  deprecate._traced = false
  deprecate._warned = Object.create(null)

  deprecate.function = wrapfunction
  deprecate.property = wrapproperty

  return deprecate
}

/**
 * Return a wrapped function in a deprecation message.
 *
 * This is a no-op version of the wrapper, which does nothing but call
 * validation.
 */

function wrapfunction (fn, message) {
  if (typeof fn !== 'function') {
    throw new TypeError('argument fn must be a function')
  }

  return fn
}

/**
 * Wrap property in a deprecation message.
 *
 * This is a no-op version of the wrapper, which does nothing but call
 * validation.
 */

function wrapproperty (obj, prop, message) {
  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
    throw new TypeError('argument obj must be object')
  }

  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)

  if (!descriptor) {
    throw new TypeError('must call property on owner object')
  }

  if (!descriptor.configurable) {
    throw new TypeError('property must be configurable')
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\depd\lib\browser\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\detect-libc\package.json 
------------------------------------------------------ 
{
  "name": "detect-libc",
  "version": "2.1.2",
  "description": "Node.js module to detect the C standard library (libc) implementation family and version",
  "main": "lib/detect-libc.js",
  "files": [
    "lib/",
    "index.d.ts"
  ],
  "scripts": {
    "test": "semistandard && nyc --reporter=text --check-coverage --branches=100 ava test/unit.js",
    "changelog": "conventional-changelog -i CHANGELOG.md -s",
    "bench": "node benchmark/detect-libc",
    "bench:calls": "node benchmark/call-familySync.js && sleep 1 && node benchmark/call-isNonGlibcLinuxSync.js && sleep 1 && node benchmark/call-versionSync.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/lovell/detect-libc.git"
  },
  "keywords": [
    "libc",
    "glibc",
    "musl"
  ],
  "author": "Lovell Fuller <npm@lovell.info>",
  "contributors": [
    "Niklas Salmoukas <niklas@salmoukas.com>",
    "Vinícius Lourenço <vinyygamerlol@gmail.com>"
  ],
  "license": "Apache-2.0",
  "devDependencies": {
    "ava": "^2.4.0",
    "benchmark": "^2.1.4",
    "conventional-changelog-cli": "^5.0.0",
    "eslint-config-standard": "^13.0.1",
    "nyc": "^15.1.0",
    "proxyquire": "^2.1.3",
    "semistandard": "^14.2.3"
  },
  "engines": {
    "node": ">=8"
  },
  "types": "index.d.ts"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\detect-libc\lib\detect-libc.js 
------------------------------------------------------ 
// Copyright 2017 Lovell Fuller and others.
// SPDX-License-Identifier: Apache-2.0

'use strict';

const childProcess = require('child_process');
const { isLinux, getReport } = require('./process');
const { LDD_PATH, SELF_PATH, readFile, readFileSync } = require('./filesystem');
const { interpreterPath } = require('./elf');

let cachedFamilyInterpreter;
let cachedFamilyFilesystem;
let cachedVersionFilesystem;

const command = 'getconf GNU_LIBC_VERSION 2>&1 || true; ldd --version 2>&1 || true';
let commandOut = '';

const safeCommand = () => {
  if (!commandOut) {
    return new Promise((resolve) => {
      childProcess.exec(command, (err, out) => {
        commandOut = err ? ' ' : out;
        resolve(commandOut);
      });
    });
  }
  return commandOut;
};

const safeCommandSync = () => {
  if (!commandOut) {
    try {
      commandOut = childProcess.execSync(command, { encoding: 'utf8' });
    } catch (_err) {
      commandOut = ' ';
    }
  }
  return commandOut;
};

/**
 * A String constant containing the value `glibc`.
 * @type {string}
 * @public
 */
const GLIBC = 'glibc';

/**
 * A Regexp constant to get the GLIBC Version.
 * @type {string}
 */
const RE_GLIBC_VERSION = /LIBC[a-z0-9 \-).]*?(\d+\.\d+)/i;

/**
 * A String constant containing the value `musl`.
 * @type {string}
 * @public
 */
const MUSL = 'musl';

const isFileMusl = (f) => f.includes('libc.musl-') || f.includes('ld-musl-');

const familyFromReport = () => {
  const report = getReport();
  if (report.header && report.header.glibcVersionRuntime) {
    return GLIBC;
  }
  if (Array.isArray(report.sharedObjects)) {
    if (report.sharedObjects.some(isFileMusl)) {
      return MUSL;
    }
  }
  return null;
};

const familyFromCommand = (out) => {
  const [getconf, ldd1] = out.split(/[\r\n]+/);
  if (getconf && getconf.includes(GLIBC)) {
    return GLIBC;
  }
  if (ldd1 && ldd1.includes(MUSL)) {
    return MUSL;
  }
  return null;
};

const familyFromInterpreterPath = (path) => {
  if (path) {
    if (path.includes('/ld-musl-')) {
      return MUSL;
    } else if (path.includes('/ld-linux-')) {
      return GLIBC;
    }
  }
  return null;
};

const getFamilyFromLddContent = (content) => {
  content = content.toString();
  if (content.includes('musl')) {
    return MUSL;
  }
  if (content.includes('GNU C Library')) {
    return GLIBC;
  }
  return null;
};

const familyFromFilesystem = async () => {
  if (cachedFamilyFilesystem !== undefined) {
    return cachedFamilyFilesystem;
  }
  cachedFamilyFilesystem = null;
  try {
    const lddContent = await readFile(LDD_PATH);
    cachedFamilyFilesystem = getFamilyFromLddContent(lddContent);
  } catch (e) {}
  return cachedFamilyFilesystem;
};

const familyFromFilesystemSync = () => {
  if (cachedFamilyFilesystem !== undefined) {
    return cachedFamilyFilesystem;
  }
  cachedFamilyFilesystem = null;
  try {
    const lddContent = readFileSync(LDD_PATH);
    cachedFamilyFilesystem = getFamilyFromLddContent(lddContent);
  } catch (e) {}
  return cachedFamilyFilesystem;
};

const familyFromInterpreter = async () => {
  if (cachedFamilyInterpreter !== undefined) {
    return cachedFamilyInterpreter;
  }
  cachedFamilyInterpreter = null;
  try {
    const selfContent = await readFile(SELF_PATH);
    const path = interpreterPath(selfContent);
    cachedFamilyInterpreter = familyFromInterpreterPath(path);
  } catch (e) {}
  return cachedFamilyInterpreter;
};

const familyFromInterpreterSync = () => {
  if (cachedFamilyInterpreter !== undefined) {
    return cachedFamilyInterpreter;
  }
  cachedFamilyInterpreter = null;
  try {
    const selfContent = readFileSync(SELF_PATH);
    const path = interpreterPath(selfContent);
    cachedFamilyInterpreter = familyFromInterpreterPath(path);
  } catch (e) {}
  return cachedFamilyInterpreter;
};

/**
 * Resolves with the libc family when it can be determined, `null` otherwise.
 * @returns {Promise<?string>}
 */
const family = async () => {
  let family = null;
  if (isLinux()) {
    family = await familyFromInterpreter();
    if (!family) {
      family = await familyFromFilesystem();
      if (!family) {
        family = familyFromReport();
      }
      if (!family) {
        const out = await safeCommand();
        family = familyFromCommand(out);
      }
    }
  }
  return family;
};

/**
 * Returns the libc family when it can be determined, `null` otherwise.
 * @returns {?string}
 */
const familySync = () => {
  let family = null;
  if (isLinux()) {
    family = familyFromInterpreterSync();
    if (!family) {
      family = familyFromFilesystemSync();
      if (!family) {
        family = familyFromReport();
      }
      if (!family) {
        const out = safeCommandSync();
        family = familyFromCommand(out);
      }
    }
  }
  return family;
};

/**
 * Resolves `true` only when the platform is Linux and the libc family is not `glibc`.
 * @returns {Promise<boolean>}
 */
const isNonGlibcLinux = async () => isLinux() && await family() !== GLIBC;

/**
 * Returns `true` only when the platform is Linux and the libc family is not `glibc`.
 * @returns {boolean}
 */
const isNonGlibcLinuxSync = () => isLinux() && familySync() !== GLIBC;

const versionFromFilesystem = async () => {
  if (cachedVersionFilesystem !== undefined) {
    return cachedVersionFilesystem;
  }
  cachedVersionFilesystem = null;
  try {
    const lddContent = await readFile(LDD_PATH);
    const versionMatch = lddContent.match(RE_GLIBC_VERSION);
    if (versionMatch) {
      cachedVersionFilesystem = versionMatch[1];
    }
  } catch (e) {}
  return cachedVersionFilesystem;
};

const versionFromFilesystemSync = () => {
  if (cachedVersionFilesystem !== undefined) {
    return cachedVersionFilesystem;
  }
  cachedVersionFilesystem = null;
  try {
    const lddContent = readFileSync(LDD_PATH);
    const versionMatch = lddContent.match(RE_GLIBC_VERSION);
    if (versionMatch) {
      cachedVersionFilesystem = versionMatch[1];
    }
  } catch (e) {}
  return cachedVersionFilesystem;
};

const versionFromReport = () => {
  const report = getReport();
  if (report.header && report.header.glibcVersionRuntime) {
    return report.header.glibcVersionRuntime;
  }
  return null;
};

const versionSuffix = (s) => s.trim().split(/\s+/)[1];

const versionFromCommand = (out) => {
  const [getconf, ldd1, ldd2] = out.split(/[\r\n]+/);
  if (getconf && getconf.includes(GLIBC)) {
    return versionSuffix(getconf);
  }
  if (ldd1 && ldd2 && ldd1.includes(MUSL)) {
    return versionSuffix(ldd2);
  }
  return null;
};

/**
 * Resolves with the libc version when it can be determined, `null` otherwise.
 * @returns {Promise<?string>}
 */
const version = async () => {
  let version = null;
  if (isLinux()) {
    version = await versionFromFilesystem();
    if (!version) {
      version = versionFromReport();
    }
    if (!version) {
      const out = await safeCommand();
      version = versionFromCommand(out);
    }
  }
  return version;
};

/**
 * Returns the libc version when it can be determined, `null` otherwise.
 * @returns {?string}
 */
const versionSync = () => {
  let version = null;
  if (isLinux()) {
    version = versionFromFilesystemSync();
    if (!version) {
      version = versionFromReport();
    }
    if (!version) {
      const out = safeCommandSync();
      version = versionFromCommand(out);
    }
  }
  return version;
};

module.exports = {
  GLIBC,
  MUSL,
  family,
  familySync,
  isNonGlibcLinux,
  isNonGlibcLinuxSync,
  version,
  versionSync
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\detect-libc\lib\elf.js 
------------------------------------------------------ 
// Copyright 2017 Lovell Fuller and others.
// SPDX-License-Identifier: Apache-2.0

'use strict';

const interpreterPath = (elf) => {
  if (elf.length < 64) {
    return null;
  }
  if (elf.readUInt32BE(0) !== 0x7F454C46) {
    // Unexpected magic bytes
    return null;
  }
  if (elf.readUInt8(4) !== 2) {
    // Not a 64-bit ELF
    return null;
  }
  if (elf.readUInt8(5) !== 1) {
    // Not little-endian
    return null;
  }
  const offset = elf.readUInt32LE(32);
  const size = elf.readUInt16LE(54);
  const count = elf.readUInt16LE(56);
  for (let i = 0; i < count; i++) {
    const headerOffset = offset + (i * size);
    const type = elf.readUInt32LE(headerOffset);
    if (type === 3) {
      const fileOffset = elf.readUInt32LE(headerOffset + 8);
      const fileSize = elf.readUInt32LE(headerOffset + 32);
      return elf.subarray(fileOffset, fileOffset + fileSize).toString().replace(/\0.*$/g, '');
    }
  }
  return null;
};

module.exports = {
  interpreterPath
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\detect-libc\lib\filesystem.js 
------------------------------------------------------ 
// Copyright 2017 Lovell Fuller and others.
// SPDX-License-Identifier: Apache-2.0

'use strict';

const fs = require('fs');

const LDD_PATH = '/usr/bin/ldd';
const SELF_PATH = '/proc/self/exe';
const MAX_LENGTH = 2048;

/**
 * Read the content of a file synchronous
 *
 * @param {string} path
 * @returns {Buffer}
 */
const readFileSync = (path) => {
  const fd = fs.openSync(path, 'r');
  const buffer = Buffer.alloc(MAX_LENGTH);
  const bytesRead = fs.readSync(fd, buffer, 0, MAX_LENGTH, 0);
  fs.close(fd, () => {});
  return buffer.subarray(0, bytesRead);
};

/**
 * Read the content of a file
 *
 * @param {string} path
 * @returns {Promise<Buffer>}
 */
const readFile = (path) => new Promise((resolve, reject) => {
  fs.open(path, 'r', (err, fd) => {
    if (err) {
      reject(err);
    } else {
      const buffer = Buffer.alloc(MAX_LENGTH);
      fs.read(fd, buffer, 0, MAX_LENGTH, 0, (_, bytesRead) => {
        resolve(buffer.subarray(0, bytesRead));
        fs.close(fd, () => {});
      });
    }
  });
});

module.exports = {
  LDD_PATH,
  SELF_PATH,
  readFileSync,
  readFile
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\detect-libc\lib\process.js 
------------------------------------------------------ 
// Copyright 2017 Lovell Fuller and others.
// SPDX-License-Identifier: Apache-2.0

'use strict';

const isLinux = () => process.platform === 'linux';

let report = null;
const getReport = () => {
  if (!report) {
    /* istanbul ignore next */
    if (isLinux() && process.report) {
      const orig = process.report.excludeNetwork;
      process.report.excludeNetwork = true;
      report = process.report.getReport();
      process.report.excludeNetwork = orig;
    } else {
      report = {};
    }
  }
  return report;
};

module.exports = { isLinux, getReport };
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\detect-libc\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\dunder-proto\get.js 
------------------------------------------------------ 
'use strict';

var callBind = require('call-bind-apply-helpers');
var gOPD = require('gopd');

var hasProtoAccessor;
try {
	// eslint-disable-next-line no-extra-parens, no-proto
	hasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;
} catch (e) {
	if (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {
		throw e;
	}
}

// eslint-disable-next-line no-extra-parens
var desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));

var $Object = Object;
var $getPrototypeOf = $Object.getPrototypeOf;

/** @type {import('./get')} */
module.exports = desc && typeof desc.get === 'function'
	? callBind([desc.get])
	: typeof $getPrototypeOf === 'function'
		? /** @type {import('./get')} */ function getDunder(value) {
			// eslint-disable-next-line eqeqeq
			return $getPrototypeOf(value == null ? value : $Object(value));
		}
		: false;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\dunder-proto\set.js 
------------------------------------------------------ 
'use strict';

var callBind = require('call-bind-apply-helpers');
var gOPD = require('gopd');
var $TypeError = require('es-errors/type');

/** @type {{ __proto__?: object | null }} */
var obj = {};
try {
	obj.__proto__ = null; // eslint-disable-line no-proto
} catch (e) {
	if (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {
		throw e;
	}
}

var hasProtoMutator = !('toString' in obj);

// eslint-disable-next-line no-extra-parens
var desc = gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));

/** @type {import('./set')} */
module.exports = hasProtoMutator && (
// eslint-disable-next-line no-extra-parens
	(!!desc && typeof desc.set === 'function' && /** @type {import('./set')} */ (callBind([desc.set])))
	|| /** @type {import('./set')} */ function setDunder(object, proto) {
		// this is node v0.10 or older, which doesn't have Object.setPrototypeOf and has undeniable __proto__
		if (object == null) { // eslint-disable-line eqeqeq
			throw new $TypeError('set Object.prototype.__proto__ called on null or undefined');
		}
		// eslint-disable-next-line no-proto, no-param-reassign, no-extra-parens
		/** @type {{ __proto__?: object | null }} */ (object).__proto__ = proto;
		return proto;
	}
);
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\dunder-proto\package.json 
------------------------------------------------------ 
{
	"name": "dunder-proto",
	"version": "1.0.1",
	"description": "If available, the `Object.prototype.__proto__` accessor and mutator, call-bound",
	"main": false,
	"exports": {
		"./get": "./get.js",
		"./set": "./set.js",
		"./package.json": "./package.json"
	},
	"sideEffects": false,
	"scripts": {
		"prepack": "npmignore --auto --commentLines=autogenerated",
		"prepublish": "not-in-publish || npm run prepublishOnly",
		"prepublishOnly": "safe-publish-latest",
		"prelint": "evalmd README.md",
		"lint": "eslint --ext=.js,.mjs .",
		"postlint": "tsc -p . && attw -P",
		"pretest": "npm run lint",
		"tests-only": "nyc tape 'test/**/*.js'",
		"test": "npm run tests-only",
		"posttest": "npx npm@'>= 10.2' audit --production",
		"version": "auto-changelog && git add CHANGELOG.md",
		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/es-shims/dunder-proto.git"
	},
	"author": "Jordan Harband <ljharb@gmail.com>",
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/es-shims/dunder-proto/issues"
	},
	"homepage": "https://github.com/es-shims/dunder-proto#readme",
	"dependencies": {
		"call-bind-apply-helpers": "^1.0.1",
		"es-errors": "^1.3.0",
		"gopd": "^1.2.0"
	},
	"devDependencies": {
		"@arethetypeswrong/cli": "^0.17.1",
		"@ljharb/eslint-config": "^21.1.1",
		"@ljharb/tsconfig": "^0.2.2",
		"@types/tape": "^5.7.0",
		"auto-changelog": "^2.5.0",
		"encoding": "^0.1.13",
		"eslint": "=8.8.0",
		"evalmd": "^0.0.19",
		"in-publish": "^2.0.1",
		"npmignore": "^0.3.1",
		"nyc": "^10.3.2",
		"safe-publish-latest": "^2.0.0",
		"tape": "^5.9.0",
		"typescript": "next"
	},
	"auto-changelog": {
		"output": "CHANGELOG.md",
		"template": "keepachangelog",
		"unreleased": false,
		"commitLimit": false,
		"backfillLimit": false,
		"hideCredit": true
	},
	"testling": {
		"files": "test/index.js"
	},
	"publishConfig": {
		"ignore": [
			".github/workflows"
		]
	},
	"engines": {
		"node": ">= 0.4"
	}
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\dunder-proto\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\dunder-proto\test\get.js 
------------------------------------------------------ 
'use strict';

var test = require('tape');

var getDunderProto = require('../get');

test('getDunderProto', { skip: !getDunderProto }, function (t) {
	if (!getDunderProto) {
		throw 'should never happen; this is just for type narrowing'; // eslint-disable-line no-throw-literal
	}

	// @ts-expect-error
	t['throws'](function () { getDunderProto(); }, TypeError, 'throws if no argument');
	// @ts-expect-error
	t['throws'](function () { getDunderProto(undefined); }, TypeError, 'throws with undefined');
	// @ts-expect-error
	t['throws'](function () { getDunderProto(null); }, TypeError, 'throws with null');

	t.equal(getDunderProto({}), Object.prototype);
	t.equal(getDunderProto([]), Array.prototype);
	t.equal(getDunderProto(function () {}), Function.prototype);
	t.equal(getDunderProto(/./g), RegExp.prototype);
	t.equal(getDunderProto(42), Number.prototype);
	t.equal(getDunderProto(true), Boolean.prototype);
	t.equal(getDunderProto('foo'), String.prototype);

	t.end();
});

test('no dunder proto', { skip: !!getDunderProto }, function (t) {
	t.notOk('__proto__' in Object.prototype, 'no __proto__ in Object.prototype');

	t.end();
});
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\dunder-proto\test\index.js 
------------------------------------------------------ 
'use strict';

require('./get');
require('./set');
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\dunder-proto\test\set.js 
------------------------------------------------------ 
'use strict';

var test = require('tape');

var setDunderProto = require('../set');

test('setDunderProto', { skip: !setDunderProto }, function (t) {
	if (!setDunderProto) {
		throw 'should never happen; this is just for type narrowing'; // eslint-disable-line no-throw-literal
	}

	// @ts-expect-error
	t['throws'](function () { setDunderProto(); }, TypeError, 'throws if no arguments');
	// @ts-expect-error
	t['throws'](function () { setDunderProto(undefined); }, TypeError, 'throws with undefined and nothing');
	// @ts-expect-error
	t['throws'](function () { setDunderProto(undefined, undefined); }, TypeError, 'throws with undefined and undefined');
	// @ts-expect-error
	t['throws'](function () { setDunderProto(null); }, TypeError, 'throws with null and undefined');
	// @ts-expect-error
	t['throws'](function () { setDunderProto(null, undefined); }, TypeError, 'throws with null and undefined');

	/** @type {{ inherited?: boolean }} */
	var obj = {};
	t.ok('toString' in obj, 'object initially has toString');

	setDunderProto(obj, null);
	t.notOk('toString' in obj, 'object no longer has toString');

	t.notOk('inherited' in obj, 'object lacks inherited property');
	setDunderProto(obj, { inherited: true });
	t.equal(obj.inherited, true, 'object has inherited property');

	t.end();
});

test('no dunder proto', { skip: !!setDunderProto }, function (t) {
	if ('__proto__' in Object.prototype) {
		t['throws'](
			// @ts-expect-error
			function () { ({}).__proto__ = null; }, // eslint-disable-line no-proto
			Error,
			'throws when setting Object.prototype.__proto__'
		);
	} else {
		t.notOk('__proto__' in Object.prototype, 'no __proto__ in Object.prototype');
	}

	t.end();
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\dunder-proto\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ecdsa-sig-formatter\package.json 
------------------------------------------------------ 
{
  "name": "ecdsa-sig-formatter",
  "version": "1.0.11",
  "description": "Translate ECDSA signatures between ASN.1/DER and JOSE-style concatenation",
  "main": "src/ecdsa-sig-formatter.js",
  "scripts": {
    "check-style": "eslint .",
    "pretest": "npm run check-style",
    "test": "istanbul cover --root src _mocha -- spec",
    "report-cov": "cat ./coverage/lcov.info | coveralls"
  },
  "typings": "./src/ecdsa-sig-formatter.d.ts",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Brightspace/node-ecdsa-sig-formatter.git"
  },
  "keywords": [
    "ecdsa",
    "der",
    "asn.1",
    "jwt",
    "jwa",
    "jsonwebtoken",
    "jose"
  ],
  "author": "D2L Corporation",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/Brightspace/node-ecdsa-sig-formatter/issues"
  },
  "homepage": "https://github.com/Brightspace/node-ecdsa-sig-formatter#readme",
  "dependencies": {
    "safe-buffer": "^5.0.1"
  },
  "devDependencies": {
    "bench": "^0.3.6",
    "chai": "^3.5.0",
    "coveralls": "^2.11.9",
    "eslint": "^2.12.0",
    "eslint-config-brightspace": "^0.2.1",
    "istanbul": "^0.4.3",
    "jwk-to-pem": "^1.2.5",
    "mocha": "^2.5.3",
    "native-crypto": "^1.7.0"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ecdsa-sig-formatter\src\ecdsa-sig-formatter.js 
------------------------------------------------------ 
'use strict';

var Buffer = require('safe-buffer').Buffer;

var getParamBytesForAlg = require('./param-bytes-for-alg');

var MAX_OCTET = 0x80,
	CLASS_UNIVERSAL = 0,
	PRIMITIVE_BIT = 0x20,
	TAG_SEQ = 0x10,
	TAG_INT = 0x02,
	ENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6),
	ENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);

function base64Url(base64) {
	return base64
		.replace(/=/g, '')
		.replace(/\+/g, '-')
		.replace(/\//g, '_');
}

function signatureAsBuffer(signature) {
	if (Buffer.isBuffer(signature)) {
		return signature;
	} else if ('string' === typeof signature) {
		return Buffer.from(signature, 'base64');
	}

	throw new TypeError('ECDSA signature must be a Base64 string or a Buffer');
}

function derToJose(signature, alg) {
	signature = signatureAsBuffer(signature);
	var paramBytes = getParamBytesForAlg(alg);

	// the DER encoded param should at most be the param size, plus a padding
	// zero, since due to being a signed integer
	var maxEncodedParamLength = paramBytes + 1;

	var inputLength = signature.length;

	var offset = 0;
	if (signature[offset++] !== ENCODED_TAG_SEQ) {
		throw new Error('Could not find expected "seq"');
	}

	var seqLength = signature[offset++];
	if (seqLength === (MAX_OCTET | 1)) {
		seqLength = signature[offset++];
	}

	if (inputLength - offset < seqLength) {
		throw new Error('"seq" specified length of "' + seqLength + '", only "' + (inputLength - offset) + '" remaining');
	}

	if (signature[offset++] !== ENCODED_TAG_INT) {
		throw new Error('Could not find expected "int" for "r"');
	}

	var rLength = signature[offset++];

	if (inputLength - offset - 2 < rLength) {
		throw new Error('"r" specified length of "' + rLength + '", only "' + (inputLength - offset - 2) + '" available');
	}

	if (maxEncodedParamLength < rLength) {
		throw new Error('"r" specified length of "' + rLength + '", max of "' + maxEncodedParamLength + '" is acceptable');
	}

	var rOffset = offset;
	offset += rLength;

	if (signature[offset++] !== ENCODED_TAG_INT) {
		throw new Error('Could not find expected "int" for "s"');
	}

	var sLength = signature[offset++];

	if (inputLength - offset !== sLength) {
		throw new Error('"s" specified length of "' + sLength + '", expected "' + (inputLength - offset) + '"');
	}

	if (maxEncodedParamLength < sLength) {
		throw new Error('"s" specified length of "' + sLength + '", max of "' + maxEncodedParamLength + '" is acceptable');
	}

	var sOffset = offset;
	offset += sLength;

	if (offset !== inputLength) {
		throw new Error('Expected to consume entire buffer, but "' + (inputLength - offset) + '" bytes remain');
	}

	var rPadding = paramBytes - rLength,
		sPadding = paramBytes - sLength;

	var dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);

	for (offset = 0; offset < rPadding; ++offset) {
		dst[offset] = 0;
	}
	signature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);

	offset = paramBytes;

	for (var o = offset; offset < o + sPadding; ++offset) {
		dst[offset] = 0;
	}
	signature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);

	dst = dst.toString('base64');
	dst = base64Url(dst);

	return dst;
}

function countPadding(buf, start, stop) {
	var padding = 0;
	while (start + padding < stop && buf[start + padding] === 0) {
		++padding;
	}

	var needsSign = buf[start + padding] >= MAX_OCTET;
	if (needsSign) {
		--padding;
	}

	return padding;
}

function joseToDer(signature, alg) {
	signature = signatureAsBuffer(signature);
	var paramBytes = getParamBytesForAlg(alg);

	var signatureBytes = signature.length;
	if (signatureBytes !== paramBytes * 2) {
		throw new TypeError('"' + alg + '" signatures must be "' + paramBytes * 2 + '" bytes, saw "' + signatureBytes + '"');
	}

	var rPadding = countPadding(signature, 0, paramBytes);
	var sPadding = countPadding(signature, paramBytes, signature.length);
	var rLength = paramBytes - rPadding;
	var sLength = paramBytes - sPadding;

	var rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;

	var shortLength = rsBytes < MAX_OCTET;

	var dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);

	var offset = 0;
	dst[offset++] = ENCODED_TAG_SEQ;
	if (shortLength) {
		// Bit 8 has value "0"
		// bits 7-1 give the length.
		dst[offset++] = rsBytes;
	} else {
		// Bit 8 of first octet has value "1"
		// bits 7-1 give the number of additional length octets.
		dst[offset++] = MAX_OCTET	| 1;
		// length, base 256
		dst[offset++] = rsBytes & 0xff;
	}
	dst[offset++] = ENCODED_TAG_INT;
	dst[offset++] = rLength;
	if (rPadding < 0) {
		dst[offset++] = 0;
		offset += signature.copy(dst, offset, 0, paramBytes);
	} else {
		offset += signature.copy(dst, offset, rPadding, paramBytes);
	}
	dst[offset++] = ENCODED_TAG_INT;
	dst[offset++] = sLength;
	if (sPadding < 0) {
		dst[offset++] = 0;
		signature.copy(dst, offset, paramBytes);
	} else {
		signature.copy(dst, offset, paramBytes + sPadding);
	}

	return dst;
}

module.exports = {
	derToJose: derToJose,
	joseToDer: joseToDer
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ecdsa-sig-formatter\src\param-bytes-for-alg.js 
------------------------------------------------------ 
'use strict';

function getParamSize(keySize) {
	var result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);
	return result;
}

var paramBytesForAlg = {
	ES256: getParamSize(256),
	ES384: getParamSize(384),
	ES512: getParamSize(521)
};

function getParamBytesForAlg(alg) {
	var paramBytes = paramBytesForAlg[alg];
	if (paramBytes) {
		return paramBytes;
	}

	throw new Error('Unknown algorithm "' + alg + '"');
}

module.exports = getParamBytesForAlg;
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ecdsa-sig-formatter\src\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ee-first\index.js 
------------------------------------------------------ 
/*!
 * ee-first
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */

'use strict'

/**
 * Module exports.
 * @public
 */

module.exports = first

/**
 * Get the first event in a set of event emitters and event pairs.
 *
 * @param {array} stuff
 * @param {function} done
 * @public
 */

function first(stuff, done) {
  if (!Array.isArray(stuff))
    throw new TypeError('arg must be an array of [ee, events...] arrays')

  var cleanups = []

  for (var i = 0; i < stuff.length; i++) {
    var arr = stuff[i]

    if (!Array.isArray(arr) || arr.length < 2)
      throw new TypeError('each array member must be [ee, events...]')

    var ee = arr[0]

    for (var j = 1; j < arr.length; j++) {
      var event = arr[j]
      var fn = listener(event, callback)

      // listen to the event
      ee.on(event, fn)
      // push this listener to the list of cleanups
      cleanups.push({
        ee: ee,
        event: event,
        fn: fn,
      })
    }
  }

  function callback() {
    cleanup()
    done.apply(null, arguments)
  }

  function cleanup() {
    var x
    for (var i = 0; i < cleanups.length; i++) {
      x = cleanups[i]
      x.ee.removeListener(x.event, x.fn)
    }
  }

  function thunk(fn) {
    done = fn
  }

  thunk.cancel = cleanup

  return thunk
}

/**
 * Create the event listener.
 * @private
 */

function listener(event, done) {
  return function onevent(arg1) {
    var args = new Array(arguments.length)
    var ee = this
    var err = event === 'error'
      ? arg1
      : null

    // copy args to prevent arguments escaping scope
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i]
    }

    done(err, ee, event, args)
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ee-first\package.json 
------------------------------------------------------ 
{
  "name": "ee-first",
  "description": "return the first event in a set of ee/event pairs",
  "version": "1.1.1",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com",
    "twitter": "https://twitter.com/jongleberry"
  },
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>"
  ],
  "license": "MIT",
  "repository": "jonathanong/ee-first",
  "devDependencies": {
    "istanbul": "0.3.9",
    "mocha": "2.2.5"
  },
  "files": [
    "index.js",
    "LICENSE"
  ],
  "scripts": {
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\emoji-regex\index.js 
------------------------------------------------------ 
"use strict";

module.exports = function () {
  // https://mths.be/emoji
  return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\emoji-regex\text.js 
------------------------------------------------------ 
"use strict";

module.exports = function () {
  // https://mths.be/emoji
  return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F?|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\emoji-regex\package.json 
------------------------------------------------------ 
{
  "name": "emoji-regex",
  "version": "8.0.0",
  "description": "A regular expression to match all Emoji-only symbols as per the Unicode Standard.",
  "homepage": "https://mths.be/emoji-regex",
  "main": "index.js",
  "types": "index.d.ts",
  "keywords": [
    "unicode",
    "regex",
    "regexp",
    "regular expressions",
    "code points",
    "symbols",
    "characters",
    "emoji"
  ],
  "license": "MIT",
  "author": {
    "name": "Mathias Bynens",
    "url": "https://mathiasbynens.be/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mathiasbynens/emoji-regex.git"
  },
  "bugs": "https://github.com/mathiasbynens/emoji-regex/issues",
  "files": [
    "LICENSE-MIT.txt",
    "index.js",
    "index.d.ts",
    "text.js",
    "es2015/index.js",
    "es2015/text.js"
  ],
  "scripts": {
    "build": "rm -rf -- es2015; babel src -d .; NODE_ENV=es2015 babel src -d ./es2015; node script/inject-sequences.js",
    "test": "mocha",
    "test:watch": "npm run test -- --watch"
  },
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.3.4",
    "@babel/plugin-proposal-unicode-property-regex": "^7.2.0",
    "@babel/preset-env": "^7.3.4",
    "mocha": "^6.0.2",
    "regexgen": "^1.3.0",
    "unicode-12.0.0": "^0.7.9"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\emoji-regex\es2015\index.js 
------------------------------------------------------ 
"use strict";

module.exports = () => {
  // https://mths.be/emoji
  return /\u{1F3F4}\u{E0067}\u{E0062}(?:\u{E0065}\u{E006E}\u{E0067}|\u{E0073}\u{E0063}\u{E0074}|\u{E0077}\u{E006C}\u{E0073})\u{E007F}|\u{1F468}(?:\u{1F3FC}\u200D(?:\u{1F91D}\u200D\u{1F468}\u{1F3FB}|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FF}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}-\u{1F3FE}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FE}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}-\u{1F3FD}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FD}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}\u{1F3FC}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u200D(?:\u2764\uFE0F\u200D(?:\u{1F48B}\u200D)?\u{1F468}|[\u{1F468}\u{1F469}]\u200D(?:\u{1F466}\u200D\u{1F466}|\u{1F467}\u200D[\u{1F466}\u{1F467}])|\u{1F466}\u200D\u{1F466}|\u{1F467}\u200D[\u{1F466}\u{1F467}]|[\u{1F468}\u{1F469}]\u200D[\u{1F466}\u{1F467}]|[\u2695\u2696\u2708]\uFE0F|[\u{1F466}\u{1F467}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|(?:\u{1F3FB}\u200D[\u2695\u2696\u2708]|\u{1F3FF}\u200D[\u2695\u2696\u2708]|\u{1F3FE}\u200D[\u2695\u2696\u2708]|\u{1F3FD}\u200D[\u2695\u2696\u2708]|\u{1F3FC}\u200D[\u2695\u2696\u2708])\uFE0F|\u{1F3FB}\u200D[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}]|[\u{1F3FB}-\u{1F3FF}])|(?:\u{1F9D1}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F9D1}|\u{1F469}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F469})\u{1F3FB}|\u{1F9D1}(?:\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F9D1}[\u{1F3FB}-\u{1F3FF}]|\u200D\u{1F91D}\u200D\u{1F9D1})|(?:\u{1F9D1}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F9D1}|\u{1F469}\u{1F3FF}\u200D\u{1F91D}\u200D[\u{1F468}\u{1F469}])[\u{1F3FB}-\u{1F3FE}]|(?:\u{1F9D1}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F9D1}|\u{1F469}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F469})[\u{1F3FB}\u{1F3FC}]|\u{1F469}(?:\u{1F3FE}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}-\u{1F3FD}\u{1F3FF}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FC}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}\u{1F3FD}-\u{1F3FF}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FB}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FC}-\u{1F3FF}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FD}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}\u{1F3FC}\u{1F3FE}\u{1F3FF}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u200D(?:\u2764\uFE0F\u200D(?:\u{1F48B}\u200D[\u{1F468}\u{1F469}]|[\u{1F468}\u{1F469}])|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FF}\u200D[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F469}\u200D\u{1F469}\u200D(?:\u{1F466}\u200D\u{1F466}|\u{1F467}\u200D[\u{1F466}\u{1F467}])|(?:\u{1F9D1}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F9D1}|\u{1F469}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F469})[\u{1F3FB}-\u{1F3FD}]|\u{1F469}\u200D\u{1F466}\u200D\u{1F466}|\u{1F469}\u200D\u{1F469}\u200D[\u{1F466}\u{1F467}]|(?:\u{1F441}\uFE0F\u200D\u{1F5E8}|\u{1F469}(?:\u{1F3FF}\u200D[\u2695\u2696\u2708]|\u{1F3FE}\u200D[\u2695\u2696\u2708]|\u{1F3FC}\u200D[\u2695\u2696\u2708]|\u{1F3FB}\u200D[\u2695\u2696\u2708]|\u{1F3FD}\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:[\u26F9\u{1F3CB}\u{1F3CC}\u{1F575}]\uFE0F|[\u{1F46F}\u{1F93C}\u{1F9DE}\u{1F9DF}])\u200D[\u2640\u2642]|[\u26F9\u{1F3CB}\u{1F3CC}\u{1F575}][\u{1F3FB}-\u{1F3FF}]\u200D[\u2640\u2642]|[\u{1F3C3}\u{1F3C4}\u{1F3CA}\u{1F46E}\u{1F471}\u{1F473}\u{1F477}\u{1F481}\u{1F482}\u{1F486}\u{1F487}\u{1F645}-\u{1F647}\u{1F64B}\u{1F64D}\u{1F64E}\u{1F6A3}\u{1F6B4}-\u{1F6B6}\u{1F926}\u{1F937}-\u{1F939}\u{1F93D}\u{1F93E}\u{1F9B8}\u{1F9B9}\u{1F9CD}-\u{1F9CF}\u{1F9D6}-\u{1F9DD}](?:[\u{1F3FB}-\u{1F3FF}]\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\u{1F3F4}\u200D\u2620)\uFE0F|\u{1F469}\u200D\u{1F467}\u200D[\u{1F466}\u{1F467}]|\u{1F3F3}\uFE0F\u200D\u{1F308}|\u{1F415}\u200D\u{1F9BA}|\u{1F469}\u200D\u{1F466}|\u{1F469}\u200D\u{1F467}|\u{1F1FD}\u{1F1F0}|\u{1F1F4}\u{1F1F2}|\u{1F1F6}\u{1F1E6}|[#\*0-9]\uFE0F\u20E3|\u{1F1E7}[\u{1F1E6}\u{1F1E7}\u{1F1E9}-\u{1F1EF}\u{1F1F1}-\u{1F1F4}\u{1F1F6}-\u{1F1F9}\u{1F1FB}\u{1F1FC}\u{1F1FE}\u{1F1FF}]|\u{1F1F9}[\u{1F1E6}\u{1F1E8}\u{1F1E9}\u{1F1EB}-\u{1F1ED}\u{1F1EF}-\u{1F1F4}\u{1F1F7}\u{1F1F9}\u{1F1FB}\u{1F1FC}\u{1F1FF}]|\u{1F1EA}[\u{1F1E6}\u{1F1E8}\u{1F1EA}\u{1F1EC}\u{1F1ED}\u{1F1F7}-\u{1F1FA}]|\u{1F9D1}[\u{1F3FB}-\u{1F3FF}]|\u{1F1F7}[\u{1F1EA}\u{1F1F4}\u{1F1F8}\u{1F1FA}\u{1F1FC}]|\u{1F469}[\u{1F3FB}-\u{1F3FF}]|\u{1F1F2}[\u{1F1E6}\u{1F1E8}-\u{1F1ED}\u{1F1F0}-\u{1F1FF}]|\u{1F1E6}[\u{1F1E8}-\u{1F1EC}\u{1F1EE}\u{1F1F1}\u{1F1F2}\u{1F1F4}\u{1F1F6}-\u{1F1FA}\u{1F1FC}\u{1F1FD}\u{1F1FF}]|\u{1F1F0}[\u{1F1EA}\u{1F1EC}-\u{1F1EE}\u{1F1F2}\u{1F1F3}\u{1F1F5}\u{1F1F7}\u{1F1FC}\u{1F1FE}\u{1F1FF}]|\u{1F1ED}[\u{1F1F0}\u{1F1F2}\u{1F1F3}\u{1F1F7}\u{1F1F9}\u{1F1FA}]|\u{1F1E9}[\u{1F1EA}\u{1F1EC}\u{1F1EF}\u{1F1F0}\u{1F1F2}\u{1F1F4}\u{1F1FF}]|\u{1F1FE}[\u{1F1EA}\u{1F1F9}]|\u{1F1EC}[\u{1F1E6}\u{1F1E7}\u{1F1E9}-\u{1F1EE}\u{1F1F1}-\u{1F1F3}\u{1F1F5}-\u{1F1FA}\u{1F1FC}\u{1F1FE}]|\u{1F1F8}[\u{1F1E6}-\u{1F1EA}\u{1F1EC}-\u{1F1F4}\u{1F1F7}-\u{1F1F9}\u{1F1FB}\u{1F1FD}-\u{1F1FF}]|\u{1F1EB}[\u{1F1EE}-\u{1F1F0}\u{1F1F2}\u{1F1F4}\u{1F1F7}]|\u{1F1F5}[\u{1F1E6}\u{1F1EA}-\u{1F1ED}\u{1F1F0}-\u{1F1F3}\u{1F1F7}-\u{1F1F9}\u{1F1FC}\u{1F1FE}]|\u{1F1FB}[\u{1F1E6}\u{1F1E8}\u{1F1EA}\u{1F1EC}\u{1F1EE}\u{1F1F3}\u{1F1FA}]|\u{1F1F3}[\u{1F1E6}\u{1F1E8}\u{1F1EA}-\u{1F1EC}\u{1F1EE}\u{1F1F1}\u{1F1F4}\u{1F1F5}\u{1F1F7}\u{1F1FA}\u{1F1FF}]|\u{1F1E8}[\u{1F1E6}\u{1F1E8}\u{1F1E9}\u{1F1EB}-\u{1F1EE}\u{1F1F0}-\u{1F1F5}\u{1F1F7}\u{1F1FA}-\u{1F1FF}]|\u{1F1F1}[\u{1F1E6}-\u{1F1E8}\u{1F1EE}\u{1F1F0}\u{1F1F7}-\u{1F1FB}\u{1F1FE}]|\u{1F1FF}[\u{1F1E6}\u{1F1F2}\u{1F1FC}]|\u{1F1FC}[\u{1F1EB}\u{1F1F8}]|\u{1F1FA}[\u{1F1E6}\u{1F1EC}\u{1F1F2}\u{1F1F3}\u{1F1F8}\u{1F1FE}\u{1F1FF}]|\u{1F1EE}[\u{1F1E8}-\u{1F1EA}\u{1F1F1}-\u{1F1F4}\u{1F1F6}-\u{1F1F9}]|\u{1F1EF}[\u{1F1EA}\u{1F1F2}\u{1F1F4}\u{1F1F5}]|[\u{1F3C3}\u{1F3C4}\u{1F3CA}\u{1F46E}\u{1F471}\u{1F473}\u{1F477}\u{1F481}\u{1F482}\u{1F486}\u{1F487}\u{1F645}-\u{1F647}\u{1F64B}\u{1F64D}\u{1F64E}\u{1F6A3}\u{1F6B4}-\u{1F6B6}\u{1F926}\u{1F937}-\u{1F939}\u{1F93D}\u{1F93E}\u{1F9B8}\u{1F9B9}\u{1F9CD}-\u{1F9CF}\u{1F9D6}-\u{1F9DD}][\u{1F3FB}-\u{1F3FF}]|[\u26F9\u{1F3CB}\u{1F3CC}\u{1F575}][\u{1F3FB}-\u{1F3FF}]|[\u261D\u270A-\u270D\u{1F385}\u{1F3C2}\u{1F3C7}\u{1F442}\u{1F443}\u{1F446}-\u{1F450}\u{1F466}\u{1F467}\u{1F46B}-\u{1F46D}\u{1F470}\u{1F472}\u{1F474}-\u{1F476}\u{1F478}\u{1F47C}\u{1F483}\u{1F485}\u{1F4AA}\u{1F574}\u{1F57A}\u{1F590}\u{1F595}\u{1F596}\u{1F64C}\u{1F64F}\u{1F6C0}\u{1F6CC}\u{1F90F}\u{1F918}-\u{1F91C}\u{1F91E}\u{1F91F}\u{1F930}-\u{1F936}\u{1F9B5}\u{1F9B6}\u{1F9BB}\u{1F9D2}-\u{1F9D5}][\u{1F3FB}-\u{1F3FF}]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55\u{1F004}\u{1F0CF}\u{1F18E}\u{1F191}-\u{1F19A}\u{1F1E6}-\u{1F1FF}\u{1F201}\u{1F21A}\u{1F22F}\u{1F232}-\u{1F236}\u{1F238}-\u{1F23A}\u{1F250}\u{1F251}\u{1F300}-\u{1F320}\u{1F32D}-\u{1F335}\u{1F337}-\u{1F37C}\u{1F37E}-\u{1F393}\u{1F3A0}-\u{1F3CA}\u{1F3CF}-\u{1F3D3}\u{1F3E0}-\u{1F3F0}\u{1F3F4}\u{1F3F8}-\u{1F43E}\u{1F440}\u{1F442}-\u{1F4FC}\u{1F4FF}-\u{1F53D}\u{1F54B}-\u{1F54E}\u{1F550}-\u{1F567}\u{1F57A}\u{1F595}\u{1F596}\u{1F5A4}\u{1F5FB}-\u{1F64F}\u{1F680}-\u{1F6C5}\u{1F6CC}\u{1F6D0}-\u{1F6D2}\u{1F6D5}\u{1F6EB}\u{1F6EC}\u{1F6F4}-\u{1F6FA}\u{1F7E0}-\u{1F7EB}\u{1F90D}-\u{1F93A}\u{1F93C}-\u{1F945}\u{1F947}-\u{1F971}\u{1F973}-\u{1F976}\u{1F97A}-\u{1F9A2}\u{1F9A5}-\u{1F9AA}\u{1F9AE}-\u{1F9CA}\u{1F9CD}-\u{1F9FF}\u{1FA70}-\u{1FA73}\u{1FA78}-\u{1FA7A}\u{1FA80}-\u{1FA82}\u{1FA90}-\u{1FA95}]|[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299\u{1F004}\u{1F0CF}\u{1F170}\u{1F171}\u{1F17E}\u{1F17F}\u{1F18E}\u{1F191}-\u{1F19A}\u{1F1E6}-\u{1F1FF}\u{1F201}\u{1F202}\u{1F21A}\u{1F22F}\u{1F232}-\u{1F23A}\u{1F250}\u{1F251}\u{1F300}-\u{1F321}\u{1F324}-\u{1F393}\u{1F396}\u{1F397}\u{1F399}-\u{1F39B}\u{1F39E}-\u{1F3F0}\u{1F3F3}-\u{1F3F5}\u{1F3F7}-\u{1F4FD}\u{1F4FF}-\u{1F53D}\u{1F549}-\u{1F54E}\u{1F550}-\u{1F567}\u{1F56F}\u{1F570}\u{1F573}-\u{1F57A}\u{1F587}\u{1F58A}-\u{1F58D}\u{1F590}\u{1F595}\u{1F596}\u{1F5A4}\u{1F5A5}\u{1F5A8}\u{1F5B1}\u{1F5B2}\u{1F5BC}\u{1F5C2}-\u{1F5C4}\u{1F5D1}-\u{1F5D3}\u{1F5DC}-\u{1F5DE}\u{1F5E1}\u{1F5E3}\u{1F5E8}\u{1F5EF}\u{1F5F3}\u{1F5FA}-\u{1F64F}\u{1F680}-\u{1F6C5}\u{1F6CB}-\u{1F6D2}\u{1F6D5}\u{1F6E0}-\u{1F6E5}\u{1F6E9}\u{1F6EB}\u{1F6EC}\u{1F6F0}\u{1F6F3}-\u{1F6FA}\u{1F7E0}-\u{1F7EB}\u{1F90D}-\u{1F93A}\u{1F93C}-\u{1F945}\u{1F947}-\u{1F971}\u{1F973}-\u{1F976}\u{1F97A}-\u{1F9A2}\u{1F9A5}-\u{1F9AA}\u{1F9AE}-\u{1F9CA}\u{1F9CD}-\u{1F9FF}\u{1FA70}-\u{1FA73}\u{1FA78}-\u{1FA7A}\u{1FA80}-\u{1FA82}\u{1FA90}-\u{1FA95}]\uFE0F|[\u261D\u26F9\u270A-\u270D\u{1F385}\u{1F3C2}-\u{1F3C4}\u{1F3C7}\u{1F3CA}-\u{1F3CC}\u{1F442}\u{1F443}\u{1F446}-\u{1F450}\u{1F466}-\u{1F478}\u{1F47C}\u{1F481}-\u{1F483}\u{1F485}-\u{1F487}\u{1F48F}\u{1F491}\u{1F4AA}\u{1F574}\u{1F575}\u{1F57A}\u{1F590}\u{1F595}\u{1F596}\u{1F645}-\u{1F647}\u{1F64B}-\u{1F64F}\u{1F6A3}\u{1F6B4}-\u{1F6B6}\u{1F6C0}\u{1F6CC}\u{1F90F}\u{1F918}-\u{1F91F}\u{1F926}\u{1F930}-\u{1F939}\u{1F93C}-\u{1F93E}\u{1F9B5}\u{1F9B6}\u{1F9B8}\u{1F9B9}\u{1F9BB}\u{1F9CD}-\u{1F9CF}\u{1F9D1}-\u{1F9DD}]/gu;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\emoji-regex\es2015\text.js 
------------------------------------------------------ 
"use strict";

module.exports = () => {
  // https://mths.be/emoji
  return /\u{1F3F4}\u{E0067}\u{E0062}(?:\u{E0065}\u{E006E}\u{E0067}|\u{E0073}\u{E0063}\u{E0074}|\u{E0077}\u{E006C}\u{E0073})\u{E007F}|\u{1F468}(?:\u{1F3FC}\u200D(?:\u{1F91D}\u200D\u{1F468}\u{1F3FB}|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FF}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}-\u{1F3FE}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FE}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}-\u{1F3FD}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FD}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}\u{1F3FC}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u200D(?:\u2764\uFE0F\u200D(?:\u{1F48B}\u200D)?\u{1F468}|[\u{1F468}\u{1F469}]\u200D(?:\u{1F466}\u200D\u{1F466}|\u{1F467}\u200D[\u{1F466}\u{1F467}])|\u{1F466}\u200D\u{1F466}|\u{1F467}\u200D[\u{1F466}\u{1F467}]|[\u{1F468}\u{1F469}]\u200D[\u{1F466}\u{1F467}]|[\u2695\u2696\u2708]\uFE0F|[\u{1F466}\u{1F467}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|(?:\u{1F3FB}\u200D[\u2695\u2696\u2708]|\u{1F3FF}\u200D[\u2695\u2696\u2708]|\u{1F3FE}\u200D[\u2695\u2696\u2708]|\u{1F3FD}\u200D[\u2695\u2696\u2708]|\u{1F3FC}\u200D[\u2695\u2696\u2708])\uFE0F|\u{1F3FB}\u200D[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}]|[\u{1F3FB}-\u{1F3FF}])|(?:\u{1F9D1}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F9D1}|\u{1F469}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F469})\u{1F3FB}|\u{1F9D1}(?:\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F9D1}[\u{1F3FB}-\u{1F3FF}]|\u200D\u{1F91D}\u200D\u{1F9D1})|(?:\u{1F9D1}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F9D1}|\u{1F469}\u{1F3FF}\u200D\u{1F91D}\u200D[\u{1F468}\u{1F469}])[\u{1F3FB}-\u{1F3FE}]|(?:\u{1F9D1}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F9D1}|\u{1F469}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F469})[\u{1F3FB}\u{1F3FC}]|\u{1F469}(?:\u{1F3FE}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}-\u{1F3FD}\u{1F3FF}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FC}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}\u{1F3FD}-\u{1F3FF}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FB}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FC}-\u{1F3FF}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FD}\u200D(?:\u{1F91D}\u200D\u{1F468}[\u{1F3FB}\u{1F3FC}\u{1F3FE}\u{1F3FF}]|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u200D(?:\u2764\uFE0F\u200D(?:\u{1F48B}\u200D[\u{1F468}\u{1F469}]|[\u{1F468}\u{1F469}])|[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F3FF}\u200D[\u{1F33E}\u{1F373}\u{1F393}\u{1F3A4}\u{1F3A8}\u{1F3EB}\u{1F3ED}\u{1F4BB}\u{1F4BC}\u{1F527}\u{1F52C}\u{1F680}\u{1F692}\u{1F9AF}-\u{1F9B3}\u{1F9BC}\u{1F9BD}])|\u{1F469}\u200D\u{1F469}\u200D(?:\u{1F466}\u200D\u{1F466}|\u{1F467}\u200D[\u{1F466}\u{1F467}])|(?:\u{1F9D1}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F9D1}|\u{1F469}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F469})[\u{1F3FB}-\u{1F3FD}]|\u{1F469}\u200D\u{1F466}\u200D\u{1F466}|\u{1F469}\u200D\u{1F469}\u200D[\u{1F466}\u{1F467}]|(?:\u{1F441}\uFE0F\u200D\u{1F5E8}|\u{1F469}(?:\u{1F3FF}\u200D[\u2695\u2696\u2708]|\u{1F3FE}\u200D[\u2695\u2696\u2708]|\u{1F3FC}\u200D[\u2695\u2696\u2708]|\u{1F3FB}\u200D[\u2695\u2696\u2708]|\u{1F3FD}\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:[\u26F9\u{1F3CB}\u{1F3CC}\u{1F575}]\uFE0F|[\u{1F46F}\u{1F93C}\u{1F9DE}\u{1F9DF}])\u200D[\u2640\u2642]|[\u26F9\u{1F3CB}\u{1F3CC}\u{1F575}][\u{1F3FB}-\u{1F3FF}]\u200D[\u2640\u2642]|[\u{1F3C3}\u{1F3C4}\u{1F3CA}\u{1F46E}\u{1F471}\u{1F473}\u{1F477}\u{1F481}\u{1F482}\u{1F486}\u{1F487}\u{1F645}-\u{1F647}\u{1F64B}\u{1F64D}\u{1F64E}\u{1F6A3}\u{1F6B4}-\u{1F6B6}\u{1F926}\u{1F937}-\u{1F939}\u{1F93D}\u{1F93E}\u{1F9B8}\u{1F9B9}\u{1F9CD}-\u{1F9CF}\u{1F9D6}-\u{1F9DD}](?:[\u{1F3FB}-\u{1F3FF}]\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\u{1F3F4}\u200D\u2620)\uFE0F|\u{1F469}\u200D\u{1F467}\u200D[\u{1F466}\u{1F467}]|\u{1F3F3}\uFE0F\u200D\u{1F308}|\u{1F415}\u200D\u{1F9BA}|\u{1F469}\u200D\u{1F466}|\u{1F469}\u200D\u{1F467}|\u{1F1FD}\u{1F1F0}|\u{1F1F4}\u{1F1F2}|\u{1F1F6}\u{1F1E6}|[#\*0-9]\uFE0F\u20E3|\u{1F1E7}[\u{1F1E6}\u{1F1E7}\u{1F1E9}-\u{1F1EF}\u{1F1F1}-\u{1F1F4}\u{1F1F6}-\u{1F1F9}\u{1F1FB}\u{1F1FC}\u{1F1FE}\u{1F1FF}]|\u{1F1F9}[\u{1F1E6}\u{1F1E8}\u{1F1E9}\u{1F1EB}-\u{1F1ED}\u{1F1EF}-\u{1F1F4}\u{1F1F7}\u{1F1F9}\u{1F1FB}\u{1F1FC}\u{1F1FF}]|\u{1F1EA}[\u{1F1E6}\u{1F1E8}\u{1F1EA}\u{1F1EC}\u{1F1ED}\u{1F1F7}-\u{1F1FA}]|\u{1F9D1}[\u{1F3FB}-\u{1F3FF}]|\u{1F1F7}[\u{1F1EA}\u{1F1F4}\u{1F1F8}\u{1F1FA}\u{1F1FC}]|\u{1F469}[\u{1F3FB}-\u{1F3FF}]|\u{1F1F2}[\u{1F1E6}\u{1F1E8}-\u{1F1ED}\u{1F1F0}-\u{1F1FF}]|\u{1F1E6}[\u{1F1E8}-\u{1F1EC}\u{1F1EE}\u{1F1F1}\u{1F1F2}\u{1F1F4}\u{1F1F6}-\u{1F1FA}\u{1F1FC}\u{1F1FD}\u{1F1FF}]|\u{1F1F0}[\u{1F1EA}\u{1F1EC}-\u{1F1EE}\u{1F1F2}\u{1F1F3}\u{1F1F5}\u{1F1F7}\u{1F1FC}\u{1F1FE}\u{1F1FF}]|\u{1F1ED}[\u{1F1F0}\u{1F1F2}\u{1F1F3}\u{1F1F7}\u{1F1F9}\u{1F1FA}]|\u{1F1E9}[\u{1F1EA}\u{1F1EC}\u{1F1EF}\u{1F1F0}\u{1F1F2}\u{1F1F4}\u{1F1FF}]|\u{1F1FE}[\u{1F1EA}\u{1F1F9}]|\u{1F1EC}[\u{1F1E6}\u{1F1E7}\u{1F1E9}-\u{1F1EE}\u{1F1F1}-\u{1F1F3}\u{1F1F5}-\u{1F1FA}\u{1F1FC}\u{1F1FE}]|\u{1F1F8}[\u{1F1E6}-\u{1F1EA}\u{1F1EC}-\u{1F1F4}\u{1F1F7}-\u{1F1F9}\u{1F1FB}\u{1F1FD}-\u{1F1FF}]|\u{1F1EB}[\u{1F1EE}-\u{1F1F0}\u{1F1F2}\u{1F1F4}\u{1F1F7}]|\u{1F1F5}[\u{1F1E6}\u{1F1EA}-\u{1F1ED}\u{1F1F0}-\u{1F1F3}\u{1F1F7}-\u{1F1F9}\u{1F1FC}\u{1F1FE}]|\u{1F1FB}[\u{1F1E6}\u{1F1E8}\u{1F1EA}\u{1F1EC}\u{1F1EE}\u{1F1F3}\u{1F1FA}]|\u{1F1F3}[\u{1F1E6}\u{1F1E8}\u{1F1EA}-\u{1F1EC}\u{1F1EE}\u{1F1F1}\u{1F1F4}\u{1F1F5}\u{1F1F7}\u{1F1FA}\u{1F1FF}]|\u{1F1E8}[\u{1F1E6}\u{1F1E8}\u{1F1E9}\u{1F1EB}-\u{1F1EE}\u{1F1F0}-\u{1F1F5}\u{1F1F7}\u{1F1FA}-\u{1F1FF}]|\u{1F1F1}[\u{1F1E6}-\u{1F1E8}\u{1F1EE}\u{1F1F0}\u{1F1F7}-\u{1F1FB}\u{1F1FE}]|\u{1F1FF}[\u{1F1E6}\u{1F1F2}\u{1F1FC}]|\u{1F1FC}[\u{1F1EB}\u{1F1F8}]|\u{1F1FA}[\u{1F1E6}\u{1F1EC}\u{1F1F2}\u{1F1F3}\u{1F1F8}\u{1F1FE}\u{1F1FF}]|\u{1F1EE}[\u{1F1E8}-\u{1F1EA}\u{1F1F1}-\u{1F1F4}\u{1F1F6}-\u{1F1F9}]|\u{1F1EF}[\u{1F1EA}\u{1F1F2}\u{1F1F4}\u{1F1F5}]|[\u{1F3C3}\u{1F3C4}\u{1F3CA}\u{1F46E}\u{1F471}\u{1F473}\u{1F477}\u{1F481}\u{1F482}\u{1F486}\u{1F487}\u{1F645}-\u{1F647}\u{1F64B}\u{1F64D}\u{1F64E}\u{1F6A3}\u{1F6B4}-\u{1F6B6}\u{1F926}\u{1F937}-\u{1F939}\u{1F93D}\u{1F93E}\u{1F9B8}\u{1F9B9}\u{1F9CD}-\u{1F9CF}\u{1F9D6}-\u{1F9DD}][\u{1F3FB}-\u{1F3FF}]|[\u26F9\u{1F3CB}\u{1F3CC}\u{1F575}][\u{1F3FB}-\u{1F3FF}]|[\u261D\u270A-\u270D\u{1F385}\u{1F3C2}\u{1F3C7}\u{1F442}\u{1F443}\u{1F446}-\u{1F450}\u{1F466}\u{1F467}\u{1F46B}-\u{1F46D}\u{1F470}\u{1F472}\u{1F474}-\u{1F476}\u{1F478}\u{1F47C}\u{1F483}\u{1F485}\u{1F4AA}\u{1F574}\u{1F57A}\u{1F590}\u{1F595}\u{1F596}\u{1F64C}\u{1F64F}\u{1F6C0}\u{1F6CC}\u{1F90F}\u{1F918}-\u{1F91C}\u{1F91E}\u{1F91F}\u{1F930}-\u{1F936}\u{1F9B5}\u{1F9B6}\u{1F9BB}\u{1F9D2}-\u{1F9D5}][\u{1F3FB}-\u{1F3FF}]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55\u{1F004}\u{1F0CF}\u{1F18E}\u{1F191}-\u{1F19A}\u{1F1E6}-\u{1F1FF}\u{1F201}\u{1F21A}\u{1F22F}\u{1F232}-\u{1F236}\u{1F238}-\u{1F23A}\u{1F250}\u{1F251}\u{1F300}-\u{1F320}\u{1F32D}-\u{1F335}\u{1F337}-\u{1F37C}\u{1F37E}-\u{1F393}\u{1F3A0}-\u{1F3CA}\u{1F3CF}-\u{1F3D3}\u{1F3E0}-\u{1F3F0}\u{1F3F4}\u{1F3F8}-\u{1F43E}\u{1F440}\u{1F442}-\u{1F4FC}\u{1F4FF}-\u{1F53D}\u{1F54B}-\u{1F54E}\u{1F550}-\u{1F567}\u{1F57A}\u{1F595}\u{1F596}\u{1F5A4}\u{1F5FB}-\u{1F64F}\u{1F680}-\u{1F6C5}\u{1F6CC}\u{1F6D0}-\u{1F6D2}\u{1F6D5}\u{1F6EB}\u{1F6EC}\u{1F6F4}-\u{1F6FA}\u{1F7E0}-\u{1F7EB}\u{1F90D}-\u{1F93A}\u{1F93C}-\u{1F945}\u{1F947}-\u{1F971}\u{1F973}-\u{1F976}\u{1F97A}-\u{1F9A2}\u{1F9A5}-\u{1F9AA}\u{1F9AE}-\u{1F9CA}\u{1F9CD}-\u{1F9FF}\u{1FA70}-\u{1FA73}\u{1FA78}-\u{1FA7A}\u{1FA80}-\u{1FA82}\u{1FA90}-\u{1FA95}]|[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299\u{1F004}\u{1F0CF}\u{1F170}\u{1F171}\u{1F17E}\u{1F17F}\u{1F18E}\u{1F191}-\u{1F19A}\u{1F1E6}-\u{1F1FF}\u{1F201}\u{1F202}\u{1F21A}\u{1F22F}\u{1F232}-\u{1F23A}\u{1F250}\u{1F251}\u{1F300}-\u{1F321}\u{1F324}-\u{1F393}\u{1F396}\u{1F397}\u{1F399}-\u{1F39B}\u{1F39E}-\u{1F3F0}\u{1F3F3}-\u{1F3F5}\u{1F3F7}-\u{1F4FD}\u{1F4FF}-\u{1F53D}\u{1F549}-\u{1F54E}\u{1F550}-\u{1F567}\u{1F56F}\u{1F570}\u{1F573}-\u{1F57A}\u{1F587}\u{1F58A}-\u{1F58D}\u{1F590}\u{1F595}\u{1F596}\u{1F5A4}\u{1F5A5}\u{1F5A8}\u{1F5B1}\u{1F5B2}\u{1F5BC}\u{1F5C2}-\u{1F5C4}\u{1F5D1}-\u{1F5D3}\u{1F5DC}-\u{1F5DE}\u{1F5E1}\u{1F5E3}\u{1F5E8}\u{1F5EF}\u{1F5F3}\u{1F5FA}-\u{1F64F}\u{1F680}-\u{1F6C5}\u{1F6CB}-\u{1F6D2}\u{1F6D5}\u{1F6E0}-\u{1F6E5}\u{1F6E9}\u{1F6EB}\u{1F6EC}\u{1F6F0}\u{1F6F3}-\u{1F6FA}\u{1F7E0}-\u{1F7EB}\u{1F90D}-\u{1F93A}\u{1F93C}-\u{1F945}\u{1F947}-\u{1F971}\u{1F973}-\u{1F976}\u{1F97A}-\u{1F9A2}\u{1F9A5}-\u{1F9AA}\u{1F9AE}-\u{1F9CA}\u{1F9CD}-\u{1F9FF}\u{1FA70}-\u{1FA73}\u{1FA78}-\u{1FA7A}\u{1FA80}-\u{1FA82}\u{1FA90}-\u{1FA95}]\uFE0F?|[\u261D\u26F9\u270A-\u270D\u{1F385}\u{1F3C2}-\u{1F3C4}\u{1F3C7}\u{1F3CA}-\u{1F3CC}\u{1F442}\u{1F443}\u{1F446}-\u{1F450}\u{1F466}-\u{1F478}\u{1F47C}\u{1F481}-\u{1F483}\u{1F485}-\u{1F487}\u{1F48F}\u{1F491}\u{1F4AA}\u{1F574}\u{1F575}\u{1F57A}\u{1F590}\u{1F595}\u{1F596}\u{1F645}-\u{1F647}\u{1F64B}-\u{1F64F}\u{1F6A3}\u{1F6B4}-\u{1F6B6}\u{1F6C0}\u{1F6CC}\u{1F90F}\u{1F918}-\u{1F91F}\u{1F926}\u{1F930}-\u{1F939}\u{1F93C}-\u{1F93E}\u{1F9B5}\u{1F9B6}\u{1F9B8}\u{1F9B9}\u{1F9BB}\u{1F9CD}-\u{1F9CF}\u{1F9D1}-\u{1F9DD}]/gu;
};
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\emoji-regex\es2015\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\encodeurl\index.js 
------------------------------------------------------ 
/*!
 * encodeurl
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module exports.
 * @public
 */

module.exports = encodeUrl

/**
 * RegExp to match non-URL code points, *after* encoding (i.e. not including "%")
 * and including invalid escape sequences.
 * @private
 */

var ENCODE_CHARS_REGEXP = /(?:[^\x21\x23-\x3B\x3D\x3F-\x5F\x61-\x7A\x7C\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g

/**
 * RegExp to match unmatched surrogate pair.
 * @private
 */

var UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\uD800-\uDBFF])[\uDC00-\uDFFF]|[\uD800-\uDBFF]([^\uDC00-\uDFFF]|$)/g

/**
 * String to replace unmatched surrogate pair with.
 * @private
 */

var UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\uFFFD$2'

/**
 * Encode a URL to a percent-encoded form, excluding already-encoded sequences.
 *
 * This function will take an already-encoded URL and encode all the non-URL
 * code points. This function will not encode the "%" character unless it is
 * not part of a valid sequence (`%20` will be left as-is, but `%foo` will
 * be encoded as `%25foo`).
 *
 * This encode is meant to be "safe" and does not throw errors. It will try as
 * hard as it can to properly encode the given URL, including replacing any raw,
 * unpaired surrogate pairs with the Unicode replacement character prior to
 * encoding.
 *
 * @param {string} url
 * @return {string}
 * @public
 */

function encodeUrl (url) {
  return String(url)
    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)
    .replace(ENCODE_CHARS_REGEXP, encodeURI)
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\encodeurl\package.json 
------------------------------------------------------ 
{
  "name": "encodeurl",
  "description": "Encode a URL to a percent-encoded form, excluding already-encoded sequences",
  "version": "2.0.0",
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>"
  ],
  "license": "MIT",
  "keywords": [
    "encode",
    "encodeurl",
    "url"
  ],
  "repository": "pillarjs/encodeurl",
  "devDependencies": {
    "eslint": "5.11.1",
    "eslint-config-standard": "12.0.0",
    "eslint-plugin-import": "2.14.0",
    "eslint-plugin-node": "7.0.1",
    "eslint-plugin-promise": "4.0.1",
    "eslint-plugin-standard": "4.0.0",
    "istanbul": "0.4.5",
    "mocha": "2.5.3"
  },
  "files": [
    "LICENSE",
    "HISTORY.md",
    "README.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.8"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\encoding\.prettierrc.js 
------------------------------------------------------ 
module.exports = {
    printWidth: 160,
    tabWidth: 4,
    singleQuote: true,
    endOfLine: 'lf',
    trailingComma: 'none',
    arrowParens: 'avoid'
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\encoding\package.json 
------------------------------------------------------ 
{
    "name": "encoding",
    "version": "0.1.13",
    "description": "Convert encodings, uses iconv-lite",
    "main": "lib/encoding.js",
    "scripts": {
        "test": "nodeunit test"
    },
    "repository": "https://github.com/andris9/encoding.git",
    "author": "Andris Reinman",
    "license": "MIT",
    "dependencies": {
        "iconv-lite": "^0.6.2"
    },
    "devDependencies": {
        "nodeunit": "0.11.3"
    }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\encoding\lib\encoding.js 
------------------------------------------------------ 
'use strict';

var iconvLite = require('iconv-lite');

// Expose to the world
module.exports.convert = convert;

/**
 * Convert encoding of an UTF-8 string or a buffer
 *
 * @param {String|Buffer} str String to be converted
 * @param {String} to Encoding to be converted to
 * @param {String} [from='UTF-8'] Encoding to be converted from
 * @return {Buffer} Encoded string
 */
function convert(str, to, from) {
    from = checkEncoding(from || 'UTF-8');
    to = checkEncoding(to || 'UTF-8');
    str = str || '';

    var result;

    if (from !== 'UTF-8' && typeof str === 'string') {
        str = Buffer.from(str, 'binary');
    }

    if (from === to) {
        if (typeof str === 'string') {
            result = Buffer.from(str);
        } else {
            result = str;
        }
    } else {
        try {
            result = convertIconvLite(str, to, from);
        } catch (E) {
            console.error(E);
            result = str;
        }
    }

    if (typeof result === 'string') {
        result = Buffer.from(result, 'utf-8');
    }

    return result;
}

/**
 * Convert encoding of astring with iconv-lite
 *
 * @param {String|Buffer} str String to be converted
 * @param {String} to Encoding to be converted to
 * @param {String} [from='UTF-8'] Encoding to be converted from
 * @return {Buffer} Encoded string
 */
function convertIconvLite(str, to, from) {
    if (to === 'UTF-8') {
        return iconvLite.decode(str, from);
    } else if (from === 'UTF-8') {
        return iconvLite.encode(str, to);
    } else {
        return iconvLite.encode(iconvLite.decode(str, from), to);
    }
}

/**
 * Converts charset name if needed
 *
 * @param {String} name Character set
 * @return {String} Character set name
 */
function checkEncoding(name) {
    return (name || '')
        .toString()
        .trim()
        .replace(/^latin[\-_]?(\d+)$/i, 'ISO-8859-$1')
        .replace(/^win(?:dows)?[\-_]?(\d+)$/i, 'WINDOWS-$1')
        .replace(/^utf[\-_]?(\d+)$/i, 'UTF-$1')
        .replace(/^ks_c_5601\-1987$/i, 'CP949')
        .replace(/^us[\-_]?ascii$/i, 'ASCII')
        .toUpperCase();
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\encoding\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\encoding\test\test.js 
------------------------------------------------------ 
'use strict';

var encoding = require('../lib/encoding');

exports['General tests'] = {
    'From UTF-8 to Latin_1': function (test) {
        var input = 'ÕÄÖÜ',
            expected = Buffer.from([0xd5, 0xc4, 0xd6, 0xdc]);
        test.deepEqual(encoding.convert(input, 'latin1'), expected);
        test.done();
    },

    'From Latin_1 to UTF-8': function (test) {
        var input = Buffer.from([0xd5, 0xc4, 0xd6, 0xdc]),
            expected = 'ÕÄÖÜ';
        test.deepEqual(encoding.convert(input, 'utf-8', 'latin1').toString(), expected);
        test.done();
    },

    'From UTF-8 to UTF-8': function (test) {
        var input = 'ÕÄÖÜ',
            expected = Buffer.from('ÕÄÖÜ');
        test.deepEqual(encoding.convert(input, 'utf-8', 'utf-8'), expected);
        test.done();
    },

    'From Latin_13 to Latin_15': function (test) {
        var input = Buffer.from([0xd5, 0xc4, 0xd6, 0xdc, 0xd0]),
            expected = Buffer.from([0xd5, 0xc4, 0xd6, 0xdc, 0xa6]);
        test.deepEqual(encoding.convert(input, 'latin_15', 'latin13'), expected);
        test.done();
    }

    /*
    // ISO-2022-JP is not supported by iconv-lite
    "From ISO-2022-JP to UTF-8 with Iconv": function (test) {
        var input = Buffer.from(
            "GyRCM1g5OzU7PVEwdzgmPSQ4IUYkMnFKczlwGyhC",
            "base64"
        ),
        expected = Buffer.from(
            "5a2m5qCh5oqA6KGT5ZOh56CU5L+u5qSc6KiO5Lya5aCx5ZGK",
            "base64"
        );
        test.deepEqual(encoding.convert(input, "utf-8", "ISO-2022-JP"), expected);
        test.done();
    },
    */
};
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\encoding\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\end-of-stream\index.js 
------------------------------------------------------ 
var once = require('once');

var noop = function() {};

var qnt = global.Bare ? queueMicrotask : process.nextTick.bind(process);

var isRequest = function(stream) {
	return stream.setHeader && typeof stream.abort === 'function';
};

var isChildProcess = function(stream) {
	return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3
};

var eos = function(stream, opts, callback) {
	if (typeof opts === 'function') return eos(stream, null, opts);
	if (!opts) opts = {};

	callback = once(callback || noop);

	var ws = stream._writableState;
	var rs = stream._readableState;
	var readable = opts.readable || (opts.readable !== false && stream.readable);
	var writable = opts.writable || (opts.writable !== false && stream.writable);
	var cancelled = false;

	var onlegacyfinish = function() {
		if (!stream.writable) onfinish();
	};

	var onfinish = function() {
		writable = false;
		if (!readable) callback.call(stream);
	};

	var onend = function() {
		readable = false;
		if (!writable) callback.call(stream);
	};

	var onexit = function(exitCode) {
		callback.call(stream, exitCode ? new Error('exited with error code: ' + exitCode) : null);
	};

	var onerror = function(err) {
		callback.call(stream, err);
	};

	var onclose = function() {
		qnt(onclosenexttick);
	};

	var onclosenexttick = function() {
		if (cancelled) return;
		if (readable && !(rs && (rs.ended && !rs.destroyed))) return callback.call(stream, new Error('premature close'));
		if (writable && !(ws && (ws.ended && !ws.destroyed))) return callback.call(stream, new Error('premature close'));
	};

	var onrequest = function() {
		stream.req.on('finish', onfinish);
	};

	if (isRequest(stream)) {
		stream.on('complete', onfinish);
		stream.on('abort', onclose);
		if (stream.req) onrequest();
		else stream.on('request', onrequest);
	} else if (writable && !ws) { // legacy streams
		stream.on('end', onlegacyfinish);
		stream.on('close', onlegacyfinish);
	}

	if (isChildProcess(stream)) stream.on('exit', onexit);

	stream.on('end', onend);
	stream.on('finish', onfinish);
	if (opts.error !== false) stream.on('error', onerror);
	stream.on('close', onclose);

	return function() {
		cancelled = true;
		stream.removeListener('complete', onfinish);
		stream.removeListener('abort', onclose);
		stream.removeListener('request', onrequest);
		if (stream.req) stream.req.removeListener('finish', onfinish);
		stream.removeListener('end', onlegacyfinish);
		stream.removeListener('close', onlegacyfinish);
		stream.removeListener('finish', onfinish);
		stream.removeListener('exit', onexit);
		stream.removeListener('end', onend);
		stream.removeListener('error', onerror);
		stream.removeListener('close', onclose);
	};
};

module.exports = eos;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\end-of-stream\package.json 
------------------------------------------------------ 
{
  "name": "end-of-stream",
  "version": "1.4.5",
  "description": "Call a callback when a readable/writable/duplex stream has completed or failed.",
  "repository": {
    "type": "git",
    "url": "git://github.com/mafintosh/end-of-stream.git"
  },
  "dependencies": {
    "once": "^1.4.0"
  },
  "scripts": {
    "test": "node test.js"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "stream",
    "streams",
    "callback",
    "finish",
    "close",
    "end",
    "wait"
  ],
  "bugs": {
    "url": "https://github.com/mafintosh/end-of-stream/issues"
  },
  "homepage": "https://github.com/mafintosh/end-of-stream",
  "main": "index.js",
  "author": "Mathias Buus <mathiasbuus@gmail.com>",
  "license": "MIT",
  "devDependencies": {
    "tape": "^4.11.0"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\env-paths\index.js 
------------------------------------------------------ 
'use strict';
const path = require('path');
const os = require('os');

const homedir = os.homedir();
const tmpdir = os.tmpdir();
const {env} = process;

const macos = name => {
	const library = path.join(homedir, 'Library');

	return {
		data: path.join(library, 'Application Support', name),
		config: path.join(library, 'Preferences', name),
		cache: path.join(library, 'Caches', name),
		log: path.join(library, 'Logs', name),
		temp: path.join(tmpdir, name)
	};
};

const windows = name => {
	const appData = env.APPDATA || path.join(homedir, 'AppData', 'Roaming');
	const localAppData = env.LOCALAPPDATA || path.join(homedir, 'AppData', 'Local');

	return {
		// Data/config/cache/log are invented by me as Windows isn't opinionated about this
		data: path.join(localAppData, name, 'Data'),
		config: path.join(appData, name, 'Config'),
		cache: path.join(localAppData, name, 'Cache'),
		log: path.join(localAppData, name, 'Log'),
		temp: path.join(tmpdir, name)
	};
};

// https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
const linux = name => {
	const username = path.basename(homedir);

	return {
		data: path.join(env.XDG_DATA_HOME || path.join(homedir, '.local', 'share'), name),
		config: path.join(env.XDG_CONFIG_HOME || path.join(homedir, '.config'), name),
		cache: path.join(env.XDG_CACHE_HOME || path.join(homedir, '.cache'), name),
		// https://wiki.debian.org/XDGBaseDirectorySpecification#state
		log: path.join(env.XDG_STATE_HOME || path.join(homedir, '.local', 'state'), name),
		temp: path.join(tmpdir, username, name)
	};
};

const envPaths = (name, options) => {
	if (typeof name !== 'string') {
		throw new TypeError(`Expected string, got ${typeof name}`);
	}

	options = Object.assign({suffix: 'nodejs'}, options);

	if (options.suffix) {
		// Add suffix to prevent possible conflict with native apps
		name += `-${options.suffix}`;
	}

	if (process.platform === 'darwin') {
		return macos(name);
	}

	if (process.platform === 'win32') {
		return windows(name);
	}

	return linux(name);
};

module.exports = envPaths;
// TODO: Remove this for the next major release
module.exports.default = envPaths;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\env-paths\package.json 
------------------------------------------------------ 
{
	"name": "env-paths",
	"version": "2.2.1",
	"description": "Get paths for storing things like data, config, cache, etc",
	"license": "MIT",
	"repository": "sindresorhus/env-paths",
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "sindresorhus.com"
	},
	"engines": {
		"node": ">=6"
	},
	"scripts": {
		"test": "xo && ava && tsd"
	},
	"files": [
		"index.js",
		"index.d.ts"
	],
	"keywords": [
		"common",
		"user",
		"paths",
		"env",
		"environment",
		"directory",
		"dir",
		"appdir",
		"path",
		"data",
		"config",
		"cache",
		"logs",
		"temp",
		"linux",
		"unix"
	],
	"devDependencies": {
		"ava": "^1.4.1",
		"tsd": "^0.7.1",
		"xo": "^0.24.0"
	}
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\err-code\index.js 
------------------------------------------------------ 
'use strict';

function assign(obj, props) {
    for (const key in props) {
        Object.defineProperty(obj, key, {
            value: props[key],
            enumerable: true,
            configurable: true,
        });
    }

    return obj;
}

function createError(err, code, props) {
    if (!err || typeof err === 'string') {
        throw new TypeError('Please pass an Error to err-code');
    }

    if (!props) {
        props = {};
    }

    if (typeof code === 'object') {
        props = code;
        code = undefined;
    }

    if (code != null) {
        props.code = code;
    }

    try {
        return assign(err, props);
    } catch (_) {
        props.message = err.message;
        props.stack = err.stack;

        const ErrClass = function () {};

        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));

        return assign(new ErrClass(), props);
    }
}

module.exports = createError;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\err-code\index.umd.js 
------------------------------------------------------ 
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.errCode = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

function assign(obj, props) {
    for (const key in props) {
        Object.defineProperty(obj, key, {
            value: props[key],
            enumerable: true,
            configurable: true,
        });
    }

    return obj;
}

function createError(err, code, props) {
    if (!err || typeof err === 'string') {
        throw new TypeError('Please pass an Error to err-code');
    }

    if (!props) {
        props = {};
    }

    if (typeof code === 'object') {
        props = code;
        code = undefined;
    }

    if (code != null) {
        props.code = code;
    }

    try {
        return assign(err, props);
    } catch (_) {
        props.message = err.message;
        props.stack = err.stack;

        const ErrClass = function () {};

        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));

        return assign(new ErrClass(), props);
    }
}

module.exports = createError;

},{}]},{},[1])(1)
});
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\err-code\package.json 
------------------------------------------------------ 
{
  "name": "err-code",
  "version": "2.0.3",
  "description": "Create an error with a code",
  "main": "index.js",
  "scripts": {
    "lint": "eslint '{*.js,test/**/*.js}' --ignore-pattern *.umd.js",
    "test": "mocha --bail",
    "browserify": "browserify -s err-code index.js > index.umd.js"
  },
  "bugs": {
    "url": "https://github.com/IndigoUnited/js-err-code/issues/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/IndigoUnited/js-err-code.git"
  },
  "keywords": [
    "error",
    "err",
    "code",
    "properties",
    "property"
  ],
  "author": "IndigoUnited <hello@indigounited.com> (http://indigounited.com)",
  "license": "MIT",
  "devDependencies": {
    "@satazor/eslint-config": "^3.0.0",
    "browserify": "^16.5.1",
    "eslint": "^7.2.0",
    "expect.js": "^0.3.1",
    "mocha": "^8.0.1"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\err-code\test\test.js 
------------------------------------------------------ 
'use strict';

const errcode = require('../index');
const expect = require('expect.js');

describe('errcode', () => {
    describe('string as first argument', () => {
        it('should throw an error', () => {
            expect(() => { errcode('my message'); }).to.throwError((err) => {
                expect(err).to.be.a(TypeError);
            });
        });
    });

    describe('error as first argument', () => {
        it('should accept an error and do nothing', () => {
            const myErr = new Error('my message');
            const err = errcode(myErr);

            expect(err).to.be(myErr);
            expect(err.hasOwnProperty(err.code)).to.be(false);
        });

        it('should accept an error and add a code', () => {
            const myErr = new Error('my message');
            const err = errcode(myErr, 'ESOME');

            expect(err).to.be(myErr);
            expect(err.code).to.be('ESOME');
        });

        it('should accept an error object and add code & properties', () => {
            const myErr = new Error('my message');
            const err = errcode(myErr, 'ESOME', { foo: 'bar', bar: 'foo' });

            expect(err).to.be.an(Error);
            expect(err.code).to.be('ESOME');
            expect(err.foo).to.be('bar');
            expect(err.bar).to.be('foo');
        });

        it('should create an error object without code but with properties', () => {
            const myErr = new Error('my message');
            const err = errcode(myErr, { foo: 'bar', bar: 'foo' });

            expect(err).to.be.an(Error);
            expect(err.code).to.be(undefined);
            expect(err.foo).to.be('bar');
            expect(err.bar).to.be('foo');
        });

        it('should set a non-writable field', () => {
            const myErr = new Error('my message');

            Object.defineProperty(myErr, 'code', {
                value: 'derp',
                writable: false,
            });
            const err = errcode(myErr, 'ERR_WAT');

            expect(err).to.be.an(Error);
            expect(err.stack).to.equal(myErr.stack);
            expect(err.code).to.be('ERR_WAT');
        });

        it('should add a code to frozen object', () => {
            const myErr = new Error('my message');
            const err = errcode(Object.freeze(myErr), 'ERR_WAT');

            expect(err).to.be.an(Error);
            expect(err.stack).to.equal(myErr.stack);
            expect(err.code).to.be('ERR_WAT');
        });

        it('should to set a field that throws at assignment time', () => {
            const myErr = new Error('my message');

            Object.defineProperty(myErr, 'code', {
                enumerable: true,
                set() {
                    throw new Error('Nope!');
                },
                get() {
                    return 'derp';
                },
            });
            const err = errcode(myErr, 'ERR_WAT');

            expect(err).to.be.an(Error);
            expect(err.stack).to.equal(myErr.stack);
            expect(err.code).to.be('ERR_WAT');
        });

        it('should retain error type', () => {
            const myErr = new TypeError('my message');

            Object.defineProperty(myErr, 'code', {
                value: 'derp',
                writable: false,
            });
            const err = errcode(myErr, 'ERR_WAT');

            expect(err).to.be.a(TypeError);
            expect(err.stack).to.equal(myErr.stack);
            expect(err.code).to.be('ERR_WAT');
        });

        it('should add a code to a class that extends Error', () => {
            class CustomError extends Error {
                set code(val) {
                    throw new Error('Nope!');
                }
            }

            const myErr = new CustomError('my message');

            Object.defineProperty(myErr, 'code', {
                value: 'derp',
                writable: false,
                configurable: false,
            });
            const err = errcode(myErr, 'ERR_WAT');

            expect(err).to.be.a(CustomError);
            expect(err.stack).to.equal(myErr.stack);
            expect(err.code).to.be('ERR_WAT');

            // original prototype chain should be intact
            expect(() => {
                const otherErr = new CustomError('my message');

                otherErr.code = 'derp';
            }).to.throwError();
        });

        it('should support errors that are not Errors', () => {
            const err = errcode({
                message: 'Oh noes!',
            }, 'ERR_WAT');

            expect(err.message).to.be('Oh noes!');
            expect(err.code).to.be('ERR_WAT');
        });
    });

    describe('falsy first arguments', () => {
        it('should not allow passing null as the first argument', () => {
            expect(() => { errcode(null); }).to.throwError((err) => {
                expect(err).to.be.a(TypeError);
            });
        });

        it('should not allow passing undefined as the first argument', () => {
            expect(() => { errcode(undefined); }).to.throwError((err) => {
                expect(err).to.be.a(TypeError);
            });
        });
    });
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\err-code\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-define-property\index.js 
------------------------------------------------------ 
'use strict';

/** @type {import('.')} */
var $defineProperty = Object.defineProperty || false;
if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = false;
	}
}

module.exports = $defineProperty;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-define-property\package.json 
------------------------------------------------------ 
{
	"name": "es-define-property",
	"version": "1.0.1",
	"description": "`Object.defineProperty`, but not IE 8's broken one.",
	"main": "index.js",
	"types": "./index.d.ts",
	"exports": {
		".": "./index.js",
		"./package.json": "./package.json"
	},
	"sideEffects": false,
	"scripts": {
		"prepack": "npmignore --auto --commentLines=autogenerated",
		"prepublish": "not-in-publish || npm run prepublishOnly",
		"prepublishOnly": "safe-publish-latest",
		"prelint": "evalmd README.md",
		"lint": "eslint --ext=js,mjs .",
		"postlint": "tsc -p .",
		"pretest": "npm run lint",
		"tests-only": "nyc tape 'test/**/*.js'",
		"test": "npm run tests-only",
		"posttest": "npx npm@'>= 10.2' audit --production",
		"version": "auto-changelog && git add CHANGELOG.md",
		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ljharb/es-define-property.git"
	},
	"keywords": [
		"javascript",
		"ecmascript",
		"object",
		"define",
		"property",
		"defineProperty",
		"Object.defineProperty"
	],
	"author": "Jordan Harband <ljharb@gmail.com>",
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/ljharb/es-define-property/issues"
	},
	"homepage": "https://github.com/ljharb/es-define-property#readme",
	"devDependencies": {
		"@ljharb/eslint-config": "^21.1.1",
		"@ljharb/tsconfig": "^0.2.2",
		"@types/gopd": "^1.0.3",
		"@types/tape": "^5.6.5",
		"auto-changelog": "^2.5.0",
		"encoding": "^0.1.13",
		"eslint": "^8.8.0",
		"evalmd": "^0.0.19",
		"gopd": "^1.2.0",
		"in-publish": "^2.0.1",
		"npmignore": "^0.3.1",
		"nyc": "^10.3.2",
		"safe-publish-latest": "^2.0.0",
		"tape": "^5.9.0",
		"typescript": "next"
	},
	"engines": {
		"node": ">= 0.4"
	},
	"testling": {
		"files": "test/index.js"
	},
	"auto-changelog": {
		"output": "CHANGELOG.md",
		"template": "keepachangelog",
		"unreleased": false,
		"commitLimit": false,
		"backfillLimit": false,
		"hideCredit": true
	},
	"publishConfig": {
		"ignore": [
			".github/workflows"
		]
	}
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-define-property\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-define-property\test\index.js 
------------------------------------------------------ 
'use strict';

var $defineProperty = require('../');

var test = require('tape');
var gOPD = require('gopd');

test('defineProperty: supported', { skip: !$defineProperty }, function (t) {
	t.plan(4);

	t.equal(typeof $defineProperty, 'function', 'defineProperty is supported');
	if ($defineProperty && gOPD) { // this `if` check is just to shut TS up
		/** @type {{ a: number, b?: number, c?: number }} */
		var o = { a: 1 };

		$defineProperty(o, 'b', { enumerable: true, value: 2 });
		t.deepEqual(
			gOPD(o, 'b'),
			{
				configurable: false,
				enumerable: true,
				value: 2,
				writable: false
			},
			'property descriptor is as expected'
		);

		$defineProperty(o, 'c', { enumerable: false, value: 3, writable: true });
		t.deepEqual(
			gOPD(o, 'c'),
			{
				configurable: false,
				enumerable: false,
				value: 3,
				writable: true
			},
			'property descriptor is as expected'
		);
	}

	t.equal($defineProperty, Object.defineProperty, 'defineProperty is Object.defineProperty');

	t.end();
});

test('defineProperty: not supported', { skip: !!$defineProperty }, function (t) {
	t.notOk($defineProperty, 'defineProperty is not supported');

	t.match(
		typeof $defineProperty,
		/^(?:undefined|boolean)$/,
		'`typeof defineProperty` is `undefined` or `boolean`'
	);

	t.end();
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-define-property\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-errors\eval.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./eval')} */
module.exports = EvalError;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-errors\index.js 
------------------------------------------------------ 
'use strict';

/** @type {import('.')} */
module.exports = Error;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-errors\range.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./range')} */
module.exports = RangeError;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-errors\ref.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./ref')} */
module.exports = ReferenceError;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-errors\syntax.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./syntax')} */
module.exports = SyntaxError;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-errors\type.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./type')} */
module.exports = TypeError;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-errors\uri.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./uri')} */
module.exports = URIError;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-errors\package.json 
------------------------------------------------------ 
{
	"name": "es-errors",
	"version": "1.3.0",
	"description": "A simple cache for a few of the JS Error constructors.",
	"main": "index.js",
	"exports": {
		".": "./index.js",
		"./eval": "./eval.js",
		"./range": "./range.js",
		"./ref": "./ref.js",
		"./syntax": "./syntax.js",
		"./type": "./type.js",
		"./uri": "./uri.js",
		"./package.json": "./package.json"
	},
	"sideEffects": false,
	"scripts": {
		"prepack": "npmignore --auto --commentLines=autogenerated",
		"prepublishOnly": "safe-publish-latest",
		"prepublish": "not-in-publish || npm run prepublishOnly",
		"pretest": "npm run lint",
		"test": "npm run tests-only",
		"tests-only": "nyc tape 'test/**/*.js'",
		"posttest": "aud --production",
		"prelint": "evalmd README.md",
		"lint": "eslint --ext=js,mjs .",
		"postlint": "tsc -p . && eclint check $(git ls-files | xargs find 2> /dev/null | grep -vE 'node_modules|\\.git' | grep -v dist/)",
		"version": "auto-changelog && git add CHANGELOG.md",
		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ljharb/es-errors.git"
	},
	"keywords": [
		"javascript",
		"ecmascript",
		"error",
		"typeerror",
		"syntaxerror",
		"rangeerror"
	],
	"author": "Jordan Harband <ljharb@gmail.com>",
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/ljharb/es-errors/issues"
	},
	"homepage": "https://github.com/ljharb/es-errors#readme",
	"devDependencies": {
		"@ljharb/eslint-config": "^21.1.0",
		"@types/tape": "^5.6.4",
		"aud": "^2.0.4",
		"auto-changelog": "^2.4.0",
		"eclint": "^2.8.1",
		"eslint": "^8.8.0",
		"evalmd": "^0.0.19",
		"in-publish": "^2.0.1",
		"npmignore": "^0.3.1",
		"nyc": "^10.3.2",
		"safe-publish-latest": "^2.0.0",
		"tape": "^5.7.4",
		"typescript": "next"
	},
	"auto-changelog": {
		"output": "CHANGELOG.md",
		"template": "keepachangelog",
		"unreleased": false,
		"commitLimit": false,
		"backfillLimit": false,
		"hideCredit": true
	},
	"publishConfig": {
		"ignore": [
			".github/workflows"
		]
	},
	"engines": {
		"node": ">= 0.4"
	}
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-errors\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-errors\test\index.js 
------------------------------------------------------ 
'use strict';

var test = require('tape');

var E = require('../');
var R = require('../range');
var Ref = require('../ref');
var S = require('../syntax');
var T = require('../type');

test('errors', function (t) {
	t.equal(E, Error);
	t.equal(R, RangeError);
	t.equal(Ref, ReferenceError);
	t.equal(S, SyntaxError);
	t.equal(T, TypeError);

	t.end();
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-errors\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-object-atoms\index.js 
------------------------------------------------------ 
'use strict';

/** @type {import('.')} */
module.exports = Object;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-object-atoms\isObject.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./isObject')} */
module.exports = function isObject(x) {
	return !!x && (typeof x === 'function' || typeof x === 'object');
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-object-atoms\RequireObjectCoercible.js 
------------------------------------------------------ 
'use strict';

var $TypeError = require('es-errors/type');

/** @type {import('./RequireObjectCoercible')} */
module.exports = function RequireObjectCoercible(value) {
	if (value == null) {
		throw new $TypeError((arguments.length > 0 && arguments[1]) || ('Cannot call method on ' + value));
	}
	return value;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-object-atoms\ToObject.js 
------------------------------------------------------ 
'use strict';

var $Object = require('./');
var RequireObjectCoercible = require('./RequireObjectCoercible');

/** @type {import('./ToObject')} */
module.exports = function ToObject(value) {
	RequireObjectCoercible(value);
	return $Object(value);
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-object-atoms\package.json 
------------------------------------------------------ 
{
	"name": "es-object-atoms",
	"version": "1.1.1",
	"description": "ES Object-related atoms: Object, ToObject, RequireObjectCoercible",
	"main": "index.js",
	"exports": {
		".": "./index.js",
		"./RequireObjectCoercible": "./RequireObjectCoercible.js",
		"./isObject": "./isObject.js",
		"./ToObject": "./ToObject.js",
		"./package.json": "./package.json"
	},
	"sideEffects": false,
	"scripts": {
		"prepack": "npmignore --auto --commentLines=autogenerated",
		"prepublishOnly": "safe-publish-latest",
		"prepublish": "not-in-publish || npm run prepublishOnly",
		"pretest": "npm run lint",
		"test": "npm run tests-only",
		"tests-only": "nyc tape 'test/**/*.js'",
		"posttest": "npx npm@\">= 10.2\" audit --production",
		"prelint": "evalmd README.md",
		"lint": "eslint --ext=js,mjs .",
		"postlint": "tsc -p . && eclint check $(git ls-files | xargs find 2> /dev/null | grep -vE 'node_modules|\\.git' | grep -v dist/)",
		"version": "auto-changelog && git add CHANGELOG.md",
		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ljharb/es-object-atoms.git"
	},
	"keywords": [
		"javascript",
		"ecmascript",
		"object",
		"toobject",
		"coercible"
	],
	"author": "Jordan Harband <ljharb@gmail.com>",
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/ljharb/es-object-atoms/issues"
	},
	"homepage": "https://github.com/ljharb/es-object-atoms#readme",
	"dependencies": {
		"es-errors": "^1.3.0"
	},
	"devDependencies": {
		"@ljharb/eslint-config": "^21.1.1",
		"@ljharb/tsconfig": "^0.2.3",
		"@types/tape": "^5.8.1",
		"auto-changelog": "^2.5.0",
		"eclint": "^2.8.1",
		"encoding": "^0.1.13",
		"eslint": "^8.8.0",
		"evalmd": "^0.0.19",
		"in-publish": "^2.0.1",
		"npmignore": "^0.3.1",
		"nyc": "^10.3.2",
		"safe-publish-latest": "^2.0.0",
		"tape": "^5.9.0",
		"typescript": "next"
	},
	"auto-changelog": {
		"output": "CHANGELOG.md",
		"template": "keepachangelog",
		"unreleased": false,
		"commitLimit": false,
		"backfillLimit": false,
		"hideCredit": true
	},
	"publishConfig": {
		"ignore": [
			".github/workflows"
		]
	},
	"engines": {
		"node": ">= 0.4"
	}
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-object-atoms\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-object-atoms\test\index.js 
------------------------------------------------------ 
'use strict';

var test = require('tape');

var $Object = require('../');
var isObject = require('../isObject');
var ToObject = require('../ToObject');
var RequireObjectCoercible = require('..//RequireObjectCoercible');

test('errors', function (t) {
	t.equal($Object, Object);
	// @ts-expect-error
	t['throws'](function () { ToObject(null); }, TypeError);
	// @ts-expect-error
	t['throws'](function () { ToObject(undefined); }, TypeError);
	// @ts-expect-error
	t['throws'](function () { RequireObjectCoercible(null); }, TypeError);
	// @ts-expect-error
	t['throws'](function () { RequireObjectCoercible(undefined); }, TypeError);

	t.deepEqual(RequireObjectCoercible(true), true);
	t.deepEqual(ToObject(true), Object(true));
	t.deepEqual(ToObject(42), Object(42));
	var f = function () {};
	t.equal(ToObject(f), f);

	t.equal(isObject(undefined), false);
	t.equal(isObject(null), false);
	t.equal(isObject({}), true);
	t.equal(isObject([]), true);
	t.equal(isObject(function () {}), true);

	var obj = {};
	t.equal(RequireObjectCoercible(obj), obj);
	t.equal(ToObject(obj), obj);

	t.end();
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\es-object-atoms\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\escape-html\index.js 
------------------------------------------------------ 
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */

'use strict';

/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Module exports.
 * @public
 */

module.exports = escapeHtml;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34: // "
        escape = '&quot;';
        break;
      case 38: // &
        escape = '&amp;';
        break;
      case 39: // '
        escape = '&#39;';
        break;
      case 60: // <
        escape = '&lt;';
        break;
      case 62: // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index
    ? html + str.substring(lastIndex, index)
    : html;
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\escape-html\package.json 
------------------------------------------------------ 
{
  "name": "escape-html",
  "description": "Escape string for use in HTML",
  "version": "1.0.3",
  "license": "MIT",
  "keywords": [
    "escape",
    "html",
    "utility"
  ],
  "repository": "component/escape-html",
  "devDependencies": {
    "benchmark": "1.0.0",
    "beautify-benchmark": "0.2.4"
  },
  "files": [
    "LICENSE",
    "Readme.md",
    "index.js"
  ],
  "scripts": {
    "bench": "node benchmark/index.js"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\etag\index.js 
------------------------------------------------------ 
/*!
 * etag
 * Copyright(c) 2014-2016 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module exports.
 * @public
 */

module.exports = etag

/**
 * Module dependencies.
 * @private
 */

var crypto = require('crypto')
var Stats = require('fs').Stats

/**
 * Module variables.
 * @private
 */

var toString = Object.prototype.toString

/**
 * Generate an entity tag.
 *
 * @param {Buffer|string} entity
 * @return {string}
 * @private
 */

function entitytag (entity) {
  if (entity.length === 0) {
    // fast-path empty
    return '"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk"'
  }

  // compute hash of entity
  var hash = crypto
    .createHash('sha1')
    .update(entity, 'utf8')
    .digest('base64')
    .substring(0, 27)

  // compute length of entity
  var len = typeof entity === 'string'
    ? Buffer.byteLength(entity, 'utf8')
    : entity.length

  return '"' + len.toString(16) + '-' + hash + '"'
}

/**
 * Create a simple ETag.
 *
 * @param {string|Buffer|Stats} entity
 * @param {object} [options]
 * @param {boolean} [options.weak]
 * @return {String}
 * @public
 */

function etag (entity, options) {
  if (entity == null) {
    throw new TypeError('argument entity is required')
  }

  // support fs.Stats object
  var isStats = isstats(entity)
  var weak = options && typeof options.weak === 'boolean'
    ? options.weak
    : isStats

  // validate argument
  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {
    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')
  }

  // generate entity tag
  var tag = isStats
    ? stattag(entity)
    : entitytag(entity)

  return weak
    ? 'W/' + tag
    : tag
}

/**
 * Determine if object is a Stats object.
 *
 * @param {object} obj
 * @return {boolean}
 * @api private
 */

function isstats (obj) {
  // genuine fs.Stats
  if (typeof Stats === 'function' && obj instanceof Stats) {
    return true
  }

  // quack quack
  return obj && typeof obj === 'object' &&
    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&
    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&
    'ino' in obj && typeof obj.ino === 'number' &&
    'size' in obj && typeof obj.size === 'number'
}

/**
 * Generate a tag for a stat.
 *
 * @param {object} stat
 * @return {string}
 * @private
 */

function stattag (stat) {
  var mtime = stat.mtime.getTime().toString(16)
  var size = stat.size.toString(16)

  return '"' + size + '-' + mtime + '"'
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\etag\package.json 
------------------------------------------------------ 
{
  "name": "etag",
  "description": "Create simple HTTP ETags",
  "version": "1.8.1",
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>",
    "David Björklund <david.bjorklund@gmail.com>"
  ],
  "license": "MIT",
  "keywords": [
    "etag",
    "http",
    "res"
  ],
  "repository": "jshttp/etag",
  "devDependencies": {
    "beautify-benchmark": "0.2.4",
    "benchmark": "2.1.4",
    "eslint": "3.19.0",
    "eslint-config-standard": "10.2.1",
    "eslint-plugin-import": "2.7.0",
    "eslint-plugin-markdown": "1.0.0-beta.6",
    "eslint-plugin-node": "5.1.1",
    "eslint-plugin-promise": "3.5.0",
    "eslint-plugin-standard": "3.0.1",
    "istanbul": "0.4.5",
    "mocha": "1.21.5",
    "safe-buffer": "5.1.1",
    "seedrandom": "2.4.3"
  },
  "files": [
    "LICENSE",
    "HISTORY.md",
    "README.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "bench": "node benchmark/index.js",
    "lint": "eslint --plugin markdown --ext js,md .",
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\expand-template\index.js 
------------------------------------------------------ 
module.exports = function (opts) {
  var sep = opts ? opts.sep : '{}'
  var len = sep.length

  var whitespace = '\\s*'
  var left = escape(sep.substring(0, len / 2)) + whitespace
  var right = whitespace + escape(sep.substring(len / 2, len))

  return function (template, values) {
    Object.keys(values).forEach(function (key) {
      var value = String(values[key]).replace(/\$/g, '$$$$')
      template = template.replace(regExp(key), value)
    })
    return template
  }

  function escape (s) {
    return [].map.call(s, function (char) {
      return '\\' + char
    }).join('')
  }

  function regExp (key) {
    return new RegExp(left + key + right, 'g')
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\expand-template\test.js 
------------------------------------------------------ 
var test = require('tape')
var Expand = require('./')

test('default expands {} placeholders', function (t) {
  var expand = Expand()
  t.equal(typeof expand, 'function', 'is a function')
  t.equal(expand('{foo}/{bar}', {
    foo: 'BAR', bar: 'FOO'
  }), 'BAR/FOO')
  t.equal(expand('{foo}{foo}{foo}', {
    foo: 'FOO'
  }), 'FOOFOOFOO', 'expands one placeholder many times')
  t.end()
})

test('support for custom separators', function (t) {
  var expand = Expand({ sep: '[]' })
  t.equal(expand('[foo]/[bar]', {
    foo: 'BAR', bar: 'FOO'
  }), 'BAR/FOO')
  t.equal(expand('[foo][foo][foo]', {
    foo: 'FOO'
  }), 'FOOFOOFOO', 'expands one placeholder many times')
  t.end()
})

test('support for longer custom separators', function (t) {
  var expand = Expand({ sep: '[[]]' })
  t.equal(expand('[[foo]]/[[bar]]', {
    foo: 'BAR', bar: 'FOO'
  }), 'BAR/FOO')
  t.equal(expand('[[foo]][[foo]][[foo]]', {
    foo: 'FOO'
  }), 'FOOFOOFOO', 'expands one placeholder many times')
  t.end()
})

test('whitespace-insensitive', function (t) {
  var expand = Expand({ sep: '[]' })
  t.equal(expand('[ foo ]/[ bar ]', {
    foo: 'BAR', bar: 'FOO'
  }), 'BAR/FOO')
  t.equal(expand('[ foo ][ foo  ][ foo]', {
    foo: 'FOO'
  }), 'FOOFOOFOO', 'expands one placeholder many times')
  t.end()
})

test('dollar escape', function (t) {
  var expand = Expand()
  t.equal(expand('before {foo} after', {
    foo: '$'
  }), 'before $ after')
  t.equal(expand('before {foo} after', {
    foo: '$&'
  }), 'before $& after')
  t.equal(expand('before {foo} after', {
    foo: '$`'
  }), 'before $` after')
  t.equal(expand('before {foo} after', {
    foo: '$\''
  }), 'before $\' after')
  t.equal(expand('before {foo} after', {
    foo: '$0'
  }), 'before $0 after')
  t.end()
})
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\expand-template\package.json 
------------------------------------------------------ 
{
  "name": "expand-template",
  "version": "2.0.3",
  "description": "Expand placeholders in a template string",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/ralphtheninja/expand-template.git"
  },
  "homepage": "https://github.com/ralphtheninja/expand-template",
  "scripts": {
    "test": "tape test.js && standard"
  },
  "keywords": [
    "template",
    "expand",
    "replace"
  ],
  "author": "LM <ralphtheninja@riseup.net>",
  "license": "(MIT OR WTFPL)",
  "dependencies": {},
  "devDependencies": {
    "standard": "^12.0.0",
    "tape": "^4.2.2"
  },
  "engines": {
    "node": ">=6"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\express\index.js 
------------------------------------------------------ 
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

module.exports = require('./lib/express');
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\express\package.json 
------------------------------------------------------ 
{
  "name": "express",
  "description": "Fast, unopinionated, minimalist web framework",
  "version": "5.1.0",
  "author": "TJ Holowaychuk <tj@vision-media.ca>",
  "contributors": [
    "Aaron Heckmann <aaron.heckmann+github@gmail.com>",
    "Ciaran Jessup <ciaranj@gmail.com>",
    "Douglas Christopher Wilson <doug@somethingdoug.com>",
    "Guillermo Rauch <rauchg@gmail.com>",
    "Jonathan Ong <me@jongleberry.com>",
    "Roman Shtylman <shtylman+expressjs@gmail.com>",
    "Young Jae Sim <hanul@hanul.me>"
  ],
  "license": "MIT",
  "repository": "expressjs/express",
  "homepage": "https://expressjs.com/",
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/express"
  },
  "keywords": [
    "express",
    "framework",
    "sinatra",
    "web",
    "http",
    "rest",
    "restful",
    "router",
    "app",
    "api"
  ],
  "dependencies": {
    "accepts": "^2.0.0",
    "body-parser": "^2.2.0",
    "content-disposition": "^1.0.0",
    "content-type": "^1.0.5",
    "cookie": "^0.7.1",
    "cookie-signature": "^1.2.1",
    "debug": "^4.4.0",
    "encodeurl": "^2.0.0",
    "escape-html": "^1.0.3",
    "etag": "^1.8.1",
    "finalhandler": "^2.1.0",
    "fresh": "^2.0.0",
    "http-errors": "^2.0.0",
    "merge-descriptors": "^2.0.0",
    "mime-types": "^3.0.0",
    "on-finished": "^2.4.1",
    "once": "^1.4.0",
    "parseurl": "^1.3.3",
    "proxy-addr": "^2.0.7",
    "qs": "^6.14.0",
    "range-parser": "^1.2.1",
    "router": "^2.2.0",
    "send": "^1.1.0",
    "serve-static": "^2.2.0",
    "statuses": "^2.0.1",
    "type-is": "^2.0.1",
    "vary": "^1.1.2"
  },
  "devDependencies": {
    "after": "0.8.2",
    "connect-redis": "^8.0.1",
    "cookie-parser": "1.4.7",
    "cookie-session": "2.1.0",
    "ejs": "^3.1.10",
    "eslint": "8.47.0",
    "express-session": "^1.18.1",
    "hbs": "4.2.0",
    "marked": "^15.0.3",
    "method-override": "3.0.0",
    "mocha": "^10.7.3",
    "morgan": "1.10.0",
    "nyc": "^17.1.0",
    "pbkdf2-password": "1.2.1",
    "supertest": "^6.3.0",
    "vhost": "~3.0.2"
  },
  "engines": {
    "node": ">= 18"
  },
  "files": [
    "LICENSE",
    "History.md",
    "Readme.md",
    "index.js",
    "lib/"
  ],
  "scripts": {
    "lint": "eslint .",
    "test": "mocha --require test/support/env --reporter spec --check-leaks test/ test/acceptance/",
    "test-ci": "nyc --exclude examples --exclude test --exclude benchmarks --reporter=lcovonly --reporter=text npm test",
    "test-cov": "nyc --exclude examples --exclude test --exclude benchmarks --reporter=html --reporter=text npm test",
    "test-tap": "mocha --require test/support/env --reporter tap --check-leaks test/ test/acceptance/"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\express\lib\application.js 
------------------------------------------------------ 
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 * @private
 */

var finalhandler = require('finalhandler');
var debug = require('debug')('express:application');
var View = require('./view');
var http = require('node:http');
var methods = require('./utils').methods;
var compileETag = require('./utils').compileETag;
var compileQueryParser = require('./utils').compileQueryParser;
var compileTrust = require('./utils').compileTrust;
var resolve = require('node:path').resolve;
var once = require('once')
var Router = require('router');

/**
 * Module variables.
 * @private
 */

var slice = Array.prototype.slice;
var flatten = Array.prototype.flat;

/**
 * Application prototype.
 */

var app = exports = module.exports = {};

/**
 * Variable for trust proxy inheritance back-compat
 * @private
 */

var trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';

/**
 * Initialize the server.
 *
 *   - setup default configuration
 *   - setup default middleware
 *   - setup route reflection methods
 *
 * @private
 */

app.init = function init() {
  var router = null;

  this.cache = Object.create(null);
  this.engines = Object.create(null);
  this.settings = Object.create(null);

  this.defaultConfiguration();

  // Setup getting to lazily add base router
  Object.defineProperty(this, 'router', {
    configurable: true,
    enumerable: true,
    get: function getrouter() {
      if (router === null) {
        router = new Router({
          caseSensitive: this.enabled('case sensitive routing'),
          strict: this.enabled('strict routing')
        });
      }

      return router;
    }
  });
};

/**
 * Initialize application configuration.
 * @private
 */

app.defaultConfiguration = function defaultConfiguration() {
  var env = process.env.NODE_ENV || 'development';

  // default settings
  this.enable('x-powered-by');
  this.set('etag', 'weak');
  this.set('env', env);
  this.set('query parser', 'simple')
  this.set('subdomain offset', 2);
  this.set('trust proxy', false);

  // trust proxy inherit back-compat
  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {
    configurable: true,
    value: true
  });

  debug('booting in %s mode', env);

  this.on('mount', function onmount(parent) {
    // inherit trust proxy
    if (this.settings[trustProxyDefaultSymbol] === true
      && typeof parent.settings['trust proxy fn'] === 'function') {
      delete this.settings['trust proxy'];
      delete this.settings['trust proxy fn'];
    }

    // inherit protos
    Object.setPrototypeOf(this.request, parent.request)
    Object.setPrototypeOf(this.response, parent.response)
    Object.setPrototypeOf(this.engines, parent.engines)
    Object.setPrototypeOf(this.settings, parent.settings)
  });

  // setup locals
  this.locals = Object.create(null);

  // top-most app is mounted at /
  this.mountpath = '/';

  // default locals
  this.locals.settings = this.settings;

  // default configuration
  this.set('view', View);
  this.set('views', resolve('views'));
  this.set('jsonp callback name', 'callback');

  if (env === 'production') {
    this.enable('view cache');
  }
};

/**
 * Dispatch a req, res pair into the application. Starts pipeline processing.
 *
 * If no callback is provided, then default error handlers will respond
 * in the event of an error bubbling through the stack.
 *
 * @private
 */

app.handle = function handle(req, res, callback) {
  // final handler
  var done = callback || finalhandler(req, res, {
    env: this.get('env'),
    onerror: logerror.bind(this)
  });

  // set powered by header
  if (this.enabled('x-powered-by')) {
    res.setHeader('X-Powered-By', 'Express');
  }

  // set circular references
  req.res = res;
  res.req = req;

  // alter the prototypes
  Object.setPrototypeOf(req, this.request)
  Object.setPrototypeOf(res, this.response)

  // setup locals
  if (!res.locals) {
    res.locals = Object.create(null);
  }

  this.router.handle(req, res, done);
};

/**
 * Proxy `Router#use()` to add middleware to the app router.
 * See Router#use() documentation for details.
 *
 * If the _fn_ parameter is an express app, then it will be
 * mounted at the _route_ specified.
 *
 * @public
 */

app.use = function use(fn) {
  var offset = 0;
  var path = '/';

  // default path to '/'
  // disambiguate app.use([fn])
  if (typeof fn !== 'function') {
    var arg = fn;

    while (Array.isArray(arg) && arg.length !== 0) {
      arg = arg[0];
    }

    // first arg is the path
    if (typeof arg !== 'function') {
      offset = 1;
      path = fn;
    }
  }

  var fns = flatten.call(slice.call(arguments, offset), Infinity);

  if (fns.length === 0) {
    throw new TypeError('app.use() requires a middleware function')
  }

  // get router
  var router = this.router;

  fns.forEach(function (fn) {
    // non-express app
    if (!fn || !fn.handle || !fn.set) {
      return router.use(path, fn);
    }

    debug('.use app under %s', path);
    fn.mountpath = path;
    fn.parent = this;

    // restore .app property on req and res
    router.use(path, function mounted_app(req, res, next) {
      var orig = req.app;
      fn.handle(req, res, function (err) {
        Object.setPrototypeOf(req, orig.request)
        Object.setPrototypeOf(res, orig.response)
        next(err);
      });
    });

    // mounted an app
    fn.emit('mount', this);
  }, this);

  return this;
};

/**
 * Proxy to the app `Router#route()`
 * Returns a new `Route` instance for the _path_.
 *
 * Routes are isolated middleware stacks for specific paths.
 * See the Route api docs for details.
 *
 * @public
 */

app.route = function route(path) {
  return this.router.route(path);
};

/**
 * Register the given template engine callback `fn`
 * as `ext`.
 *
 * By default will `require()` the engine based on the
 * file extension. For example if you try to render
 * a "foo.ejs" file Express will invoke the following internally:
 *
 *     app.engine('ejs', require('ejs').__express);
 *
 * For engines that do not provide `.__express` out of the box,
 * or if you wish to "map" a different extension to the template engine
 * you may use this method. For example mapping the EJS template engine to
 * ".html" files:
 *
 *     app.engine('html', require('ejs').renderFile);
 *
 * In this case EJS provides a `.renderFile()` method with
 * the same signature that Express expects: `(path, options, callback)`,
 * though note that it aliases this method as `ejs.__express` internally
 * so if you're using ".ejs" extensions you don't need to do anything.
 *
 * Some template engines do not follow this convention, the
 * [Consolidate.js](https://github.com/tj/consolidate.js)
 * library was created to map all of node's popular template
 * engines to follow this convention, thus allowing them to
 * work seamlessly within Express.
 *
 * @param {String} ext
 * @param {Function} fn
 * @return {app} for chaining
 * @public
 */

app.engine = function engine(ext, fn) {
  if (typeof fn !== 'function') {
    throw new Error('callback function required');
  }

  // get file extension
  var extension = ext[0] !== '.'
    ? '.' + ext
    : ext;

  // store engine
  this.engines[extension] = fn;

  return this;
};

/**
 * Proxy to `Router#param()` with one added api feature. The _name_ parameter
 * can be an array of names.
 *
 * See the Router#param() docs for more details.
 *
 * @param {String|Array} name
 * @param {Function} fn
 * @return {app} for chaining
 * @public
 */

app.param = function param(name, fn) {
  if (Array.isArray(name)) {
    for (var i = 0; i < name.length; i++) {
      this.param(name[i], fn);
    }

    return this;
  }

  this.router.param(name, fn);

  return this;
};

/**
 * Assign `setting` to `val`, or return `setting`'s value.
 *
 *    app.set('foo', 'bar');
 *    app.set('foo');
 *    // => "bar"
 *
 * Mounted servers inherit their parent server's settings.
 *
 * @param {String} setting
 * @param {*} [val]
 * @return {Server} for chaining
 * @public
 */

app.set = function set(setting, val) {
  if (arguments.length === 1) {
    // app.get(setting)
    return this.settings[setting];
  }

  debug('set "%s" to %o', setting, val);

  // set value
  this.settings[setting] = val;

  // trigger matched settings
  switch (setting) {
    case 'etag':
      this.set('etag fn', compileETag(val));
      break;
    case 'query parser':
      this.set('query parser fn', compileQueryParser(val));
      break;
    case 'trust proxy':
      this.set('trust proxy fn', compileTrust(val));

      // trust proxy inherit back-compat
      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {
        configurable: true,
        value: false
      });

      break;
  }

  return this;
};

/**
 * Return the app's absolute pathname
 * based on the parent(s) that have
 * mounted it.
 *
 * For example if the application was
 * mounted as "/admin", which itself
 * was mounted as "/blog" then the
 * return value would be "/blog/admin".
 *
 * @return {String}
 * @private
 */

app.path = function path() {
  return this.parent
    ? this.parent.path() + this.mountpath
    : '';
};

/**
 * Check if `setting` is enabled (truthy).
 *
 *    app.enabled('foo')
 *    // => false
 *
 *    app.enable('foo')
 *    app.enabled('foo')
 *    // => true
 *
 * @param {String} setting
 * @return {Boolean}
 * @public
 */

app.enabled = function enabled(setting) {
  return Boolean(this.set(setting));
};

/**
 * Check if `setting` is disabled.
 *
 *    app.disabled('foo')
 *    // => true
 *
 *    app.enable('foo')
 *    app.disabled('foo')
 *    // => false
 *
 * @param {String} setting
 * @return {Boolean}
 * @public
 */

app.disabled = function disabled(setting) {
  return !this.set(setting);
};

/**
 * Enable `setting`.
 *
 * @param {String} setting
 * @return {app} for chaining
 * @public
 */

app.enable = function enable(setting) {
  return this.set(setting, true);
};

/**
 * Disable `setting`.
 *
 * @param {String} setting
 * @return {app} for chaining
 * @public
 */

app.disable = function disable(setting) {
  return this.set(setting, false);
};

/**
 * Delegate `.VERB(...)` calls to `router.VERB(...)`.
 */

methods.forEach(function (method) {
  app[method] = function (path) {
    if (method === 'get' && arguments.length === 1) {
      // app.get(setting)
      return this.set(path);
    }

    var route = this.route(path);
    route[method].apply(route, slice.call(arguments, 1));
    return this;
  };
});

/**
 * Special-cased "all" method, applying the given route `path`,
 * middleware, and callback to _every_ HTTP method.
 *
 * @param {String} path
 * @param {Function} ...
 * @return {app} for chaining
 * @public
 */

app.all = function all(path) {
  var route = this.route(path);
  var args = slice.call(arguments, 1);

  for (var i = 0; i < methods.length; i++) {
    route[methods[i]].apply(route, args);
  }

  return this;
};

/**
 * Render the given view `name` name with `options`
 * and a callback accepting an error and the
 * rendered template string.
 *
 * Example:
 *
 *    app.render('email', { name: 'Tobi' }, function(err, html){
 *      // ...
 *    })
 *
 * @param {String} name
 * @param {Object|Function} options or fn
 * @param {Function} callback
 * @public
 */

app.render = function render(name, options, callback) {
  var cache = this.cache;
  var done = callback;
  var engines = this.engines;
  var opts = options;
  var view;

  // support callback function as second arg
  if (typeof options === 'function') {
    done = options;
    opts = {};
  }

  // merge options
  var renderOptions = { ...this.locals, ...opts._locals, ...opts };

  // set .cache unless explicitly provided
  if (renderOptions.cache == null) {
    renderOptions.cache = this.enabled('view cache');
  }

  // primed cache
  if (renderOptions.cache) {
    view = cache[name];
  }

  // view
  if (!view) {
    var View = this.get('view');

    view = new View(name, {
      defaultEngine: this.get('view engine'),
      root: this.get('views'),
      engines: engines
    });

    if (!view.path) {
      var dirs = Array.isArray(view.root) && view.root.length > 1
        ? 'directories "' + view.root.slice(0, -1).join('", "') + '" or "' + view.root[view.root.length - 1] + '"'
        : 'directory "' + view.root + '"'
      var err = new Error('Failed to lookup view "' + name + '" in views ' + dirs);
      err.view = view;
      return done(err);
    }

    // prime the cache
    if (renderOptions.cache) {
      cache[name] = view;
    }
  }

  // render
  tryRender(view, renderOptions, done);
};

/**
 * Listen for connections.
 *
 * A node `http.Server` is returned, with this
 * application (which is a `Function`) as its
 * callback. If you wish to create both an HTTP
 * and HTTPS server you may do so with the "http"
 * and "https" modules as shown here:
 *
 *    var http = require('node:http')
 *      , https = require('node:https')
 *      , express = require('express')
 *      , app = express();
 *
 *    http.createServer(app).listen(80);
 *    https.createServer({ ... }, app).listen(443);
 *
 * @return {http.Server}
 * @public
 */

app.listen = function listen() {
  var server = http.createServer(this)
  var args = Array.prototype.slice.call(arguments)
  if (typeof args[args.length - 1] === 'function') {
    var done = args[args.length - 1] = once(args[args.length - 1])
    server.once('error', done)
  }
  return server.listen.apply(server, args)
}

/**
 * Log error using console.error.
 *
 * @param {Error} err
 * @private
 */

function logerror(err) {
  /* istanbul ignore next */
  if (this.get('env') !== 'test') console.error(err.stack || err.toString());
}

/**
 * Try rendering a view.
 * @private
 */

function tryRender(view, options, callback) {
  try {
    view.render(options, callback);
  } catch (err) {
    callback(err);
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\express\lib\express.js 
------------------------------------------------------ 
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 */

var bodyParser = require('body-parser')
var EventEmitter = require('node:events').EventEmitter;
var mixin = require('merge-descriptors');
var proto = require('./application');
var Router = require('router');
var req = require('./request');
var res = require('./response');

/**
 * Expose `createApplication()`.
 */

exports = module.exports = createApplication;

/**
 * Create an express application.
 *
 * @return {Function}
 * @api public
 */

function createApplication() {
  var app = function(req, res, next) {
    app.handle(req, res, next);
  };

  mixin(app, EventEmitter.prototype, false);
  mixin(app, proto, false);

  // expose the prototype that will get set on requests
  app.request = Object.create(req, {
    app: { configurable: true, enumerable: true, writable: true, value: app }
  })

  // expose the prototype that will get set on responses
  app.response = Object.create(res, {
    app: { configurable: true, enumerable: true, writable: true, value: app }
  })

  app.init();
  return app;
}

/**
 * Expose the prototypes.
 */

exports.application = proto;
exports.request = req;
exports.response = res;

/**
 * Expose constructors.
 */

exports.Route = Router.Route;
exports.Router = Router;

/**
 * Expose middleware
 */

exports.json = bodyParser.json
exports.raw = bodyParser.raw
exports.static = require('serve-static');
exports.text = bodyParser.text
exports.urlencoded = bodyParser.urlencoded
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\express\lib\request.js 
------------------------------------------------------ 
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 * @private
 */

var accepts = require('accepts');
var isIP = require('node:net').isIP;
var typeis = require('type-is');
var http = require('node:http');
var fresh = require('fresh');
var parseRange = require('range-parser');
var parse = require('parseurl');
var proxyaddr = require('proxy-addr');

/**
 * Request prototype.
 * @public
 */

var req = Object.create(http.IncomingMessage.prototype)

/**
 * Module exports.
 * @public
 */

module.exports = req

/**
 * Return request header.
 *
 * The `Referrer` header field is special-cased,
 * both `Referrer` and `Referer` are interchangeable.
 *
 * Examples:
 *
 *     req.get('Content-Type');
 *     // => "text/plain"
 *
 *     req.get('content-type');
 *     // => "text/plain"
 *
 *     req.get('Something');
 *     // => undefined
 *
 * Aliased as `req.header()`.
 *
 * @param {String} name
 * @return {String}
 * @public
 */

req.get =
req.header = function header(name) {
  if (!name) {
    throw new TypeError('name argument is required to req.get');
  }

  if (typeof name !== 'string') {
    throw new TypeError('name must be a string to req.get');
  }

  var lc = name.toLowerCase();

  switch (lc) {
    case 'referer':
    case 'referrer':
      return this.headers.referrer
        || this.headers.referer;
    default:
      return this.headers[lc];
  }
};

/**
 * To do: update docs.
 *
 * Check if the given `type(s)` is acceptable, returning
 * the best match when true, otherwise `undefined`, in which
 * case you should respond with 406 "Not Acceptable".
 *
 * The `type` value may be a single MIME type string
 * such as "application/json", an extension name
 * such as "json", a comma-delimited list such as "json, html, text/plain",
 * an argument list such as `"json", "html", "text/plain"`,
 * or an array `["json", "html", "text/plain"]`. When a list
 * or array is given, the _best_ match, if any is returned.
 *
 * Examples:
 *
 *     // Accept: text/html
 *     req.accepts('html');
 *     // => "html"
 *
 *     // Accept: text/*, application/json
 *     req.accepts('html');
 *     // => "html"
 *     req.accepts('text/html');
 *     // => "text/html"
 *     req.accepts('json, text');
 *     // => "json"
 *     req.accepts('application/json');
 *     // => "application/json"
 *
 *     // Accept: text/*, application/json
 *     req.accepts('image/png');
 *     req.accepts('png');
 *     // => undefined
 *
 *     // Accept: text/*;q=.5, application/json
 *     req.accepts(['html', 'json']);
 *     req.accepts('html', 'json');
 *     req.accepts('html, json');
 *     // => "json"
 *
 * @param {String|Array} type(s)
 * @return {String|Array|Boolean}
 * @public
 */

req.accepts = function(){
  var accept = accepts(this);
  return accept.types.apply(accept, arguments);
};

/**
 * Check if the given `encoding`s are accepted.
 *
 * @param {String} ...encoding
 * @return {String|Array}
 * @public
 */

req.acceptsEncodings = function(){
  var accept = accepts(this);
  return accept.encodings.apply(accept, arguments);
};

/**
 * Check if the given `charset`s are acceptable,
 * otherwise you should respond with 406 "Not Acceptable".
 *
 * @param {String} ...charset
 * @return {String|Array}
 * @public
 */

req.acceptsCharsets = function(){
  var accept = accepts(this);
  return accept.charsets.apply(accept, arguments);
};

/**
 * Check if the given `lang`s are acceptable,
 * otherwise you should respond with 406 "Not Acceptable".
 *
 * @param {String} ...lang
 * @return {String|Array}
 * @public
 */

req.acceptsLanguages = function(){
  var accept = accepts(this);
  return accept.languages.apply(accept, arguments);
};

/**
 * Parse Range header field, capping to the given `size`.
 *
 * Unspecified ranges such as "0-" require knowledge of your resource length. In
 * the case of a byte range this is of course the total number of bytes. If the
 * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,
 * and `-2` when syntactically invalid.
 *
 * When ranges are returned, the array has a "type" property which is the type of
 * range that is required (most commonly, "bytes"). Each array element is an object
 * with a "start" and "end" property for the portion of the range.
 *
 * The "combine" option can be set to `true` and overlapping & adjacent ranges
 * will be combined into a single range.
 *
 * NOTE: remember that ranges are inclusive, so for example "Range: users=0-3"
 * should respond with 4 users when available, not 3.
 *
 * @param {number} size
 * @param {object} [options]
 * @param {boolean} [options.combine=false]
 * @return {number|array}
 * @public
 */

req.range = function range(size, options) {
  var range = this.get('Range');
  if (!range) return;
  return parseRange(size, range, options);
};

/**
 * Parse the query string of `req.url`.
 *
 * This uses the "query parser" setting to parse the raw
 * string into an object.
 *
 * @return {String}
 * @api public
 */

defineGetter(req, 'query', function query(){
  var queryparse = this.app.get('query parser fn');

  if (!queryparse) {
    // parsing is disabled
    return Object.create(null);
  }

  var querystring = parse(this).query;

  return queryparse(querystring);
});

/**
 * Check if the incoming request contains the "Content-Type"
 * header field, and it contains the given mime `type`.
 *
 * Examples:
 *
 *      // With Content-Type: text/html; charset=utf-8
 *      req.is('html');
 *      req.is('text/html');
 *      req.is('text/*');
 *      // => true
 *
 *      // When Content-Type is application/json
 *      req.is('json');
 *      req.is('application/json');
 *      req.is('application/*');
 *      // => true
 *
 *      req.is('html');
 *      // => false
 *
 * @param {String|Array} types...
 * @return {String|false|null}
 * @public
 */

req.is = function is(types) {
  var arr = types;

  // support flattened arguments
  if (!Array.isArray(types)) {
    arr = new Array(arguments.length);
    for (var i = 0; i < arr.length; i++) {
      arr[i] = arguments[i];
    }
  }

  return typeis(this, arr);
};

/**
 * Return the protocol string "http" or "https"
 * when requested with TLS. When the "trust proxy"
 * setting trusts the socket address, the
 * "X-Forwarded-Proto" header field will be trusted
 * and used if present.
 *
 * If you're running behind a reverse proxy that
 * supplies https for you this may be enabled.
 *
 * @return {String}
 * @public
 */

defineGetter(req, 'protocol', function protocol(){
  var proto = this.connection.encrypted
    ? 'https'
    : 'http';
  var trust = this.app.get('trust proxy fn');

  if (!trust(this.connection.remoteAddress, 0)) {
    return proto;
  }

  // Note: X-Forwarded-Proto is normally only ever a
  //       single value, but this is to be safe.
  var header = this.get('X-Forwarded-Proto') || proto
  var index = header.indexOf(',')

  return index !== -1
    ? header.substring(0, index).trim()
    : header.trim()
});

/**
 * Short-hand for:
 *
 *    req.protocol === 'https'
 *
 * @return {Boolean}
 * @public
 */

defineGetter(req, 'secure', function secure(){
  return this.protocol === 'https';
});

/**
 * Return the remote address from the trusted proxy.
 *
 * The is the remote address on the socket unless
 * "trust proxy" is set.
 *
 * @return {String}
 * @public
 */

defineGetter(req, 'ip', function ip(){
  var trust = this.app.get('trust proxy fn');
  return proxyaddr(this, trust);
});

/**
 * When "trust proxy" is set, trusted proxy addresses + client.
 *
 * For example if the value were "client, proxy1, proxy2"
 * you would receive the array `["client", "proxy1", "proxy2"]`
 * where "proxy2" is the furthest down-stream and "proxy1" and
 * "proxy2" were trusted.
 *
 * @return {Array}
 * @public
 */

defineGetter(req, 'ips', function ips() {
  var trust = this.app.get('trust proxy fn');
  var addrs = proxyaddr.all(this, trust);

  // reverse the order (to farthest -> closest)
  // and remove socket address
  addrs.reverse().pop()

  return addrs
});

/**
 * Return subdomains as an array.
 *
 * Subdomains are the dot-separated parts of the host before the main domain of
 * the app. By default, the domain of the app is assumed to be the last two
 * parts of the host. This can be changed by setting "subdomain offset".
 *
 * For example, if the domain is "tobi.ferrets.example.com":
 * If "subdomain offset" is not set, req.subdomains is `["ferrets", "tobi"]`.
 * If "subdomain offset" is 3, req.subdomains is `["tobi"]`.
 *
 * @return {Array}
 * @public
 */

defineGetter(req, 'subdomains', function subdomains() {
  var hostname = this.hostname;

  if (!hostname) return [];

  var offset = this.app.get('subdomain offset');
  var subdomains = !isIP(hostname)
    ? hostname.split('.').reverse()
    : [hostname];

  return subdomains.slice(offset);
});

/**
 * Short-hand for `url.parse(req.url).pathname`.
 *
 * @return {String}
 * @public
 */

defineGetter(req, 'path', function path() {
  return parse(this).pathname;
});

/**
 * Parse the "Host" header field to a host.
 *
 * When the "trust proxy" setting trusts the socket
 * address, the "X-Forwarded-Host" header field will
 * be trusted.
 *
 * @return {String}
 * @public
 */

defineGetter(req, 'host', function host(){
  var trust = this.app.get('trust proxy fn');
  var val = this.get('X-Forwarded-Host');

  if (!val || !trust(this.connection.remoteAddress, 0)) {
    val = this.get('Host');
  } else if (val.indexOf(',') !== -1) {
    // Note: X-Forwarded-Host is normally only ever a
    //       single value, but this is to be safe.
    val = val.substring(0, val.indexOf(',')).trimRight()
  }

  return val || undefined;
});

/**
 * Parse the "Host" header field to a hostname.
 *
 * When the "trust proxy" setting trusts the socket
 * address, the "X-Forwarded-Host" header field will
 * be trusted.
 *
 * @return {String}
 * @api public
 */

defineGetter(req, 'hostname', function hostname(){
  var host = this.host;

  if (!host) return;

  // IPv6 literal support
  var offset = host[0] === '['
    ? host.indexOf(']') + 1
    : 0;
  var index = host.indexOf(':', offset);

  return index !== -1
    ? host.substring(0, index)
    : host;
});

/**
 * Check if the request is fresh, aka
 * Last-Modified or the ETag
 * still match.
 *
 * @return {Boolean}
 * @public
 */

defineGetter(req, 'fresh', function(){
  var method = this.method;
  var res = this.res
  var status = res.statusCode

  // GET or HEAD for weak freshness validation only
  if ('GET' !== method && 'HEAD' !== method) return false;

  // 2xx or 304 as per rfc2616 14.26
  if ((status >= 200 && status < 300) || 304 === status) {
    return fresh(this.headers, {
      'etag': res.get('ETag'),
      'last-modified': res.get('Last-Modified')
    })
  }

  return false;
});

/**
 * Check if the request is stale, aka
 * "Last-Modified" and / or the "ETag" for the
 * resource has changed.
 *
 * @return {Boolean}
 * @public
 */

defineGetter(req, 'stale', function stale(){
  return !this.fresh;
});

/**
 * Check if the request was an _XMLHttpRequest_.
 *
 * @return {Boolean}
 * @public
 */

defineGetter(req, 'xhr', function xhr(){
  var val = this.get('X-Requested-With') || '';
  return val.toLowerCase() === 'xmlhttprequest';
});

/**
 * Helper function for creating a getter on an object.
 *
 * @param {Object} obj
 * @param {String} name
 * @param {Function} getter
 * @private
 */
function defineGetter(obj, name, getter) {
  Object.defineProperty(obj, name, {
    configurable: true,
    enumerable: true,
    get: getter
  });
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\express\lib\response.js 
------------------------------------------------------ 
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 * @private
 */

var contentDisposition = require('content-disposition');
var createError = require('http-errors')
var encodeUrl = require('encodeurl');
var escapeHtml = require('escape-html');
var http = require('node:http');
var onFinished = require('on-finished');
var mime = require('mime-types')
var path = require('node:path');
var pathIsAbsolute = require('node:path').isAbsolute;
var statuses = require('statuses')
var sign = require('cookie-signature').sign;
var normalizeType = require('./utils').normalizeType;
var normalizeTypes = require('./utils').normalizeTypes;
var setCharset = require('./utils').setCharset;
var cookie = require('cookie');
var send = require('send');
var extname = path.extname;
var resolve = path.resolve;
var vary = require('vary');

/**
 * Response prototype.
 * @public
 */

var res = Object.create(http.ServerResponse.prototype)

/**
 * Module exports.
 * @public
 */

module.exports = res

/**
 * Set the HTTP status code for the response.
 *
 * Expects an integer value between 100 and 999 inclusive.
 * Throws an error if the provided status code is not an integer or if it's outside the allowable range.
 *
 * @param {number} code - The HTTP status code to set.
 * @return {ServerResponse} - Returns itself for chaining methods.
 * @throws {TypeError} If `code` is not an integer.
 * @throws {RangeError} If `code` is outside the range 100 to 999.
 * @public
 */

res.status = function status(code) {
  // Check if the status code is not an integer
  if (!Number.isInteger(code)) {
    throw new TypeError(`Invalid status code: ${JSON.stringify(code)}. Status code must be an integer.`);
  }
  // Check if the status code is outside of Node's valid range
  if (code < 100 || code > 999) {
    throw new RangeError(`Invalid status code: ${JSON.stringify(code)}. Status code must be greater than 99 and less than 1000.`);
  }

  this.statusCode = code;
  return this;
};

/**
 * Set Link header field with the given `links`.
 *
 * Examples:
 *
 *    res.links({
 *      next: 'http://api.example.com/users?page=2',
 *      last: 'http://api.example.com/users?page=5',
 *      pages: [
 *        'http://api.example.com/users?page=1',
 *        'http://api.example.com/users?page=2'
 *      ]
 *    });
 *
 * @param {Object} links
 * @return {ServerResponse}
 * @public
 */

res.links = function(links) {
  var link = this.get('Link') || '';
  if (link) link += ', ';
  return this.set('Link', link + Object.keys(links).map(function(rel) {
    // Allow multiple links if links[rel] is an array
    if (Array.isArray(links[rel])) {
      return links[rel].map(function (singleLink) {
        return `<${singleLink}>; rel="${rel}"`;
      }).join(', ');
    } else {
      return `<${links[rel]}>; rel="${rel}"`;
    }
  }).join(', '));
};

/**
 * Send a response.
 *
 * Examples:
 *
 *     res.send(Buffer.from('wahoo'));
 *     res.send({ some: 'json' });
 *     res.send('<p>some html</p>');
 *
 * @param {string|number|boolean|object|Buffer} body
 * @public
 */

res.send = function send(body) {
  var chunk = body;
  var encoding;
  var req = this.req;
  var type;

  // settings
  var app = this.app;

  switch (typeof chunk) {
    // string defaulting to html
    case 'string':
      if (!this.get('Content-Type')) {
        this.type('html');
      }
      break;
    case 'boolean':
    case 'number':
    case 'object':
      if (chunk === null) {
        chunk = '';
      } else if (ArrayBuffer.isView(chunk)) {
        if (!this.get('Content-Type')) {
          this.type('bin');
        }
      } else {
        return this.json(chunk);
      }
      break;
  }

  // write strings in utf-8
  if (typeof chunk === 'string') {
    encoding = 'utf8';
    type = this.get('Content-Type');

    // reflect this in content-type
    if (typeof type === 'string') {
      this.set('Content-Type', setCharset(type, 'utf-8'));
    }
  }

  // determine if ETag should be generated
  var etagFn = app.get('etag fn')
  var generateETag = !this.get('ETag') && typeof etagFn === 'function'

  // populate Content-Length
  var len
  if (chunk !== undefined) {
    if (Buffer.isBuffer(chunk)) {
      // get length of Buffer
      len = chunk.length
    } else if (!generateETag && chunk.length < 1000) {
      // just calculate length when no ETag + small chunk
      len = Buffer.byteLength(chunk, encoding)
    } else {
      // convert chunk to Buffer and calculate
      chunk = Buffer.from(chunk, encoding)
      encoding = undefined;
      len = chunk.length
    }

    this.set('Content-Length', len);
  }

  // populate ETag
  var etag;
  if (generateETag && len !== undefined) {
    if ((etag = etagFn(chunk, encoding))) {
      this.set('ETag', etag);
    }
  }

  // freshness
  if (req.fresh) this.status(304);

  // strip irrelevant headers
  if (204 === this.statusCode || 304 === this.statusCode) {
    this.removeHeader('Content-Type');
    this.removeHeader('Content-Length');
    this.removeHeader('Transfer-Encoding');
    chunk = '';
  }

  // alter headers for 205
  if (this.statusCode === 205) {
    this.set('Content-Length', '0')
    this.removeHeader('Transfer-Encoding')
    chunk = ''
  }

  if (req.method === 'HEAD') {
    // skip body for HEAD
    this.end();
  } else {
    // respond
    this.end(chunk, encoding);
  }

  return this;
};

/**
 * Send JSON response.
 *
 * Examples:
 *
 *     res.json(null);
 *     res.json({ user: 'tj' });
 *
 * @param {string|number|boolean|object} obj
 * @public
 */

res.json = function json(obj) {
  // settings
  var app = this.app;
  var escape = app.get('json escape')
  var replacer = app.get('json replacer');
  var spaces = app.get('json spaces');
  var body = stringify(obj, replacer, spaces, escape)

  // content-type
  if (!this.get('Content-Type')) {
    this.set('Content-Type', 'application/json');
  }

  return this.send(body);
};

/**
 * Send JSON response with JSONP callback support.
 *
 * Examples:
 *
 *     res.jsonp(null);
 *     res.jsonp({ user: 'tj' });
 *
 * @param {string|number|boolean|object} obj
 * @public
 */

res.jsonp = function jsonp(obj) {
  // settings
  var app = this.app;
  var escape = app.get('json escape')
  var replacer = app.get('json replacer');
  var spaces = app.get('json spaces');
  var body = stringify(obj, replacer, spaces, escape)
  var callback = this.req.query[app.get('jsonp callback name')];

  // content-type
  if (!this.get('Content-Type')) {
    this.set('X-Content-Type-Options', 'nosniff');
    this.set('Content-Type', 'application/json');
  }

  // fixup callback
  if (Array.isArray(callback)) {
    callback = callback[0];
  }

  // jsonp
  if (typeof callback === 'string' && callback.length !== 0) {
    this.set('X-Content-Type-Options', 'nosniff');
    this.set('Content-Type', 'text/javascript');

    // restrict callback charset
    callback = callback.replace(/[^\[\]\w$.]/g, '');

    if (body === undefined) {
      // empty argument
      body = ''
    } else if (typeof body === 'string') {
      // replace chars not allowed in JavaScript that are in JSON
      body = body
        .replace(/\u2028/g, '\\u2028')
        .replace(/\u2029/g, '\\u2029')
    }

    // the /**/ is a specific security mitigation for "Rosetta Flash JSONP abuse"
    // the typeof check is just to reduce client error noise
    body = '/**/ typeof ' + callback + ' === \'function\' && ' + callback + '(' + body + ');';
  }

  return this.send(body);
};

/**
 * Send given HTTP status code.
 *
 * Sets the response status to `statusCode` and the body of the
 * response to the standard description from node's http.STATUS_CODES
 * or the statusCode number if no description.
 *
 * Examples:
 *
 *     res.sendStatus(200);
 *
 * @param {number} statusCode
 * @public
 */

res.sendStatus = function sendStatus(statusCode) {
  var body = statuses.message[statusCode] || String(statusCode)

  this.status(statusCode);
  this.type('txt');

  return this.send(body);
};

/**
 * Transfer the file at the given `path`.
 *
 * Automatically sets the _Content-Type_ response header field.
 * The callback `callback(err)` is invoked when the transfer is complete
 * or when an error occurs. Be sure to check `res.headersSent`
 * if you wish to attempt responding, as the header and some data
 * may have already been transferred.
 *
 * Options:
 *
 *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)
 *   - `root`     root directory for relative filenames
 *   - `headers`  object of headers to serve with file
 *   - `dotfiles` serve dotfiles, defaulting to false; can be `"allow"` to send them
 *
 * Other options are passed along to `send`.
 *
 * Examples:
 *
 *  The following example illustrates how `res.sendFile()` may
 *  be used as an alternative for the `static()` middleware for
 *  dynamic situations. The code backing `res.sendFile()` is actually
 *  the same code, so HTTP cache support etc is identical.
 *
 *     app.get('/user/:uid/photos/:file', function(req, res){
 *       var uid = req.params.uid
 *         , file = req.params.file;
 *
 *       req.user.mayViewFilesFrom(uid, function(yes){
 *         if (yes) {
 *           res.sendFile('/uploads/' + uid + '/' + file);
 *         } else {
 *           res.send(403, 'Sorry! you cant see that.');
 *         }
 *       });
 *     });
 *
 * @public
 */

res.sendFile = function sendFile(path, options, callback) {
  var done = callback;
  var req = this.req;
  var res = this;
  var next = req.next;
  var opts = options || {};

  if (!path) {
    throw new TypeError('path argument is required to res.sendFile');
  }

  if (typeof path !== 'string') {
    throw new TypeError('path must be a string to res.sendFile')
  }

  // support function as second arg
  if (typeof options === 'function') {
    done = options;
    opts = {};
  }

  if (!opts.root && !pathIsAbsolute(path)) {
    throw new TypeError('path must be absolute or specify root to res.sendFile');
  }

  // create file stream
  var pathname = encodeURI(path);

  // wire application etag option to send
  opts.etag = this.app.enabled('etag');
  var file = send(req, pathname, opts);

  // transfer
  sendfile(res, file, opts, function (err) {
    if (done) return done(err);
    if (err && err.code === 'EISDIR') return next();

    // next() all but write errors
    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {
      next(err);
    }
  });
};

/**
 * Transfer the file at the given `path` as an attachment.
 *
 * Optionally providing an alternate attachment `filename`,
 * and optional callback `callback(err)`. The callback is invoked
 * when the data transfer is complete, or when an error has
 * occurred. Be sure to check `res.headersSent` if you plan to respond.
 *
 * Optionally providing an `options` object to use with `res.sendFile()`.
 * This function will set the `Content-Disposition` header, overriding
 * any `Content-Disposition` header passed as header options in order
 * to set the attachment and filename.
 *
 * This method uses `res.sendFile()`.
 *
 * @public
 */

res.download = function download (path, filename, options, callback) {
  var done = callback;
  var name = filename;
  var opts = options || null

  // support function as second or third arg
  if (typeof filename === 'function') {
    done = filename;
    name = null;
    opts = null
  } else if (typeof options === 'function') {
    done = options
    opts = null
  }

  // support optional filename, where options may be in it's place
  if (typeof filename === 'object' &&
    (typeof options === 'function' || options === undefined)) {
    name = null
    opts = filename
  }

  // set Content-Disposition when file is sent
  var headers = {
    'Content-Disposition': contentDisposition(name || path)
  };

  // merge user-provided headers
  if (opts && opts.headers) {
    var keys = Object.keys(opts.headers)
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i]
      if (key.toLowerCase() !== 'content-disposition') {
        headers[key] = opts.headers[key]
      }
    }
  }

  // merge user-provided options
  opts = Object.create(opts)
  opts.headers = headers

  // Resolve the full path for sendFile
  var fullPath = !opts.root
    ? resolve(path)
    : path

  // send file
  return this.sendFile(fullPath, opts, done)
};

/**
 * Set _Content-Type_ response header with `type` through `mime.contentType()`
 * when it does not contain "/", or set the Content-Type to `type` otherwise.
 * When no mapping is found though `mime.contentType()`, the type is set to
 * "application/octet-stream".
 *
 * Examples:
 *
 *     res.type('.html');
 *     res.type('html');
 *     res.type('json');
 *     res.type('application/json');
 *     res.type('png');
 *
 * @param {String} type
 * @return {ServerResponse} for chaining
 * @public
 */

res.contentType =
res.type = function contentType(type) {
  var ct = type.indexOf('/') === -1
    ? (mime.contentType(type) || 'application/octet-stream')
    : type;

  return this.set('Content-Type', ct);
};

/**
 * Respond to the Acceptable formats using an `obj`
 * of mime-type callbacks.
 *
 * This method uses `req.accepted`, an array of
 * acceptable types ordered by their quality values.
 * When "Accept" is not present the _first_ callback
 * is invoked, otherwise the first match is used. When
 * no match is performed the server responds with
 * 406 "Not Acceptable".
 *
 * Content-Type is set for you, however if you choose
 * you may alter this within the callback using `res.type()`
 * or `res.set('Content-Type', ...)`.
 *
 *    res.format({
 *      'text/plain': function(){
 *        res.send('hey');
 *      },
 *
 *      'text/html': function(){
 *        res.send('<p>hey</p>');
 *      },
 *
 *      'application/json': function () {
 *        res.send({ message: 'hey' });
 *      }
 *    });
 *
 * In addition to canonicalized MIME types you may
 * also use extnames mapped to these types:
 *
 *    res.format({
 *      text: function(){
 *        res.send('hey');
 *      },
 *
 *      html: function(){
 *        res.send('<p>hey</p>');
 *      },
 *
 *      json: function(){
 *        res.send({ message: 'hey' });
 *      }
 *    });
 *
 * By default Express passes an `Error`
 * with a `.status` of 406 to `next(err)`
 * if a match is not made. If you provide
 * a `.default` callback it will be invoked
 * instead.
 *
 * @param {Object} obj
 * @return {ServerResponse} for chaining
 * @public
 */

res.format = function(obj){
  var req = this.req;
  var next = req.next;

  var keys = Object.keys(obj)
    .filter(function (v) { return v !== 'default' })

  var key = keys.length > 0
    ? req.accepts(keys)
    : false;

  this.vary("Accept");

  if (key) {
    this.set('Content-Type', normalizeType(key).value);
    obj[key](req, this, next);
  } else if (obj.default) {
    obj.default(req, this, next)
  } else {
    next(createError(406, {
      types: normalizeTypes(keys).map(function (o) { return o.value })
    }))
  }

  return this;
};

/**
 * Set _Content-Disposition_ header to _attachment_ with optional `filename`.
 *
 * @param {String} filename
 * @return {ServerResponse}
 * @public
 */

res.attachment = function attachment(filename) {
  if (filename) {
    this.type(extname(filename));
  }

  this.set('Content-Disposition', contentDisposition(filename));

  return this;
};

/**
 * Append additional header `field` with value `val`.
 *
 * Example:
 *
 *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);
 *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');
 *    res.append('Warning', '199 Miscellaneous warning');
 *
 * @param {String} field
 * @param {String|Array} val
 * @return {ServerResponse} for chaining
 * @public
 */

res.append = function append(field, val) {
  var prev = this.get(field);
  var value = val;

  if (prev) {
    // concat the new and prev vals
    value = Array.isArray(prev) ? prev.concat(val)
      : Array.isArray(val) ? [prev].concat(val)
        : [prev, val]
  }

  return this.set(field, value);
};

/**
 * Set header `field` to `val`, or pass
 * an object of header fields.
 *
 * Examples:
 *
 *    res.set('Foo', ['bar', 'baz']);
 *    res.set('Accept', 'application/json');
 *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });
 *
 * Aliased as `res.header()`.
 *
 * When the set header is "Content-Type", the type is expanded to include
 * the charset if not present using `mime.contentType()`.
 *
 * @param {String|Object} field
 * @param {String|Array} val
 * @return {ServerResponse} for chaining
 * @public
 */

res.set =
res.header = function header(field, val) {
  if (arguments.length === 2) {
    var value = Array.isArray(val)
      ? val.map(String)
      : String(val);

    // add charset to content-type
    if (field.toLowerCase() === 'content-type') {
      if (Array.isArray(value)) {
        throw new TypeError('Content-Type cannot be set to an Array');
      }
      value = mime.contentType(value)
    }

    this.setHeader(field, value);
  } else {
    for (var key in field) {
      this.set(key, field[key]);
    }
  }
  return this;
};

/**
 * Get value for header `field`.
 *
 * @param {String} field
 * @return {String}
 * @public
 */

res.get = function(field){
  return this.getHeader(field);
};

/**
 * Clear cookie `name`.
 *
 * @param {String} name
 * @param {Object} [options]
 * @return {ServerResponse} for chaining
 * @public
 */

res.clearCookie = function clearCookie(name, options) {
  // Force cookie expiration by setting expires to the past
  const opts = { path: '/', ...options, expires: new Date(1)};
  // ensure maxAge is not passed
  delete opts.maxAge

  return this.cookie(name, '', opts);
};

/**
 * Set cookie `name` to `value`, with the given `options`.
 *
 * Options:
 *
 *    - `maxAge`   max-age in milliseconds, converted to `expires`
 *    - `signed`   sign the cookie
 *    - `path`     defaults to "/"
 *
 * Examples:
 *
 *    // "Remember Me" for 15 minutes
 *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });
 *
 *    // same as above
 *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })
 *
 * @param {String} name
 * @param {String|Object} value
 * @param {Object} [options]
 * @return {ServerResponse} for chaining
 * @public
 */

res.cookie = function (name, value, options) {
  var opts = { ...options };
  var secret = this.req.secret;
  var signed = opts.signed;

  if (signed && !secret) {
    throw new Error('cookieParser("secret") required for signed cookies');
  }

  var val = typeof value === 'object'
    ? 'j:' + JSON.stringify(value)
    : String(value);

  if (signed) {
    val = 's:' + sign(val, secret);
  }

  if (opts.maxAge != null) {
    var maxAge = opts.maxAge - 0

    if (!isNaN(maxAge)) {
      opts.expires = new Date(Date.now() + maxAge)
      opts.maxAge = Math.floor(maxAge / 1000)
    }
  }

  if (opts.path == null) {
    opts.path = '/';
  }

  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));

  return this;
};

/**
 * Set the location header to `url`.
 *
 * The given `url` can also be "back", which redirects
 * to the _Referrer_ or _Referer_ headers or "/".
 *
 * Examples:
 *
 *    res.location('/foo/bar').;
 *    res.location('http://example.com');
 *    res.location('../login');
 *
 * @param {String} url
 * @return {ServerResponse} for chaining
 * @public
 */

res.location = function location(url) {
  return this.set('Location', encodeUrl(url));
};

/**
 * Redirect to the given `url` with optional response `status`
 * defaulting to 302.
 *
 * Examples:
 *
 *    res.redirect('/foo/bar');
 *    res.redirect('http://example.com');
 *    res.redirect(301, 'http://example.com');
 *    res.redirect('../login'); // /blog/post/1 -> /blog/login
 *
 * @public
 */

res.redirect = function redirect(url) {
  var address = url;
  var body;
  var status = 302;

  // allow status / url
  if (arguments.length === 2) {
    status = arguments[0]
    address = arguments[1]
  }

  // Set location header
  address = this.location(address).get('Location');

  // Support text/{plain,html} by default
  this.format({
    text: function(){
      body = statuses.message[status] + '. Redirecting to ' + address
    },

    html: function(){
      var u = escapeHtml(address);
      body = '<p>' + statuses.message[status] + '. Redirecting to ' + u + '</p>'
    },

    default: function(){
      body = '';
    }
  });

  // Respond
  this.status(status);
  this.set('Content-Length', Buffer.byteLength(body));

  if (this.req.method === 'HEAD') {
    this.end();
  } else {
    this.end(body);
  }
};

/**
 * Add `field` to Vary. If already present in the Vary set, then
 * this call is simply ignored.
 *
 * @param {Array|String} field
 * @return {ServerResponse} for chaining
 * @public
 */

res.vary = function(field){
  vary(this, field);

  return this;
};

/**
 * Render `view` with the given `options` and optional callback `fn`.
 * When a callback function is given a response will _not_ be made
 * automatically, otherwise a response of _200_ and _text/html_ is given.
 *
 * Options:
 *
 *  - `cache`     boolean hinting to the engine it should cache
 *  - `filename`  filename of the view being rendered
 *
 * @public
 */

res.render = function render(view, options, callback) {
  var app = this.req.app;
  var done = callback;
  var opts = options || {};
  var req = this.req;
  var self = this;

  // support callback function as second arg
  if (typeof options === 'function') {
    done = options;
    opts = {};
  }

  // merge res.locals
  opts._locals = self.locals;

  // default callback to respond
  done = done || function (err, str) {
    if (err) return req.next(err);
    self.send(str);
  };

  // render
  app.render(view, opts, done);
};

// pipe the send file stream
function sendfile(res, file, options, callback) {
  var done = false;
  var streaming;

  // request aborted
  function onaborted() {
    if (done) return;
    done = true;

    var err = new Error('Request aborted');
    err.code = 'ECONNABORTED';
    callback(err);
  }

  // directory
  function ondirectory() {
    if (done) return;
    done = true;

    var err = new Error('EISDIR, read');
    err.code = 'EISDIR';
    callback(err);
  }

  // errors
  function onerror(err) {
    if (done) return;
    done = true;
    callback(err);
  }

  // ended
  function onend() {
    if (done) return;
    done = true;
    callback();
  }

  // file
  function onfile() {
    streaming = false;
  }

  // finished
  function onfinish(err) {
    if (err && err.code === 'ECONNRESET') return onaborted();
    if (err) return onerror(err);
    if (done) return;

    setImmediate(function () {
      if (streaming !== false && !done) {
        onaborted();
        return;
      }

      if (done) return;
      done = true;
      callback();
    });
  }

  // streaming
  function onstream() {
    streaming = true;
  }

  file.on('directory', ondirectory);
  file.on('end', onend);
  file.on('error', onerror);
  file.on('file', onfile);
  file.on('stream', onstream);
  onFinished(res, onfinish);

  if (options.headers) {
    // set headers on successful transfer
    file.on('headers', function headers(res) {
      var obj = options.headers;
      var keys = Object.keys(obj);

      for (var i = 0; i < keys.length; i++) {
        var k = keys[i];
        res.setHeader(k, obj[k]);
      }
    });
  }

  // pipe
  file.pipe(res);
}

/**
 * Stringify JSON, like JSON.stringify, but v8 optimized, with the
 * ability to escape characters that can trigger HTML sniffing.
 *
 * @param {*} value
 * @param {function} replacer
 * @param {number} spaces
 * @param {boolean} escape
 * @returns {string}
 * @private
 */

function stringify (value, replacer, spaces, escape) {
  // v8 checks arguments.length for optimizing simple call
  // https://bugs.chromium.org/p/v8/issues/detail?id=4730
  var json = replacer || spaces
    ? JSON.stringify(value, replacer, spaces)
    : JSON.stringify(value);

  if (escape && typeof json === 'string') {
    json = json.replace(/[<>&]/g, function (c) {
      switch (c.charCodeAt(0)) {
        case 0x3c:
          return '\\u003c'
        case 0x3e:
          return '\\u003e'
        case 0x26:
          return '\\u0026'
        /* istanbul ignore next: unreachable default */
        default:
          return c
      }
    })
  }

  return json
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\express\lib\utils.js 
------------------------------------------------------ 
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 * @api private
 */

var { METHODS } = require('node:http');
var contentType = require('content-type');
var etag = require('etag');
var mime = require('mime-types')
var proxyaddr = require('proxy-addr');
var qs = require('qs');
var querystring = require('querystring');

/**
 * A list of lowercased HTTP methods that are supported by Node.js.
 * @api private
 */
exports.methods = METHODS.map((method) => method.toLowerCase());

/**
 * Return strong ETag for `body`.
 *
 * @param {String|Buffer} body
 * @param {String} [encoding]
 * @return {String}
 * @api private
 */

exports.etag = createETagGenerator({ weak: false })

/**
 * Return weak ETag for `body`.
 *
 * @param {String|Buffer} body
 * @param {String} [encoding]
 * @return {String}
 * @api private
 */

exports.wetag = createETagGenerator({ weak: true })

/**
 * Normalize the given `type`, for example "html" becomes "text/html".
 *
 * @param {String} type
 * @return {Object}
 * @api private
 */

exports.normalizeType = function(type){
  return ~type.indexOf('/')
    ? acceptParams(type)
    : { value: (mime.lookup(type) || 'application/octet-stream'), params: {} }
};

/**
 * Normalize `types`, for example "html" becomes "text/html".
 *
 * @param {Array} types
 * @return {Array}
 * @api private
 */

exports.normalizeTypes = function(types) {
  return types.map(exports.normalizeType);
};


/**
 * Parse accept params `str` returning an
 * object with `.value`, `.quality` and `.params`.
 *
 * @param {String} str
 * @return {Object}
 * @api private
 */

function acceptParams (str) {
  var length = str.length;
  var colonIndex = str.indexOf(';');
  var index = colonIndex === -1 ? length : colonIndex;
  var ret = { value: str.slice(0, index).trim(), quality: 1, params: {} };

  while (index < length) {
    var splitIndex = str.indexOf('=', index);
    if (splitIndex === -1) break;

    var colonIndex = str.indexOf(';', index);
    var endIndex = colonIndex === -1 ? length : colonIndex;

    if (splitIndex > endIndex) {
      index = str.lastIndexOf(';', splitIndex - 1) + 1;
      continue;
    }

    var key = str.slice(index, splitIndex).trim();
    var value = str.slice(splitIndex + 1, endIndex).trim();

    if (key === 'q') {
      ret.quality = parseFloat(value);
    } else {
      ret.params[key] = value;
    }

    index = endIndex + 1;
  }

  return ret;
}

/**
 * Compile "etag" value to function.
 *
 * @param  {Boolean|String|Function} val
 * @return {Function}
 * @api private
 */

exports.compileETag = function(val) {
  var fn;

  if (typeof val === 'function') {
    return val;
  }

  switch (val) {
    case true:
    case 'weak':
      fn = exports.wetag;
      break;
    case false:
      break;
    case 'strong':
      fn = exports.etag;
      break;
    default:
      throw new TypeError('unknown value for etag function: ' + val);
  }

  return fn;
}

/**
 * Compile "query parser" value to function.
 *
 * @param  {String|Function} val
 * @return {Function}
 * @api private
 */

exports.compileQueryParser = function compileQueryParser(val) {
  var fn;

  if (typeof val === 'function') {
    return val;
  }

  switch (val) {
    case true:
    case 'simple':
      fn = querystring.parse;
      break;
    case false:
      break;
    case 'extended':
      fn = parseExtendedQueryString;
      break;
    default:
      throw new TypeError('unknown value for query parser function: ' + val);
  }

  return fn;
}

/**
 * Compile "proxy trust" value to function.
 *
 * @param  {Boolean|String|Number|Array|Function} val
 * @return {Function}
 * @api private
 */

exports.compileTrust = function(val) {
  if (typeof val === 'function') return val;

  if (val === true) {
    // Support plain true/false
    return function(){ return true };
  }

  if (typeof val === 'number') {
    // Support trusting hop count
    return function(a, i){ return i < val };
  }

  if (typeof val === 'string') {
    // Support comma-separated values
    val = val.split(',')
      .map(function (v) { return v.trim() })
  }

  return proxyaddr.compile(val || []);
}

/**
 * Set the charset in a given Content-Type string.
 *
 * @param {String} type
 * @param {String} charset
 * @return {String}
 * @api private
 */

exports.setCharset = function setCharset(type, charset) {
  if (!type || !charset) {
    return type;
  }

  // parse type
  var parsed = contentType.parse(type);

  // set charset
  parsed.parameters.charset = charset;

  // format type
  return contentType.format(parsed);
};

/**
 * Create an ETag generator function, generating ETags with
 * the given options.
 *
 * @param {object} options
 * @return {function}
 * @private
 */

function createETagGenerator (options) {
  return function generateETag (body, encoding) {
    var buf = !Buffer.isBuffer(body)
      ? Buffer.from(body, encoding)
      : body

    return etag(buf, options)
  }
}

/**
 * Parse an extended query string with qs.
 *
 * @param {String} str
 * @return {Object}
 * @private
 */

function parseExtendedQueryString(str) {
  return qs.parse(str, {
    allowPrototypes: true
  });
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\express\lib\view.js 
------------------------------------------------------ 
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 * @private
 */

var debug = require('debug')('express:view');
var path = require('node:path');
var fs = require('node:fs');

/**
 * Module variables.
 * @private
 */

var dirname = path.dirname;
var basename = path.basename;
var extname = path.extname;
var join = path.join;
var resolve = path.resolve;

/**
 * Module exports.
 * @public
 */

module.exports = View;

/**
 * Initialize a new `View` with the given `name`.
 *
 * Options:
 *
 *   - `defaultEngine` the default template engine name
 *   - `engines` template engine require() cache
 *   - `root` root path for view lookup
 *
 * @param {string} name
 * @param {object} options
 * @public
 */

function View(name, options) {
  var opts = options || {};

  this.defaultEngine = opts.defaultEngine;
  this.ext = extname(name);
  this.name = name;
  this.root = opts.root;

  if (!this.ext && !this.defaultEngine) {
    throw new Error('No default engine was specified and no extension was provided.');
  }

  var fileName = name;

  if (!this.ext) {
    // get extension from default engine name
    this.ext = this.defaultEngine[0] !== '.'
      ? '.' + this.defaultEngine
      : this.defaultEngine;

    fileName += this.ext;
  }

  if (!opts.engines[this.ext]) {
    // load engine
    var mod = this.ext.slice(1)
    debug('require "%s"', mod)

    // default engine export
    var fn = require(mod).__express

    if (typeof fn !== 'function') {
      throw new Error('Module "' + mod + '" does not provide a view engine.')
    }

    opts.engines[this.ext] = fn
  }

  // store loaded engine
  this.engine = opts.engines[this.ext];

  // lookup path
  this.path = this.lookup(fileName);
}

/**
 * Lookup view by the given `name`
 *
 * @param {string} name
 * @private
 */

View.prototype.lookup = function lookup(name) {
  var path;
  var roots = [].concat(this.root);

  debug('lookup "%s"', name);

  for (var i = 0; i < roots.length && !path; i++) {
    var root = roots[i];

    // resolve the path
    var loc = resolve(root, name);
    var dir = dirname(loc);
    var file = basename(loc);

    // resolve the file
    path = this.resolve(dir, file);
  }

  return path;
};

/**
 * Render with the given options.
 *
 * @param {object} options
 * @param {function} callback
 * @private
 */

View.prototype.render = function render(options, callback) {
  var sync = true;

  debug('render "%s"', this.path);

  // render, normalizing sync callbacks
  this.engine(this.path, options, function onRender() {
    if (!sync) {
      return callback.apply(this, arguments);
    }

    // copy arguments
    var args = new Array(arguments.length);
    var cntx = this;

    for (var i = 0; i < arguments.length; i++) {
      args[i] = arguments[i];
    }

    // force callback to be async
    return process.nextTick(function renderTick() {
      return callback.apply(cntx, args);
    });
  });

  sync = false;
};

/**
 * Resolve the file within the given directory.
 *
 * @param {string} dir
 * @param {string} file
 * @private
 */

View.prototype.resolve = function resolve(dir, file) {
  var ext = this.ext;

  // <path>.<ext>
  var path = join(dir, file);
  var stat = tryStat(path);

  if (stat && stat.isFile()) {
    return path;
  }

  // <path>/index.<ext>
  path = join(dir, basename(file, ext), 'index' + ext);
  stat = tryStat(path);

  if (stat && stat.isFile()) {
    return path;
  }
};

/**
 * Return a stat, maybe.
 *
 * @param {string} path
 * @return {fs.Stats}
 * @private
 */

function tryStat(path) {
  debug('stat "%s"', path);

  try {
    return fs.statSync(path);
  } catch (e) {
    return undefined;
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\express\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\file-uri-to-path\index.js 
------------------------------------------------------ 

/**
 * Module dependencies.
 */

var sep = require('path').sep || '/';

/**
 * Module exports.
 */

module.exports = fileUriToPath;

/**
 * File URI to Path function.
 *
 * @param {String} uri
 * @return {String} path
 * @api public
 */

function fileUriToPath (uri) {
  if ('string' != typeof uri ||
      uri.length <= 7 ||
      'file://' != uri.substring(0, 7)) {
    throw new TypeError('must pass in a file:// URI to convert to a file path');
  }

  var rest = decodeURI(uri.substring(7));
  var firstSlash = rest.indexOf('/');
  var host = rest.substring(0, firstSlash);
  var path = rest.substring(firstSlash + 1);

  // 2.  Scheme Definition
  // As a special case, <host> can be the string "localhost" or the empty
  // string; this is interpreted as "the machine from which the URL is
  // being interpreted".
  if ('localhost' == host) host = '';

  if (host) {
    host = sep + sep + host;
  }

  // 3.2  Drives, drive letters, mount points, file system root
  // Drive letters are mapped into the top of a file URI in various ways,
  // depending on the implementation; some applications substitute
  // vertical bar ("|") for the colon after the drive letter, yielding
  // "file:///c|/tmp/test.txt".  In some cases, the colon is left
  // unchanged, as in "file:///c:/tmp/test.txt".  In other cases, the
  // colon is simply omitted, as in "file:///c/tmp/test.txt".
  path = path.replace(/^(.+)\|/, '$1:');

  // for Windows, we need to invert the path separators from what a URI uses
  if (sep == '\\') {
    path = path.replace(/\//g, '\\');
  }

  if (/^.+\:/.test(path)) {
    // has Windows drive at beginning of path
  } else {
    // unix path…
    path = sep + path;
  }

  return host + path;
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\file-uri-to-path\package.json 
------------------------------------------------------ 
{
  "name": "file-uri-to-path",
  "version": "1.0.0",
  "description": "Convert a file: URI to a file path",
  "main": "index.js",
  "types": "index.d.ts",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/file-uri-to-path.git"
  },
  "keywords": [
    "file",
    "uri",
    "convert",
    "path"
  ],
  "author": "Nathan Rajlich <nathan@tootallnate.net> (http://n8.io/)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/TooTallNate/file-uri-to-path/issues"
  },
  "homepage": "https://github.com/TooTallNate/file-uri-to-path",
  "devDependencies": {
    "mocha": "3"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\file-uri-to-path\test\test.js 
------------------------------------------------------ 

var sep = require('path').sep || '/';
var assert = require('assert');
var uri2path = require('../');
var tests = require('./tests.json');

describe('file-uri-to-path', function () {

  Object.keys(tests).forEach(function (uri) {

    // the test cases were generated from Windows' PathCreateFromUrlA() function.
    // On Unix, we have to replace the path separator with the Unix one instead of
    // the Windows one.
    var expected = tests[uri].replace(/\\/g, sep);

    it('should convert ' + JSON.stringify(uri) + ' to ' + JSON.stringify(expected),
    function () {
      var actual = uri2path(uri);
      assert.equal(actual, expected);
    });

  });

});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\file-uri-to-path\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\finalhandler\index.js 
------------------------------------------------------ 
/*!
 * finalhandler
 * Copyright(c) 2014-2022 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module dependencies.
 * @private
 */

var debug = require('debug')('finalhandler')
var encodeUrl = require('encodeurl')
var escapeHtml = require('escape-html')
var onFinished = require('on-finished')
var parseUrl = require('parseurl')
var statuses = require('statuses')

/**
 * Module variables.
 * @private
 */

var isFinished = onFinished.isFinished

/**
 * Create a minimal HTML document.
 *
 * @param {string} message
 * @private
 */

function createHtmlDocument (message) {
  var body = escapeHtml(message)
    .replaceAll('\n', '<br>')
    .replaceAll('  ', ' &nbsp;')

  return '<!DOCTYPE html>\n' +
    '<html lang="en">\n' +
    '<head>\n' +
    '<meta charset="utf-8">\n' +
    '<title>Error</title>\n' +
    '</head>\n' +
    '<body>\n' +
    '<pre>' + body + '</pre>\n' +
    '</body>\n' +
    '</html>\n'
}

/**
 * Module exports.
 * @public
 */

module.exports = finalhandler

/**
 * Create a function to handle the final response.
 *
 * @param {Request} req
 * @param {Response} res
 * @param {Object} [options]
 * @return {Function}
 * @public
 */

function finalhandler (req, res, options) {
  var opts = options || {}

  // get environment
  var env = opts.env || process.env.NODE_ENV || 'development'

  // get error callback
  var onerror = opts.onerror

  return function (err) {
    var headers
    var msg
    var status

    // ignore 404 on in-flight response
    if (!err && res.headersSent) {
      debug('cannot 404 after headers sent')
      return
    }

    // unhandled error
    if (err) {
      // respect status code from error
      status = getErrorStatusCode(err)

      if (status === undefined) {
        // fallback to status code on response
        status = getResponseStatusCode(res)
      } else {
        // respect headers from error
        headers = getErrorHeaders(err)
      }

      // get error message
      msg = getErrorMessage(err, status, env)
    } else {
      // not found
      status = 404
      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))
    }

    debug('default %s', status)

    // schedule onerror callback
    if (err && onerror) {
      setImmediate(onerror, err, req, res)
    }

    // cannot actually respond
    if (res.headersSent) {
      debug('cannot %d after headers sent', status)
      if (req.socket) {
        req.socket.destroy()
      }
      return
    }

    // send response
    send(req, res, status, headers, msg)
  }
}

/**
 * Get headers from Error object.
 *
 * @param {Error} err
 * @return {object}
 * @private
 */

function getErrorHeaders (err) {
  if (!err.headers || typeof err.headers !== 'object') {
    return undefined
  }

  return { ...err.headers }
}

/**
 * Get message from Error object, fallback to status message.
 *
 * @param {Error} err
 * @param {number} status
 * @param {string} env
 * @return {string}
 * @private
 */

function getErrorMessage (err, status, env) {
  var msg

  if (env !== 'production') {
    // use err.stack, which typically includes err.message
    msg = err.stack

    // fallback to err.toString() when possible
    if (!msg && typeof err.toString === 'function') {
      msg = err.toString()
    }
  }

  return msg || statuses.message[status]
}

/**
 * Get status code from Error object.
 *
 * @param {Error} err
 * @return {number}
 * @private
 */

function getErrorStatusCode (err) {
  // check err.status
  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {
    return err.status
  }

  // check err.statusCode
  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {
    return err.statusCode
  }

  return undefined
}

/**
 * Get resource name for the request.
 *
 * This is typically just the original pathname of the request
 * but will fallback to "resource" is that cannot be determined.
 *
 * @param {IncomingMessage} req
 * @return {string}
 * @private
 */

function getResourceName (req) {
  try {
    return parseUrl.original(req).pathname
  } catch (e) {
    return 'resource'
  }
}

/**
 * Get status code from response.
 *
 * @param {OutgoingMessage} res
 * @return {number}
 * @private
 */

function getResponseStatusCode (res) {
  var status = res.statusCode

  // default status code to 500 if outside valid range
  if (typeof status !== 'number' || status < 400 || status > 599) {
    status = 500
  }

  return status
}

/**
 * Send response.
 *
 * @param {IncomingMessage} req
 * @param {OutgoingMessage} res
 * @param {number} status
 * @param {object} headers
 * @param {string} message
 * @private
 */

function send (req, res, status, headers, message) {
  function write () {
    // response body
    var body = createHtmlDocument(message)

    // response status
    res.statusCode = status

    if (req.httpVersionMajor < 2) {
      res.statusMessage = statuses.message[status]
    }

    // remove any content headers
    res.removeHeader('Content-Encoding')
    res.removeHeader('Content-Language')
    res.removeHeader('Content-Range')

    // response headers
    for (const [key, value] of Object.entries(headers ?? {})) {
      res.setHeader(key, value)
    }

    // security headers
    res.setHeader('Content-Security-Policy', "default-src 'none'")
    res.setHeader('X-Content-Type-Options', 'nosniff')

    // standard headers
    res.setHeader('Content-Type', 'text/html; charset=utf-8')
    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))

    if (req.method === 'HEAD') {
      res.end()
      return
    }

    res.end(body, 'utf8')
  }

  if (isFinished(req)) {
    write()
    return
  }

  // unpipe everything from the request
  req.unpipe()

  // flush the request
  onFinished(req, write)
  req.resume()
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\finalhandler\package.json 
------------------------------------------------------ 
{
  "name": "finalhandler",
  "description": "Node.js final http responder",
  "version": "2.1.0",
  "author": "Douglas Christopher Wilson <doug@somethingdoug.com>",
  "license": "MIT",
  "repository": "pillarjs/finalhandler",
  "dependencies": {
    "debug": "^4.4.0",
    "encodeurl": "^2.0.0",
    "escape-html": "^1.0.3",
    "on-finished": "^2.4.1",
    "parseurl": "^1.3.3",
    "statuses": "^2.0.1"
  },
  "devDependencies": {
    "eslint": "7.32.0",
    "eslint-config-standard": "14.1.1",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-markdown": "2.2.1",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "5.2.0",
    "eslint-plugin-standard": "4.1.0",
    "mocha": "^11.0.1",
    "nyc": "^17.1.0",
    "supertest": "^7.0.0"
  },
  "files": [
    "LICENSE",
    "HISTORY.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.8"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "mocha --reporter spec --check-leaks test/",
    "test-ci": "nyc --reporter=lcovonly --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test",
    "test-inspect": "mocha --reporter spec --inspect --inspect-brk test/"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\forwarded\index.js 
------------------------------------------------------ 
/*!
 * forwarded
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module exports.
 * @public
 */

module.exports = forwarded

/**
 * Get all addresses in the request, using the `X-Forwarded-For` header.
 *
 * @param {object} req
 * @return {array}
 * @public
 */

function forwarded (req) {
  if (!req) {
    throw new TypeError('argument req is required')
  }

  // simple header parsing
  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')
  var socketAddr = getSocketAddr(req)
  var addrs = [socketAddr].concat(proxyAddrs)

  // return all addresses
  return addrs
}

/**
 * Get the socket address for a request.
 *
 * @param {object} req
 * @return {string}
 * @private
 */

function getSocketAddr (req) {
  return req.socket
    ? req.socket.remoteAddress
    : req.connection.remoteAddress
}

/**
 * Parse the X-Forwarded-For header.
 *
 * @param {string} header
 * @private
 */

function parse (header) {
  var end = header.length
  var list = []
  var start = header.length

  // gather addresses, backwards
  for (var i = header.length - 1; i >= 0; i--) {
    switch (header.charCodeAt(i)) {
      case 0x20: /*   */
        if (start === end) {
          start = end = i
        }
        break
      case 0x2c: /* , */
        if (start !== end) {
          list.push(header.substring(start, end))
        }
        start = end = i
        break
      default:
        start = i
        break
    }
  }

  // final address
  if (start !== end) {
    list.push(header.substring(start, end))
  }

  return list
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\forwarded\package.json 
------------------------------------------------------ 
{
  "name": "forwarded",
  "description": "Parse HTTP X-Forwarded-For header",
  "version": "0.2.0",
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>"
  ],
  "license": "MIT",
  "keywords": [
    "x-forwarded-for",
    "http",
    "req"
  ],
  "repository": "jshttp/forwarded",
  "devDependencies": {
    "beautify-benchmark": "0.2.4",
    "benchmark": "2.1.4",
    "deep-equal": "1.0.1",
    "eslint": "7.27.0",
    "eslint-config-standard": "14.1.1",
    "eslint-plugin-import": "2.23.4",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "4.3.1",
    "eslint-plugin-standard": "4.1.0",
    "mocha": "8.4.0",
    "nyc": "15.1.0"
  },
  "files": [
    "LICENSE",
    "HISTORY.md",
    "README.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "bench": "node benchmark/index.js",
    "lint": "eslint .",
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test",
    "version": "node scripts/version-history.js && git add HISTORY.md"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\fresh\index.js 
------------------------------------------------------ 
/*!
 * fresh
 * Copyright(c) 2012 TJ Holowaychuk
 * Copyright(c) 2016-2017 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * RegExp to check for no-cache token in Cache-Control.
 * @private
 */

var CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\s*?no-cache\s*?(?:,|$)/

/**
 * Module exports.
 * @public
 */

module.exports = fresh

/**
 * Check freshness of the response using request and response headers.
 *
 * @param {Object} reqHeaders
 * @param {Object} resHeaders
 * @return {Boolean}
 * @public
 */

function fresh (reqHeaders, resHeaders) {
  // fields
  var modifiedSince = reqHeaders['if-modified-since']
  var noneMatch = reqHeaders['if-none-match']

  // unconditional request
  if (!modifiedSince && !noneMatch) {
    return false
  }

  // Always return stale when Cache-Control: no-cache
  // to support end-to-end reload requests
  // https://tools.ietf.org/html/rfc2616#section-14.9.4
  var cacheControl = reqHeaders['cache-control']
  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {
    return false
  }

  // if-none-match takes precedent over if-modified-since
  if (noneMatch) {
    if (noneMatch === '*') {
      return true
    }
    var etag = resHeaders.etag

    if (!etag) {
      return false
    }

    var matches = parseTokenList(noneMatch)
    for (var i = 0; i < matches.length; i++) {
      var match = matches[i]
      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {
        return true
      }
    }

    return false
  }

  // if-modified-since
  if (modifiedSince) {
    var lastModified = resHeaders['last-modified']
    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))

    if (modifiedStale) {
      return false
    }
  }

  return true
}

/**
 * Parse an HTTP Date into a number.
 *
 * @param {string} date
 * @private
 */

function parseHttpDate (date) {
  var timestamp = date && Date.parse(date)

  // istanbul ignore next: guard against date.js Date.parse patching
  return typeof timestamp === 'number'
    ? timestamp
    : NaN
}

/**
 * Parse a HTTP token list.
 *
 * @param {string} str
 * @private
 */

function parseTokenList (str) {
  var end = 0
  var list = []
  var start = 0

  // gather tokens
  for (var i = 0, len = str.length; i < len; i++) {
    switch (str.charCodeAt(i)) {
      case 0x20: /*   */
        if (start === end) {
          start = end = i + 1
        }
        break
      case 0x2c: /* , */
        list.push(str.substring(start, end))
        start = end = i + 1
        break
      default:
        end = i + 1
        break
    }
  }

  // final token
  list.push(str.substring(start, end))

  return list
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\fresh\package.json 
------------------------------------------------------ 
{
  "name": "fresh",
  "description": "HTTP response freshness testing",
  "version": "2.0.0",
  "author": "TJ Holowaychuk <tj@vision-media.ca> (http://tjholowaychuk.com)",
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>",
    "Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)"
  ],
  "license": "MIT",
  "keywords": [
    "fresh",
    "http",
    "conditional",
    "cache"
  ],
  "repository": "jshttp/fresh",
  "devDependencies": {
    "beautify-benchmark": "0.2.4",
    "benchmark": "2.1.4",
    "eslint": "8.12.0",
    "eslint-config-standard": "14.1.1",
    "eslint-plugin-import": "2.25.4",
    "eslint-plugin-markdown": "2.2.1",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "6.0.0",
    "eslint-plugin-standard": "4.1.0",
    "mocha": "9.2.0",
    "nyc": "15.1.0"
  },
  "files": [
    "HISTORY.md",
    "LICENSE",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.8"
  },
  "scripts": {
    "bench": "node benchmark/index.js",
    "lint": "eslint .",
    "test": "mocha --reporter spec --check-leaks --bail test/",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\fs-constants\browser.js 
------------------------------------------------------ 
module.exports = require('constants')
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\fs-constants\index.js 
------------------------------------------------------ 
module.exports = require('fs').constants || require('constants')
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\fs-constants\package.json 
------------------------------------------------------ 
{
  "name": "fs-constants",
  "version": "1.0.0",
  "description": "Require constants across node and the browser",
  "main": "index.js",
  "browser": "browser.js",
  "dependencies": {},
  "devDependencies": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/mafintosh/fs-constants.git"
  },
  "author": "Mathias Buus (@mafintosh)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mafintosh/fs-constants/issues"
  },
  "homepage": "https://github.com/mafintosh/fs-constants"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\fs-minipass\index.js 
------------------------------------------------------ 
'use strict'
const MiniPass = require('minipass')
const EE = require('events').EventEmitter
const fs = require('fs')

let writev = fs.writev
/* istanbul ignore next */
if (!writev) {
  // This entire block can be removed if support for earlier than Node.js
  // 12.9.0 is not needed.
  const binding = process.binding('fs')
  const FSReqWrap = binding.FSReqWrap || binding.FSReqCallback

  writev = (fd, iovec, pos, cb) => {
    const done = (er, bw) => cb(er, bw, iovec)
    const req = new FSReqWrap()
    req.oncomplete = done
    binding.writeBuffers(fd, iovec, pos, req)
  }
}

const _autoClose = Symbol('_autoClose')
const _close = Symbol('_close')
const _ended = Symbol('_ended')
const _fd = Symbol('_fd')
const _finished = Symbol('_finished')
const _flags = Symbol('_flags')
const _flush = Symbol('_flush')
const _handleChunk = Symbol('_handleChunk')
const _makeBuf = Symbol('_makeBuf')
const _mode = Symbol('_mode')
const _needDrain = Symbol('_needDrain')
const _onerror = Symbol('_onerror')
const _onopen = Symbol('_onopen')
const _onread = Symbol('_onread')
const _onwrite = Symbol('_onwrite')
const _open = Symbol('_open')
const _path = Symbol('_path')
const _pos = Symbol('_pos')
const _queue = Symbol('_queue')
const _read = Symbol('_read')
const _readSize = Symbol('_readSize')
const _reading = Symbol('_reading')
const _remain = Symbol('_remain')
const _size = Symbol('_size')
const _write = Symbol('_write')
const _writing = Symbol('_writing')
const _defaultFlag = Symbol('_defaultFlag')
const _errored = Symbol('_errored')

class ReadStream extends MiniPass {
  constructor (path, opt) {
    opt = opt || {}
    super(opt)

    this.readable = true
    this.writable = false

    if (typeof path !== 'string')
      throw new TypeError('path must be a string')

    this[_errored] = false
    this[_fd] = typeof opt.fd === 'number' ? opt.fd : null
    this[_path] = path
    this[_readSize] = opt.readSize || 16*1024*1024
    this[_reading] = false
    this[_size] = typeof opt.size === 'number' ? opt.size : Infinity
    this[_remain] = this[_size]
    this[_autoClose] = typeof opt.autoClose === 'boolean' ?
      opt.autoClose : true

    if (typeof this[_fd] === 'number')
      this[_read]()
    else
      this[_open]()
  }

  get fd () { return this[_fd] }
  get path () { return this[_path] }

  write () {
    throw new TypeError('this is a readable stream')
  }

  end () {
    throw new TypeError('this is a readable stream')
  }

  [_open] () {
    fs.open(this[_path], 'r', (er, fd) => this[_onopen](er, fd))
  }

  [_onopen] (er, fd) {
    if (er)
      this[_onerror](er)
    else {
      this[_fd] = fd
      this.emit('open', fd)
      this[_read]()
    }
  }

  [_makeBuf] () {
    return Buffer.allocUnsafe(Math.min(this[_readSize], this[_remain]))
  }

  [_read] () {
    if (!this[_reading]) {
      this[_reading] = true
      const buf = this[_makeBuf]()
      /* istanbul ignore if */
      if (buf.length === 0)
        return process.nextTick(() => this[_onread](null, 0, buf))
      fs.read(this[_fd], buf, 0, buf.length, null, (er, br, buf) =>
        this[_onread](er, br, buf))
    }
  }

  [_onread] (er, br, buf) {
    this[_reading] = false
    if (er)
      this[_onerror](er)
    else if (this[_handleChunk](br, buf))
      this[_read]()
  }

  [_close] () {
    if (this[_autoClose] && typeof this[_fd] === 'number') {
      const fd = this[_fd]
      this[_fd] = null
      fs.close(fd, er => er ? this.emit('error', er) : this.emit('close'))
    }
  }

  [_onerror] (er) {
    this[_reading] = true
    this[_close]()
    this.emit('error', er)
  }

  [_handleChunk] (br, buf) {
    let ret = false
    // no effect if infinite
    this[_remain] -= br
    if (br > 0)
      ret = super.write(br < buf.length ? buf.slice(0, br) : buf)

    if (br === 0 || this[_remain] <= 0) {
      ret = false
      this[_close]()
      super.end()
    }

    return ret
  }

  emit (ev, data) {
    switch (ev) {
      case 'prefinish':
      case 'finish':
        break

      case 'drain':
        if (typeof this[_fd] === 'number')
          this[_read]()
        break

      case 'error':
        if (this[_errored])
          return
        this[_errored] = true
        return super.emit(ev, data)

      default:
        return super.emit(ev, data)
    }
  }
}

class ReadStreamSync extends ReadStream {
  [_open] () {
    let threw = true
    try {
      this[_onopen](null, fs.openSync(this[_path], 'r'))
      threw = false
    } finally {
      if (threw)
        this[_close]()
    }
  }

  [_read] () {
    let threw = true
    try {
      if (!this[_reading]) {
        this[_reading] = true
        do {
          const buf = this[_makeBuf]()
          /* istanbul ignore next */
          const br = buf.length === 0 ? 0
            : fs.readSync(this[_fd], buf, 0, buf.length, null)
          if (!this[_handleChunk](br, buf))
            break
        } while (true)
        this[_reading] = false
      }
      threw = false
    } finally {
      if (threw)
        this[_close]()
    }
  }

  [_close] () {
    if (this[_autoClose] && typeof this[_fd] === 'number') {
      const fd = this[_fd]
      this[_fd] = null
      fs.closeSync(fd)
      this.emit('close')
    }
  }
}

class WriteStream extends EE {
  constructor (path, opt) {
    opt = opt || {}
    super(opt)
    this.readable = false
    this.writable = true
    this[_errored] = false
    this[_writing] = false
    this[_ended] = false
    this[_needDrain] = false
    this[_queue] = []
    this[_path] = path
    this[_fd] = typeof opt.fd === 'number' ? opt.fd : null
    this[_mode] = opt.mode === undefined ? 0o666 : opt.mode
    this[_pos] = typeof opt.start === 'number' ? opt.start : null
    this[_autoClose] = typeof opt.autoClose === 'boolean' ?
      opt.autoClose : true

    // truncating makes no sense when writing into the middle
    const defaultFlag = this[_pos] !== null ? 'r+' : 'w'
    this[_defaultFlag] = opt.flags === undefined
    this[_flags] = this[_defaultFlag] ? defaultFlag : opt.flags

    if (this[_fd] === null)
      this[_open]()
  }

  emit (ev, data) {
    if (ev === 'error') {
      if (this[_errored])
        return
      this[_errored] = true
    }
    return super.emit(ev, data)
  }


  get fd () { return this[_fd] }
  get path () { return this[_path] }

  [_onerror] (er) {
    this[_close]()
    this[_writing] = true
    this.emit('error', er)
  }

  [_open] () {
    fs.open(this[_path], this[_flags], this[_mode],
      (er, fd) => this[_onopen](er, fd))
  }

  [_onopen] (er, fd) {
    if (this[_defaultFlag] &&
        this[_flags] === 'r+' &&
        er && er.code === 'ENOENT') {
      this[_flags] = 'w'
      this[_open]()
    } else if (er)
      this[_onerror](er)
    else {
      this[_fd] = fd
      this.emit('open', fd)
      this[_flush]()
    }
  }

  end (buf, enc) {
    if (buf)
      this.write(buf, enc)

    this[_ended] = true

    // synthetic after-write logic, where drain/finish live
    if (!this[_writing] && !this[_queue].length &&
        typeof this[_fd] === 'number')
      this[_onwrite](null, 0)
    return this
  }

  write (buf, enc) {
    if (typeof buf === 'string')
      buf = Buffer.from(buf, enc)

    if (this[_ended]) {
      this.emit('error', new Error('write() after end()'))
      return false
    }

    if (this[_fd] === null || this[_writing] || this[_queue].length) {
      this[_queue].push(buf)
      this[_needDrain] = true
      return false
    }

    this[_writing] = true
    this[_write](buf)
    return true
  }

  [_write] (buf) {
    fs.write(this[_fd], buf, 0, buf.length, this[_pos], (er, bw) =>
      this[_onwrite](er, bw))
  }

  [_onwrite] (er, bw) {
    if (er)
      this[_onerror](er)
    else {
      if (this[_pos] !== null)
        this[_pos] += bw
      if (this[_queue].length)
        this[_flush]()
      else {
        this[_writing] = false

        if (this[_ended] && !this[_finished]) {
          this[_finished] = true
          this[_close]()
          this.emit('finish')
        } else if (this[_needDrain]) {
          this[_needDrain] = false
          this.emit('drain')
        }
      }
    }
  }

  [_flush] () {
    if (this[_queue].length === 0) {
      if (this[_ended])
        this[_onwrite](null, 0)
    } else if (this[_queue].length === 1)
      this[_write](this[_queue].pop())
    else {
      const iovec = this[_queue]
      this[_queue] = []
      writev(this[_fd], iovec, this[_pos],
        (er, bw) => this[_onwrite](er, bw))
    }
  }

  [_close] () {
    if (this[_autoClose] && typeof this[_fd] === 'number') {
      const fd = this[_fd]
      this[_fd] = null
      fs.close(fd, er => er ? this.emit('error', er) : this.emit('close'))
    }
  }
}

class WriteStreamSync extends WriteStream {
  [_open] () {
    let fd
    // only wrap in a try{} block if we know we'll retry, to avoid
    // the rethrow obscuring the error's source frame in most cases.
    if (this[_defaultFlag] && this[_flags] === 'r+') {
      try {
        fd = fs.openSync(this[_path], this[_flags], this[_mode])
      } catch (er) {
        if (er.code === 'ENOENT') {
          this[_flags] = 'w'
          return this[_open]()
        } else
          throw er
      }
    } else
      fd = fs.openSync(this[_path], this[_flags], this[_mode])

    this[_onopen](null, fd)
  }

  [_close] () {
    if (this[_autoClose] && typeof this[_fd] === 'number') {
      const fd = this[_fd]
      this[_fd] = null
      fs.closeSync(fd)
      this.emit('close')
    }
  }

  [_write] (buf) {
    // throw the original, but try to close if it fails
    let threw = true
    try {
      this[_onwrite](null,
        fs.writeSync(this[_fd], buf, 0, buf.length, this[_pos]))
      threw = false
    } finally {
      if (threw)
        try { this[_close]() } catch (_) {}
    }
  }
}

exports.ReadStream = ReadStream
exports.ReadStreamSync = ReadStreamSync

exports.WriteStream = WriteStream
exports.WriteStreamSync = WriteStreamSync
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\fs-minipass\package.json 
------------------------------------------------------ 
{
  "name": "fs-minipass",
  "version": "2.1.0",
  "main": "index.js",
  "scripts": {
    "test": "tap",
    "preversion": "npm test",
    "postversion": "npm publish",
    "postpublish": "git push origin --follow-tags"
  },
  "keywords": [],
  "author": "Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)",
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/npm/fs-minipass.git"
  },
  "bugs": {
    "url": "https://github.com/npm/fs-minipass/issues"
  },
  "homepage": "https://github.com/npm/fs-minipass#readme",
  "description": "fs read and write streams based on minipass",
  "dependencies": {
    "minipass": "^3.0.0"
  },
  "devDependencies": {
    "mutate-fs": "^2.0.1",
    "tap": "^14.6.4"
  },
  "files": [
    "index.js"
  ],
  "tap": {
    "check-coverage": true
  },
  "engines": {
    "node": ">= 8"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\fs.realpath\index.js 
------------------------------------------------------ 
module.exports = realpath
realpath.realpath = realpath
realpath.sync = realpathSync
realpath.realpathSync = realpathSync
realpath.monkeypatch = monkeypatch
realpath.unmonkeypatch = unmonkeypatch

var fs = require('fs')
var origRealpath = fs.realpath
var origRealpathSync = fs.realpathSync

var version = process.version
var ok = /^v[0-5]\./.test(version)
var old = require('./old.js')

function newError (er) {
  return er && er.syscall === 'realpath' && (
    er.code === 'ELOOP' ||
    er.code === 'ENOMEM' ||
    er.code === 'ENAMETOOLONG'
  )
}

function realpath (p, cache, cb) {
  if (ok) {
    return origRealpath(p, cache, cb)
  }

  if (typeof cache === 'function') {
    cb = cache
    cache = null
  }
  origRealpath(p, cache, function (er, result) {
    if (newError(er)) {
      old.realpath(p, cache, cb)
    } else {
      cb(er, result)
    }
  })
}

function realpathSync (p, cache) {
  if (ok) {
    return origRealpathSync(p, cache)
  }

  try {
    return origRealpathSync(p, cache)
  } catch (er) {
    if (newError(er)) {
      return old.realpathSync(p, cache)
    } else {
      throw er
    }
  }
}

function monkeypatch () {
  fs.realpath = realpath
  fs.realpathSync = realpathSync
}

function unmonkeypatch () {
  fs.realpath = origRealpath
  fs.realpathSync = origRealpathSync
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\fs.realpath\old.js 
------------------------------------------------------ 
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var pathModule = require('path');
var isWindows = process.platform === 'win32';
var fs = require('fs');

// JavaScript implementation of realpath, ported from node pre-v6

var DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);

function rethrow() {
  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and
  // is fairly slow to generate.
  var callback;
  if (DEBUG) {
    var backtrace = new Error;
    callback = debugCallback;
  } else
    callback = missingCallback;

  return callback;

  function debugCallback(err) {
    if (err) {
      backtrace.message = err.message;
      err = backtrace;
      missingCallback(err);
    }
  }

  function missingCallback(err) {
    if (err) {
      if (process.throwDeprecation)
        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs
      else if (!process.noDeprecation) {
        var msg = 'fs: missing callback ' + (err.stack || err.message);
        if (process.traceDeprecation)
          console.trace(msg);
        else
          console.error(msg);
      }
    }
  }
}

function maybeCallback(cb) {
  return typeof cb === 'function' ? cb : rethrow();
}

var normalize = pathModule.normalize;

// Regexp that finds the next partion of a (partial) path
// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']
if (isWindows) {
  var nextPartRe = /(.*?)(?:[\/\\]+|$)/g;
} else {
  var nextPartRe = /(.*?)(?:[\/]+|$)/g;
}

// Regex to find the device root, including trailing slash. E.g. 'c:\\'.
if (isWindows) {
  var splitRootRe = /^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/;
} else {
  var splitRootRe = /^[\/]*/;
}

exports.realpathSync = function realpathSync(p, cache) {
  // make p is absolute
  p = pathModule.resolve(p);

  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {
    return cache[p];
  }

  var original = p,
      seenLinks = {},
      knownHard = {};

  // current character position in p
  var pos;
  // the partial path so far, including a trailing slash if any
  var current;
  // the partial path without a trailing slash (except when pointing at a root)
  var base;
  // the partial path scanned in the previous round, with slash
  var previous;

  start();

  function start() {
    // Skip over roots
    var m = splitRootRe.exec(p);
    pos = m[0].length;
    current = m[0];
    base = m[0];
    previous = '';

    // On windows, check that the root exists. On unix there is no need.
    if (isWindows && !knownHard[base]) {
      fs.lstatSync(base);
      knownHard[base] = true;
    }
  }

  // walk down the path, swapping out linked pathparts for their real
  // values
  // NB: p.length changes.
  while (pos < p.length) {
    // find the next part
    nextPartRe.lastIndex = pos;
    var result = nextPartRe.exec(p);
    previous = current;
    current += result[0];
    base = previous + result[1];
    pos = nextPartRe.lastIndex;

    // continue if not a symlink
    if (knownHard[base] || (cache && cache[base] === base)) {
      continue;
    }

    var resolvedLink;
    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {
      // some known symbolic link.  no need to stat again.
      resolvedLink = cache[base];
    } else {
      var stat = fs.lstatSync(base);
      if (!stat.isSymbolicLink()) {
        knownHard[base] = true;
        if (cache) cache[base] = base;
        continue;
      }

      // read the link if it wasn't read before
      // dev/ino always return 0 on windows, so skip the check.
      var linkTarget = null;
      if (!isWindows) {
        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);
        if (seenLinks.hasOwnProperty(id)) {
          linkTarget = seenLinks[id];
        }
      }
      if (linkTarget === null) {
        fs.statSync(base);
        linkTarget = fs.readlinkSync(base);
      }
      resolvedLink = pathModule.resolve(previous, linkTarget);
      // track this, if given a cache.
      if (cache) cache[base] = resolvedLink;
      if (!isWindows) seenLinks[id] = linkTarget;
    }

    // resolve the link, then start over
    p = pathModule.resolve(resolvedLink, p.slice(pos));
    start();
  }

  if (cache) cache[original] = p;

  return p;
};


exports.realpath = function realpath(p, cache, cb) {
  if (typeof cb !== 'function') {
    cb = maybeCallback(cache);
    cache = null;
  }

  // make p is absolute
  p = pathModule.resolve(p);

  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {
    return process.nextTick(cb.bind(null, null, cache[p]));
  }

  var original = p,
      seenLinks = {},
      knownHard = {};

  // current character position in p
  var pos;
  // the partial path so far, including a trailing slash if any
  var current;
  // the partial path without a trailing slash (except when pointing at a root)
  var base;
  // the partial path scanned in the previous round, with slash
  var previous;

  start();

  function start() {
    // Skip over roots
    var m = splitRootRe.exec(p);
    pos = m[0].length;
    current = m[0];
    base = m[0];
    previous = '';

    // On windows, check that the root exists. On unix there is no need.
    if (isWindows && !knownHard[base]) {
      fs.lstat(base, function(err) {
        if (err) return cb(err);
        knownHard[base] = true;
        LOOP();
      });
    } else {
      process.nextTick(LOOP);
    }
  }

  // walk down the path, swapping out linked pathparts for their real
  // values
  function LOOP() {
    // stop if scanned past end of path
    if (pos >= p.length) {
      if (cache) cache[original] = p;
      return cb(null, p);
    }

    // find the next part
    nextPartRe.lastIndex = pos;
    var result = nextPartRe.exec(p);
    previous = current;
    current += result[0];
    base = previous + result[1];
    pos = nextPartRe.lastIndex;

    // continue if not a symlink
    if (knownHard[base] || (cache && cache[base] === base)) {
      return process.nextTick(LOOP);
    }

    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {
      // known symbolic link.  no need to stat again.
      return gotResolvedLink(cache[base]);
    }

    return fs.lstat(base, gotStat);
  }

  function gotStat(err, stat) {
    if (err) return cb(err);

    // if not a symlink, skip to the next path part
    if (!stat.isSymbolicLink()) {
      knownHard[base] = true;
      if (cache) cache[base] = base;
      return process.nextTick(LOOP);
    }

    // stat & read the link if not read before
    // call gotTarget as soon as the link target is known
    // dev/ino always return 0 on windows, so skip the check.
    if (!isWindows) {
      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);
      if (seenLinks.hasOwnProperty(id)) {
        return gotTarget(null, seenLinks[id], base);
      }
    }
    fs.stat(base, function(err) {
      if (err) return cb(err);

      fs.readlink(base, function(err, target) {
        if (!isWindows) seenLinks[id] = target;
        gotTarget(err, target);
      });
    });
  }

  function gotTarget(err, target, base) {
    if (err) return cb(err);

    var resolvedLink = pathModule.resolve(previous, target);
    if (cache) cache[base] = resolvedLink;
    gotResolvedLink(resolvedLink);
  }

  function gotResolvedLink(resolvedLink) {
    // resolve the link, then start over
    p = pathModule.resolve(resolvedLink, p.slice(pos));
    start();
  }
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\fs.realpath\package.json 
------------------------------------------------------ 
{
  "name": "fs.realpath",
  "version": "1.0.0",
  "description": "Use node's fs.realpath, but fall back to the JS implementation if the native one fails",
  "main": "index.js",
  "dependencies": {},
  "devDependencies": {},
  "scripts": {
    "test": "tap test/*.js --cov"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/isaacs/fs.realpath.git"
  },
  "keywords": [
    "realpath",
    "fs",
    "polyfill"
  ],
  "author": "Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)",
  "license": "ISC",
  "files": [
    "old.js",
    "index.js"
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\function-bind\implementation.js 
------------------------------------------------------ 
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var toStr = Object.prototype.toString;
var max = Math.max;
var funcType = '[object Function]';

var concatty = function concatty(a, b) {
    var arr = [];

    for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
    }
    for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
    }

    return arr;
};

var slicy = function slicy(arrLike, offset) {
    var arr = [];
    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
    }
    return arr;
};

var joiny = function (arr, joiner) {
    var str = '';
    for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
            str += joiner;
        }
    }
    return str;
};

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slicy(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                concatty(args, arguments)
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        }
        return target.apply(
            that,
            concatty(args, arguments)
        );

    };

    var boundLength = max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = '$' + i;
    }

    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\function-bind\index.js 
------------------------------------------------------ 
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\function-bind\package.json 
------------------------------------------------------ 
{
  "name": "function-bind",
  "version": "1.1.2",
  "description": "Implementation of Function.prototype.bind",
  "keywords": [
    "function",
    "bind",
    "shim",
    "es5"
  ],
  "author": "Raynos <raynos2@gmail.com>",
  "repository": {
    "type": "git",
    "url": "https://github.com/Raynos/function-bind.git"
  },
  "funding": {
    "url": "https://github.com/sponsors/ljharb"
  },
  "main": "index",
  "homepage": "https://github.com/Raynos/function-bind",
  "contributors": [
    {
      "name": "Raynos"
    },
    {
      "name": "Jordan Harband",
      "url": "https://github.com/ljharb"
    }
  ],
  "bugs": {
    "url": "https://github.com/Raynos/function-bind/issues",
    "email": "raynos2@gmail.com"
  },
  "devDependencies": {
    "@ljharb/eslint-config": "^21.1.0",
    "aud": "^2.0.3",
    "auto-changelog": "^2.4.0",
    "eslint": "=8.8.0",
    "in-publish": "^2.0.1",
    "npmignore": "^0.3.0",
    "nyc": "^10.3.2",
    "safe-publish-latest": "^2.0.0",
    "tape": "^5.7.1"
  },
  "license": "MIT",
  "scripts": {
    "prepublishOnly": "safe-publish-latest",
    "prepublish": "not-in-publish || npm run prepublishOnly",
    "prepack": "npmignore --auto --commentLines=autogenerated",
    "pretest": "npm run lint",
    "test": "npm run tests-only",
    "posttest": "aud --production",
    "tests-only": "nyc tape 'test/**/*.js'",
    "lint": "eslint --ext=js,mjs .",
    "version": "auto-changelog && git add CHANGELOG.md",
    "postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
  },
  "testling": {
    "files": "test/index.js",
    "browsers": [
      "ie/8..latest",
      "firefox/16..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "auto-changelog": {
    "output": "CHANGELOG.md",
    "template": "keepachangelog",
    "unreleased": false,
    "commitLimit": false,
    "backfillLimit": false,
    "hideCredit": true
  },
  "publishConfig": {
    "ignore": [
      ".github/workflows"
    ]
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\function-bind\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\function-bind\test\index.js 
------------------------------------------------------ 
// jscs:disable requireUseStrict

var test = require('tape');

var functionBind = require('../implementation');
var getCurrentContext = function () { return this; };

test('functionBind is a function', function (t) {
    t.equal(typeof functionBind, 'function');
    t.end();
});

test('non-functions', function (t) {
    var nonFunctions = [true, false, [], {}, 42, 'foo', NaN, /a/g];
    t.plan(nonFunctions.length);
    for (var i = 0; i < nonFunctions.length; ++i) {
        try { functionBind.call(nonFunctions[i]); } catch (ex) {
            t.ok(ex instanceof TypeError, 'throws when given ' + String(nonFunctions[i]));
        }
    }
    t.end();
});

test('without a context', function (t) {
    t.test('binds properly', function (st) {
        var args, context;
        var namespace = {
            func: functionBind.call(function () {
                args = Array.prototype.slice.call(arguments);
                context = this;
            })
        };
        namespace.func(1, 2, 3);
        st.deepEqual(args, [1, 2, 3]);
        st.equal(context, getCurrentContext.call());
        st.end();
    });

    t.test('binds properly, and still supplies bound arguments', function (st) {
        var args, context;
        var namespace = {
            func: functionBind.call(function () {
                args = Array.prototype.slice.call(arguments);
                context = this;
            }, undefined, 1, 2, 3)
        };
        namespace.func(4, 5, 6);
        st.deepEqual(args, [1, 2, 3, 4, 5, 6]);
        st.equal(context, getCurrentContext.call());
        st.end();
    });

    t.test('returns properly', function (st) {
        var args;
        var namespace = {
            func: functionBind.call(function () {
                args = Array.prototype.slice.call(arguments);
                return this;
            }, null)
        };
        var context = namespace.func(1, 2, 3);
        st.equal(context, getCurrentContext.call(), 'returned context is namespaced context');
        st.deepEqual(args, [1, 2, 3], 'passed arguments are correct');
        st.end();
    });

    t.test('returns properly with bound arguments', function (st) {
        var args;
        var namespace = {
            func: functionBind.call(function () {
                args = Array.prototype.slice.call(arguments);
                return this;
            }, null, 1, 2, 3)
        };
        var context = namespace.func(4, 5, 6);
        st.equal(context, getCurrentContext.call(), 'returned context is namespaced context');
        st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'passed arguments are correct');
        st.end();
    });

    t.test('called as a constructor', function (st) {
        var thunkify = function (value) {
            return function () { return value; };
        };
        st.test('returns object value', function (sst) {
            var expectedReturnValue = [1, 2, 3];
            var Constructor = functionBind.call(thunkify(expectedReturnValue), null);
            var result = new Constructor();
            sst.equal(result, expectedReturnValue);
            sst.end();
        });

        st.test('does not return primitive value', function (sst) {
            var Constructor = functionBind.call(thunkify(42), null);
            var result = new Constructor();
            sst.notEqual(result, 42);
            sst.end();
        });

        st.test('object from bound constructor is instance of original and bound constructor', function (sst) {
            var A = function (x) {
                this.name = x || 'A';
            };
            var B = functionBind.call(A, null, 'B');

            var result = new B();
            sst.ok(result instanceof B, 'result is instance of bound constructor');
            sst.ok(result instanceof A, 'result is instance of original constructor');
            sst.end();
        });

        st.end();
    });

    t.end();
});

test('with a context', function (t) {
    t.test('with no bound arguments', function (st) {
        var args, context;
        var boundContext = {};
        var namespace = {
            func: functionBind.call(function () {
                args = Array.prototype.slice.call(arguments);
                context = this;
            }, boundContext)
        };
        namespace.func(1, 2, 3);
        st.equal(context, boundContext, 'binds a context properly');
        st.deepEqual(args, [1, 2, 3], 'supplies passed arguments');
        st.end();
    });

    t.test('with bound arguments', function (st) {
        var args, context;
        var boundContext = {};
        var namespace = {
            func: functionBind.call(function () {
                args = Array.prototype.slice.call(arguments);
                context = this;
            }, boundContext, 1, 2, 3)
        };
        namespace.func(4, 5, 6);
        st.equal(context, boundContext, 'binds a context properly');
        st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'supplies bound and passed arguments');
        st.end();
    });

    t.test('returns properly', function (st) {
        var boundContext = {};
        var args;
        var namespace = {
            func: functionBind.call(function () {
                args = Array.prototype.slice.call(arguments);
                return this;
            }, boundContext)
        };
        var context = namespace.func(1, 2, 3);
        st.equal(context, boundContext, 'returned context is bound context');
        st.notEqual(context, getCurrentContext.call(), 'returned context is not lexical context');
        st.deepEqual(args, [1, 2, 3], 'passed arguments are correct');
        st.end();
    });

    t.test('returns properly with bound arguments', function (st) {
        var boundContext = {};
        var args;
        var namespace = {
            func: functionBind.call(function () {
                args = Array.prototype.slice.call(arguments);
                return this;
            }, boundContext, 1, 2, 3)
        };
        var context = namespace.func(4, 5, 6);
        st.equal(context, boundContext, 'returned context is bound context');
        st.notEqual(context, getCurrentContext.call(), 'returned context is not lexical context');
        st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'passed arguments are correct');
        st.end();
    });

    t.test('passes the correct arguments when called as a constructor', function (st) {
        var expected = { name: 'Correct' };
        var namespace = {
            Func: functionBind.call(function (arg) {
                return arg;
            }, { name: 'Incorrect' })
        };
        var returned = new namespace.Func(expected);
        st.equal(returned, expected, 'returns the right arg when called as a constructor');
        st.end();
    });

    t.test('has the new instance\'s context when called as a constructor', function (st) {
        var actualContext;
        var expectedContext = { foo: 'bar' };
        var namespace = {
            Func: functionBind.call(function () {
                actualContext = this;
            }, expectedContext)
        };
        var result = new namespace.Func();
        st.equal(result instanceof namespace.Func, true);
        st.notEqual(actualContext, expectedContext);
        st.end();
    });

    t.end();
});

test('bound function length', function (t) {
    t.test('sets a correct length without thisArg', function (st) {
        var subject = functionBind.call(function (a, b, c) { return a + b + c; });
        st.equal(subject.length, 3);
        st.equal(subject(1, 2, 3), 6);
        st.end();
    });

    t.test('sets a correct length with thisArg', function (st) {
        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, {});
        st.equal(subject.length, 3);
        st.equal(subject(1, 2, 3), 6);
        st.end();
    });

    t.test('sets a correct length without thisArg and first argument', function (st) {
        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, undefined, 1);
        st.equal(subject.length, 2);
        st.equal(subject(2, 3), 6);
        st.end();
    });

    t.test('sets a correct length with thisArg and first argument', function (st) {
        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, {}, 1);
        st.equal(subject.length, 2);
        st.equal(subject(2, 3), 6);
        st.end();
    });

    t.test('sets a correct length without thisArg and too many arguments', function (st) {
        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, undefined, 1, 2, 3, 4);
        st.equal(subject.length, 0);
        st.equal(subject(), 6);
        st.end();
    });

    t.test('sets a correct length with thisArg and too many arguments', function (st) {
        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, {}, 1, 2, 3, 4);
        st.equal(subject.length, 0);
        st.equal(subject(), 6);
        st.end();
    });
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\function-bind\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\package.json 
------------------------------------------------------ 
{
  "name": "gauge",
  "version": "4.0.4",
  "description": "A terminal based horizontal gauge",
  "main": "lib",
  "scripts": {
    "test": "tap",
    "lint": "eslint \"**/*.js\"",
    "postlint": "template-oss-check",
    "lintfix": "npm run lint -- --fix",
    "preversion": "npm test",
    "postversion": "npm publish",
    "prepublishOnly": "git push origin --follow-tags",
    "snap": "tap",
    "posttest": "npm run lint",
    "template-oss-apply": "template-oss-apply --force"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/npm/gauge.git"
  },
  "keywords": [
    "progressbar",
    "progress",
    "gauge"
  ],
  "author": "GitHub Inc.",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/npm/gauge/issues"
  },
  "homepage": "https://github.com/npm/gauge",
  "dependencies": {
    "aproba": "^1.0.3 || ^2.0.0",
    "color-support": "^1.1.3",
    "console-control-strings": "^1.1.0",
    "has-unicode": "^2.0.1",
    "signal-exit": "^3.0.7",
    "string-width": "^4.2.3",
    "strip-ansi": "^6.0.1",
    "wide-align": "^1.1.5"
  },
  "devDependencies": {
    "@npmcli/eslint-config": "^3.0.1",
    "@npmcli/template-oss": "3.2.0",
    "readable-stream": "^3.6.0",
    "tap": "^16.0.1"
  },
  "files": [
    "bin/",
    "lib/"
  ],
  "engines": {
    "node": "^12.13.0 || ^14.15.0 || >=16.0.0"
  },
  "tap": {
    "branches": 79,
    "statements": 89,
    "functions": 92,
    "lines": 90
  },
  "templateOSS": {
    "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
    "version": "3.2.0"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\base-theme.js 
------------------------------------------------------ 
'use strict'
var spin = require('./spin.js')
var progressBar = require('./progress-bar.js')

module.exports = {
  activityIndicator: function (values, theme, width) {
    if (values.spun == null) {
      return
    }
    return spin(theme, values.spun)
  },
  progressbar: function (values, theme, width) {
    if (values.completed == null) {
      return
    }
    return progressBar(theme, width, values.completed)
  },
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\error.js 
------------------------------------------------------ 
'use strict'
var util = require('util')

var User = exports.User = function User (msg) {
  var err = new Error(msg)
  Error.captureStackTrace(err, User)
  err.code = 'EGAUGE'
  return err
}

exports.MissingTemplateValue = function MissingTemplateValue (item, values) {
  var err = new User(util.format('Missing template value "%s"', item.type))
  Error.captureStackTrace(err, MissingTemplateValue)
  err.template = item
  err.values = values
  return err
}

exports.Internal = function Internal (msg) {
  var err = new Error(msg)
  Error.captureStackTrace(err, Internal)
  err.code = 'EGAUGEINTERNAL'
  return err
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\has-color.js 
------------------------------------------------------ 
'use strict'
var colorSupport = require('color-support')

module.exports = colorSupport().hasBasic
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\index.js 
------------------------------------------------------ 
'use strict'
var Plumbing = require('./plumbing.js')
var hasUnicode = require('has-unicode')
var hasColor = require('./has-color.js')
var onExit = require('signal-exit')
var defaultThemes = require('./themes')
var setInterval = require('./set-interval.js')
var process = require('./process.js')
var setImmediate = require('./set-immediate')

module.exports = Gauge

function callWith (obj, method) {
  return function () {
    return method.call(obj)
  }
}

function Gauge (arg1, arg2) {
  var options, writeTo
  if (arg1 && arg1.write) {
    writeTo = arg1
    options = arg2 || {}
  } else if (arg2 && arg2.write) {
    writeTo = arg2
    options = arg1 || {}
  } else {
    writeTo = process.stderr
    options = arg1 || arg2 || {}
  }

  this._status = {
    spun: 0,
    section: '',
    subsection: '',
  }
  this._paused = false // are we paused for back pressure?
  this._disabled = true // are all progress bar updates disabled?
  this._showing = false // do we WANT the progress bar on screen
  this._onScreen = false // IS the progress bar on screen
  this._needsRedraw = false // should we print something at next tick?
  this._hideCursor = options.hideCursor == null ? true : options.hideCursor
  this._fixedFramerate = options.fixedFramerate == null
    ? !(/^v0\.8\./.test(process.version))
    : options.fixedFramerate
  this._lastUpdateAt = null
  this._updateInterval = options.updateInterval == null ? 50 : options.updateInterval

  this._themes = options.themes || defaultThemes
  this._theme = options.theme
  var theme = this._computeTheme(options.theme)
  var template = options.template || [
    { type: 'progressbar', length: 20 },
    { type: 'activityIndicator', kerning: 1, length: 1 },
    { type: 'section', kerning: 1, default: '' },
    { type: 'subsection', kerning: 1, default: '' },
  ]
  this.setWriteTo(writeTo, options.tty)
  var PlumbingClass = options.Plumbing || Plumbing
  this._gauge = new PlumbingClass(theme, template, this.getWidth())

  this._$$doRedraw = callWith(this, this._doRedraw)
  this._$$handleSizeChange = callWith(this, this._handleSizeChange)

  this._cleanupOnExit = options.cleanupOnExit == null || options.cleanupOnExit
  this._removeOnExit = null

  if (options.enabled || (options.enabled == null && this._tty && this._tty.isTTY)) {
    this.enable()
  } else {
    this.disable()
  }
}
Gauge.prototype = {}

Gauge.prototype.isEnabled = function () {
  return !this._disabled
}

Gauge.prototype.setTemplate = function (template) {
  this._gauge.setTemplate(template)
  if (this._showing) {
    this._requestRedraw()
  }
}

Gauge.prototype._computeTheme = function (theme) {
  if (!theme) {
    theme = {}
  }
  if (typeof theme === 'string') {
    theme = this._themes.getTheme(theme)
  } else if (
    Object.keys(theme).length === 0 || theme.hasUnicode != null || theme.hasColor != null
  ) {
    var useUnicode = theme.hasUnicode == null ? hasUnicode() : theme.hasUnicode
    var useColor = theme.hasColor == null ? hasColor : theme.hasColor
    theme = this._themes.getDefault({
      hasUnicode: useUnicode,
      hasColor: useColor,
      platform: theme.platform,
    })
  }
  return theme
}

Gauge.prototype.setThemeset = function (themes) {
  this._themes = themes
  this.setTheme(this._theme)
}

Gauge.prototype.setTheme = function (theme) {
  this._gauge.setTheme(this._computeTheme(theme))
  if (this._showing) {
    this._requestRedraw()
  }
  this._theme = theme
}

Gauge.prototype._requestRedraw = function () {
  this._needsRedraw = true
  if (!this._fixedFramerate) {
    this._doRedraw()
  }
}

Gauge.prototype.getWidth = function () {
  return ((this._tty && this._tty.columns) || 80) - 1
}

Gauge.prototype.setWriteTo = function (writeTo, tty) {
  var enabled = !this._disabled
  if (enabled) {
    this.disable()
  }
  this._writeTo = writeTo
  this._tty = tty ||
    (writeTo === process.stderr && process.stdout.isTTY && process.stdout) ||
    (writeTo.isTTY && writeTo) ||
    this._tty
  if (this._gauge) {
    this._gauge.setWidth(this.getWidth())
  }
  if (enabled) {
    this.enable()
  }
}

Gauge.prototype.enable = function () {
  if (!this._disabled) {
    return
  }
  this._disabled = false
  if (this._tty) {
    this._enableEvents()
  }
  if (this._showing) {
    this.show()
  }
}

Gauge.prototype.disable = function () {
  if (this._disabled) {
    return
  }
  if (this._showing) {
    this._lastUpdateAt = null
    this._showing = false
    this._doRedraw()
    this._showing = true
  }
  this._disabled = true
  if (this._tty) {
    this._disableEvents()
  }
}

Gauge.prototype._enableEvents = function () {
  if (this._cleanupOnExit) {
    this._removeOnExit = onExit(callWith(this, this.disable))
  }
  this._tty.on('resize', this._$$handleSizeChange)
  if (this._fixedFramerate) {
    this.redrawTracker = setInterval(this._$$doRedraw, this._updateInterval)
    if (this.redrawTracker.unref) {
      this.redrawTracker.unref()
    }
  }
}

Gauge.prototype._disableEvents = function () {
  this._tty.removeListener('resize', this._$$handleSizeChange)
  if (this._fixedFramerate) {
    clearInterval(this.redrawTracker)
  }
  if (this._removeOnExit) {
    this._removeOnExit()
  }
}

Gauge.prototype.hide = function (cb) {
  if (this._disabled) {
    return cb && process.nextTick(cb)
  }
  if (!this._showing) {
    return cb && process.nextTick(cb)
  }
  this._showing = false
  this._doRedraw()
  cb && setImmediate(cb)
}

Gauge.prototype.show = function (section, completed) {
  this._showing = true
  if (typeof section === 'string') {
    this._status.section = section
  } else if (typeof section === 'object') {
    var sectionKeys = Object.keys(section)
    for (var ii = 0; ii < sectionKeys.length; ++ii) {
      var key = sectionKeys[ii]
      this._status[key] = section[key]
    }
  }
  if (completed != null) {
    this._status.completed = completed
  }
  if (this._disabled) {
    return
  }
  this._requestRedraw()
}

Gauge.prototype.pulse = function (subsection) {
  this._status.subsection = subsection || ''
  this._status.spun++
  if (this._disabled) {
    return
  }
  if (!this._showing) {
    return
  }
  this._requestRedraw()
}

Gauge.prototype._handleSizeChange = function () {
  this._gauge.setWidth(this._tty.columns - 1)
  this._requestRedraw()
}

Gauge.prototype._doRedraw = function () {
  if (this._disabled || this._paused) {
    return
  }
  if (!this._fixedFramerate) {
    var now = Date.now()
    if (this._lastUpdateAt && now - this._lastUpdateAt < this._updateInterval) {
      return
    }
    this._lastUpdateAt = now
  }
  if (!this._showing && this._onScreen) {
    this._onScreen = false
    var result = this._gauge.hide()
    if (this._hideCursor) {
      result += this._gauge.showCursor()
    }
    return this._writeTo.write(result)
  }
  if (!this._showing && !this._onScreen) {
    return
  }
  if (this._showing && !this._onScreen) {
    this._onScreen = true
    this._needsRedraw = true
    if (this._hideCursor) {
      this._writeTo.write(this._gauge.hideCursor())
    }
  }
  if (!this._needsRedraw) {
    return
  }
  if (!this._writeTo.write(this._gauge.show(this._status))) {
    this._paused = true
    this._writeTo.on('drain', callWith(this, function () {
      this._paused = false
      this._doRedraw()
    }))
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\plumbing.js 
------------------------------------------------------ 
'use strict'
var consoleControl = require('console-control-strings')
var renderTemplate = require('./render-template.js')
var validate = require('aproba')

var Plumbing = module.exports = function (theme, template, width) {
  if (!width) {
    width = 80
  }
  validate('OAN', [theme, template, width])
  this.showing = false
  this.theme = theme
  this.width = width
  this.template = template
}
Plumbing.prototype = {}

Plumbing.prototype.setTheme = function (theme) {
  validate('O', [theme])
  this.theme = theme
}

Plumbing.prototype.setTemplate = function (template) {
  validate('A', [template])
  this.template = template
}

Plumbing.prototype.setWidth = function (width) {
  validate('N', [width])
  this.width = width
}

Plumbing.prototype.hide = function () {
  return consoleControl.gotoSOL() + consoleControl.eraseLine()
}

Plumbing.prototype.hideCursor = consoleControl.hideCursor

Plumbing.prototype.showCursor = consoleControl.showCursor

Plumbing.prototype.show = function (status) {
  var values = Object.create(this.theme)
  for (var key in status) {
    values[key] = status[key]
  }

  return renderTemplate(this.width, this.template, values).trim() +
         consoleControl.color('reset') +
         consoleControl.eraseLine() + consoleControl.gotoSOL()
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\process.js 
------------------------------------------------------ 
'use strict'
// this exists so we can replace it during testing
module.exports = process
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\progress-bar.js 
------------------------------------------------------ 
'use strict'
var validate = require('aproba')
var renderTemplate = require('./render-template.js')
var wideTruncate = require('./wide-truncate')
var stringWidth = require('string-width')

module.exports = function (theme, width, completed) {
  validate('ONN', [theme, width, completed])
  if (completed < 0) {
    completed = 0
  }
  if (completed > 1) {
    completed = 1
  }
  if (width <= 0) {
    return ''
  }
  var sofar = Math.round(width * completed)
  var rest = width - sofar
  var template = [
    { type: 'complete', value: repeat(theme.complete, sofar), length: sofar },
    { type: 'remaining', value: repeat(theme.remaining, rest), length: rest },
  ]
  return renderTemplate(width, template, theme)
}

// lodash's way of repeating
function repeat (string, width) {
  var result = ''
  var n = width
  do {
    if (n % 2) {
      result += string
    }
    n = Math.floor(n / 2)
    /* eslint no-self-assign: 0 */
    string += string
  } while (n && stringWidth(result) < width)

  return wideTruncate(result, width)
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\render-template.js 
------------------------------------------------------ 
'use strict'
var align = require('wide-align')
var validate = require('aproba')
var wideTruncate = require('./wide-truncate')
var error = require('./error')
var TemplateItem = require('./template-item')

function renderValueWithValues (values) {
  return function (item) {
    return renderValue(item, values)
  }
}

var renderTemplate = module.exports = function (width, template, values) {
  var items = prepareItems(width, template, values)
  var rendered = items.map(renderValueWithValues(values)).join('')
  return align.left(wideTruncate(rendered, width), width)
}

function preType (item) {
  var cappedTypeName = item.type[0].toUpperCase() + item.type.slice(1)
  return 'pre' + cappedTypeName
}

function postType (item) {
  var cappedTypeName = item.type[0].toUpperCase() + item.type.slice(1)
  return 'post' + cappedTypeName
}

function hasPreOrPost (item, values) {
  if (!item.type) {
    return
  }
  return values[preType(item)] || values[postType(item)]
}

function generatePreAndPost (baseItem, parentValues) {
  var item = Object.assign({}, baseItem)
  var values = Object.create(parentValues)
  var template = []
  var pre = preType(item)
  var post = postType(item)
  if (values[pre]) {
    template.push({ value: values[pre] })
    values[pre] = null
  }
  item.minLength = null
  item.length = null
  item.maxLength = null
  template.push(item)
  values[item.type] = values[item.type]
  if (values[post]) {
    template.push({ value: values[post] })
    values[post] = null
  }
  return function ($1, $2, length) {
    return renderTemplate(length, template, values)
  }
}

function prepareItems (width, template, values) {
  function cloneAndObjectify (item, index, arr) {
    var cloned = new TemplateItem(item, width)
    var type = cloned.type
    if (cloned.value == null) {
      if (!(type in values)) {
        if (cloned.default == null) {
          throw new error.MissingTemplateValue(cloned, values)
        } else {
          cloned.value = cloned.default
        }
      } else {
        cloned.value = values[type]
      }
    }
    if (cloned.value == null || cloned.value === '') {
      return null
    }
    cloned.index = index
    cloned.first = index === 0
    cloned.last = index === arr.length - 1
    if (hasPreOrPost(cloned, values)) {
      cloned.value = generatePreAndPost(cloned, values)
    }
    return cloned
  }

  var output = template.map(cloneAndObjectify).filter(function (item) {
    return item != null
  })

  var remainingSpace = width
  var variableCount = output.length

  function consumeSpace (length) {
    if (length > remainingSpace) {
      length = remainingSpace
    }
    remainingSpace -= length
  }

  function finishSizing (item, length) {
    if (item.finished) {
      throw new error.Internal('Tried to finish template item that was already finished')
    }
    if (length === Infinity) {
      throw new error.Internal('Length of template item cannot be infinity')
    }
    if (length != null) {
      item.length = length
    }
    item.minLength = null
    item.maxLength = null
    --variableCount
    item.finished = true
    if (item.length == null) {
      item.length = item.getBaseLength()
    }
    if (item.length == null) {
      throw new error.Internal('Finished template items must have a length')
    }
    consumeSpace(item.getLength())
  }

  output.forEach(function (item) {
    if (!item.kerning) {
      return
    }
    var prevPadRight = item.first ? 0 : output[item.index - 1].padRight
    if (!item.first && prevPadRight < item.kerning) {
      item.padLeft = item.kerning - prevPadRight
    }
    if (!item.last) {
      item.padRight = item.kerning
    }
  })

  // Finish any that have a fixed (literal or intuited) length
  output.forEach(function (item) {
    if (item.getBaseLength() == null) {
      return
    }
    finishSizing(item)
  })

  var resized = 0
  var resizing
  var hunkSize
  do {
    resizing = false
    hunkSize = Math.round(remainingSpace / variableCount)
    output.forEach(function (item) {
      if (item.finished) {
        return
      }
      if (!item.maxLength) {
        return
      }
      if (item.getMaxLength() < hunkSize) {
        finishSizing(item, item.maxLength)
        resizing = true
      }
    })
  } while (resizing && resized++ < output.length)
  if (resizing) {
    throw new error.Internal('Resize loop iterated too many times while determining maxLength')
  }

  resized = 0
  do {
    resizing = false
    hunkSize = Math.round(remainingSpace / variableCount)
    output.forEach(function (item) {
      if (item.finished) {
        return
      }
      if (!item.minLength) {
        return
      }
      if (item.getMinLength() >= hunkSize) {
        finishSizing(item, item.minLength)
        resizing = true
      }
    })
  } while (resizing && resized++ < output.length)
  if (resizing) {
    throw new error.Internal('Resize loop iterated too many times while determining minLength')
  }

  hunkSize = Math.round(remainingSpace / variableCount)
  output.forEach(function (item) {
    if (item.finished) {
      return
    }
    finishSizing(item, hunkSize)
  })

  return output
}

function renderFunction (item, values, length) {
  validate('OON', arguments)
  if (item.type) {
    return item.value(values, values[item.type + 'Theme'] || {}, length)
  } else {
    return item.value(values, {}, length)
  }
}

function renderValue (item, values) {
  var length = item.getBaseLength()
  var value = typeof item.value === 'function' ? renderFunction(item, values, length) : item.value
  if (value == null || value === '') {
    return ''
  }
  var alignWith = align[item.align] || align.left
  var leftPadding = item.padLeft ? align.left('', item.padLeft) : ''
  var rightPadding = item.padRight ? align.right('', item.padRight) : ''
  var truncated = wideTruncate(String(value), length)
  var aligned = alignWith(truncated, length)
  return leftPadding + aligned + rightPadding
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\set-immediate.js 
------------------------------------------------------ 
'use strict'
var process = require('./process')
try {
  module.exports = setImmediate
} catch (ex) {
  module.exports = process.nextTick
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\set-interval.js 
------------------------------------------------------ 
'use strict'
// this exists so we can replace it during testing
module.exports = setInterval
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\spin.js 
------------------------------------------------------ 
'use strict'

module.exports = function spin (spinstr, spun) {
  return spinstr[spun % spinstr.length]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\template-item.js 
------------------------------------------------------ 
'use strict'
var stringWidth = require('string-width')

module.exports = TemplateItem

function isPercent (num) {
  if (typeof num !== 'string') {
    return false
  }
  return num.slice(-1) === '%'
}

function percent (num) {
  return Number(num.slice(0, -1)) / 100
}

function TemplateItem (values, outputLength) {
  this.overallOutputLength = outputLength
  this.finished = false
  this.type = null
  this.value = null
  this.length = null
  this.maxLength = null
  this.minLength = null
  this.kerning = null
  this.align = 'left'
  this.padLeft = 0
  this.padRight = 0
  this.index = null
  this.first = null
  this.last = null
  if (typeof values === 'string') {
    this.value = values
  } else {
    for (var prop in values) {
      this[prop] = values[prop]
    }
  }
  // Realize percents
  if (isPercent(this.length)) {
    this.length = Math.round(this.overallOutputLength * percent(this.length))
  }
  if (isPercent(this.minLength)) {
    this.minLength = Math.round(this.overallOutputLength * percent(this.minLength))
  }
  if (isPercent(this.maxLength)) {
    this.maxLength = Math.round(this.overallOutputLength * percent(this.maxLength))
  }
  return this
}

TemplateItem.prototype = {}

TemplateItem.prototype.getBaseLength = function () {
  var length = this.length
  if (
    length == null &&
    typeof this.value === 'string' &&
    this.maxLength == null &&
    this.minLength == null
  ) {
    length = stringWidth(this.value)
  }
  return length
}

TemplateItem.prototype.getLength = function () {
  var length = this.getBaseLength()
  if (length == null) {
    return null
  }
  return length + this.padLeft + this.padRight
}

TemplateItem.prototype.getMaxLength = function () {
  if (this.maxLength == null) {
    return null
  }
  return this.maxLength + this.padLeft + this.padRight
}

TemplateItem.prototype.getMinLength = function () {
  if (this.minLength == null) {
    return null
  }
  return this.minLength + this.padLeft + this.padRight
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\theme-set.js 
------------------------------------------------------ 
'use strict'

module.exports = function () {
  return ThemeSetProto.newThemeSet()
}

var ThemeSetProto = {}

ThemeSetProto.baseTheme = require('./base-theme.js')

ThemeSetProto.newTheme = function (parent, theme) {
  if (!theme) {
    theme = parent
    parent = this.baseTheme
  }
  return Object.assign({}, parent, theme)
}

ThemeSetProto.getThemeNames = function () {
  return Object.keys(this.themes)
}

ThemeSetProto.addTheme = function (name, parent, theme) {
  this.themes[name] = this.newTheme(parent, theme)
}

ThemeSetProto.addToAllThemes = function (theme) {
  var themes = this.themes
  Object.keys(themes).forEach(function (name) {
    Object.assign(themes[name], theme)
  })
  Object.assign(this.baseTheme, theme)
}

ThemeSetProto.getTheme = function (name) {
  if (!this.themes[name]) {
    throw this.newMissingThemeError(name)
  }
  return this.themes[name]
}

ThemeSetProto.setDefault = function (opts, name) {
  if (name == null) {
    name = opts
    opts = {}
  }
  var platform = opts.platform == null ? 'fallback' : opts.platform
  var hasUnicode = !!opts.hasUnicode
  var hasColor = !!opts.hasColor
  if (!this.defaults[platform]) {
    this.defaults[platform] = { true: {}, false: {} }
  }
  this.defaults[platform][hasUnicode][hasColor] = name
}

ThemeSetProto.getDefault = function (opts) {
  if (!opts) {
    opts = {}
  }
  var platformName = opts.platform || process.platform
  var platform = this.defaults[platformName] || this.defaults.fallback
  var hasUnicode = !!opts.hasUnicode
  var hasColor = !!opts.hasColor
  if (!platform) {
    throw this.newMissingDefaultThemeError(platformName, hasUnicode, hasColor)
  }
  if (!platform[hasUnicode][hasColor]) {
    if (hasUnicode && hasColor && platform[!hasUnicode][hasColor]) {
      hasUnicode = false
    } else if (hasUnicode && hasColor && platform[hasUnicode][!hasColor]) {
      hasColor = false
    } else if (hasUnicode && hasColor && platform[!hasUnicode][!hasColor]) {
      hasUnicode = false
      hasColor = false
    } else if (hasUnicode && !hasColor && platform[!hasUnicode][hasColor]) {
      hasUnicode = false
    } else if (!hasUnicode && hasColor && platform[hasUnicode][!hasColor]) {
      hasColor = false
    } else if (platform === this.defaults.fallback) {
      throw this.newMissingDefaultThemeError(platformName, hasUnicode, hasColor)
    }
  }
  if (platform[hasUnicode][hasColor]) {
    return this.getTheme(platform[hasUnicode][hasColor])
  } else {
    return this.getDefault(Object.assign({}, opts, { platform: 'fallback' }))
  }
}

ThemeSetProto.newMissingThemeError = function newMissingThemeError (name) {
  var err = new Error('Could not find a gauge theme named "' + name + '"')
  Error.captureStackTrace.call(err, newMissingThemeError)
  err.theme = name
  err.code = 'EMISSINGTHEME'
  return err
}

ThemeSetProto.newMissingDefaultThemeError =
  function newMissingDefaultThemeError (platformName, hasUnicode, hasColor) {
    var err = new Error(
      'Could not find a gauge theme for your platform/unicode/color use combo:\n' +
    '    platform = ' + platformName + '\n' +
    '    hasUnicode = ' + hasUnicode + '\n' +
    '    hasColor = ' + hasColor)
    Error.captureStackTrace.call(err, newMissingDefaultThemeError)
    err.platform = platformName
    err.hasUnicode = hasUnicode
    err.hasColor = hasColor
    err.code = 'EMISSINGTHEME'
    return err
  }

ThemeSetProto.newThemeSet = function () {
  var themeset = function (opts) {
    return themeset.getDefault(opts)
  }
  return Object.assign(themeset, ThemeSetProto, {
    themes: Object.assign({}, this.themes),
    baseTheme: Object.assign({}, this.baseTheme),
    defaults: JSON.parse(JSON.stringify(this.defaults || {})),
  })
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\themes.js 
------------------------------------------------------ 
'use strict'
var color = require('console-control-strings').color
var ThemeSet = require('./theme-set.js')

var themes = module.exports = new ThemeSet()

themes.addTheme('ASCII', {
  preProgressbar: '[',
  postProgressbar: ']',
  progressbarTheme: {
    complete: '#',
    remaining: '.',
  },
  activityIndicatorTheme: '-\\|/',
  preSubsection: '>',
})

themes.addTheme('colorASCII', themes.getTheme('ASCII'), {
  progressbarTheme: {
    preComplete: color('bgBrightWhite', 'brightWhite'),
    complete: '#',
    postComplete: color('reset'),
    preRemaining: color('bgBrightBlack', 'brightBlack'),
    remaining: '.',
    postRemaining: color('reset'),
  },
})

themes.addTheme('brailleSpinner', {
  preProgressbar: '(',
  postProgressbar: ')',
  progressbarTheme: {
    complete: '#',
    remaining: '⠂',
  },
  activityIndicatorTheme: '⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏',
  preSubsection: '>',
})

themes.addTheme('colorBrailleSpinner', themes.getTheme('brailleSpinner'), {
  progressbarTheme: {
    preComplete: color('bgBrightWhite', 'brightWhite'),
    complete: '#',
    postComplete: color('reset'),
    preRemaining: color('bgBrightBlack', 'brightBlack'),
    remaining: '⠂',
    postRemaining: color('reset'),
  },
})

themes.setDefault({}, 'ASCII')
themes.setDefault({ hasColor: true }, 'colorASCII')
themes.setDefault({ platform: 'darwin', hasUnicode: true }, 'brailleSpinner')
themes.setDefault({ platform: 'darwin', hasUnicode: true, hasColor: true }, 'colorBrailleSpinner')
themes.setDefault({ platform: 'linux', hasUnicode: true }, 'brailleSpinner')
themes.setDefault({ platform: 'linux', hasUnicode: true, hasColor: true }, 'colorBrailleSpinner')
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\wide-truncate.js 
------------------------------------------------------ 
'use strict'
var stringWidth = require('string-width')
var stripAnsi = require('strip-ansi')

module.exports = wideTruncate

function wideTruncate (str, target) {
  if (stringWidth(str) === 0) {
    return str
  }
  if (target <= 0) {
    return ''
  }
  if (stringWidth(str) <= target) {
    return str
  }

  // We compute the number of bytes of ansi sequences here and add
  // that to our initial truncation to ensure that we don't slice one
  // that we want to keep in half.
  var noAnsi = stripAnsi(str)
  var ansiSize = str.length + noAnsi.length
  var truncated = str.slice(0, target + ansiSize)

  // we have to shrink the result to account for our ansi sequence buffer
  // (if an ansi sequence was truncated) and double width characters.
  while (stringWidth(truncated) > target) {
    truncated = truncated.slice(0, -1)
  }
  return truncated
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gauge\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-intrinsic\index.js 
------------------------------------------------------ 
'use strict';

var undefined;

var $Object = require('es-object-atoms');

var $Error = require('es-errors');
var $EvalError = require('es-errors/eval');
var $RangeError = require('es-errors/range');
var $ReferenceError = require('es-errors/ref');
var $SyntaxError = require('es-errors/syntax');
var $TypeError = require('es-errors/type');
var $URIError = require('es-errors/uri');

var abs = require('math-intrinsics/abs');
var floor = require('math-intrinsics/floor');
var max = require('math-intrinsics/max');
var min = require('math-intrinsics/min');
var pow = require('math-intrinsics/pow');
var round = require('math-intrinsics/round');
var sign = require('math-intrinsics/sign');

var $Function = Function;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = require('gopd');
var $defineProperty = require('es-define-property');

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();

var getProto = require('get-proto');
var $ObjectGPO = require('get-proto/Object.getPrototypeOf');
var $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');

var $apply = require('call-bind-apply-helpers/functionApply');
var $call = require('call-bind-apply-helpers/functionCall');

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	__proto__: null,
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,
	'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': $Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': $EvalError,
	'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': $Object,
	'%Object.getOwnPropertyDescriptor%': $gOPD,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': $RangeError,
	'%ReferenceError%': $ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': $URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,

	'%Function.prototype.call%': $call,
	'%Function.prototype.apply%': $apply,
	'%Object.defineProperty%': $defineProperty,
	'%Object.getPrototypeOf%': $ObjectGPO,
	'%Math.abs%': abs,
	'%Math.floor%': floor,
	'%Math.max%': max,
	'%Math.min%': min,
	'%Math.pow%': pow,
	'%Math.round%': round,
	'%Math.sign%': sign,
	'%Reflect.getPrototypeOf%': $ReflectGPO
};

if (getProto) {
	try {
		null.error; // eslint-disable-line no-unused-expressions
	} catch (e) {
		// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
		var errorProto = getProto(getProto(e));
		INTRINSICS['%Error.prototype%'] = errorProto;
	}
}

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen && getProto) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	__proto__: null,
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('hasown');
var $concat = bind.call($call, Array.prototype.concat);
var $spliceApply = bind.call($apply, Array.prototype.splice);
var $replace = bind.call($call, String.prototype.replace);
var $strSlice = bind.call($call, String.prototype.slice);
var $exec = bind.call($call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-intrinsic\package.json 
------------------------------------------------------ 
{
	"name": "get-intrinsic",
	"version": "1.3.0",
	"description": "Get and robustly cache all JS language-level intrinsics at first require time",
	"main": "index.js",
	"exports": {
		".": "./index.js",
		"./package.json": "./package.json"
	},
	"sideEffects": false,
	"scripts": {
		"prepack": "npmignore --auto --commentLines=autogenerated",
		"prepublish": "not-in-publish || npm run prepublishOnly",
		"prepublishOnly": "safe-publish-latest",
		"prelint": "evalmd README.md",
		"lint": "eslint --ext=.js,.mjs .",
		"pretest": "npm run lint",
		"tests-only": "nyc tape 'test/**/*.js'",
		"test": "npm run tests-only",
		"posttest": "npx npm@'>= 10.2' audit --production",
		"version": "auto-changelog && git add CHANGELOG.md",
		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ljharb/get-intrinsic.git"
	},
	"keywords": [
		"javascript",
		"ecmascript",
		"es",
		"js",
		"intrinsic",
		"getintrinsic",
		"es-abstract"
	],
	"author": "Jordan Harband <ljharb@gmail.com>",
	"funding": {
		"url": "https://github.com/sponsors/ljharb"
	},
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/ljharb/get-intrinsic/issues"
	},
	"homepage": "https://github.com/ljharb/get-intrinsic#readme",
	"dependencies": {
		"call-bind-apply-helpers": "^1.0.2",
		"es-define-property": "^1.0.1",
		"es-errors": "^1.3.0",
		"es-object-atoms": "^1.1.1",
		"function-bind": "^1.1.2",
		"get-proto": "^1.0.1",
		"gopd": "^1.2.0",
		"has-symbols": "^1.1.0",
		"hasown": "^2.0.2",
		"math-intrinsics": "^1.1.0"
	},
	"devDependencies": {
		"@ljharb/eslint-config": "^21.1.1",
		"auto-changelog": "^2.5.0",
		"call-bound": "^1.0.3",
		"encoding": "^0.1.13",
		"es-abstract": "^1.23.9",
		"es-value-fixtures": "^1.7.1",
		"eslint": "=8.8.0",
		"evalmd": "^0.0.19",
		"for-each": "^0.3.5",
		"make-async-function": "^1.0.0",
		"make-async-generator-function": "^1.0.0",
		"make-generator-function": "^2.0.0",
		"mock-property": "^1.1.0",
		"npmignore": "^0.3.1",
		"nyc": "^10.3.2",
		"object-inspect": "^1.13.4",
		"safe-publish-latest": "^2.0.0",
		"tape": "^5.9.0"
	},
	"auto-changelog": {
		"output": "CHANGELOG.md",
		"template": "keepachangelog",
		"unreleased": false,
		"commitLimit": false,
		"backfillLimit": false,
		"hideCredit": true
	},
	"testling": {
		"files": "test/GetIntrinsic.js"
	},
	"publishConfig": {
		"ignore": [
			".github/workflows"
		]
	},
	"engines": {
		"node": ">= 0.4"
	}
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-intrinsic\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-intrinsic\test\GetIntrinsic.js 
------------------------------------------------------ 
'use strict';

var GetIntrinsic = require('../');

var test = require('tape');
var forEach = require('for-each');
var debug = require('object-inspect');
var generatorFns = require('make-generator-function')();
var asyncFns = require('make-async-function').list();
var asyncGenFns = require('make-async-generator-function')();
var mockProperty = require('mock-property');

var callBound = require('call-bound');
var v = require('es-value-fixtures');
var $gOPD = require('gopd');
var DefinePropertyOrThrow = require('es-abstract/2023/DefinePropertyOrThrow');

var $isProto = callBound('%Object.prototype.isPrototypeOf%');

test('export', function (t) {
	t.equal(typeof GetIntrinsic, 'function', 'it is a function');
	t.equal(GetIntrinsic.length, 2, 'function has length of 2');

	t.end();
});

test('throws', function (t) {
	t['throws'](
		function () { GetIntrinsic('not an intrinsic'); },
		SyntaxError,
		'nonexistent intrinsic throws a syntax error'
	);

	t['throws'](
		function () { GetIntrinsic(''); },
		TypeError,
		'empty string intrinsic throws a type error'
	);

	t['throws'](
		function () { GetIntrinsic('.'); },
		SyntaxError,
		'"just a dot" intrinsic throws a syntax error'
	);

	t['throws'](
		function () { GetIntrinsic('%String'); },
		SyntaxError,
		'Leading % without trailing % throws a syntax error'
	);

	t['throws'](
		function () { GetIntrinsic('String%'); },
		SyntaxError,
		'Trailing % without leading % throws a syntax error'
	);

	t['throws'](
		function () { GetIntrinsic("String['prototype]"); },
		SyntaxError,
		'Dynamic property access is disallowed for intrinsics (unterminated string)'
	);

	t['throws'](
		function () { GetIntrinsic('%Proxy.prototype.undefined%'); },
		TypeError,
		"Throws when middle part doesn't exist (%Proxy.prototype.undefined%)"
	);

	t['throws'](
		function () { GetIntrinsic('%Array.prototype%garbage%'); },
		SyntaxError,
		'Throws with extra percent signs'
	);

	t['throws'](
		function () { GetIntrinsic('%Array.prototype%push%'); },
		SyntaxError,
		'Throws with extra percent signs, even on an existing intrinsic'
	);

	forEach(v.nonStrings, function (nonString) {
		t['throws'](
			function () { GetIntrinsic(nonString); },
			TypeError,
			debug(nonString) + ' is not a String'
		);
	});

	forEach(v.nonBooleans, function (nonBoolean) {
		t['throws'](
			function () { GetIntrinsic('%', nonBoolean); },
			TypeError,
			debug(nonBoolean) + ' is not a Boolean'
		);
	});

	forEach([
		'toString',
		'propertyIsEnumerable',
		'hasOwnProperty'
	], function (objectProtoMember) {
		t['throws'](
			function () { GetIntrinsic(objectProtoMember); },
			SyntaxError,
			debug(objectProtoMember) + ' is not an intrinsic'
		);
	});

	t.end();
});

test('base intrinsics', function (t) {
	t.equal(GetIntrinsic('%Object%'), Object, '%Object% yields Object');
	t.equal(GetIntrinsic('Object'), Object, 'Object yields Object');
	t.equal(GetIntrinsic('%Array%'), Array, '%Array% yields Array');
	t.equal(GetIntrinsic('Array'), Array, 'Array yields Array');

	t.end();
});

test('dotted paths', function (t) {
	t.equal(GetIntrinsic('%Object.prototype.toString%'), Object.prototype.toString, '%Object.prototype.toString% yields Object.prototype.toString');
	t.equal(GetIntrinsic('Object.prototype.toString'), Object.prototype.toString, 'Object.prototype.toString yields Object.prototype.toString');
	t.equal(GetIntrinsic('%Array.prototype.push%'), Array.prototype.push, '%Array.prototype.push% yields Array.prototype.push');
	t.equal(GetIntrinsic('Array.prototype.push'), Array.prototype.push, 'Array.prototype.push yields Array.prototype.push');

	test('underscore paths are aliases for dotted paths', { skip: !Object.isFrozen || Object.isFrozen(Object.prototype) }, function (st) {
		var original = GetIntrinsic('%ObjProto_toString%');

		forEach([
			'%Object.prototype.toString%',
			'Object.prototype.toString',
			'%ObjectPrototype.toString%',
			'ObjectPrototype.toString',
			'%ObjProto_toString%',
			'ObjProto_toString'
		], function (name) {
			DefinePropertyOrThrow(Object.prototype, 'toString', {
				'[[Value]]': function toString() {
					return original.apply(this, arguments);
				}
			});
			st.equal(GetIntrinsic(name), original, name + ' yields original Object.prototype.toString');
		});

		DefinePropertyOrThrow(Object.prototype, 'toString', { '[[Value]]': original });
		st.end();
	});

	test('dotted paths cache', { skip: !Object.isFrozen || Object.isFrozen(Object.prototype) }, function (st) {
		var original = GetIntrinsic('%Object.prototype.propertyIsEnumerable%');

		forEach([
			'%Object.prototype.propertyIsEnumerable%',
			'Object.prototype.propertyIsEnumerable',
			'%ObjectPrototype.propertyIsEnumerable%',
			'ObjectPrototype.propertyIsEnumerable'
		], function (name) {
			var restore = mockProperty(Object.prototype, 'propertyIsEnumerable', {
				value: function propertyIsEnumerable() {
					return original.apply(this, arguments);
				}
			});
			st.equal(GetIntrinsic(name), original, name + ' yields cached Object.prototype.propertyIsEnumerable');

			restore();
		});

		st.end();
	});

	test('dotted path reports correct error', function (st) {
		st['throws'](function () {
			GetIntrinsic('%NonExistentIntrinsic.prototype.property%');
		}, /%NonExistentIntrinsic%/, 'The base intrinsic of %NonExistentIntrinsic.prototype.property% is %NonExistentIntrinsic%');

		st['throws'](function () {
			GetIntrinsic('%NonExistentIntrinsicPrototype.property%');
		}, /%NonExistentIntrinsicPrototype%/, 'The base intrinsic of %NonExistentIntrinsicPrototype.property% is %NonExistentIntrinsicPrototype%');

		st.end();
	});

	t.end();
});

test('accessors', { skip: !$gOPD || typeof Map !== 'function' }, function (t) {
	var actual = $gOPD(Map.prototype, 'size');
	t.ok(actual, 'Map.prototype.size has a descriptor');
	t.equal(typeof actual.get, 'function', 'Map.prototype.size has a getter function');
	t.equal(GetIntrinsic('%Map.prototype.size%'), actual.get, '%Map.prototype.size% yields the getter for it');
	t.equal(GetIntrinsic('Map.prototype.size'), actual.get, 'Map.prototype.size yields the getter for it');

	t.end();
});

test('generator functions', { skip: !generatorFns.length }, function (t) {
	var $GeneratorFunction = GetIntrinsic('%GeneratorFunction%');
	var $GeneratorFunctionPrototype = GetIntrinsic('%Generator%');
	var $GeneratorPrototype = GetIntrinsic('%GeneratorPrototype%');

	forEach(generatorFns, function (genFn) {
		var fnName = genFn.name;
		fnName = fnName ? "'" + fnName + "'" : 'genFn';

		t.ok(genFn instanceof $GeneratorFunction, fnName + ' instanceof %GeneratorFunction%');
		t.ok($isProto($GeneratorFunctionPrototype, genFn), '%Generator% is prototype of ' + fnName);
		t.ok($isProto($GeneratorPrototype, genFn.prototype), '%GeneratorPrototype% is prototype of ' + fnName + '.prototype');
	});

	t.end();
});

test('async functions', { skip: !asyncFns.length }, function (t) {
	var $AsyncFunction = GetIntrinsic('%AsyncFunction%');
	var $AsyncFunctionPrototype = GetIntrinsic('%AsyncFunctionPrototype%');

	forEach(asyncFns, function (asyncFn) {
		var fnName = asyncFn.name;
		fnName = fnName ? "'" + fnName + "'" : 'asyncFn';

		t.ok(asyncFn instanceof $AsyncFunction, fnName + ' instanceof %AsyncFunction%');
		t.ok($isProto($AsyncFunctionPrototype, asyncFn), '%AsyncFunctionPrototype% is prototype of ' + fnName);
	});

	t.end();
});

test('async generator functions', { skip: asyncGenFns.length === 0 }, function (t) {
	var $AsyncGeneratorFunction = GetIntrinsic('%AsyncGeneratorFunction%');
	var $AsyncGeneratorFunctionPrototype = GetIntrinsic('%AsyncGenerator%');
	var $AsyncGeneratorPrototype = GetIntrinsic('%AsyncGeneratorPrototype%');

	forEach(asyncGenFns, function (asyncGenFn) {
		var fnName = asyncGenFn.name;
		fnName = fnName ? "'" + fnName + "'" : 'asyncGenFn';

		t.ok(asyncGenFn instanceof $AsyncGeneratorFunction, fnName + ' instanceof %AsyncGeneratorFunction%');
		t.ok($isProto($AsyncGeneratorFunctionPrototype, asyncGenFn), '%AsyncGenerator% is prototype of ' + fnName);
		t.ok($isProto($AsyncGeneratorPrototype, asyncGenFn.prototype), '%AsyncGeneratorPrototype% is prototype of ' + fnName + '.prototype');
	});

	t.end();
});

test('%ThrowTypeError%', function (t) {
	var $ThrowTypeError = GetIntrinsic('%ThrowTypeError%');

	t.equal(typeof $ThrowTypeError, 'function', 'is a function');
	t['throws'](
		$ThrowTypeError,
		TypeError,
		'%ThrowTypeError% throws a TypeError'
	);

	t.end();
});

test('allowMissing', { skip: asyncGenFns.length > 0 }, function (t) {
	t['throws'](
		function () { GetIntrinsic('%AsyncGeneratorPrototype%'); },
		TypeError,
		'throws when missing'
	);

	t.equal(
		GetIntrinsic('%AsyncGeneratorPrototype%', true),
		undefined,
		'does not throw when allowMissing'
	);

	t.end();
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-intrinsic\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-proto\index.js 
------------------------------------------------------ 
'use strict';

var reflectGetProto = require('./Reflect.getPrototypeOf');
var originalGetProto = require('./Object.getPrototypeOf');

var getDunderProto = require('dunder-proto/get');

/** @type {import('.')} */
module.exports = reflectGetProto
	? function getProto(O) {
		// @ts-expect-error TS can't narrow inside a closure, for some reason
		return reflectGetProto(O);
	}
	: originalGetProto
		? function getProto(O) {
			if (!O || (typeof O !== 'object' && typeof O !== 'function')) {
				throw new TypeError('getProto: not an object');
			}
			// @ts-expect-error TS can't narrow inside a closure, for some reason
			return originalGetProto(O);
		}
		: getDunderProto
			? function getProto(O) {
				// @ts-expect-error TS can't narrow inside a closure, for some reason
				return getDunderProto(O);
			}
			: null;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-proto\Object.getPrototypeOf.js 
------------------------------------------------------ 
'use strict';

var $Object = require('es-object-atoms');

/** @type {import('./Object.getPrototypeOf')} */
module.exports = $Object.getPrototypeOf || null;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-proto\Reflect.getPrototypeOf.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./Reflect.getPrototypeOf')} */
module.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-proto\package.json 
------------------------------------------------------ 
{
	"name": "get-proto",
	"version": "1.0.1",
	"description": "Robustly get the [[Prototype]] of an object",
	"main": "index.js",
	"exports": {
		".": "./index.js",
		"./Reflect.getPrototypeOf": "./Reflect.getPrototypeOf.js",
		"./Object.getPrototypeOf": "./Object.getPrototypeOf.js",
		"./package.json": "./package.json"
	},
	"scripts": {
		"prepack": "npmignore --auto --commentLines=autogenerated",
		"prepublish": "not-in-publish || npm run prepublishOnly",
		"prepublishOnly": "safe-publish-latest",
		"pretest": "npm run --silent lint",
		"test": "npm run tests-only",
		"posttest": "npx npm@\">=10.2\" audit --production",
		"tests-only": "nyc tape 'test/**/*.js'",
		"prelint": "evalmd README.md",
		"lint": "eslint --ext=js,mjs .",
		"postlint": "tsc && attw -P",
		"version": "auto-changelog && git add CHANGELOG.md",
		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ljharb/get-proto.git"
	},
	"keywords": [
		"get",
		"proto",
		"prototype",
		"getPrototypeOf",
		"[[Prototype]]"
	],
	"author": "Jordan Harband <ljharb@gmail.com>",
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/ljharb/get-proto/issues"
	},
	"homepage": "https://github.com/ljharb/get-proto#readme",
	"dependencies": {
		"dunder-proto": "^1.0.1",
		"es-object-atoms": "^1.0.0"
	},
	"devDependencies": {
		"@arethetypeswrong/cli": "^0.17.2",
		"@ljharb/eslint-config": "^21.1.1",
		"@ljharb/tsconfig": "^0.2.3",
		"@types/tape": "^5.8.0",
		"auto-changelog": "^2.5.0",
		"eslint": "=8.8.0",
		"evalmd": "^0.0.19",
		"in-publish": "^2.0.1",
		"npmignore": "^0.3.1",
		"nyc": "^10.3.2",
		"safe-publish-latest": "^2.0.0",
		"tape": "^5.9.0",
		"typescript": "next"
	},
	"engines": {
		"node": ">= 0.4"
	},
	"auto-changelog": {
		"output": "CHANGELOG.md",
		"template": "keepachangelog",
		"unreleased": false,
		"commitLimit": false,
		"backfillLimit": false,
		"hideCredit": true
	},
	"publishConfig": {
		"ignore": [
			".github/workflows"
		]
	},
	"testling": {
		"files": "test/index.js"
	}
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-proto\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-proto\test\index.js 
------------------------------------------------------ 
'use strict';

var test = require('tape');

var getProto = require('../');

test('getProto', function (t) {
	t.equal(typeof getProto, 'function', 'is a function');

	t.test('can get', { skip: !getProto }, function (st) {
		if (getProto) { // TS doesn't understand tape's skip
			var proto = { b: 2 };
			st.equal(getProto(proto), Object.prototype, 'proto: returns the [[Prototype]]');

			st.test('nullish value', function (s2t) {
			// @ts-expect-error
				s2t['throws'](function () { return getProto(undefined); }, TypeError, 'undefined is not an object');
				// @ts-expect-error
				s2t['throws'](function () { return getProto(null); }, TypeError, 'null is not an object');
				s2t.end();
			});

			// @ts-expect-error
			st['throws'](function () { getProto(true); }, 'throws for true');
			// @ts-expect-error
			st['throws'](function () { getProto(false); }, 'throws for false');
			// @ts-expect-error
			st['throws'](function () { getProto(42); }, 'throws for 42');
			// @ts-expect-error
			st['throws'](function () { getProto(NaN); }, 'throws for NaN');
			// @ts-expect-error
			st['throws'](function () { getProto(0); }, 'throws for +0');
			// @ts-expect-error
			st['throws'](function () { getProto(-0); }, 'throws for -0');
			// @ts-expect-error
			st['throws'](function () { getProto(Infinity); }, 'throws for ∞');
			// @ts-expect-error
			st['throws'](function () { getProto(-Infinity); }, 'throws for -∞');
			// @ts-expect-error
			st['throws'](function () { getProto(''); }, 'throws for empty string');
			// @ts-expect-error
			st['throws'](function () { getProto('foo'); }, 'throws for non-empty string');
			st.equal(getProto(/a/g), RegExp.prototype);
			st.equal(getProto(new Date()), Date.prototype);
			st.equal(getProto(function () {}), Function.prototype);
			st.equal(getProto([]), Array.prototype);
			st.equal(getProto({}), Object.prototype);

			var nullObject = { __proto__: null };
			if ('toString' in nullObject) {
				st.comment('no null objects in this engine');
				st.equal(getProto(nullObject), Object.prototype, '"null" object has Object.prototype as [[Prototype]]');
			} else {
				st.equal(getProto(nullObject), null, 'null object has null [[Prototype]]');
			}
		}

		st.end();
	});

	t.test('can not get', { skip: !!getProto }, function (st) {
		st.equal(getProto, null);

		st.end();
	});

	t.end();
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\get-proto\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\github-from-package\index.js 
------------------------------------------------------ 
module.exports = function (pkg) {
    var m;
    if (m = match(JSON.stringify(pkg.repository))) {
        return m;
    }
    else if (m = match(JSON.stringify(pkg))) {
        return m;
    }
    return undefined;
};

function match (str) {
    var m = /\bgithub.com[:\/]([^\/"]+)\/([^\/"]+)/.exec(str);
    if (m) {
        return 'https://github.com/' + m[1] + '/' + m[2].replace(/\.git$/, '');
    }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\github-from-package\package.json 
------------------------------------------------------ 
{
    "name" : "github-from-package",
    "version" : "0.0.0",
    "description" : "return the github url from a package.json file",
    "main" : "index.js",
    "devDependencies" : {
        "tap" : "~0.3.0",
        "tape" : "~0.1.5"
    },
    "scripts" : {
        "test" : "tap test/*.js"
    },
    "repository" : {
        "type" : "git",
        "url" : "git://github.com/substack/github-from-package.git"
    },
    "homepage" : "https://github.com/substack/github-from-package",
    "keywords" : [
        "github",
        "package.json",
        "npm",
        "repository"
    ],
    "author" : {
        "name" : "James Halliday",
        "email" : "mail@substack.net",
        "url" : "http://substack.net"
    },
    "license" : "MIT"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\github-from-package\example\url.js 
------------------------------------------------------ 
var github = require('../');
var url = github(require('./package.json'));
console.log(url);
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\github-from-package\example\package.json 
------------------------------------------------------ 
{
  "name": "beep-boop",
  "version": "1.2.3",
  "repository" : {
    "type" : "git",
    "url": "git@github.com:substack/beep-boop.git"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\github-from-package\test\url.js 
------------------------------------------------------ 
var test = require('tape');
var github = require('../');
var packages = {
    a : require('./a.json'),
    b : require('./b.json'),
    c : require('./c.json'),
    d : require('./d.json'),
    e : require('./e.json')
};

test(function (t) {
    t.plan(5);
    var url = 'https://github.com/substack/beep-boop';
    t.equal(url, github(packages.a), 'a.json comparison');
    t.equal(url, github(packages.b), 'b.json comparison');
    t.equal(url, github(packages.c), 'c.json comparison');
    t.equal(url, github(packages.d), 'd.json comparison');
    t.equal(url, github(packages.e), 'e.json comparison');
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\github-from-package\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\glob\common.js 
------------------------------------------------------ 
exports.setopts = setopts
exports.ownProp = ownProp
exports.makeAbs = makeAbs
exports.finish = finish
exports.mark = mark
exports.isIgnored = isIgnored
exports.childrenIgnored = childrenIgnored

function ownProp (obj, field) {
  return Object.prototype.hasOwnProperty.call(obj, field)
}

var fs = require("fs")
var path = require("path")
var minimatch = require("minimatch")
var isAbsolute = require("path-is-absolute")
var Minimatch = minimatch.Minimatch

function alphasort (a, b) {
  return a.localeCompare(b, 'en')
}

function setupIgnores (self, options) {
  self.ignore = options.ignore || []

  if (!Array.isArray(self.ignore))
    self.ignore = [self.ignore]

  if (self.ignore.length) {
    self.ignore = self.ignore.map(ignoreMap)
  }
}

// ignore patterns are always in dot:true mode.
function ignoreMap (pattern) {
  var gmatcher = null
  if (pattern.slice(-3) === '/**') {
    var gpattern = pattern.replace(/(\/\*\*)+$/, '')
    gmatcher = new Minimatch(gpattern, { dot: true })
  }

  return {
    matcher: new Minimatch(pattern, { dot: true }),
    gmatcher: gmatcher
  }
}

function setopts (self, pattern, options) {
  if (!options)
    options = {}

  // base-matching: just use globstar for that.
  if (options.matchBase && -1 === pattern.indexOf("/")) {
    if (options.noglobstar) {
      throw new Error("base matching requires globstar")
    }
    pattern = "**/" + pattern
  }

  self.silent = !!options.silent
  self.pattern = pattern
  self.strict = options.strict !== false
  self.realpath = !!options.realpath
  self.realpathCache = options.realpathCache || Object.create(null)
  self.follow = !!options.follow
  self.dot = !!options.dot
  self.mark = !!options.mark
  self.nodir = !!options.nodir
  if (self.nodir)
    self.mark = true
  self.sync = !!options.sync
  self.nounique = !!options.nounique
  self.nonull = !!options.nonull
  self.nosort = !!options.nosort
  self.nocase = !!options.nocase
  self.stat = !!options.stat
  self.noprocess = !!options.noprocess
  self.absolute = !!options.absolute
  self.fs = options.fs || fs

  self.maxLength = options.maxLength || Infinity
  self.cache = options.cache || Object.create(null)
  self.statCache = options.statCache || Object.create(null)
  self.symlinks = options.symlinks || Object.create(null)

  setupIgnores(self, options)

  self.changedCwd = false
  var cwd = process.cwd()
  if (!ownProp(options, "cwd"))
    self.cwd = cwd
  else {
    self.cwd = path.resolve(options.cwd)
    self.changedCwd = self.cwd !== cwd
  }

  self.root = options.root || path.resolve(self.cwd, "/")
  self.root = path.resolve(self.root)
  if (process.platform === "win32")
    self.root = self.root.replace(/\\/g, "/")

  // TODO: is an absolute `cwd` supposed to be resolved against `root`?
  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')
  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)
  if (process.platform === "win32")
    self.cwdAbs = self.cwdAbs.replace(/\\/g, "/")
  self.nomount = !!options.nomount

  // disable comments and negation in Minimatch.
  // Note that they are not supported in Glob itself anyway.
  options.nonegate = true
  options.nocomment = true
  // always treat \ in patterns as escapes, not path separators
  options.allowWindowsEscape = false

  self.minimatch = new Minimatch(pattern, options)
  self.options = self.minimatch.options
}

function finish (self) {
  var nou = self.nounique
  var all = nou ? [] : Object.create(null)

  for (var i = 0, l = self.matches.length; i < l; i ++) {
    var matches = self.matches[i]
    if (!matches || Object.keys(matches).length === 0) {
      if (self.nonull) {
        // do like the shell, and spit out the literal glob
        var literal = self.minimatch.globSet[i]
        if (nou)
          all.push(literal)
        else
          all[literal] = true
      }
    } else {
      // had matches
      var m = Object.keys(matches)
      if (nou)
        all.push.apply(all, m)
      else
        m.forEach(function (m) {
          all[m] = true
        })
    }
  }

  if (!nou)
    all = Object.keys(all)

  if (!self.nosort)
    all = all.sort(alphasort)

  // at *some* point we statted all of these
  if (self.mark) {
    for (var i = 0; i < all.length; i++) {
      all[i] = self._mark(all[i])
    }
    if (self.nodir) {
      all = all.filter(function (e) {
        var notDir = !(/\/$/.test(e))
        var c = self.cache[e] || self.cache[makeAbs(self, e)]
        if (notDir && c)
          notDir = c !== 'DIR' && !Array.isArray(c)
        return notDir
      })
    }
  }

  if (self.ignore.length)
    all = all.filter(function(m) {
      return !isIgnored(self, m)
    })

  self.found = all
}

function mark (self, p) {
  var abs = makeAbs(self, p)
  var c = self.cache[abs]
  var m = p
  if (c) {
    var isDir = c === 'DIR' || Array.isArray(c)
    var slash = p.slice(-1) === '/'

    if (isDir && !slash)
      m += '/'
    else if (!isDir && slash)
      m = m.slice(0, -1)

    if (m !== p) {
      var mabs = makeAbs(self, m)
      self.statCache[mabs] = self.statCache[abs]
      self.cache[mabs] = self.cache[abs]
    }
  }

  return m
}

// lotta situps...
function makeAbs (self, f) {
  var abs = f
  if (f.charAt(0) === '/') {
    abs = path.join(self.root, f)
  } else if (isAbsolute(f) || f === '') {
    abs = f
  } else if (self.changedCwd) {
    abs = path.resolve(self.cwd, f)
  } else {
    abs = path.resolve(f)
  }

  if (process.platform === 'win32')
    abs = abs.replace(/\\/g, '/')

  return abs
}


// Return true, if pattern ends with globstar '**', for the accompanying parent directory.
// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents
function isIgnored (self, path) {
  if (!self.ignore.length)
    return false

  return self.ignore.some(function(item) {
    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))
  })
}

function childrenIgnored (self, path) {
  if (!self.ignore.length)
    return false

  return self.ignore.some(function(item) {
    return !!(item.gmatcher && item.gmatcher.match(path))
  })
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\glob\glob.js 
------------------------------------------------------ 
// Approach:
//
// 1. Get the minimatch set
// 2. For each pattern in the set, PROCESS(pattern, false)
// 3. Store matches per-set, then uniq them
//
// PROCESS(pattern, inGlobStar)
// Get the first [n] items from pattern that are all strings
// Join these together.  This is PREFIX.
//   If there is no more remaining, then stat(PREFIX) and
//   add to matches if it succeeds.  END.
//
// If inGlobStar and PREFIX is symlink and points to dir
//   set ENTRIES = []
// else readdir(PREFIX) as ENTRIES
//   If fail, END
//
// with ENTRIES
//   If pattern[n] is GLOBSTAR
//     // handle the case where the globstar match is empty
//     // by pruning it out, and testing the resulting pattern
//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)
//     // handle other cases.
//     for ENTRY in ENTRIES (not dotfiles)
//       // attach globstar + tail onto the entry
//       // Mark that this entry is a globstar match
//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)
//
//   else // not globstar
//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)
//       Test ENTRY against pattern[n]
//       If fails, continue
//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])
//
// Caveat:
//   Cache all stats and readdirs results to minimize syscall.  Since all
//   we ever care about is existence and directory-ness, we can just keep
//   `true` for files, and [children,...] for directories, or `false` for
//   things that don't exist.

module.exports = glob

var rp = require('fs.realpath')
var minimatch = require('minimatch')
var Minimatch = minimatch.Minimatch
var inherits = require('inherits')
var EE = require('events').EventEmitter
var path = require('path')
var assert = require('assert')
var isAbsolute = require('path-is-absolute')
var globSync = require('./sync.js')
var common = require('./common.js')
var setopts = common.setopts
var ownProp = common.ownProp
var inflight = require('inflight')
var util = require('util')
var childrenIgnored = common.childrenIgnored
var isIgnored = common.isIgnored

var once = require('once')

function glob (pattern, options, cb) {
  if (typeof options === 'function') cb = options, options = {}
  if (!options) options = {}

  if (options.sync) {
    if (cb)
      throw new TypeError('callback provided to sync glob')
    return globSync(pattern, options)
  }

  return new Glob(pattern, options, cb)
}

glob.sync = globSync
var GlobSync = glob.GlobSync = globSync.GlobSync

// old api surface
glob.glob = glob

function extend (origin, add) {
  if (add === null || typeof add !== 'object') {
    return origin
  }

  var keys = Object.keys(add)
  var i = keys.length
  while (i--) {
    origin[keys[i]] = add[keys[i]]
  }
  return origin
}

glob.hasMagic = function (pattern, options_) {
  var options = extend({}, options_)
  options.noprocess = true

  var g = new Glob(pattern, options)
  var set = g.minimatch.set

  if (!pattern)
    return false

  if (set.length > 1)
    return true

  for (var j = 0; j < set[0].length; j++) {
    if (typeof set[0][j] !== 'string')
      return true
  }

  return false
}

glob.Glob = Glob
inherits(Glob, EE)
function Glob (pattern, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = null
  }

  if (options && options.sync) {
    if (cb)
      throw new TypeError('callback provided to sync glob')
    return new GlobSync(pattern, options)
  }

  if (!(this instanceof Glob))
    return new Glob(pattern, options, cb)

  setopts(this, pattern, options)
  this._didRealPath = false

  // process each pattern in the minimatch set
  var n = this.minimatch.set.length

  // The matches are stored as {<filename>: true,...} so that
  // duplicates are automagically pruned.
  // Later, we do an Object.keys() on these.
  // Keep them as a list so we can fill in when nonull is set.
  this.matches = new Array(n)

  if (typeof cb === 'function') {
    cb = once(cb)
    this.on('error', cb)
    this.on('end', function (matches) {
      cb(null, matches)
    })
  }

  var self = this
  this._processing = 0

  this._emitQueue = []
  this._processQueue = []
  this.paused = false

  if (this.noprocess)
    return this

  if (n === 0)
    return done()

  var sync = true
  for (var i = 0; i < n; i ++) {
    this._process(this.minimatch.set[i], i, false, done)
  }
  sync = false

  function done () {
    --self._processing
    if (self._processing <= 0) {
      if (sync) {
        process.nextTick(function () {
          self._finish()
        })
      } else {
        self._finish()
      }
    }
  }
}

Glob.prototype._finish = function () {
  assert(this instanceof Glob)
  if (this.aborted)
    return

  if (this.realpath && !this._didRealpath)
    return this._realpath()

  common.finish(this)
  this.emit('end', this.found)
}

Glob.prototype._realpath = function () {
  if (this._didRealpath)
    return

  this._didRealpath = true

  var n = this.matches.length
  if (n === 0)
    return this._finish()

  var self = this
  for (var i = 0; i < this.matches.length; i++)
    this._realpathSet(i, next)

  function next () {
    if (--n === 0)
      self._finish()
  }
}

Glob.prototype._realpathSet = function (index, cb) {
  var matchset = this.matches[index]
  if (!matchset)
    return cb()

  var found = Object.keys(matchset)
  var self = this
  var n = found.length

  if (n === 0)
    return cb()

  var set = this.matches[index] = Object.create(null)
  found.forEach(function (p, i) {
    // If there's a problem with the stat, then it means that
    // one or more of the links in the realpath couldn't be
    // resolved.  just return the abs value in that case.
    p = self._makeAbs(p)
    rp.realpath(p, self.realpathCache, function (er, real) {
      if (!er)
        set[real] = true
      else if (er.syscall === 'stat')
        set[p] = true
      else
        self.emit('error', er) // srsly wtf right here

      if (--n === 0) {
        self.matches[index] = set
        cb()
      }
    })
  })
}

Glob.prototype._mark = function (p) {
  return common.mark(this, p)
}

Glob.prototype._makeAbs = function (f) {
  return common.makeAbs(this, f)
}

Glob.prototype.abort = function () {
  this.aborted = true
  this.emit('abort')
}

Glob.prototype.pause = function () {
  if (!this.paused) {
    this.paused = true
    this.emit('pause')
  }
}

Glob.prototype.resume = function () {
  if (this.paused) {
    this.emit('resume')
    this.paused = false
    if (this._emitQueue.length) {
      var eq = this._emitQueue.slice(0)
      this._emitQueue.length = 0
      for (var i = 0; i < eq.length; i ++) {
        var e = eq[i]
        this._emitMatch(e[0], e[1])
      }
    }
    if (this._processQueue.length) {
      var pq = this._processQueue.slice(0)
      this._processQueue.length = 0
      for (var i = 0; i < pq.length; i ++) {
        var p = pq[i]
        this._processing--
        this._process(p[0], p[1], p[2], p[3])
      }
    }
  }
}

Glob.prototype._process = function (pattern, index, inGlobStar, cb) {
  assert(this instanceof Glob)
  assert(typeof cb === 'function')

  if (this.aborted)
    return

  this._processing++
  if (this.paused) {
    this._processQueue.push([pattern, index, inGlobStar, cb])
    return
  }

  //console.error('PROCESS %d', this._processing, pattern)

  // Get the first [n] parts of pattern that are all strings.
  var n = 0
  while (typeof pattern[n] === 'string') {
    n ++
  }
  // now n is the index of the first one that is *not* a string.

  // see if there's anything else
  var prefix
  switch (n) {
    // if not, then this is rather simple
    case pattern.length:
      this._processSimple(pattern.join('/'), index, cb)
      return

    case 0:
      // pattern *starts* with some non-trivial item.
      // going to readdir(cwd), but not include the prefix in matches.
      prefix = null
      break

    default:
      // pattern has some string bits in the front.
      // whatever it starts with, whether that's 'absolute' like /foo/bar,
      // or 'relative' like '../baz'
      prefix = pattern.slice(0, n).join('/')
      break
  }

  var remain = pattern.slice(n)

  // get the list of entries.
  var read
  if (prefix === null)
    read = '.'
  else if (isAbsolute(prefix) ||
      isAbsolute(pattern.map(function (p) {
        return typeof p === 'string' ? p : '[*]'
      }).join('/'))) {
    if (!prefix || !isAbsolute(prefix))
      prefix = '/' + prefix
    read = prefix
  } else
    read = prefix

  var abs = this._makeAbs(read)

  //if ignored, skip _processing
  if (childrenIgnored(this, read))
    return cb()

  var isGlobStar = remain[0] === minimatch.GLOBSTAR
  if (isGlobStar)
    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)
  else
    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)
}

Glob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {
  var self = this
  this._readdir(abs, inGlobStar, function (er, entries) {
    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)
  })
}

Glob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {

  // if the abs isn't a dir, then nothing can match!
  if (!entries)
    return cb()

  // It will only match dot entries if it starts with a dot, or if
  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.
  var pn = remain[0]
  var negate = !!this.minimatch.negate
  var rawGlob = pn._glob
  var dotOk = this.dot || rawGlob.charAt(0) === '.'

  var matchedEntries = []
  for (var i = 0; i < entries.length; i++) {
    var e = entries[i]
    if (e.charAt(0) !== '.' || dotOk) {
      var m
      if (negate && !prefix) {
        m = !e.match(pn)
      } else {
        m = e.match(pn)
      }
      if (m)
        matchedEntries.push(e)
    }
  }

  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)

  var len = matchedEntries.length
  // If there are no matched entries, then nothing matches.
  if (len === 0)
    return cb()

  // if this is the last remaining pattern bit, then no need for
  // an additional stat *unless* the user has specified mark or
  // stat explicitly.  We know they exist, since readdir returned
  // them.

  if (remain.length === 1 && !this.mark && !this.stat) {
    if (!this.matches[index])
      this.matches[index] = Object.create(null)

    for (var i = 0; i < len; i ++) {
      var e = matchedEntries[i]
      if (prefix) {
        if (prefix !== '/')
          e = prefix + '/' + e
        else
          e = prefix + e
      }

      if (e.charAt(0) === '/' && !this.nomount) {
        e = path.join(this.root, e)
      }
      this._emitMatch(index, e)
    }
    // This was the last one, and no stats were needed
    return cb()
  }

  // now test all matched entries as stand-ins for that part
  // of the pattern.
  remain.shift()
  for (var i = 0; i < len; i ++) {
    var e = matchedEntries[i]
    var newPattern
    if (prefix) {
      if (prefix !== '/')
        e = prefix + '/' + e
      else
        e = prefix + e
    }
    this._process([e].concat(remain), index, inGlobStar, cb)
  }
  cb()
}

Glob.prototype._emitMatch = function (index, e) {
  if (this.aborted)
    return

  if (isIgnored(this, e))
    return

  if (this.paused) {
    this._emitQueue.push([index, e])
    return
  }

  var abs = isAbsolute(e) ? e : this._makeAbs(e)

  if (this.mark)
    e = this._mark(e)

  if (this.absolute)
    e = abs

  if (this.matches[index][e])
    return

  if (this.nodir) {
    var c = this.cache[abs]
    if (c === 'DIR' || Array.isArray(c))
      return
  }

  this.matches[index][e] = true

  var st = this.statCache[abs]
  if (st)
    this.emit('stat', e, st)

  this.emit('match', e)
}

Glob.prototype._readdirInGlobStar = function (abs, cb) {
  if (this.aborted)
    return

  // follow all symlinked directories forever
  // just proceed as if this is a non-globstar situation
  if (this.follow)
    return this._readdir(abs, false, cb)

  var lstatkey = 'lstat\0' + abs
  var self = this
  var lstatcb = inflight(lstatkey, lstatcb_)

  if (lstatcb)
    self.fs.lstat(abs, lstatcb)

  function lstatcb_ (er, lstat) {
    if (er && er.code === 'ENOENT')
      return cb()

    var isSym = lstat && lstat.isSymbolicLink()
    self.symlinks[abs] = isSym

    // If it's not a symlink or a dir, then it's definitely a regular file.
    // don't bother doing a readdir in that case.
    if (!isSym && lstat && !lstat.isDirectory()) {
      self.cache[abs] = 'FILE'
      cb()
    } else
      self._readdir(abs, false, cb)
  }
}

Glob.prototype._readdir = function (abs, inGlobStar, cb) {
  if (this.aborted)
    return

  cb = inflight('readdir\0'+abs+'\0'+inGlobStar, cb)
  if (!cb)
    return

  //console.error('RD %j %j', +inGlobStar, abs)
  if (inGlobStar && !ownProp(this.symlinks, abs))
    return this._readdirInGlobStar(abs, cb)

  if (ownProp(this.cache, abs)) {
    var c = this.cache[abs]
    if (!c || c === 'FILE')
      return cb()

    if (Array.isArray(c))
      return cb(null, c)
  }

  var self = this
  self.fs.readdir(abs, readdirCb(this, abs, cb))
}

function readdirCb (self, abs, cb) {
  return function (er, entries) {
    if (er)
      self._readdirError(abs, er, cb)
    else
      self._readdirEntries(abs, entries, cb)
  }
}

Glob.prototype._readdirEntries = function (abs, entries, cb) {
  if (this.aborted)
    return

  // if we haven't asked to stat everything, then just
  // assume that everything in there exists, so we can avoid
  // having to stat it a second time.
  if (!this.mark && !this.stat) {
    for (var i = 0; i < entries.length; i ++) {
      var e = entries[i]
      if (abs === '/')
        e = abs + e
      else
        e = abs + '/' + e
      this.cache[e] = true
    }
  }

  this.cache[abs] = entries
  return cb(null, entries)
}

Glob.prototype._readdirError = function (f, er, cb) {
  if (this.aborted)
    return

  // handle errors, and cache the information
  switch (er.code) {
    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205
    case 'ENOTDIR': // totally normal. means it *does* exist.
      var abs = this._makeAbs(f)
      this.cache[abs] = 'FILE'
      if (abs === this.cwdAbs) {
        var error = new Error(er.code + ' invalid cwd ' + this.cwd)
        error.path = this.cwd
        error.code = er.code
        this.emit('error', error)
        this.abort()
      }
      break

    case 'ENOENT': // not terribly unusual
    case 'ELOOP':
    case 'ENAMETOOLONG':
    case 'UNKNOWN':
      this.cache[this._makeAbs(f)] = false
      break

    default: // some unusual error.  Treat as failure.
      this.cache[this._makeAbs(f)] = false
      if (this.strict) {
        this.emit('error', er)
        // If the error is handled, then we abort
        // if not, we threw out of here
        this.abort()
      }
      if (!this.silent)
        console.error('glob error', er)
      break
  }

  return cb()
}

Glob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {
  var self = this
  this._readdir(abs, inGlobStar, function (er, entries) {
    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)
  })
}


Glob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {
  //console.error('pgs2', prefix, remain[0], entries)

  // no entries means not a dir, so it can never have matches
  // foo.txt/** doesn't match foo.txt
  if (!entries)
    return cb()

  // test without the globstar, and with every child both below
  // and replacing the globstar.
  var remainWithoutGlobStar = remain.slice(1)
  var gspref = prefix ? [ prefix ] : []
  var noGlobStar = gspref.concat(remainWithoutGlobStar)

  // the noGlobStar pattern exits the inGlobStar state
  this._process(noGlobStar, index, false, cb)

  var isSym = this.symlinks[abs]
  var len = entries.length

  // If it's a symlink, and we're in a globstar, then stop
  if (isSym && inGlobStar)
    return cb()

  for (var i = 0; i < len; i++) {
    var e = entries[i]
    if (e.charAt(0) === '.' && !this.dot)
      continue

    // these two cases enter the inGlobStar state
    var instead = gspref.concat(entries[i], remainWithoutGlobStar)
    this._process(instead, index, true, cb)

    var below = gspref.concat(entries[i], remain)
    this._process(below, index, true, cb)
  }

  cb()
}

Glob.prototype._processSimple = function (prefix, index, cb) {
  // XXX review this.  Shouldn't it be doing the mounting etc
  // before doing stat?  kinda weird?
  var self = this
  this._stat(prefix, function (er, exists) {
    self._processSimple2(prefix, index, er, exists, cb)
  })
}
Glob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {

  //console.error('ps2', prefix, exists)

  if (!this.matches[index])
    this.matches[index] = Object.create(null)

  // If it doesn't exist, then just mark the lack of results
  if (!exists)
    return cb()

  if (prefix && isAbsolute(prefix) && !this.nomount) {
    var trail = /[\/\\]$/.test(prefix)
    if (prefix.charAt(0) === '/') {
      prefix = path.join(this.root, prefix)
    } else {
      prefix = path.resolve(this.root, prefix)
      if (trail)
        prefix += '/'
    }
  }

  if (process.platform === 'win32')
    prefix = prefix.replace(/\\/g, '/')

  // Mark this as a match
  this._emitMatch(index, prefix)
  cb()
}

// Returns either 'DIR', 'FILE', or false
Glob.prototype._stat = function (f, cb) {
  var abs = this._makeAbs(f)
  var needDir = f.slice(-1) === '/'

  if (f.length > this.maxLength)
    return cb()

  if (!this.stat && ownProp(this.cache, abs)) {
    var c = this.cache[abs]

    if (Array.isArray(c))
      c = 'DIR'

    // It exists, but maybe not how we need it
    if (!needDir || c === 'DIR')
      return cb(null, c)

    if (needDir && c === 'FILE')
      return cb()

    // otherwise we have to stat, because maybe c=true
    // if we know it exists, but not what it is.
  }

  var exists
  var stat = this.statCache[abs]
  if (stat !== undefined) {
    if (stat === false)
      return cb(null, stat)
    else {
      var type = stat.isDirectory() ? 'DIR' : 'FILE'
      if (needDir && type === 'FILE')
        return cb()
      else
        return cb(null, type, stat)
    }
  }

  var self = this
  var statcb = inflight('stat\0' + abs, lstatcb_)
  if (statcb)
    self.fs.lstat(abs, statcb)

  function lstatcb_ (er, lstat) {
    if (lstat && lstat.isSymbolicLink()) {
      // If it's a symlink, then treat it as the target, unless
      // the target does not exist, then treat it as a file.
      return self.fs.stat(abs, function (er, stat) {
        if (er)
          self._stat2(f, abs, null, lstat, cb)
        else
          self._stat2(f, abs, er, stat, cb)
      })
    } else {
      self._stat2(f, abs, er, lstat, cb)
    }
  }
}

Glob.prototype._stat2 = function (f, abs, er, stat, cb) {
  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {
    this.statCache[abs] = false
    return cb()
  }

  var needDir = f.slice(-1) === '/'
  this.statCache[abs] = stat

  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())
    return cb(null, false, stat)

  var c = true
  if (stat)
    c = stat.isDirectory() ? 'DIR' : 'FILE'
  this.cache[abs] = this.cache[abs] || c

  if (needDir && c === 'FILE')
    return cb()

  return cb(null, c, stat)
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\glob\sync.js 
------------------------------------------------------ 
module.exports = globSync
globSync.GlobSync = GlobSync

var rp = require('fs.realpath')
var minimatch = require('minimatch')
var Minimatch = minimatch.Minimatch
var Glob = require('./glob.js').Glob
var util = require('util')
var path = require('path')
var assert = require('assert')
var isAbsolute = require('path-is-absolute')
var common = require('./common.js')
var setopts = common.setopts
var ownProp = common.ownProp
var childrenIgnored = common.childrenIgnored
var isIgnored = common.isIgnored

function globSync (pattern, options) {
  if (typeof options === 'function' || arguments.length === 3)
    throw new TypeError('callback provided to sync glob\n'+
                        'See: https://github.com/isaacs/node-glob/issues/167')

  return new GlobSync(pattern, options).found
}

function GlobSync (pattern, options) {
  if (!pattern)
    throw new Error('must provide pattern')

  if (typeof options === 'function' || arguments.length === 3)
    throw new TypeError('callback provided to sync glob\n'+
                        'See: https://github.com/isaacs/node-glob/issues/167')

  if (!(this instanceof GlobSync))
    return new GlobSync(pattern, options)

  setopts(this, pattern, options)

  if (this.noprocess)
    return this

  var n = this.minimatch.set.length
  this.matches = new Array(n)
  for (var i = 0; i < n; i ++) {
    this._process(this.minimatch.set[i], i, false)
  }
  this._finish()
}

GlobSync.prototype._finish = function () {
  assert.ok(this instanceof GlobSync)
  if (this.realpath) {
    var self = this
    this.matches.forEach(function (matchset, index) {
      var set = self.matches[index] = Object.create(null)
      for (var p in matchset) {
        try {
          p = self._makeAbs(p)
          var real = rp.realpathSync(p, self.realpathCache)
          set[real] = true
        } catch (er) {
          if (er.syscall === 'stat')
            set[self._makeAbs(p)] = true
          else
            throw er
        }
      }
    })
  }
  common.finish(this)
}


GlobSync.prototype._process = function (pattern, index, inGlobStar) {
  assert.ok(this instanceof GlobSync)

  // Get the first [n] parts of pattern that are all strings.
  var n = 0
  while (typeof pattern[n] === 'string') {
    n ++
  }
  // now n is the index of the first one that is *not* a string.

  // See if there's anything else
  var prefix
  switch (n) {
    // if not, then this is rather simple
    case pattern.length:
      this._processSimple(pattern.join('/'), index)
      return

    case 0:
      // pattern *starts* with some non-trivial item.
      // going to readdir(cwd), but not include the prefix in matches.
      prefix = null
      break

    default:
      // pattern has some string bits in the front.
      // whatever it starts with, whether that's 'absolute' like /foo/bar,
      // or 'relative' like '../baz'
      prefix = pattern.slice(0, n).join('/')
      break
  }

  var remain = pattern.slice(n)

  // get the list of entries.
  var read
  if (prefix === null)
    read = '.'
  else if (isAbsolute(prefix) ||
      isAbsolute(pattern.map(function (p) {
        return typeof p === 'string' ? p : '[*]'
      }).join('/'))) {
    if (!prefix || !isAbsolute(prefix))
      prefix = '/' + prefix
    read = prefix
  } else
    read = prefix

  var abs = this._makeAbs(read)

  //if ignored, skip processing
  if (childrenIgnored(this, read))
    return

  var isGlobStar = remain[0] === minimatch.GLOBSTAR
  if (isGlobStar)
    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)
  else
    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)
}


GlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {
  var entries = this._readdir(abs, inGlobStar)

  // if the abs isn't a dir, then nothing can match!
  if (!entries)
    return

  // It will only match dot entries if it starts with a dot, or if
  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.
  var pn = remain[0]
  var negate = !!this.minimatch.negate
  var rawGlob = pn._glob
  var dotOk = this.dot || rawGlob.charAt(0) === '.'

  var matchedEntries = []
  for (var i = 0; i < entries.length; i++) {
    var e = entries[i]
    if (e.charAt(0) !== '.' || dotOk) {
      var m
      if (negate && !prefix) {
        m = !e.match(pn)
      } else {
        m = e.match(pn)
      }
      if (m)
        matchedEntries.push(e)
    }
  }

  var len = matchedEntries.length
  // If there are no matched entries, then nothing matches.
  if (len === 0)
    return

  // if this is the last remaining pattern bit, then no need for
  // an additional stat *unless* the user has specified mark or
  // stat explicitly.  We know they exist, since readdir returned
  // them.

  if (remain.length === 1 && !this.mark && !this.stat) {
    if (!this.matches[index])
      this.matches[index] = Object.create(null)

    for (var i = 0; i < len; i ++) {
      var e = matchedEntries[i]
      if (prefix) {
        if (prefix.slice(-1) !== '/')
          e = prefix + '/' + e
        else
          e = prefix + e
      }

      if (e.charAt(0) === '/' && !this.nomount) {
        e = path.join(this.root, e)
      }
      this._emitMatch(index, e)
    }
    // This was the last one, and no stats were needed
    return
  }

  // now test all matched entries as stand-ins for that part
  // of the pattern.
  remain.shift()
  for (var i = 0; i < len; i ++) {
    var e = matchedEntries[i]
    var newPattern
    if (prefix)
      newPattern = [prefix, e]
    else
      newPattern = [e]
    this._process(newPattern.concat(remain), index, inGlobStar)
  }
}


GlobSync.prototype._emitMatch = function (index, e) {
  if (isIgnored(this, e))
    return

  var abs = this._makeAbs(e)

  if (this.mark)
    e = this._mark(e)

  if (this.absolute) {
    e = abs
  }

  if (this.matches[index][e])
    return

  if (this.nodir) {
    var c = this.cache[abs]
    if (c === 'DIR' || Array.isArray(c))
      return
  }

  this.matches[index][e] = true

  if (this.stat)
    this._stat(e)
}


GlobSync.prototype._readdirInGlobStar = function (abs) {
  // follow all symlinked directories forever
  // just proceed as if this is a non-globstar situation
  if (this.follow)
    return this._readdir(abs, false)

  var entries
  var lstat
  var stat
  try {
    lstat = this.fs.lstatSync(abs)
  } catch (er) {
    if (er.code === 'ENOENT') {
      // lstat failed, doesn't exist
      return null
    }
  }

  var isSym = lstat && lstat.isSymbolicLink()
  this.symlinks[abs] = isSym

  // If it's not a symlink or a dir, then it's definitely a regular file.
  // don't bother doing a readdir in that case.
  if (!isSym && lstat && !lstat.isDirectory())
    this.cache[abs] = 'FILE'
  else
    entries = this._readdir(abs, false)

  return entries
}

GlobSync.prototype._readdir = function (abs, inGlobStar) {
  var entries

  if (inGlobStar && !ownProp(this.symlinks, abs))
    return this._readdirInGlobStar(abs)

  if (ownProp(this.cache, abs)) {
    var c = this.cache[abs]
    if (!c || c === 'FILE')
      return null

    if (Array.isArray(c))
      return c
  }

  try {
    return this._readdirEntries(abs, this.fs.readdirSync(abs))
  } catch (er) {
    this._readdirError(abs, er)
    return null
  }
}

GlobSync.prototype._readdirEntries = function (abs, entries) {
  // if we haven't asked to stat everything, then just
  // assume that everything in there exists, so we can avoid
  // having to stat it a second time.
  if (!this.mark && !this.stat) {
    for (var i = 0; i < entries.length; i ++) {
      var e = entries[i]
      if (abs === '/')
        e = abs + e
      else
        e = abs + '/' + e
      this.cache[e] = true
    }
  }

  this.cache[abs] = entries

  // mark and cache dir-ness
  return entries
}

GlobSync.prototype._readdirError = function (f, er) {
  // handle errors, and cache the information
  switch (er.code) {
    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205
    case 'ENOTDIR': // totally normal. means it *does* exist.
      var abs = this._makeAbs(f)
      this.cache[abs] = 'FILE'
      if (abs === this.cwdAbs) {
        var error = new Error(er.code + ' invalid cwd ' + this.cwd)
        error.path = this.cwd
        error.code = er.code
        throw error
      }
      break

    case 'ENOENT': // not terribly unusual
    case 'ELOOP':
    case 'ENAMETOOLONG':
    case 'UNKNOWN':
      this.cache[this._makeAbs(f)] = false
      break

    default: // some unusual error.  Treat as failure.
      this.cache[this._makeAbs(f)] = false
      if (this.strict)
        throw er
      if (!this.silent)
        console.error('glob error', er)
      break
  }
}

GlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {

  var entries = this._readdir(abs, inGlobStar)

  // no entries means not a dir, so it can never have matches
  // foo.txt/** doesn't match foo.txt
  if (!entries)
    return

  // test without the globstar, and with every child both below
  // and replacing the globstar.
  var remainWithoutGlobStar = remain.slice(1)
  var gspref = prefix ? [ prefix ] : []
  var noGlobStar = gspref.concat(remainWithoutGlobStar)

  // the noGlobStar pattern exits the inGlobStar state
  this._process(noGlobStar, index, false)

  var len = entries.length
  var isSym = this.symlinks[abs]

  // If it's a symlink, and we're in a globstar, then stop
  if (isSym && inGlobStar)
    return

  for (var i = 0; i < len; i++) {
    var e = entries[i]
    if (e.charAt(0) === '.' && !this.dot)
      continue

    // these two cases enter the inGlobStar state
    var instead = gspref.concat(entries[i], remainWithoutGlobStar)
    this._process(instead, index, true)

    var below = gspref.concat(entries[i], remain)
    this._process(below, index, true)
  }
}

GlobSync.prototype._processSimple = function (prefix, index) {
  // XXX review this.  Shouldn't it be doing the mounting etc
  // before doing stat?  kinda weird?
  var exists = this._stat(prefix)

  if (!this.matches[index])
    this.matches[index] = Object.create(null)

  // If it doesn't exist, then just mark the lack of results
  if (!exists)
    return

  if (prefix && isAbsolute(prefix) && !this.nomount) {
    var trail = /[\/\\]$/.test(prefix)
    if (prefix.charAt(0) === '/') {
      prefix = path.join(this.root, prefix)
    } else {
      prefix = path.resolve(this.root, prefix)
      if (trail)
        prefix += '/'
    }
  }

  if (process.platform === 'win32')
    prefix = prefix.replace(/\\/g, '/')

  // Mark this as a match
  this._emitMatch(index, prefix)
}

// Returns either 'DIR', 'FILE', or false
GlobSync.prototype._stat = function (f) {
  var abs = this._makeAbs(f)
  var needDir = f.slice(-1) === '/'

  if (f.length > this.maxLength)
    return false

  if (!this.stat && ownProp(this.cache, abs)) {
    var c = this.cache[abs]

    if (Array.isArray(c))
      c = 'DIR'

    // It exists, but maybe not how we need it
    if (!needDir || c === 'DIR')
      return c

    if (needDir && c === 'FILE')
      return false

    // otherwise we have to stat, because maybe c=true
    // if we know it exists, but not what it is.
  }

  var exists
  var stat = this.statCache[abs]
  if (!stat) {
    var lstat
    try {
      lstat = this.fs.lstatSync(abs)
    } catch (er) {
      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {
        this.statCache[abs] = false
        return false
      }
    }

    if (lstat && lstat.isSymbolicLink()) {
      try {
        stat = this.fs.statSync(abs)
      } catch (er) {
        stat = lstat
      }
    } else {
      stat = lstat
    }
  }

  this.statCache[abs] = stat

  var c = true
  if (stat)
    c = stat.isDirectory() ? 'DIR' : 'FILE'

  this.cache[abs] = this.cache[abs] || c

  if (needDir && c === 'FILE')
    return false

  return c
}

GlobSync.prototype._mark = function (p) {
  return common.mark(this, p)
}

GlobSync.prototype._makeAbs = function (f) {
  return common.makeAbs(this, f)
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\glob\package.json 
------------------------------------------------------ 
{
  "author": "Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)",
  "name": "glob",
  "description": "a little globber",
  "version": "7.2.3",
  "publishConfig": {
    "tag": "v7-legacy"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/node-glob.git"
  },
  "main": "glob.js",
  "files": [
    "glob.js",
    "sync.js",
    "common.js"
  ],
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "fs.realpath": "^1.0.0",
    "inflight": "^1.0.4",
    "inherits": "2",
    "minimatch": "^3.1.1",
    "once": "^1.3.0",
    "path-is-absolute": "^1.0.0"
  },
  "devDependencies": {
    "memfs": "^3.2.0",
    "mkdirp": "0",
    "rimraf": "^2.2.8",
    "tap": "^15.0.6",
    "tick": "0.0.6"
  },
  "tap": {
    "before": "test/00-setup.js",
    "after": "test/zz-cleanup.js",
    "jobs": 1
  },
  "scripts": {
    "prepublish": "npm run benchclean",
    "profclean": "rm -f v8.log profile.txt",
    "test": "tap",
    "test-regen": "npm run profclean && TEST_REGEN=1 node test/00-setup.js",
    "bench": "bash benchmark.sh",
    "prof": "bash prof.sh && cat profile.txt",
    "benchclean": "node benchclean.js"
  },
  "license": "ISC",
  "funding": {
    "url": "https://github.com/sponsors/isaacs"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gopd\gOPD.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./gOPD')} */
module.exports = Object.getOwnPropertyDescriptor;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gopd\index.js 
------------------------------------------------------ 
'use strict';

/** @type {import('.')} */
var $gOPD = require('./gOPD');

if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gopd\package.json 
------------------------------------------------------ 
{
	"name": "gopd",
	"version": "1.2.0",
	"description": "`Object.getOwnPropertyDescriptor`, but accounts for IE's broken implementation.",
	"main": "index.js",
	"exports": {
		".": "./index.js",
		"./gOPD": "./gOPD.js",
		"./package.json": "./package.json"
	},
	"sideEffects": false,
	"scripts": {
		"prepack": "npmignore --auto --commentLines=autogenerated",
		"prepublishOnly": "safe-publish-latest",
		"prepublish": "not-in-publish || npm run prepublishOnly",
		"prelint": "tsc -p . && attw -P",
		"lint": "eslint --ext=js,mjs .",
		"postlint": "evalmd README.md",
		"pretest": "npm run lint",
		"tests-only": "tape 'test/**/*.js'",
		"test": "npm run tests-only",
		"posttest": "npx npm@'>=10.2' audit --production",
		"version": "auto-changelog && git add CHANGELOG.md",
		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ljharb/gopd.git"
	},
	"keywords": [
		"ecmascript",
		"javascript",
		"getownpropertydescriptor",
		"property",
		"descriptor"
	],
	"author": "Jordan Harband <ljharb@gmail.com>",
	"funding": {
		"url": "https://github.com/sponsors/ljharb"
	},
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/ljharb/gopd/issues"
	},
	"homepage": "https://github.com/ljharb/gopd#readme",
	"devDependencies": {
		"@arethetypeswrong/cli": "^0.17.0",
		"@ljharb/eslint-config": "^21.1.1",
		"@ljharb/tsconfig": "^0.2.0",
		"@types/tape": "^5.6.5",
		"auto-changelog": "^2.5.0",
		"encoding": "^0.1.13",
		"eslint": "=8.8.0",
		"evalmd": "^0.0.19",
		"in-publish": "^2.0.1",
		"npmignore": "^0.3.1",
		"safe-publish-latest": "^2.0.0",
		"tape": "^5.9.0",
		"typescript": "next"
	},
	"auto-changelog": {
		"output": "CHANGELOG.md",
		"template": "keepachangelog",
		"unreleased": false,
		"commitLimit": false,
		"backfillLimit": false,
		"hideCredit": true
	},
	"publishConfig": {
		"ignore": [
			".github/workflows"
		]
	},
	"engines": {
		"node": ">= 0.4"
	}
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gopd\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gopd\test\index.js 
------------------------------------------------------ 
'use strict';

var test = require('tape');
var gOPD = require('../');

test('gOPD', function (t) {
	t.test('supported', { skip: !gOPD }, function (st) {
		st.equal(typeof gOPD, 'function', 'is a function');

		var obj = { x: 1 };
		st.ok('x' in obj, 'property exists');

		// @ts-expect-error TS can't figure out narrowing from `skip`
		var desc = gOPD(obj, 'x');
		st.deepEqual(
			desc,
			{
				configurable: true,
				enumerable: true,
				value: 1,
				writable: true
			},
			'descriptor is as expected'
		);

		st.end();
	});

	t.test('not supported', { skip: !!gOPD }, function (st) {
		st.notOk(gOPD, 'is falsy');

		st.end();
	});

	t.end();
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\gopd\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\graceful-fs\clone.js 
------------------------------------------------------ 
'use strict'

module.exports = clone

var getPrototypeOf = Object.getPrototypeOf || function (obj) {
  return obj.__proto__
}

function clone (obj) {
  if (obj === null || typeof obj !== 'object')
    return obj

  if (obj instanceof Object)
    var copy = { __proto__: getPrototypeOf(obj) }
  else
    var copy = Object.create(null)

  Object.getOwnPropertyNames(obj).forEach(function (key) {
    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))
  })

  return copy
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\graceful-fs\graceful-fs.js 
------------------------------------------------------ 
var fs = require('fs')
var polyfills = require('./polyfills.js')
var legacy = require('./legacy-streams.js')
var clone = require('./clone.js')

var util = require('util')

/* istanbul ignore next - node 0.x polyfill */
var gracefulQueue
var previousSymbol

/* istanbul ignore else - node 0.x polyfill */
if (typeof Symbol === 'function' && typeof Symbol.for === 'function') {
  gracefulQueue = Symbol.for('graceful-fs.queue')
  // This is used in testing by future versions
  previousSymbol = Symbol.for('graceful-fs.previous')
} else {
  gracefulQueue = '___graceful-fs.queue'
  previousSymbol = '___graceful-fs.previous'
}

function noop () {}

function publishQueue(context, queue) {
  Object.defineProperty(context, gracefulQueue, {
    get: function() {
      return queue
    }
  })
}

var debug = noop
if (util.debuglog)
  debug = util.debuglog('gfs4')
else if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || ''))
  debug = function() {
    var m = util.format.apply(util, arguments)
    m = 'GFS4: ' + m.split(/\n/).join('\nGFS4: ')
    console.error(m)
  }

// Once time initialization
if (!fs[gracefulQueue]) {
  // This queue can be shared by multiple loaded instances
  var queue = global[gracefulQueue] || []
  publishQueue(fs, queue)

  // Patch fs.close/closeSync to shared queue version, because we need
  // to retry() whenever a close happens *anywhere* in the program.
  // This is essential when multiple graceful-fs instances are
  // in play at the same time.
  fs.close = (function (fs$close) {
    function close (fd, cb) {
      return fs$close.call(fs, fd, function (err) {
        // This function uses the graceful-fs shared queue
        if (!err) {
          resetQueue()
        }

        if (typeof cb === 'function')
          cb.apply(this, arguments)
      })
    }

    Object.defineProperty(close, previousSymbol, {
      value: fs$close
    })
    return close
  })(fs.close)

  fs.closeSync = (function (fs$closeSync) {
    function closeSync (fd) {
      // This function uses the graceful-fs shared queue
      fs$closeSync.apply(fs, arguments)
      resetQueue()
    }

    Object.defineProperty(closeSync, previousSymbol, {
      value: fs$closeSync
    })
    return closeSync
  })(fs.closeSync)

  if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || '')) {
    process.on('exit', function() {
      debug(fs[gracefulQueue])
      require('assert').equal(fs[gracefulQueue].length, 0)
    })
  }
}

if (!global[gracefulQueue]) {
  publishQueue(global, fs[gracefulQueue]);
}

module.exports = patch(clone(fs))
if (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {
    module.exports = patch(fs)
    fs.__patched = true;
}

function patch (fs) {
  // Everything that references the open() function needs to be in here
  polyfills(fs)
  fs.gracefulify = patch

  fs.createReadStream = createReadStream
  fs.createWriteStream = createWriteStream
  var fs$readFile = fs.readFile
  fs.readFile = readFile
  function readFile (path, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$readFile(path, options, cb)

    function go$readFile (path, options, cb, startTime) {
      return fs$readFile(path, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$readFile, [path, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$writeFile = fs.writeFile
  fs.writeFile = writeFile
  function writeFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$writeFile(path, data, options, cb)

    function go$writeFile (path, data, options, cb, startTime) {
      return fs$writeFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$writeFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$appendFile = fs.appendFile
  if (fs$appendFile)
    fs.appendFile = appendFile
  function appendFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$appendFile(path, data, options, cb)

    function go$appendFile (path, data, options, cb, startTime) {
      return fs$appendFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$appendFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$copyFile = fs.copyFile
  if (fs$copyFile)
    fs.copyFile = copyFile
  function copyFile (src, dest, flags, cb) {
    if (typeof flags === 'function') {
      cb = flags
      flags = 0
    }
    return go$copyFile(src, dest, flags, cb)

    function go$copyFile (src, dest, flags, cb, startTime) {
      return fs$copyFile(src, dest, flags, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$copyFile, [src, dest, flags, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$readdir = fs.readdir
  fs.readdir = readdir
  var noReaddirOptionVersions = /^v[0-5]\./
  function readdir (path, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    var go$readdir = noReaddirOptionVersions.test(process.version)
      ? function go$readdir (path, options, cb, startTime) {
        return fs$readdir(path, fs$readdirCallback(
          path, options, cb, startTime
        ))
      }
      : function go$readdir (path, options, cb, startTime) {
        return fs$readdir(path, options, fs$readdirCallback(
          path, options, cb, startTime
        ))
      }

    return go$readdir(path, options, cb)

    function fs$readdirCallback (path, options, cb, startTime) {
      return function (err, files) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([
            go$readdir,
            [path, options, cb],
            err,
            startTime || Date.now(),
            Date.now()
          ])
        else {
          if (files && files.sort)
            files.sort()

          if (typeof cb === 'function')
            cb.call(this, err, files)
        }
      }
    }
  }

  if (process.version.substr(0, 4) === 'v0.8') {
    var legStreams = legacy(fs)
    ReadStream = legStreams.ReadStream
    WriteStream = legStreams.WriteStream
  }

  var fs$ReadStream = fs.ReadStream
  if (fs$ReadStream) {
    ReadStream.prototype = Object.create(fs$ReadStream.prototype)
    ReadStream.prototype.open = ReadStream$open
  }

  var fs$WriteStream = fs.WriteStream
  if (fs$WriteStream) {
    WriteStream.prototype = Object.create(fs$WriteStream.prototype)
    WriteStream.prototype.open = WriteStream$open
  }

  Object.defineProperty(fs, 'ReadStream', {
    get: function () {
      return ReadStream
    },
    set: function (val) {
      ReadStream = val
    },
    enumerable: true,
    configurable: true
  })
  Object.defineProperty(fs, 'WriteStream', {
    get: function () {
      return WriteStream
    },
    set: function (val) {
      WriteStream = val
    },
    enumerable: true,
    configurable: true
  })

  // legacy names
  var FileReadStream = ReadStream
  Object.defineProperty(fs, 'FileReadStream', {
    get: function () {
      return FileReadStream
    },
    set: function (val) {
      FileReadStream = val
    },
    enumerable: true,
    configurable: true
  })
  var FileWriteStream = WriteStream
  Object.defineProperty(fs, 'FileWriteStream', {
    get: function () {
      return FileWriteStream
    },
    set: function (val) {
      FileWriteStream = val
    },
    enumerable: true,
    configurable: true
  })

  function ReadStream (path, options) {
    if (this instanceof ReadStream)
      return fs$ReadStream.apply(this, arguments), this
    else
      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)
  }

  function ReadStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        if (that.autoClose)
          that.destroy()

        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
        that.read()
      }
    })
  }

  function WriteStream (path, options) {
    if (this instanceof WriteStream)
      return fs$WriteStream.apply(this, arguments), this
    else
      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)
  }

  function WriteStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        that.destroy()
        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
      }
    })
  }

  function createReadStream (path, options) {
    return new fs.ReadStream(path, options)
  }

  function createWriteStream (path, options) {
    return new fs.WriteStream(path, options)
  }

  var fs$open = fs.open
  fs.open = open
  function open (path, flags, mode, cb) {
    if (typeof mode === 'function')
      cb = mode, mode = null

    return go$open(path, flags, mode, cb)

    function go$open (path, flags, mode, cb, startTime) {
      return fs$open(path, flags, mode, function (err, fd) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$open, [path, flags, mode, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  return fs
}

function enqueue (elem) {
  debug('ENQUEUE', elem[0].name, elem[1])
  fs[gracefulQueue].push(elem)
  retry()
}

// keep track of the timeout between retry() calls
var retryTimer

// reset the startTime and lastTime to now
// this resets the start of the 60 second overall timeout as well as the
// delay between attempts so that we'll retry these jobs sooner
function resetQueue () {
  var now = Date.now()
  for (var i = 0; i < fs[gracefulQueue].length; ++i) {
    // entries that are only a length of 2 are from an older version, don't
    // bother modifying those since they'll be retried anyway.
    if (fs[gracefulQueue][i].length > 2) {
      fs[gracefulQueue][i][3] = now // startTime
      fs[gracefulQueue][i][4] = now // lastTime
    }
  }
  // call retry to make sure we're actively processing the queue
  retry()
}

function retry () {
  // clear the timer and remove it to help prevent unintended concurrency
  clearTimeout(retryTimer)
  retryTimer = undefined

  if (fs[gracefulQueue].length === 0)
    return

  var elem = fs[gracefulQueue].shift()
  var fn = elem[0]
  var args = elem[1]
  // these items may be unset if they were added by an older graceful-fs
  var err = elem[2]
  var startTime = elem[3]
  var lastTime = elem[4]

  // if we don't have a startTime we have no way of knowing if we've waited
  // long enough, so go ahead and retry this item now
  if (startTime === undefined) {
    debug('RETRY', fn.name, args)
    fn.apply(null, args)
  } else if (Date.now() - startTime >= 60000) {
    // it's been more than 60 seconds total, bail now
    debug('TIMEOUT', fn.name, args)
    var cb = args.pop()
    if (typeof cb === 'function')
      cb.call(null, err)
  } else {
    // the amount of time between the last attempt and right now
    var sinceAttempt = Date.now() - lastTime
    // the amount of time between when we first tried, and when we last tried
    // rounded up to at least 1
    var sinceStart = Math.max(lastTime - startTime, 1)
    // backoff. wait longer than the total time we've been retrying, but only
    // up to a maximum of 100ms
    var desiredDelay = Math.min(sinceStart * 1.2, 100)
    // it's been long enough since the last retry, do it again
    if (sinceAttempt >= desiredDelay) {
      debug('RETRY', fn.name, args)
      fn.apply(null, args.concat([startTime]))
    } else {
      // if we can't do this job yet, push it to the end of the queue
      // and let the next iteration check again
      fs[gracefulQueue].push(elem)
    }
  }

  // schedule our next run if one isn't already scheduled
  if (retryTimer === undefined) {
    retryTimer = setTimeout(retry, 0)
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\graceful-fs\legacy-streams.js 
------------------------------------------------------ 
var Stream = require('stream').Stream

module.exports = legacy

function legacy (fs) {
  return {
    ReadStream: ReadStream,
    WriteStream: WriteStream
  }

  function ReadStream (path, options) {
    if (!(this instanceof ReadStream)) return new ReadStream(path, options);

    Stream.call(this);

    var self = this;

    this.path = path;
    this.fd = null;
    this.readable = true;
    this.paused = false;

    this.flags = 'r';
    this.mode = 438; /*=0666*/
    this.bufferSize = 64 * 1024;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.encoding) this.setEncoding(this.encoding);

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.end === undefined) {
        this.end = Infinity;
      } else if ('number' !== typeof this.end) {
        throw TypeError('end must be a Number');
      }

      if (this.start > this.end) {
        throw new Error('start must be <= end');
      }

      this.pos = this.start;
    }

    if (this.fd !== null) {
      process.nextTick(function() {
        self._read();
      });
      return;
    }

    fs.open(this.path, this.flags, this.mode, function (err, fd) {
      if (err) {
        self.emit('error', err);
        self.readable = false;
        return;
      }

      self.fd = fd;
      self.emit('open', fd);
      self._read();
    })
  }

  function WriteStream (path, options) {
    if (!(this instanceof WriteStream)) return new WriteStream(path, options);

    Stream.call(this);

    this.path = path;
    this.fd = null;
    this.writable = true;

    this.flags = 'w';
    this.encoding = 'binary';
    this.mode = 438; /*=0666*/
    this.bytesWritten = 0;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.start < 0) {
        throw new Error('start must be >= zero');
      }

      this.pos = this.start;
    }

    this.busy = false;
    this._queue = [];

    if (this.fd === null) {
      this._open = fs.open;
      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);
      this.flush();
    }
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\graceful-fs\polyfills.js 
------------------------------------------------------ 
var constants = require('constants')

var origCwd = process.cwd
var cwd = null

var platform = process.env.GRACEFUL_FS_PLATFORM || process.platform

process.cwd = function() {
  if (!cwd)
    cwd = origCwd.call(process)
  return cwd
}
try {
  process.cwd()
} catch (er) {}

// This check is needed until node.js 12 is required
if (typeof process.chdir === 'function') {
  var chdir = process.chdir
  process.chdir = function (d) {
    cwd = null
    chdir.call(process, d)
  }
  if (Object.setPrototypeOf) Object.setPrototypeOf(process.chdir, chdir)
}

module.exports = patch

function patch (fs) {
  // (re-)implement some things that are known busted or missing.

  // lchmod, broken prior to 0.6.2
  // back-port the fix here.
  if (constants.hasOwnProperty('O_SYMLINK') &&
      process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)) {
    patchLchmod(fs)
  }

  // lutimes implementation, or no-op
  if (!fs.lutimes) {
    patchLutimes(fs)
  }

  // https://github.com/isaacs/node-graceful-fs/issues/4
  // Chown should not fail on einval or eperm if non-root.
  // It should not fail on enosys ever, as this just indicates
  // that a fs doesn't support the intended operation.

  fs.chown = chownFix(fs.chown)
  fs.fchown = chownFix(fs.fchown)
  fs.lchown = chownFix(fs.lchown)

  fs.chmod = chmodFix(fs.chmod)
  fs.fchmod = chmodFix(fs.fchmod)
  fs.lchmod = chmodFix(fs.lchmod)

  fs.chownSync = chownFixSync(fs.chownSync)
  fs.fchownSync = chownFixSync(fs.fchownSync)
  fs.lchownSync = chownFixSync(fs.lchownSync)

  fs.chmodSync = chmodFixSync(fs.chmodSync)
  fs.fchmodSync = chmodFixSync(fs.fchmodSync)
  fs.lchmodSync = chmodFixSync(fs.lchmodSync)

  fs.stat = statFix(fs.stat)
  fs.fstat = statFix(fs.fstat)
  fs.lstat = statFix(fs.lstat)

  fs.statSync = statFixSync(fs.statSync)
  fs.fstatSync = statFixSync(fs.fstatSync)
  fs.lstatSync = statFixSync(fs.lstatSync)

  // if lchmod/lchown do not exist, then make them no-ops
  if (fs.chmod && !fs.lchmod) {
    fs.lchmod = function (path, mode, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchmodSync = function () {}
  }
  if (fs.chown && !fs.lchown) {
    fs.lchown = function (path, uid, gid, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchownSync = function () {}
  }

  // on Windows, A/V software can lock the directory, causing this
  // to fail with an EACCES or EPERM if the directory contains newly
  // created files.  Try again on failure, for up to 60 seconds.

  // Set the timeout this long because some Windows Anti-Virus, such as Parity
  // bit9, may lock files for up to a minute, causing npm package install
  // failures. Also, take care to yield the scheduler. Windows scheduling gives
  // CPU to a busy looping process, which can cause the program causing the lock
  // contention to be starved of CPU by node, so the contention doesn't resolve.
  if (platform === "win32") {
    fs.rename = typeof fs.rename !== 'function' ? fs.rename
    : (function (fs$rename) {
      function rename (from, to, cb) {
        var start = Date.now()
        var backoff = 0;
        fs$rename(from, to, function CB (er) {
          if (er
              && (er.code === "EACCES" || er.code === "EPERM" || er.code === "EBUSY")
              && Date.now() - start < 60000) {
            setTimeout(function() {
              fs.stat(to, function (stater, st) {
                if (stater && stater.code === "ENOENT")
                  fs$rename(from, to, CB);
                else
                  cb(er)
              })
            }, backoff)
            if (backoff < 100)
              backoff += 10;
            return;
          }
          if (cb) cb(er)
        })
      }
      if (Object.setPrototypeOf) Object.setPrototypeOf(rename, fs$rename)
      return rename
    })(fs.rename)
  }

  // if read() returns EAGAIN, then just try it again.
  fs.read = typeof fs.read !== 'function' ? fs.read
  : (function (fs$read) {
    function read (fd, buffer, offset, length, position, callback_) {
      var callback
      if (callback_ && typeof callback_ === 'function') {
        var eagCounter = 0
        callback = function (er, _, __) {
          if (er && er.code === 'EAGAIN' && eagCounter < 10) {
            eagCounter ++
            return fs$read.call(fs, fd, buffer, offset, length, position, callback)
          }
          callback_.apply(this, arguments)
        }
      }
      return fs$read.call(fs, fd, buffer, offset, length, position, callback)
    }

    // This ensures `util.promisify` works as it does for native `fs.read`.
    if (Object.setPrototypeOf) Object.setPrototypeOf(read, fs$read)
    return read
  })(fs.read)

  fs.readSync = typeof fs.readSync !== 'function' ? fs.readSync
  : (function (fs$readSync) { return function (fd, buffer, offset, length, position) {
    var eagCounter = 0
    while (true) {
      try {
        return fs$readSync.call(fs, fd, buffer, offset, length, position)
      } catch (er) {
        if (er.code === 'EAGAIN' && eagCounter < 10) {
          eagCounter ++
          continue
        }
        throw er
      }
    }
  }})(fs.readSync)

  function patchLchmod (fs) {
    fs.lchmod = function (path, mode, callback) {
      fs.open( path
             , constants.O_WRONLY | constants.O_SYMLINK
             , mode
             , function (err, fd) {
        if (err) {
          if (callback) callback(err)
          return
        }
        // prefer to return the chmod error, if one occurs,
        // but still try to close, and report closing errors if they occur.
        fs.fchmod(fd, mode, function (err) {
          fs.close(fd, function(err2) {
            if (callback) callback(err || err2)
          })
        })
      })
    }

    fs.lchmodSync = function (path, mode) {
      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)

      // prefer to return the chmod error, if one occurs,
      // but still try to close, and report closing errors if they occur.
      var threw = true
      var ret
      try {
        ret = fs.fchmodSync(fd, mode)
        threw = false
      } finally {
        if (threw) {
          try {
            fs.closeSync(fd)
          } catch (er) {}
        } else {
          fs.closeSync(fd)
        }
      }
      return ret
    }
  }

  function patchLutimes (fs) {
    if (constants.hasOwnProperty("O_SYMLINK") && fs.futimes) {
      fs.lutimes = function (path, at, mt, cb) {
        fs.open(path, constants.O_SYMLINK, function (er, fd) {
          if (er) {
            if (cb) cb(er)
            return
          }
          fs.futimes(fd, at, mt, function (er) {
            fs.close(fd, function (er2) {
              if (cb) cb(er || er2)
            })
          })
        })
      }

      fs.lutimesSync = function (path, at, mt) {
        var fd = fs.openSync(path, constants.O_SYMLINK)
        var ret
        var threw = true
        try {
          ret = fs.futimesSync(fd, at, mt)
          threw = false
        } finally {
          if (threw) {
            try {
              fs.closeSync(fd)
            } catch (er) {}
          } else {
            fs.closeSync(fd)
          }
        }
        return ret
      }

    } else if (fs.futimes) {
      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }
      fs.lutimesSync = function () {}
    }
  }

  function chmodFix (orig) {
    if (!orig) return orig
    return function (target, mode, cb) {
      return orig.call(fs, target, mode, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chmodFixSync (orig) {
    if (!orig) return orig
    return function (target, mode) {
      try {
        return orig.call(fs, target, mode)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }


  function chownFix (orig) {
    if (!orig) return orig
    return function (target, uid, gid, cb) {
      return orig.call(fs, target, uid, gid, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chownFixSync (orig) {
    if (!orig) return orig
    return function (target, uid, gid) {
      try {
        return orig.call(fs, target, uid, gid)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }

  function statFix (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target, options, cb) {
      if (typeof options === 'function') {
        cb = options
        options = null
      }
      function callback (er, stats) {
        if (stats) {
          if (stats.uid < 0) stats.uid += 0x100000000
          if (stats.gid < 0) stats.gid += 0x100000000
        }
        if (cb) cb.apply(this, arguments)
      }
      return options ? orig.call(fs, target, options, callback)
        : orig.call(fs, target, callback)
    }
  }

  function statFixSync (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target, options) {
      var stats = options ? orig.call(fs, target, options)
        : orig.call(fs, target)
      if (stats) {
        if (stats.uid < 0) stats.uid += 0x100000000
        if (stats.gid < 0) stats.gid += 0x100000000
      }
      return stats;
    }
  }

  // ENOSYS means that the fs doesn't support the op. Just ignore
  // that, because it doesn't matter.
  //
  // if there's no getuid, or if getuid() is something other
  // than 0, and the error is EINVAL or EPERM, then just ignore
  // it.
  //
  // This specific case is a silent failure in cp, install, tar,
  // and most other unix tools that manage permissions.
  //
  // When running as root, or if other types of errors are
  // encountered, then it's strict.
  function chownErOk (er) {
    if (!er)
      return true

    if (er.code === "ENOSYS")
      return true

    var nonroot = !process.getuid || process.getuid() !== 0
    if (nonroot) {
      if (er.code === "EINVAL" || er.code === "EPERM")
        return true
    }

    return false
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\graceful-fs\package.json 
------------------------------------------------------ 
{
  "name": "graceful-fs",
  "description": "A drop-in replacement for fs, making various improvements.",
  "version": "4.2.11",
  "repository": {
    "type": "git",
    "url": "https://github.com/isaacs/node-graceful-fs"
  },
  "main": "graceful-fs.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "preversion": "npm test",
    "postversion": "npm publish",
    "postpublish": "git push origin --follow-tags",
    "test": "nyc --silent node test.js | tap -c -",
    "posttest": "nyc report"
  },
  "keywords": [
    "fs",
    "module",
    "reading",
    "retry",
    "retries",
    "queue",
    "error",
    "errors",
    "handling",
    "EMFILE",
    "EAGAIN",
    "EINVAL",
    "EPERM",
    "EACCESS"
  ],
  "license": "ISC",
  "devDependencies": {
    "import-fresh": "^2.0.0",
    "mkdirp": "^0.5.0",
    "rimraf": "^2.2.8",
    "tap": "^16.3.4"
  },
  "files": [
    "fs.js",
    "graceful-fs.js",
    "legacy-streams.js",
    "polyfills.js",
    "clone.js"
  ],
  "tap": {
    "reporter": "classic"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-symbols\index.js 
------------------------------------------------------ 
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

/** @type {import('.')} */
module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-symbols\shams.js 
------------------------------------------------------ 
'use strict';

/** @type {import('./shams')} */
/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	/** @type {{ [k in symbol]?: unknown }} */
	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		// eslint-disable-next-line no-extra-parens
		var descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-symbols\package.json 
------------------------------------------------------ 
{
	"name": "has-symbols",
	"version": "1.1.0",
	"description": "Determine if the JS environment has Symbol support. Supports spec, or shams.",
	"main": "index.js",
	"scripts": {
		"prepack": "npmignore --auto --commentLines=autogenerated",
		"prepublishOnly": "safe-publish-latest",
		"prepublish": "not-in-publish || npm run prepublishOnly",
		"pretest": "npm run --silent lint",
		"test": "npm run tests-only",
		"posttest": "npx npm@'>=10.2' audit --production",
		"tests-only": "npm run test:stock && npm run test:shams",
		"test:stock": "nyc node test",
		"test:staging": "nyc node --harmony --es-staging test",
		"test:shams": "npm run --silent test:shams:getownpropertysymbols && npm run --silent test:shams:corejs",
		"test:shams:corejs": "nyc node test/shams/core-js.js",
		"test:shams:getownpropertysymbols": "nyc node test/shams/get-own-property-symbols.js",
		"lint": "eslint --ext=js,mjs .",
		"postlint": "tsc -p . && attw -P",
		"version": "auto-changelog && git add CHANGELOG.md",
		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
	},
	"repository": {
		"type": "git",
		"url": "git://github.com/inspect-js/has-symbols.git"
	},
	"keywords": [
		"Symbol",
		"symbols",
		"typeof",
		"sham",
		"polyfill",
		"native",
		"core-js",
		"ES6"
	],
	"author": {
		"name": "Jordan Harband",
		"email": "ljharb@gmail.com",
		"url": "http://ljharb.codes"
	},
	"contributors": [
		{
			"name": "Jordan Harband",
			"email": "ljharb@gmail.com",
			"url": "http://ljharb.codes"
		}
	],
	"funding": {
		"url": "https://github.com/sponsors/ljharb"
	},
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/ljharb/has-symbols/issues"
	},
	"homepage": "https://github.com/ljharb/has-symbols#readme",
	"devDependencies": {
		"@arethetypeswrong/cli": "^0.17.0",
		"@ljharb/eslint-config": "^21.1.1",
		"@ljharb/tsconfig": "^0.2.0",
		"@types/core-js": "^2.5.8",
		"@types/tape": "^5.6.5",
		"auto-changelog": "^2.5.0",
		"core-js": "^2.6.12",
		"encoding": "^0.1.13",
		"eslint": "=8.8.0",
		"get-own-property-symbols": "^0.9.5",
		"in-publish": "^2.0.1",
		"npmignore": "^0.3.1",
		"nyc": "^10.3.2",
		"safe-publish-latest": "^2.0.0",
		"tape": "^5.9.0",
		"typescript": "next"
	},
	"testling": {
		"files": "test/index.js",
		"browsers": [
			"iexplore/6.0..latest",
			"firefox/3.0..6.0",
			"firefox/15.0..latest",
			"firefox/nightly",
			"chrome/4.0..10.0",
			"chrome/20.0..latest",
			"chrome/canary",
			"opera/10.0..latest",
			"opera/next",
			"safari/4.0..latest",
			"ipad/6.0..latest",
			"iphone/6.0..latest",
			"android-browser/4.2"
		]
	},
	"engines": {
		"node": ">= 0.4"
	},
	"auto-changelog": {
		"output": "CHANGELOG.md",
		"template": "keepachangelog",
		"unreleased": false,
		"commitLimit": false,
		"backfillLimit": false,
		"hideCredit": true
	},
	"publishConfig": {
		"ignore": [
			".github/workflows",
			"types"
		]
	}
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-symbols\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-symbols\test\index.js 
------------------------------------------------------ 
'use strict';

var test = require('tape');
var hasSymbols = require('../');
var runSymbolTests = require('./tests');

test('interface', function (t) {
	t.equal(typeof hasSymbols, 'function', 'is a function');
	t.equal(typeof hasSymbols(), 'boolean', 'returns a boolean');
	t.end();
});

test('Symbols are supported', { skip: !hasSymbols() }, function (t) {
	runSymbolTests(t);
	t.end();
});

test('Symbols are not supported', { skip: hasSymbols() }, function (t) {
	t.equal(typeof Symbol, 'undefined', 'global Symbol is undefined');
	t.equal(typeof Object.getOwnPropertySymbols, 'undefined', 'Object.getOwnPropertySymbols does not exist');
	t.end();
});
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-symbols\test\tests.js 
------------------------------------------------------ 
'use strict';

/** @type {(t: import('tape').Test) => false | void} */
// eslint-disable-next-line consistent-return
module.exports = function runSymbolTests(t) {
	t.equal(typeof Symbol, 'function', 'global Symbol is a function');

	if (typeof Symbol !== 'function') { return false; }

	t.notEqual(Symbol(), Symbol(), 'two symbols are not equal');

	/*
	t.equal(
		Symbol.prototype.toString.call(Symbol('foo')),
		Symbol.prototype.toString.call(Symbol('foo')),
		'two symbols with the same description stringify the same'
	);
	*/

	/*
	var foo = Symbol('foo');

	t.notEqual(
		String(foo),
		String(Symbol('bar')),
		'two symbols with different descriptions do not stringify the same'
	);
	*/

	t.equal(typeof Symbol.prototype.toString, 'function', 'Symbol#toString is a function');
	// t.equal(String(foo), Symbol.prototype.toString.call(foo), 'Symbol#toString equals String of the same symbol');

	t.equal(typeof Object.getOwnPropertySymbols, 'function', 'Object.getOwnPropertySymbols is a function');

	/** @type {{ [k in symbol]?: unknown }} */
	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	t.notEqual(typeof sym, 'string', 'Symbol is not a string');
	t.equal(Object.prototype.toString.call(sym), '[object Symbol]', 'symbol primitive Object#toStrings properly');
	t.equal(Object.prototype.toString.call(symObj), '[object Symbol]', 'symbol primitive Object#toStrings properly');

	var symVal = 42;
	obj[sym] = symVal;
	// eslint-disable-next-line no-restricted-syntax, no-unused-vars
	for (var _ in obj) { t.fail('symbol property key was found in for..in of object'); }

	t.deepEqual(Object.keys(obj), [], 'no enumerable own keys on symbol-valued object');
	t.deepEqual(Object.getOwnPropertyNames(obj), [], 'no own names on symbol-valued object');
	t.deepEqual(Object.getOwnPropertySymbols(obj), [sym], 'one own symbol on symbol-valued object');
	t.equal(Object.prototype.propertyIsEnumerable.call(obj, sym), true, 'symbol is enumerable');
	t.deepEqual(Object.getOwnPropertyDescriptor(obj, sym), {
		configurable: true,
		enumerable: true,
		value: 42,
		writable: true
	}, 'property descriptor is correct');
};
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-symbols\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-symbols\test\shams\core-js.js 
------------------------------------------------------ 
'use strict';

var test = require('tape');

if (typeof Symbol === 'function' && typeof Symbol() === 'symbol') {
	test('has native Symbol support', function (t) {
		t.equal(typeof Symbol, 'function');
		t.equal(typeof Symbol(), 'symbol');
		t.end();
	});
	// @ts-expect-error TS is stupid and doesn't know about top level return
	return;
}

var hasSymbols = require('../../shams');

test('polyfilled Symbols', function (t) {
	/* eslint-disable global-require */
	t.equal(hasSymbols(), false, 'hasSymbols is false before polyfilling');
	require('core-js/fn/symbol');
	require('core-js/fn/symbol/to-string-tag');

	require('../tests')(t);

	var hasSymbolsAfter = hasSymbols();
	t.equal(hasSymbolsAfter, true, 'hasSymbols is true after polyfilling');
	/* eslint-enable global-require */
	t.end();
});
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-symbols\test\shams\get-own-property-symbols.js 
------------------------------------------------------ 
'use strict';

var test = require('tape');

if (typeof Symbol === 'function' && typeof Symbol() === 'symbol') {
	test('has native Symbol support', function (t) {
		t.equal(typeof Symbol, 'function');
		t.equal(typeof Symbol(), 'symbol');
		t.end();
	});
	// @ts-expect-error TS is stupid and doesn't know about top level return
	return;
}

var hasSymbols = require('../../shams');

test('polyfilled Symbols', function (t) {
	/* eslint-disable global-require */
	t.equal(hasSymbols(), false, 'hasSymbols is false before polyfilling');

	require('get-own-property-symbols');

	require('../tests')(t);

	var hasSymbolsAfter = hasSymbols();
	t.equal(hasSymbolsAfter, true, 'hasSymbols is true after polyfilling');
	/* eslint-enable global-require */
	t.end();
});
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-symbols\test\shams\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-unicode\index.js 
------------------------------------------------------ 
"use strict"
var os = require("os")

var hasUnicode = module.exports = function () {
  // Recent Win32 platforms (>XP) CAN support unicode in the console but
  // don't have to, and in non-english locales often use traditional local
  // code pages. There's no way, short of windows system calls or execing
  // the chcp command line program to figure this out. As such, we default
  // this to false and encourage your users to override it via config if
  // appropriate.
  if (os.type() == "Windows_NT") { return false }

  var isUTF8 = /UTF-?8$/i
  var ctype = process.env.LC_ALL || process.env.LC_CTYPE || process.env.LANG
  return isUTF8.test(ctype)
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\has-unicode\package.json 
------------------------------------------------------ 
{
  "name": "has-unicode",
  "version": "2.0.1",
  "description": "Try to guess if your terminal supports unicode",
  "main": "index.js",
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/iarna/has-unicode"
  },
  "keywords": [
    "unicode",
    "terminal"
  ],
  "files": [
    "index.js"
  ],
  "author": "Rebecca Turner <me@re-becca.org>",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/iarna/has-unicode/issues"
  },
  "homepage": "https://github.com/iarna/has-unicode",
  "devDependencies": {
    "require-inject": "^1.3.0",
    "tap": "^2.3.1"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\hasown\index.js 
------------------------------------------------------ 
'use strict';

var call = Function.prototype.call;
var $hasOwn = Object.prototype.hasOwnProperty;
var bind = require('function-bind');

/** @type {import('.')} */
module.exports = bind.call(call, $hasOwn);
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\hasown\package.json 
------------------------------------------------------ 
{
	"name": "hasown",
	"version": "2.0.2",
	"description": "A robust, ES3 compatible, \"has own property\" predicate.",
	"main": "index.js",
	"exports": {
		".": "./index.js",
		"./package.json": "./package.json"
	},
	"types": "index.d.ts",
	"sideEffects": false,
	"scripts": {
		"prepack": "npmignore --auto --commentLines=autogenerated",
		"prepublish": "not-in-publish || npm run prepublishOnly",
		"prepublishOnly": "safe-publish-latest",
		"prelint": "evalmd README.md",
		"lint": "eslint --ext=js,mjs .",
		"postlint": "npm run tsc",
		"pretest": "npm run lint",
		"tsc": "tsc -p .",
		"posttsc": "attw -P",
		"tests-only": "nyc tape 'test/**/*.js'",
		"test": "npm run tests-only",
		"posttest": "aud --production",
		"version": "auto-changelog && git add CHANGELOG.md",
		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/inspect-js/hasOwn.git"
	},
	"keywords": [
		"has",
		"hasOwnProperty",
		"hasOwn",
		"has-own",
		"own",
		"has",
		"property",
		"in",
		"javascript",
		"ecmascript"
	],
	"author": "Jordan Harband <ljharb@gmail.com>",
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/inspect-js/hasOwn/issues"
	},
	"homepage": "https://github.com/inspect-js/hasOwn#readme",
	"dependencies": {
		"function-bind": "^1.1.2"
	},
	"devDependencies": {
		"@arethetypeswrong/cli": "^0.15.1",
		"@ljharb/eslint-config": "^21.1.0",
		"@ljharb/tsconfig": "^0.2.0",
		"@types/function-bind": "^1.1.10",
		"@types/mock-property": "^1.0.2",
		"@types/tape": "^5.6.4",
		"aud": "^2.0.4",
		"auto-changelog": "^2.4.0",
		"eslint": "=8.8.0",
		"evalmd": "^0.0.19",
		"in-publish": "^2.0.1",
		"mock-property": "^1.0.3",
		"npmignore": "^0.3.1",
		"nyc": "^10.3.2",
		"safe-publish-latest": "^2.0.0",
		"tape": "^5.7.5",
		"typescript": "next"
	},
	"engines": {
		"node": ">= 0.4"
	},
	"testling": {
		"files": "test/index.js"
	},
	"auto-changelog": {
		"output": "CHANGELOG.md",
		"template": "keepachangelog",
		"unreleased": false,
		"commitLimit": false,
		"backfillLimit": false,
		"hideCredit": true
	},
	"publishConfig": {
		"ignore": [
			".github/workflows",
			"test"
		]
	}
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\hasown\.github\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\http-cache-semantics\index.js 
------------------------------------------------------ 
'use strict';

/**
 * @typedef {Object} HttpRequest
 * @property {Record<string, string>} headers - Request headers
 * @property {string} [method] - HTTP method
 * @property {string} [url] - Request URL
 */

/**
 * @typedef {Object} HttpResponse
 * @property {Record<string, string>} headers - Response headers
 * @property {number} [status] - HTTP status code
 */

/**
 * Set of default cacheable status codes per RFC 7231 section 6.1.
 * @type {Set<number>}
 */
const statusCodeCacheableByDefault = new Set([
    200,
    203,
    204,
    206,
    300,
    301,
    308,
    404,
    405,
    410,
    414,
    501,
]);

/**
 * Set of HTTP status codes that the cache implementation understands.
 * Note: This implementation does not understand partial responses (206).
 * @type {Set<number>}
 */
const understoodStatuses = new Set([
    200,
    203,
    204,
    300,
    301,
    302,
    303,
    307,
    308,
    404,
    405,
    410,
    414,
    501,
]);

/**
 * Set of HTTP error status codes.
 * @type {Set<number>}
 */
const errorStatusCodes = new Set([
    500,
    502,
    503,
    504,
]);

/**
 * Object representing hop-by-hop headers that should be removed.
 * @type {Record<string, boolean>}
 */
const hopByHopHeaders = {
    date: true, // included, because we add Age update Date
    connection: true,
    'keep-alive': true,
    'proxy-authenticate': true,
    'proxy-authorization': true,
    te: true,
    trailer: true,
    'transfer-encoding': true,
    upgrade: true,
};

/**
 * Headers that are excluded from revalidation update.
 * @type {Record<string, boolean>}
 */
const excludedFromRevalidationUpdate = {
    // Since the old body is reused, it doesn't make sense to change properties of the body
    'content-length': true,
    'content-encoding': true,
    'transfer-encoding': true,
    'content-range': true,
};

/**
 * Converts a string to a number or returns zero if the conversion fails.
 * @param {string} s - The string to convert.
 * @returns {number} The parsed number or 0.
 */
function toNumberOrZero(s) {
    const n = parseInt(s, 10);
    return isFinite(n) ? n : 0;
}

/**
 * Determines if the given response is an error response.
 * Implements RFC 5861 behavior.
 * @param {HttpResponse|undefined} response - The HTTP response object.
 * @returns {boolean} true if the response is an error or undefined, false otherwise.
 */
function isErrorResponse(response) {
    // consider undefined response as faulty
    if (!response) {
        return true;
    }
    return errorStatusCodes.has(response.status);
}

/**
 * Parses a Cache-Control header string into an object.
 * @param {string} [header] - The Cache-Control header value.
 * @returns {Record<string, string|boolean>} An object representing Cache-Control directives.
 */
function parseCacheControl(header) {
    /** @type {Record<string, string|boolean>} */
    const cc = {};
    if (!header) return cc;

    // TODO: When there is more than one value present for a given directive (e.g., two Expires header fields, multiple Cache-Control: max-age directives),
    // the directive's value is considered invalid. Caches are encouraged to consider responses that have invalid freshness information to be stale
    const parts = header.trim().split(/,/);
    for (const part of parts) {
        const [k, v] = part.split(/=/, 2);
        cc[k.trim()] = v === undefined ? true : v.trim().replace(/^"|"$/g, '');
    }

    return cc;
}

/**
 * Formats a Cache-Control directives object into a header string.
 * @param {Record<string, string|boolean>} cc - The Cache-Control directives.
 * @returns {string|undefined} A formatted Cache-Control header string or undefined if empty.
 */
function formatCacheControl(cc) {
    let parts = [];
    for (const k in cc) {
        const v = cc[k];
        parts.push(v === true ? k : k + '=' + v);
    }
    if (!parts.length) {
        return undefined;
    }
    return parts.join(', ');
}

module.exports = class CachePolicy {
    /**
     * Creates a new CachePolicy instance.
     * @param {HttpRequest} req - Incoming client request.
     * @param {HttpResponse} res - Received server response.
     * @param {Object} [options={}] - Configuration options.
     * @param {boolean} [options.shared=true] - Is the cache shared (a public proxy)? `false` for personal browser caches.
     * @param {number} [options.cacheHeuristic=0.1] - Fallback heuristic (age fraction) for cache duration.
     * @param {number} [options.immutableMinTimeToLive=86400000] - Minimum TTL for immutable responses in milliseconds.
     * @param {boolean} [options.ignoreCargoCult=false] - Detect nonsense cache headers, and override them.
     * @param {any} [options._fromObject] - Internal parameter for deserialization. Do not use.
     */
    constructor(
        req,
        res,
        {
            shared,
            cacheHeuristic,
            immutableMinTimeToLive,
            ignoreCargoCult,
            _fromObject,
        } = {}
    ) {
        if (_fromObject) {
            this._fromObject(_fromObject);
            return;
        }

        if (!res || !res.headers) {
            throw Error('Response headers missing');
        }
        this._assertRequestHasHeaders(req);

        /** @type {number} Timestamp when the response was received */
        this._responseTime = this.now();
        /** @type {boolean} Indicates if the cache is shared */
        this._isShared = shared !== false;
        /** @type {boolean} Indicates if legacy cargo cult directives should be ignored */
        this._ignoreCargoCult = !!ignoreCargoCult;
        /** @type {number} Heuristic cache fraction */
        this._cacheHeuristic =
            undefined !== cacheHeuristic ? cacheHeuristic : 0.1; // 10% matches IE
        /** @type {number} Minimum TTL for immutable responses in ms */
        this._immutableMinTtl =
            undefined !== immutableMinTimeToLive
                ? immutableMinTimeToLive
                : 24 * 3600 * 1000;

        /** @type {number} HTTP status code */
        this._status = 'status' in res ? res.status : 200;
        /** @type {Record<string, string>} Response headers */
        this._resHeaders = res.headers;
        /** @type {Record<string, string|boolean>} Parsed Cache-Control directives from response */
        this._rescc = parseCacheControl(res.headers['cache-control']);
        /** @type {string} HTTP method (e.g., GET, POST) */
        this._method = 'method' in req ? req.method : 'GET';
        /** @type {string} Request URL */
        this._url = req.url;
        /** @type {string} Host header from the request */
        this._host = req.headers.host;
        /** @type {boolean} Whether the request does not include an Authorization header */
        this._noAuthorization = !req.headers.authorization;
        /** @type {Record<string, string>|null} Request headers used for Vary matching */
        this._reqHeaders = res.headers.vary ? req.headers : null; // Don't keep all request headers if they won't be used
        /** @type {Record<string, string|boolean>} Parsed Cache-Control directives from request */
        this._reqcc = parseCacheControl(req.headers['cache-control']);

        // Assume that if someone uses legacy, non-standard uncecessary options they don't understand caching,
        // so there's no point stricly adhering to the blindly copy&pasted directives.
        if (
            this._ignoreCargoCult &&
            'pre-check' in this._rescc &&
            'post-check' in this._rescc
        ) {
            delete this._rescc['pre-check'];
            delete this._rescc['post-check'];
            delete this._rescc['no-cache'];
            delete this._rescc['no-store'];
            delete this._rescc['must-revalidate'];
            this._resHeaders = Object.assign({}, this._resHeaders, {
                'cache-control': formatCacheControl(this._rescc),
            });
            delete this._resHeaders.expires;
            delete this._resHeaders.pragma;
        }

        // When the Cache-Control header field is not present in a request, caches MUST consider the no-cache request pragma-directive
        // as having the same effect as if "Cache-Control: no-cache" were present (see Section 5.2.1).
        if (
            res.headers['cache-control'] == null &&
            /no-cache/.test(res.headers.pragma)
        ) {
            this._rescc['no-cache'] = true;
        }
    }

    /**
     * You can monkey-patch it for testing.
     * @returns {number} Current time in milliseconds.
     */
    now() {
        return Date.now();
    }

    /**
     * Determines if the response is storable in a cache.
     * @returns {boolean} `false` if can never be cached.
     */
    storable() {
        // The "no-store" request directive indicates that a cache MUST NOT store any part of either this request or any response to it.
        return !!(
            !this._reqcc['no-store'] &&
            // A cache MUST NOT store a response to any request, unless:
            // The request method is understood by the cache and defined as being cacheable, and
            ('GET' === this._method ||
                'HEAD' === this._method ||
                ('POST' === this._method && this._hasExplicitExpiration())) &&
            // the response status code is understood by the cache, and
            understoodStatuses.has(this._status) &&
            // the "no-store" cache directive does not appear in request or response header fields, and
            !this._rescc['no-store'] &&
            // the "private" response directive does not appear in the response, if the cache is shared, and
            (!this._isShared || !this._rescc.private) &&
            // the Authorization header field does not appear in the request, if the cache is shared,
            (!this._isShared ||
                this._noAuthorization ||
                this._allowsStoringAuthenticated()) &&
            // the response either:
            // contains an Expires header field, or
            (this._resHeaders.expires ||
                // contains a max-age response directive, or
                // contains a s-maxage response directive and the cache is shared, or
                // contains a public response directive.
                this._rescc['max-age'] ||
                (this._isShared && this._rescc['s-maxage']) ||
                this._rescc.public ||
                // has a status code that is defined as cacheable by default
                statusCodeCacheableByDefault.has(this._status))
        );
    }

    /**
     * @returns {boolean} true if expiration is explicitly defined.
     */
    _hasExplicitExpiration() {
        // 4.2.1 Calculating Freshness Lifetime
        return !!(
            (this._isShared && this._rescc['s-maxage']) ||
            this._rescc['max-age'] ||
            this._resHeaders.expires
        );
    }

    /**
     * @param {HttpRequest} req - a request
     * @throws {Error} if the headers are missing.
     */
    _assertRequestHasHeaders(req) {
        if (!req || !req.headers) {
            throw Error('Request headers missing');
        }
    }

    /**
     * Checks if the request matches the cache and can be satisfied from the cache immediately,
     * without having to make a request to the server.
     *
     * This doesn't support `stale-while-revalidate`. See `evaluateRequest()` for a more complete solution.
     *
     * @param {HttpRequest} req - The new incoming HTTP request.
     * @returns {boolean} `true`` if the cached response used to construct this cache policy satisfies the request without revalidation.
     */
    satisfiesWithoutRevalidation(req) {
        const result = this.evaluateRequest(req);
        return !result.revalidation;
    }

    /**
     * @param {{headers: Record<string, string>, synchronous: boolean}|undefined} revalidation - Revalidation information, if any.
     * @returns {{response: {headers: Record<string, string>}, revalidation: {headers: Record<string, string>, synchronous: boolean}|undefined}} An object with a cached response headers and revalidation info.
     */
    _evaluateRequestHitResult(revalidation) {
        return {
            response: {
                headers: this.responseHeaders(),
            },
            revalidation,
        };
    }

    /**
     * @param {HttpRequest} request - new incoming
     * @param {boolean} synchronous - whether revalidation must be synchronous (not s-w-r).
     * @returns {{headers: Record<string, string>, synchronous: boolean}} An object with revalidation headers and a synchronous flag.
     */
    _evaluateRequestRevalidation(request, synchronous) {
        return {
            synchronous,
            headers: this.revalidationHeaders(request),
        };
    }

    /**
     * @param {HttpRequest} request - new incoming
     * @returns {{response: undefined, revalidation: {headers: Record<string, string>, synchronous: boolean}}} An object indicating no cached response and revalidation details.
     */
    _evaluateRequestMissResult(request) {
        return {
            response: undefined,
            revalidation: this._evaluateRequestRevalidation(request, true),
        };
    }

    /**
     * Checks if the given request matches this cache entry, and how the cache can be used to satisfy it. Returns an object with:
     *
     * ```
     * {
     *     // If defined, you must send a request to the server.
     *     revalidation: {
     *         headers: {}, // HTTP headers to use when sending the revalidation response
     *         // If true, you MUST wait for a response from the server before using the cache
     *         // If false, this is stale-while-revalidate. The cache is stale, but you can use it while you update it asynchronously.
     *         synchronous: bool,
     *     },
     *     // If defined, you can use this cached response.
     *     response: {
     *         headers: {}, // Updated cached HTTP headers you must use when responding to the client
     *     },
     * }
     * ```
     * @param {HttpRequest} req - new incoming HTTP request
     * @returns {{response: {headers: Record<string, string>}|undefined, revalidation: {headers: Record<string, string>, synchronous: boolean}|undefined}} An object containing keys:
     *   - revalidation: { headers: Record<string, string>, synchronous: boolean } Set if you should send this to the origin server
     *   - response: { headers: Record<string, string> } Set if you can respond to the client with these cached headers
     */
    evaluateRequest(req) {
        this._assertRequestHasHeaders(req);

        // In all circumstances, a cache MUST NOT ignore the must-revalidate directive
        if (this._rescc['must-revalidate']) {
            return this._evaluateRequestMissResult(req);
        }

        if (!this._requestMatches(req, false)) {
            return this._evaluateRequestMissResult(req);
        }

        // When presented with a request, a cache MUST NOT reuse a stored response, unless:
        // the presented request does not contain the no-cache pragma (Section 5.4), nor the no-cache cache directive,
        // unless the stored response is successfully validated (Section 4.3), and
        const requestCC = parseCacheControl(req.headers['cache-control']);

        if (requestCC['no-cache'] || /no-cache/.test(req.headers.pragma)) {
            return this._evaluateRequestMissResult(req);
        }

        if (requestCC['max-age'] && this.age() > toNumberOrZero(requestCC['max-age'])) {
            return this._evaluateRequestMissResult(req);
        }

        if (requestCC['min-fresh'] && this.maxAge() - this.age() < toNumberOrZero(requestCC['min-fresh'])) {
            return this._evaluateRequestMissResult(req);
        }

        // the stored response is either:
        // fresh, or allowed to be served stale
        if (this.stale()) {
            // If a value is present, then the client is willing to accept a response that has
            // exceeded its freshness lifetime by no more than the specified number of seconds
            const allowsStaleWithoutRevalidation = 'max-stale' in requestCC &&
                (true === requestCC['max-stale'] || requestCC['max-stale'] > this.age() - this.maxAge());

            if (allowsStaleWithoutRevalidation) {
                return this._evaluateRequestHitResult(undefined);
            }

            if (this.useStaleWhileRevalidate()) {
                return this._evaluateRequestHitResult(this._evaluateRequestRevalidation(req, false));
            }

            return this._evaluateRequestMissResult(req);
        }

        return this._evaluateRequestHitResult(undefined);
    }

    /**
     * @param {HttpRequest} req - check if this is for the same cache entry
     * @param {boolean} allowHeadMethod - allow a HEAD method to match.
     * @returns {boolean} `true` if the request matches.
     */
    _requestMatches(req, allowHeadMethod) {
        // The presented effective request URI and that of the stored response match, and
        return !!(
            (!this._url || this._url === req.url) &&
            this._host === req.headers.host &&
            // the request method associated with the stored response allows it to be used for the presented request, and
            (!req.method ||
                this._method === req.method ||
                (allowHeadMethod && 'HEAD' === req.method)) &&
            // selecting header fields nominated by the stored response (if any) match those presented, and
            this._varyMatches(req)
        );
    }

    /**
     * Determines whether storing authenticated responses is allowed.
     * @returns {boolean} `true` if allowed.
     */
    _allowsStoringAuthenticated() {
        // following Cache-Control response directives (Section 5.2.2) have such an effect: must-revalidate, public, and s-maxage.
        return !!(
            this._rescc['must-revalidate'] ||
            this._rescc.public ||
            this._rescc['s-maxage']
        );
    }

    /**
     * Checks whether the Vary header in the response matches the new request.
     * @param {HttpRequest} req - incoming HTTP request
     * @returns {boolean} `true` if the vary headers match.
     */
    _varyMatches(req) {
        if (!this._resHeaders.vary) {
            return true;
        }

        // A Vary header field-value of "*" always fails to match
        if (this._resHeaders.vary === '*') {
            return false;
        }

        const fields = this._resHeaders.vary
            .trim()
            .toLowerCase()
            .split(/\s*,\s*/);
        for (const name of fields) {
            if (req.headers[name] !== this._reqHeaders[name]) return false;
        }
        return true;
    }

    /**
     * Creates a copy of the given headers without any hop-by-hop headers.
     * @param {Record<string, string>} inHeaders - old headers from the cached response
     * @returns {Record<string, string>} A new headers object without hop-by-hop headers.
     */
    _copyWithoutHopByHopHeaders(inHeaders) {
        /** @type {Record<string, string>} */
        const headers = {};
        for (const name in inHeaders) {
            if (hopByHopHeaders[name]) continue;
            headers[name] = inHeaders[name];
        }
        // 9.1.  Connection
        if (inHeaders.connection) {
            const tokens = inHeaders.connection.trim().split(/\s*,\s*/);
            for (const name of tokens) {
                delete headers[name];
            }
        }
        if (headers.warning) {
            const warnings = headers.warning.split(/,/).filter(warning => {
                return !/^\s*1[0-9][0-9]/.test(warning);
            });
            if (!warnings.length) {
                delete headers.warning;
            } else {
                headers.warning = warnings.join(',').trim();
            }
        }
        return headers;
    }

    /**
     * Returns the response headers adjusted for serving the cached response.
     * Removes hop-by-hop headers and updates the Age and Date headers.
     * @returns {Record<string, string>} The adjusted response headers.
     */
    responseHeaders() {
        const headers = this._copyWithoutHopByHopHeaders(this._resHeaders);
        const age = this.age();

        // A cache SHOULD generate 113 warning if it heuristically chose a freshness
        // lifetime greater than 24 hours and the response's age is greater than 24 hours.
        if (
            age > 3600 * 24 &&
            !this._hasExplicitExpiration() &&
            this.maxAge() > 3600 * 24
        ) {
            headers.warning =
                (headers.warning ? `${headers.warning}, ` : '') +
                '113 - "rfc7234 5.5.4"';
        }
        headers.age = `${Math.round(age)}`;
        headers.date = new Date(this.now()).toUTCString();
        return headers;
    }

    /**
     * Returns the Date header value from the response or the current time if invalid.
     * @returns {number} Timestamp (in milliseconds) representing the Date header or response time.
     */
    date() {
        const serverDate = Date.parse(this._resHeaders.date);
        if (isFinite(serverDate)) {
            return serverDate;
        }
        return this._responseTime;
    }

    /**
     * Value of the Age header, in seconds, updated for the current time.
     * May be fractional.
     * @returns {number} The age in seconds.
     */
    age() {
        let age = this._ageValue();

        const residentTime = (this.now() - this._responseTime) / 1000;
        return age + residentTime;
    }

    /**
     * @returns {number} The Age header value as a number.
     */
    _ageValue() {
        return toNumberOrZero(this._resHeaders.age);
    }

    /**
     * Possibly outdated value of applicable max-age (or heuristic equivalent) in seconds.
     * This counts since response's `Date`.
     *
     * For an up-to-date value, see `timeToLive()`.
     *
     * Returns the maximum age (freshness lifetime) of the response in seconds.
     * @returns {number} The max-age value in seconds.
     */
    maxAge() {
        if (!this.storable() || this._rescc['no-cache']) {
            return 0;
        }

        // Shared responses with cookies are cacheable according to the RFC, but IMHO it'd be unwise to do so by default
        // so this implementation requires explicit opt-in via public header
        if (
            this._isShared &&
            (this._resHeaders['set-cookie'] &&
                !this._rescc.public &&
                !this._rescc.immutable)
        ) {
            return 0;
        }

        if (this._resHeaders.vary === '*') {
            return 0;
        }

        if (this._isShared) {
            if (this._rescc['proxy-revalidate']) {
                return 0;
            }
            // if a response includes the s-maxage directive, a shared cache recipient MUST ignore the Expires field.
            if (this._rescc['s-maxage']) {
                return toNumberOrZero(this._rescc['s-maxage']);
            }
        }

        // If a response includes a Cache-Control field with the max-age directive, a recipient MUST ignore the Expires field.
        if (this._rescc['max-age']) {
            return toNumberOrZero(this._rescc['max-age']);
        }

        const defaultMinTtl = this._rescc.immutable ? this._immutableMinTtl : 0;

        const serverDate = this.date();
        if (this._resHeaders.expires) {
            const expires = Date.parse(this._resHeaders.expires);
            // A cache recipient MUST interpret invalid date formats, especially the value "0", as representing a time in the past (i.e., "already expired").
            if (Number.isNaN(expires) || expires < serverDate) {
                return 0;
            }
            return Math.max(defaultMinTtl, (expires - serverDate) / 1000);
        }

        if (this._resHeaders['last-modified']) {
            const lastModified = Date.parse(this._resHeaders['last-modified']);
            if (isFinite(lastModified) && serverDate > lastModified) {
                return Math.max(
                    defaultMinTtl,
                    ((serverDate - lastModified) / 1000) * this._cacheHeuristic
                );
            }
        }

        return defaultMinTtl;
    }

    /**
     * Remaining time this cache entry may be useful for, in *milliseconds*.
     * You can use this as an expiration time for your cache storage.
     *
     * Prefer this method over `maxAge()`, because it includes other factors like `age` and `stale-while-revalidate`.
     * @returns {number} Time-to-live in milliseconds.
     */
    timeToLive() {
        const age = this.maxAge() - this.age();
        const staleIfErrorAge = age + toNumberOrZero(this._rescc['stale-if-error']);
        const staleWhileRevalidateAge = age + toNumberOrZero(this._rescc['stale-while-revalidate']);
        return Math.round(Math.max(0, age, staleIfErrorAge, staleWhileRevalidateAge) * 1000);
    }

    /**
     * If true, this cache entry is past its expiration date.
     * Note that stale cache may be useful sometimes, see `evaluateRequest()`.
     * @returns {boolean} `false` doesn't mean it's fresh nor usable
     */
    stale() {
        return this.maxAge() <= this.age();
    }

    /**
     * @returns {boolean} `true` if `stale-if-error` condition allows use of a stale response.
     */
    _useStaleIfError() {
        return this.maxAge() + toNumberOrZero(this._rescc['stale-if-error']) > this.age();
    }

    /** See `evaluateRequest()` for a more complete solution
     * @returns {boolean} `true` if `stale-while-revalidate` is currently allowed.
     */
    useStaleWhileRevalidate() {
        const swr = toNumberOrZero(this._rescc['stale-while-revalidate']);
        return swr > 0 && this.maxAge() + swr > this.age();
    }

    /**
     * Creates a `CachePolicy` instance from a serialized object.
     * @param {Object} obj - The serialized object.
     * @returns {CachePolicy} A new CachePolicy instance.
     */
    static fromObject(obj) {
        return new this(undefined, undefined, { _fromObject: obj });
    }

    /**
     * @param {any} obj - The serialized object.
     * @throws {Error} If already initialized or if the object is invalid.
     */
    _fromObject(obj) {
        if (this._responseTime) throw Error('Reinitialized');
        if (!obj || obj.v !== 1) throw Error('Invalid serialization');

        this._responseTime = obj.t;
        this._isShared = obj.sh;
        this._cacheHeuristic = obj.ch;
        this._immutableMinTtl =
            obj.imm !== undefined ? obj.imm : 24 * 3600 * 1000;
        this._ignoreCargoCult = !!obj.icc;
        this._status = obj.st;
        this._resHeaders = obj.resh;
        this._rescc = obj.rescc;
        this._method = obj.m;
        this._url = obj.u;
        this._host = obj.h;
        this._noAuthorization = obj.a;
        this._reqHeaders = obj.reqh;
        this._reqcc = obj.reqcc;
    }

    /**
     * Serializes the `CachePolicy` instance into a JSON-serializable object.
     * @returns {Object} The serialized object.
     */
    toObject() {
        return {
            v: 1,
            t: this._responseTime,
            sh: this._isShared,
            ch: this._cacheHeuristic,
            imm: this._immutableMinTtl,
            icc: this._ignoreCargoCult,
            st: this._status,
            resh: this._resHeaders,
            rescc: this._rescc,
            m: this._method,
            u: this._url,
            h: this._host,
            a: this._noAuthorization,
            reqh: this._reqHeaders,
            reqcc: this._reqcc,
        };
    }

    /**
     * Headers for sending to the origin server to revalidate stale response.
     * Allows server to return 304 to allow reuse of the previous response.
     *
     * Hop by hop headers are always stripped.
     * Revalidation headers may be added or removed, depending on request.
     * @param {HttpRequest} incomingReq - The incoming HTTP request.
     * @returns {Record<string, string>} The headers for the revalidation request.
     */
    revalidationHeaders(incomingReq) {
        this._assertRequestHasHeaders(incomingReq);
        const headers = this._copyWithoutHopByHopHeaders(incomingReq.headers);

        // This implementation does not understand range requests
        delete headers['if-range'];

        if (!this._requestMatches(incomingReq, true) || !this.storable()) {
            // revalidation allowed via HEAD
            // not for the same resource, or wasn't allowed to be cached anyway
            delete headers['if-none-match'];
            delete headers['if-modified-since'];
            return headers;
        }

        /* MUST send that entity-tag in any cache validation request (using If-Match or If-None-Match) if an entity-tag has been provided by the origin server. */
        if (this._resHeaders.etag) {
            headers['if-none-match'] = headers['if-none-match']
                ? `${headers['if-none-match']}, ${this._resHeaders.etag}`
                : this._resHeaders.etag;
        }

        // Clients MAY issue simple (non-subrange) GET requests with either weak validators or strong validators. Clients MUST NOT use weak validators in other forms of request.
        const forbidsWeakValidators =
            headers['accept-ranges'] ||
            headers['if-match'] ||
            headers['if-unmodified-since'] ||
            (this._method && this._method != 'GET');

        /* SHOULD send the Last-Modified value in non-subrange cache validation requests (using If-Modified-Since) if only a Last-Modified value has been provided by the origin server.
        Note: This implementation does not understand partial responses (206) */
        if (forbidsWeakValidators) {
            delete headers['if-modified-since'];

            if (headers['if-none-match']) {
                const etags = headers['if-none-match']
                    .split(/,/)
                    .filter(etag => {
                        return !/^\s*W\//.test(etag);
                    });
                if (!etags.length) {
                    delete headers['if-none-match'];
                } else {
                    headers['if-none-match'] = etags.join(',').trim();
                }
            }
        } else if (
            this._resHeaders['last-modified'] &&
            !headers['if-modified-since']
        ) {
            headers['if-modified-since'] = this._resHeaders['last-modified'];
        }

        return headers;
    }

    /**
     * Creates new CachePolicy with information combined from the previews response,
     * and the new revalidation response.
     *
     * Returns {policy, modified} where modified is a boolean indicating
     * whether the response body has been modified, and old cached body can't be used.
     *
     * @param {HttpRequest} request - The latest HTTP request asking for the cached entry.
     * @param {HttpResponse} response - The latest revalidation HTTP response from the origin server.
     * @returns {{policy: CachePolicy, modified: boolean, matches: boolean}} The updated policy and modification status.
     * @throws {Error} If the response headers are missing.
     */
    revalidatedPolicy(request, response) {
        this._assertRequestHasHeaders(request);

        if (this._useStaleIfError() && isErrorResponse(response)) {
          return {
              policy: this,
              modified: false,
              matches: true,
          };
        }

        if (!response || !response.headers) {
            throw Error('Response headers missing');
        }

        // These aren't going to be supported exactly, since one CachePolicy object
        // doesn't know about all the other cached objects.
        let matches = false;
        if (response.status !== undefined && response.status != 304) {
            matches = false;
        } else if (
            response.headers.etag &&
            !/^\s*W\//.test(response.headers.etag)
        ) {
            // "All of the stored responses with the same strong validator are selected.
            // If none of the stored responses contain the same strong validator,
            // then the cache MUST NOT use the new response to update any stored responses."
            matches =
                this._resHeaders.etag &&
                this._resHeaders.etag.replace(/^\s*W\//, '') ===
                    response.headers.etag;
        } else if (this._resHeaders.etag && response.headers.etag) {
            // "If the new response contains a weak validator and that validator corresponds
            // to one of the cache's stored responses,
            // then the most recent of those matching stored responses is selected for update."
            matches =
                this._resHeaders.etag.replace(/^\s*W\//, '') ===
                response.headers.etag.replace(/^\s*W\//, '');
        } else if (this._resHeaders['last-modified']) {
            matches =
                this._resHeaders['last-modified'] ===
                response.headers['last-modified'];
        } else {
            // If the new response does not include any form of validator (such as in the case where
            // a client generates an If-Modified-Since request from a source other than the Last-Modified
            // response header field), and there is only one stored response, and that stored response also
            // lacks a validator, then that stored response is selected for update.
            if (
                !this._resHeaders.etag &&
                !this._resHeaders['last-modified'] &&
                !response.headers.etag &&
                !response.headers['last-modified']
            ) {
                matches = true;
            }
        }

        const optionsCopy = {
            shared: this._isShared,
            cacheHeuristic: this._cacheHeuristic,
            immutableMinTimeToLive: this._immutableMinTtl,
            ignoreCargoCult: this._ignoreCargoCult,
        };

        if (!matches) {
            return {
                policy: new this.constructor(request, response, optionsCopy),
                // Client receiving 304 without body, even if it's invalid/mismatched has no option
                // but to reuse a cached body. We don't have a good way to tell clients to do
                // error recovery in such case.
                modified: response.status != 304,
                matches: false,
            };
        }

        // use other header fields provided in the 304 (Not Modified) response to replace all instances
        // of the corresponding header fields in the stored response.
        const headers = {};
        for (const k in this._resHeaders) {
            headers[k] =
                k in response.headers && !excludedFromRevalidationUpdate[k]
                    ? response.headers[k]
                    : this._resHeaders[k];
        }

        const newResponse = Object.assign({}, response, {
            status: this._status,
            method: this._method,
            headers,
        });
        return {
            policy: new this.constructor(request, newResponse, optionsCopy),
            modified: false,
            matches: true,
        };
    }
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\http-cache-semantics\package.json 
------------------------------------------------------ 
{
    "name": "http-cache-semantics",
    "version": "4.2.0",
    "description": "Parses Cache-Control and other headers. Helps building correct HTTP caches and proxies",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/kornelski/http-cache-semantics.git"
    },
    "main": "index.js",
    "types": "index.js",
    "scripts": {
        "test": "mocha"
    },
    "files": [
        "index.js"
    ],
    "author": "Kornel Lesiński <npms2@geekhood.net> (https://kornel.ski/)",
    "license": "BSD-2-Clause",
    "devDependencies": {
        "mocha": "^11.0"
    }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\http-errors\index.js 
------------------------------------------------------ 
/*!
 * http-errors
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module dependencies.
 * @private
 */

var deprecate = require('depd')('http-errors')
var setPrototypeOf = require('setprototypeof')
var statuses = require('statuses')
var inherits = require('inherits')
var toIdentifier = require('toidentifier')

/**
 * Module exports.
 * @public
 */

module.exports = createError
module.exports.HttpError = createHttpErrorConstructor()
module.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)

// Populate exports for all constructors
populateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)

/**
 * Get the code class of a status code.
 * @private
 */

function codeClass (status) {
  return Number(String(status).charAt(0) + '00')
}

/**
 * Create a new HTTP Error.
 *
 * @returns {Error}
 * @public
 */

function createError () {
  // so much arity going on ~_~
  var err
  var msg
  var status = 500
  var props = {}
  for (var i = 0; i < arguments.length; i++) {
    var arg = arguments[i]
    var type = typeof arg
    if (type === 'object' && arg instanceof Error) {
      err = arg
      status = err.status || err.statusCode || status
    } else if (type === 'number' && i === 0) {
      status = arg
    } else if (type === 'string') {
      msg = arg
    } else if (type === 'object') {
      props = arg
    } else {
      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type)
    }
  }

  if (typeof status === 'number' && (status < 400 || status >= 600)) {
    deprecate('non-error status code; use only 4xx or 5xx status codes')
  }

  if (typeof status !== 'number' ||
    (!statuses.message[status] && (status < 400 || status >= 600))) {
    status = 500
  }

  // constructor
  var HttpError = createError[status] || createError[codeClass(status)]

  if (!err) {
    // create error
    err = HttpError
      ? new HttpError(msg)
      : new Error(msg || statuses.message[status])
    Error.captureStackTrace(err, createError)
  }

  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {
    // add properties to generic error
    err.expose = status < 500
    err.status = err.statusCode = status
  }

  for (var key in props) {
    if (key !== 'status' && key !== 'statusCode') {
      err[key] = props[key]
    }
  }

  return err
}

/**
 * Create HTTP error abstract base class.
 * @private
 */

function createHttpErrorConstructor () {
  function HttpError () {
    throw new TypeError('cannot construct abstract class')
  }

  inherits(HttpError, Error)

  return HttpError
}

/**
 * Create a constructor for a client error.
 * @private
 */

function createClientErrorConstructor (HttpError, name, code) {
  var className = toClassName(name)

  function ClientError (message) {
    // create the error object
    var msg = message != null ? message : statuses.message[code]
    var err = new Error(msg)

    // capture a stack trace to the construction point
    Error.captureStackTrace(err, ClientError)

    // adjust the [[Prototype]]
    setPrototypeOf(err, ClientError.prototype)

    // redefine the error message
    Object.defineProperty(err, 'message', {
      enumerable: true,
      configurable: true,
      value: msg,
      writable: true
    })

    // redefine the error name
    Object.defineProperty(err, 'name', {
      enumerable: false,
      configurable: true,
      value: className,
      writable: true
    })

    return err
  }

  inherits(ClientError, HttpError)
  nameFunc(ClientError, className)

  ClientError.prototype.status = code
  ClientError.prototype.statusCode = code
  ClientError.prototype.expose = true

  return ClientError
}

/**
 * Create function to test is a value is a HttpError.
 * @private
 */

function createIsHttpErrorFunction (HttpError) {
  return function isHttpError (val) {
    if (!val || typeof val !== 'object') {
      return false
    }

    if (val instanceof HttpError) {
      return true
    }

    return val instanceof Error &&
      typeof val.expose === 'boolean' &&
      typeof val.statusCode === 'number' && val.status === val.statusCode
  }
}

/**
 * Create a constructor for a server error.
 * @private
 */

function createServerErrorConstructor (HttpError, name, code) {
  var className = toClassName(name)

  function ServerError (message) {
    // create the error object
    var msg = message != null ? message : statuses.message[code]
    var err = new Error(msg)

    // capture a stack trace to the construction point
    Error.captureStackTrace(err, ServerError)

    // adjust the [[Prototype]]
    setPrototypeOf(err, ServerError.prototype)

    // redefine the error message
    Object.defineProperty(err, 'message', {
      enumerable: true,
      configurable: true,
      value: msg,
      writable: true
    })

    // redefine the error name
    Object.defineProperty(err, 'name', {
      enumerable: false,
      configurable: true,
      value: className,
      writable: true
    })

    return err
  }

  inherits(ServerError, HttpError)
  nameFunc(ServerError, className)

  ServerError.prototype.status = code
  ServerError.prototype.statusCode = code
  ServerError.prototype.expose = false

  return ServerError
}

/**
 * Set the name of a function, if possible.
 * @private
 */

function nameFunc (func, name) {
  var desc = Object.getOwnPropertyDescriptor(func, 'name')

  if (desc && desc.configurable) {
    desc.value = name
    Object.defineProperty(func, 'name', desc)
  }
}

/**
 * Populate the exports object with constructors for every error class.
 * @private
 */

function populateConstructorExports (exports, codes, HttpError) {
  codes.forEach(function forEachCode (code) {
    var CodeError
    var name = toIdentifier(statuses.message[code])

    switch (codeClass(code)) {
      case 400:
        CodeError = createClientErrorConstructor(HttpError, name, code)
        break
      case 500:
        CodeError = createServerErrorConstructor(HttpError, name, code)
        break
    }

    if (CodeError) {
      // export the constructor
      exports[code] = CodeError
      exports[name] = CodeError
    }
  })
}

/**
 * Get a class name from a name identifier.
 * @private
 */

function toClassName (name) {
  return name.substr(-5) !== 'Error'
    ? name + 'Error'
    : name
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\http-errors\package.json 
------------------------------------------------------ 
{
  "name": "http-errors",
  "description": "Create HTTP error objects",
  "version": "2.0.0",
  "author": "Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)",
  "contributors": [
    "Alan Plum <me@pluma.io>",
    "Douglas Christopher Wilson <doug@somethingdoug.com>"
  ],
  "license": "MIT",
  "repository": "jshttp/http-errors",
  "dependencies": {
    "depd": "2.0.0",
    "inherits": "2.0.4",
    "setprototypeof": "1.2.0",
    "statuses": "2.0.1",
    "toidentifier": "1.0.1"
  },
  "devDependencies": {
    "eslint": "7.32.0",
    "eslint-config-standard": "14.1.1",
    "eslint-plugin-import": "2.25.3",
    "eslint-plugin-markdown": "2.2.1",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "5.2.0",
    "eslint-plugin-standard": "4.1.0",
    "mocha": "9.1.3",
    "nyc": "15.1.0"
  },
  "engines": {
    "node": ">= 0.8"
  },
  "scripts": {
    "lint": "eslint . && node ./scripts/lint-readme-list.js",
    "test": "mocha --reporter spec --bail",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test",
    "version": "node scripts/version-history.js && git add HISTORY.md"
  },
  "keywords": [
    "http",
    "error"
  ],
  "files": [
    "index.js",
    "HISTORY.md",
    "LICENSE",
    "README.md"
  ]
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\http-errors\node_modules\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\http-errors\node_modules\statuses\index.js 
------------------------------------------------------ 
/*!
 * statuses
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module dependencies.
 * @private
 */

var codes = require('./codes.json')

/**
 * Module exports.
 * @public
 */

module.exports = status

// status code to message map
status.message = codes

// status message (lower-case) to code map
status.code = createMessageToStatusCodeMap(codes)

// array of status codes
status.codes = createStatusCodeList(codes)

// status codes for redirects
status.redirect = {
  300: true,
  301: true,
  302: true,
  303: true,
  305: true,
  307: true,
  308: true
}

// status codes for empty bodies
status.empty = {
  204: true,
  205: true,
  304: true
}

// status codes for when you should retry the request
status.retry = {
  502: true,
  503: true,
  504: true
}

/**
 * Create a map of message to status code.
 * @private
 */

function createMessageToStatusCodeMap (codes) {
  var map = {}

  Object.keys(codes).forEach(function forEachCode (code) {
    var message = codes[code]
    var status = Number(code)

    // populate map
    map[message.toLowerCase()] = status
  })

  return map
}

/**
 * Create a list of all status codes.
 * @private
 */

function createStatusCodeList (codes) {
  return Object.keys(codes).map(function mapCode (code) {
    return Number(code)
  })
}

/**
 * Get the status code for given message.
 * @private
 */

function getStatusCode (message) {
  var msg = message.toLowerCase()

  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {
    throw new Error('invalid status message: "' + message + '"')
  }

  return status.code[msg]
}

/**
 * Get the status message for given code.
 * @private
 */

function getStatusMessage (code) {
  if (!Object.prototype.hasOwnProperty.call(status.message, code)) {
    throw new Error('invalid status code: ' + code)
  }

  return status.message[code]
}

/**
 * Get the status code.
 *
 * Given a number, this will throw if it is not a known status
 * code, otherwise the code will be returned. Given a string,
 * the string will be parsed for a number and return the code
 * if valid, otherwise will lookup the code assuming this is
 * the status message.
 *
 * @param {string|number} code
 * @returns {number}
 * @public
 */

function status (code) {
  if (typeof code === 'number') {
    return getStatusMessage(code)
  }

  if (typeof code !== 'string') {
    throw new TypeError('code must be a number or string')
  }

  // '403'
  var n = parseInt(code, 10)
  if (!isNaN(n)) {
    return getStatusMessage(n)
  }

  return getStatusCode(code)
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\http-errors\node_modules\statuses\package.json 
------------------------------------------------------ 
{
  "name": "statuses",
  "description": "HTTP status utility",
  "version": "2.0.1",
  "contributors": [
    "Douglas Christopher Wilson <doug@somethingdoug.com>",
    "Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)"
  ],
  "repository": "jshttp/statuses",
  "license": "MIT",
  "keywords": [
    "http",
    "status",
    "code"
  ],
  "files": [
    "HISTORY.md",
    "index.js",
    "codes.json",
    "LICENSE"
  ],
  "devDependencies": {
    "csv-parse": "4.14.2",
    "eslint": "7.17.0",
    "eslint-config-standard": "14.1.1",
    "eslint-plugin-import": "2.22.1",
    "eslint-plugin-markdown": "1.0.2",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "4.2.1",
    "eslint-plugin-standard": "4.1.0",
    "mocha": "8.2.1",
    "nyc": "15.1.0",
    "raw-body": "2.4.1",
    "stream-to-array": "2.3.0"
  },
  "engines": {
    "node": ">= 0.8"
  },
  "scripts": {
    "build": "node scripts/build.js",
    "fetch": "node scripts/fetch-apache.js && node scripts/fetch-iana.js && node scripts/fetch-nginx.js && node scripts/fetch-node.js",
    "lint": "eslint --plugin markdown --ext js,md .",
    "test": "mocha --reporter spec --check-leaks --bail test/",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test",
    "update": "npm run fetch && npm run build",
    "version": "node scripts/version-history.js && git add HISTORY.md"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\http-proxy-agent\package.json 
------------------------------------------------------ 
{
  "name": "http-proxy-agent",
  "version": "4.0.1",
  "description": "An HTTP(s) proxy `http.Agent` implementation for HTTP",
  "main": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "files": [
    "dist"
  ],
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "tsc",
    "test": "mocha",
    "test-lint": "eslint src --ext .js,.ts",
    "prepublishOnly": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/node-http-proxy-agent.git"
  },
  "keywords": [
    "http",
    "proxy",
    "endpoint",
    "agent"
  ],
  "author": "Nathan Rajlich <nathan@tootallnate.net> (http://n8.io/)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/TooTallNate/node-http-proxy-agent/issues"
  },
  "dependencies": {
    "@tootallnate/once": "1",
    "agent-base": "6",
    "debug": "4"
  },
  "devDependencies": {
    "@types/debug": "4",
    "@types/node": "^12.12.11",
    "@typescript-eslint/eslint-plugin": "1.6.0",
    "@typescript-eslint/parser": "1.1.0",
    "eslint": "5.16.0",
    "eslint-config-airbnb": "17.1.0",
    "eslint-config-prettier": "4.1.0",
    "eslint-import-resolver-typescript": "1.1.1",
    "eslint-plugin-import": "2.16.0",
    "eslint-plugin-jsx-a11y": "6.2.1",
    "eslint-plugin-react": "7.12.4",
    "mocha": "^6.2.2",
    "proxy": "1",
    "rimraf": "^3.0.0",
    "typescript": "^3.5.3"
  },
  "engines": {
    "node": ">= 6"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\http-proxy-agent\dist\agent.js 
------------------------------------------------------ 
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const net_1 = __importDefault(require("net"));
const tls_1 = __importDefault(require("tls"));
const url_1 = __importDefault(require("url"));
const debug_1 = __importDefault(require("debug"));
const once_1 = __importDefault(require("@tootallnate/once"));
const agent_base_1 = require("agent-base");
const debug = debug_1.default('http-proxy-agent');
function isHTTPS(protocol) {
    return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;
}
/**
 * The `HttpProxyAgent` implements an HTTP Agent subclass that connects
 * to the specified "HTTP proxy server" in order to proxy HTTP requests.
 *
 * @api public
 */
class HttpProxyAgent extends agent_base_1.Agent {
    constructor(_opts) {
        let opts;
        if (typeof _opts === 'string') {
            opts = url_1.default.parse(_opts);
        }
        else {
            opts = _opts;
        }
        if (!opts) {
            throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');
        }
        debug('Creating new HttpProxyAgent instance: %o', opts);
        super(opts);
        const proxy = Object.assign({}, opts);
        // If `true`, then connect to the proxy server over TLS.
        // Defaults to `false`.
        this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol);
        // Prefer `hostname` over `host`, and set the `port` if needed.
        proxy.host = proxy.hostname || proxy.host;
        if (typeof proxy.port === 'string') {
            proxy.port = parseInt(proxy.port, 10);
        }
        if (!proxy.port && proxy.host) {
            proxy.port = this.secureProxy ? 443 : 80;
        }
        if (proxy.host && proxy.path) {
            // If both a `host` and `path` are specified then it's most likely
            // the result of a `url.parse()` call... we need to remove the
            // `path` portion so that `net.connect()` doesn't attempt to open
            // that as a Unix socket file.
            delete proxy.path;
            delete proxy.pathname;
        }
        this.proxy = proxy;
    }
    /**
     * Called when the node-core HTTP client library is creating a
     * new HTTP request.
     *
     * @api protected
     */
    callback(req, opts) {
        return __awaiter(this, void 0, void 0, function* () {
            const { proxy, secureProxy } = this;
            const parsed = url_1.default.parse(req.path);
            if (!parsed.protocol) {
                parsed.protocol = 'http:';
            }
            if (!parsed.hostname) {
                parsed.hostname = opts.hostname || opts.host || null;
            }
            if (parsed.port == null && typeof opts.port) {
                parsed.port = String(opts.port);
            }
            if (parsed.port === '80') {
                // if port is 80, then we can remove the port so that the
                // ":80" portion is not on the produced URL
                delete parsed.port;
            }
            // Change the `http.ClientRequest` instance's "path" field
            // to the absolute path of the URL that will be requested.
            req.path = url_1.default.format(parsed);
            // Inject the `Proxy-Authorization` header if necessary.
            if (proxy.auth) {
                req.setHeader('Proxy-Authorization', `Basic ${Buffer.from(proxy.auth).toString('base64')}`);
            }
            // Create a socket connection to the proxy server.
            let socket;
            if (secureProxy) {
                debug('Creating `tls.Socket`: %o', proxy);
                socket = tls_1.default.connect(proxy);
            }
            else {
                debug('Creating `net.Socket`: %o', proxy);
                socket = net_1.default.connect(proxy);
            }
            // At this point, the http ClientRequest's internal `_header` field
            // might have already been set. If this is the case then we'll need
            // to re-generate the string since we just changed the `req.path`.
            if (req._header) {
                let first;
                let endOfHeaders;
                debug('Regenerating stored HTTP header string for request');
                req._header = null;
                req._implicitHeader();
                if (req.output && req.output.length > 0) {
                    // Node < 12
                    debug('Patching connection write() output buffer with updated header');
                    first = req.output[0];
                    endOfHeaders = first.indexOf('\r\n\r\n') + 4;
                    req.output[0] = req._header + first.substring(endOfHeaders);
                    debug('Output buffer: %o', req.output);
                }
                else if (req.outputData && req.outputData.length > 0) {
                    // Node >= 12
                    debug('Patching connection write() output buffer with updated header');
                    first = req.outputData[0].data;
                    endOfHeaders = first.indexOf('\r\n\r\n') + 4;
                    req.outputData[0].data =
                        req._header + first.substring(endOfHeaders);
                    debug('Output buffer: %o', req.outputData[0].data);
                }
            }
            // Wait for the socket's `connect` event, so that this `callback()`
            // function throws instead of the `http` request machinery. This is
            // important for i.e. `PacProxyAgent` which determines a failed proxy
            // connection via the `callback()` function throwing.
            yield once_1.default(socket, 'connect');
            return socket;
        });
    }
}
exports.default = HttpProxyAgent;
//# sourceMappingURL=agent.js.map 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\http-proxy-agent\dist\index.js 
------------------------------------------------------ 
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const agent_1 = __importDefault(require("./agent"));
function createHttpProxyAgent(opts) {
    return new agent_1.default(opts);
}
(function (createHttpProxyAgent) {
    createHttpProxyAgent.HttpProxyAgent = agent_1.default;
    createHttpProxyAgent.prototype = agent_1.default.prototype;
})(createHttpProxyAgent || (createHttpProxyAgent = {}));
module.exports = createHttpProxyAgent;
//# sourceMappingURL=index.js.map 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\http-proxy-agent\dist\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\https-proxy-agent\package.json 
------------------------------------------------------ 
{
  "name": "https-proxy-agent",
  "version": "5.0.1",
  "description": "An HTTP(s) proxy `http.Agent` implementation for HTTPS",
  "main": "dist/index",
  "types": "dist/index",
  "files": [
    "dist"
  ],
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "tsc",
    "test": "mocha --reporter spec",
    "test-lint": "eslint src --ext .js,.ts",
    "prepublishOnly": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/node-https-proxy-agent.git"
  },
  "keywords": [
    "https",
    "proxy",
    "endpoint",
    "agent"
  ],
  "author": "Nathan Rajlich <nathan@tootallnate.net> (http://n8.io/)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/TooTallNate/node-https-proxy-agent/issues"
  },
  "dependencies": {
    "agent-base": "6",
    "debug": "4"
  },
  "devDependencies": {
    "@types/debug": "4",
    "@types/node": "^12.12.11",
    "@typescript-eslint/eslint-plugin": "1.6.0",
    "@typescript-eslint/parser": "1.1.0",
    "eslint": "5.16.0",
    "eslint-config-airbnb": "17.1.0",
    "eslint-config-prettier": "4.1.0",
    "eslint-import-resolver-typescript": "1.1.1",
    "eslint-plugin-import": "2.16.0",
    "eslint-plugin-jsx-a11y": "6.2.1",
    "eslint-plugin-react": "7.12.4",
    "mocha": "^6.2.2",
    "proxy": "1",
    "rimraf": "^3.0.0",
    "typescript": "^3.5.3"
  },
  "engines": {
    "node": ">= 6"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\https-proxy-agent\dist\agent.js 
------------------------------------------------------ 
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const net_1 = __importDefault(require("net"));
const tls_1 = __importDefault(require("tls"));
const url_1 = __importDefault(require("url"));
const assert_1 = __importDefault(require("assert"));
const debug_1 = __importDefault(require("debug"));
const agent_base_1 = require("agent-base");
const parse_proxy_response_1 = __importDefault(require("./parse-proxy-response"));
const debug = debug_1.default('https-proxy-agent:agent');
/**
 * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to
 * the specified "HTTP(s) proxy server" in order to proxy HTTPS requests.
 *
 * Outgoing HTTP requests are first tunneled through the proxy server using the
 * `CONNECT` HTTP request method to establish a connection to the proxy server,
 * and then the proxy server connects to the destination target and issues the
 * HTTP request from the proxy server.
 *
 * `https:` requests have their socket connection upgraded to TLS once
 * the connection to the proxy server has been established.
 *
 * @api public
 */
class HttpsProxyAgent extends agent_base_1.Agent {
    constructor(_opts) {
        let opts;
        if (typeof _opts === 'string') {
            opts = url_1.default.parse(_opts);
        }
        else {
            opts = _opts;
        }
        if (!opts) {
            throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');
        }
        debug('creating new HttpsProxyAgent instance: %o', opts);
        super(opts);
        const proxy = Object.assign({}, opts);
        // If `true`, then connect to the proxy server over TLS.
        // Defaults to `false`.
        this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol);
        // Prefer `hostname` over `host`, and set the `port` if needed.
        proxy.host = proxy.hostname || proxy.host;
        if (typeof proxy.port === 'string') {
            proxy.port = parseInt(proxy.port, 10);
        }
        if (!proxy.port && proxy.host) {
            proxy.port = this.secureProxy ? 443 : 80;
        }
        // ALPN is supported by Node.js >= v5.
        // attempt to negotiate http/1.1 for proxy servers that support http/2
        if (this.secureProxy && !('ALPNProtocols' in proxy)) {
            proxy.ALPNProtocols = ['http 1.1'];
        }
        if (proxy.host && proxy.path) {
            // If both a `host` and `path` are specified then it's most likely
            // the result of a `url.parse()` call... we need to remove the
            // `path` portion so that `net.connect()` doesn't attempt to open
            // that as a Unix socket file.
            delete proxy.path;
            delete proxy.pathname;
        }
        this.proxy = proxy;
    }
    /**
     * Called when the node-core HTTP client library is creating a
     * new HTTP request.
     *
     * @api protected
     */
    callback(req, opts) {
        return __awaiter(this, void 0, void 0, function* () {
            const { proxy, secureProxy } = this;
            // Create a socket connection to the proxy server.
            let socket;
            if (secureProxy) {
                debug('Creating `tls.Socket`: %o', proxy);
                socket = tls_1.default.connect(proxy);
            }
            else {
                debug('Creating `net.Socket`: %o', proxy);
                socket = net_1.default.connect(proxy);
            }
            const headers = Object.assign({}, proxy.headers);
            const hostname = `${opts.host}:${opts.port}`;
            let payload = `CONNECT ${hostname} HTTP/1.1\r\n`;
            // Inject the `Proxy-Authorization` header if necessary.
            if (proxy.auth) {
                headers['Proxy-Authorization'] = `Basic ${Buffer.from(proxy.auth).toString('base64')}`;
            }
            // The `Host` header should only include the port
            // number when it is not the default port.
            let { host, port, secureEndpoint } = opts;
            if (!isDefaultPort(port, secureEndpoint)) {
                host += `:${port}`;
            }
            headers.Host = host;
            headers.Connection = 'close';
            for (const name of Object.keys(headers)) {
                payload += `${name}: ${headers[name]}\r\n`;
            }
            const proxyResponsePromise = parse_proxy_response_1.default(socket);
            socket.write(`${payload}\r\n`);
            const { statusCode, buffered } = yield proxyResponsePromise;
            if (statusCode === 200) {
                req.once('socket', resume);
                if (opts.secureEndpoint) {
                    // The proxy is connecting to a TLS server, so upgrade
                    // this socket connection to a TLS connection.
                    debug('Upgrading socket connection to TLS');
                    const servername = opts.servername || opts.host;
                    return tls_1.default.connect(Object.assign(Object.assign({}, omit(opts, 'host', 'hostname', 'path', 'port')), { socket,
                        servername }));
                }
                return socket;
            }
            // Some other status code that's not 200... need to re-play the HTTP
            // header "data" events onto the socket once the HTTP machinery is
            // attached so that the node core `http` can parse and handle the
            // error status code.
            // Close the original socket, and a new "fake" socket is returned
            // instead, so that the proxy doesn't get the HTTP request
            // written to it (which may contain `Authorization` headers or other
            // sensitive data).
            //
            // See: https://hackerone.com/reports/541502
            socket.destroy();
            const fakeSocket = new net_1.default.Socket({ writable: false });
            fakeSocket.readable = true;
            // Need to wait for the "socket" event to re-play the "data" events.
            req.once('socket', (s) => {
                debug('replaying proxy buffer for failed request');
                assert_1.default(s.listenerCount('data') > 0);
                // Replay the "buffered" Buffer onto the fake `socket`, since at
                // this point the HTTP module machinery has been hooked up for
                // the user.
                s.push(buffered);
                s.push(null);
            });
            return fakeSocket;
        });
    }
}
exports.default = HttpsProxyAgent;
function resume(socket) {
    socket.resume();
}
function isDefaultPort(port, secure) {
    return Boolean((!secure && port === 80) || (secure && port === 443));
}
function isHTTPS(protocol) {
    return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;
}
function omit(obj, ...keys) {
    const ret = {};
    let key;
    for (key in obj) {
        if (!keys.includes(key)) {
            ret[key] = obj[key];
        }
    }
    return ret;
}
//# sourceMappingURL=agent.js.map 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\https-proxy-agent\dist\index.js 
------------------------------------------------------ 
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const agent_1 = __importDefault(require("./agent"));
function createHttpsProxyAgent(opts) {
    return new agent_1.default(opts);
}
(function (createHttpsProxyAgent) {
    createHttpsProxyAgent.HttpsProxyAgent = agent_1.default;
    createHttpsProxyAgent.prototype = agent_1.default.prototype;
})(createHttpsProxyAgent || (createHttpsProxyAgent = {}));
module.exports = createHttpsProxyAgent;
//# sourceMappingURL=index.js.map 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\https-proxy-agent\dist\parse-proxy-response.js 
------------------------------------------------------ 
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const debug_1 = __importDefault(require("debug"));
const debug = debug_1.default('https-proxy-agent:parse-proxy-response');
function parseProxyResponse(socket) {
    return new Promise((resolve, reject) => {
        // we need to buffer any HTTP traffic that happens with the proxy before we get
        // the CONNECT response, so that if the response is anything other than an "200"
        // response code, then we can re-play the "data" events on the socket once the
        // HTTP parser is hooked up...
        let buffersLength = 0;
        const buffers = [];
        function read() {
            const b = socket.read();
            if (b)
                ondata(b);
            else
                socket.once('readable', read);
        }
        function cleanup() {
            socket.removeListener('end', onend);
            socket.removeListener('error', onerror);
            socket.removeListener('close', onclose);
            socket.removeListener('readable', read);
        }
        function onclose(err) {
            debug('onclose had error %o', err);
        }
        function onend() {
            debug('onend');
        }
        function onerror(err) {
            cleanup();
            debug('onerror %o', err);
            reject(err);
        }
        function ondata(b) {
            buffers.push(b);
            buffersLength += b.length;
            const buffered = Buffer.concat(buffers, buffersLength);
            const endOfHeaders = buffered.indexOf('\r\n\r\n');
            if (endOfHeaders === -1) {
                // keep buffering
                debug('have not received end of HTTP headers yet...');
                read();
                return;
            }
            const firstLine = buffered.toString('ascii', 0, buffered.indexOf('\r\n'));
            const statusCode = +firstLine.split(' ')[1];
            debug('got proxy server response: %o', firstLine);
            resolve({
                statusCode,
                buffered
            });
        }
        socket.on('error', onerror);
        socket.on('close', onclose);
        socket.on('end', onend);
        read();
    });
}
exports.default = parseProxyResponse;
//# sourceMappingURL=parse-proxy-response.js.map 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\https-proxy-agent\dist\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\humanize-ms\index.js 
------------------------------------------------------ 
/*!
 * humanize-ms - index.js
 * Copyright(c) 2014 dead_horse <dead_horse@qq.com>
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 */

var util = require('util');
var ms = require('ms');

module.exports = function (t) {
  if (typeof t === 'number') return t;
  var r = ms(t);
  if (r === undefined) {
    var err = new Error(util.format('humanize-ms(%j) result undefined', t));
    console.warn(err.stack);
  }
  return r;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\humanize-ms\package.json 
------------------------------------------------------ 
{
  "name": "humanize-ms",
  "version": "1.2.1",
  "description": "transform humanize time to ms",
  "main": "index.js",
  "files": [
    "index.js"
  ],
  "scripts": {
    "test": "make test"
  },
  "keywords": [
    "humanize",
    "ms"
  ],
  "author": {
    "name": "dead-horse",
    "email": "dead_horse@qq.com",
    "url": "http://deadhorse.me"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/node-modules/humanize-ms"
  },
  "license": "MIT",
  "dependencies": {
    "ms": "^2.0.0"
  },
  "devDependencies": {
    "autod": "*",
    "beautify-benchmark": "~0.2.4",
    "benchmark": "~1.0.0",
    "istanbul": "*",
    "mocha": "*",
    "should": "*"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\package.json 
------------------------------------------------------ 
{
    "name": "iconv-lite",
    "description": "Convert character encodings in pure javascript.",
    "version": "0.6.3",
    "license": "MIT",
    "keywords": [
        "iconv",
        "convert",
        "charset",
        "icu"
    ],
    "author": "Alexander Shtuchkin <ashtuchkin@gmail.com>",
    "main": "./lib/index.js",
    "typings": "./lib/index.d.ts",
    "homepage": "https://github.com/ashtuchkin/iconv-lite",
    "bugs": "https://github.com/ashtuchkin/iconv-lite/issues",
    "repository": {
        "type": "git",
        "url": "git://github.com/ashtuchkin/iconv-lite.git"
    },
    "engines": {
        "node": ">=0.10.0"
    },
    "scripts": {
        "coverage": "c8 _mocha --grep .",
        "test": "mocha --reporter spec --grep ."
    },
    "browser": {
        "stream": false
    },
    "devDependencies": {
        "async": "^3.2.0",
        "c8": "^7.2.0",
        "errto": "^0.2.1",
        "iconv": "^2.3.5",
        "mocha": "^3.5.3",
        "request": "^2.88.2",
        "semver": "^6.3.0",
        "unorm": "^1.6.0"
    },
    "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3.0.0"
    }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\.github\package.json 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\.idea\package.json 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\.idea\codeStyles\package.json 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\.idea\inspectionProfiles\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\dbcs-codec.js 
------------------------------------------------------ 
"use strict";
var Buffer = require("safer-buffer").Buffer;

// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.
// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.
// To save memory and loading time, we read table files only when requested.

exports._dbcs = DBCSCodec;

var UNASSIGNED = -1,
    GB18030_CODE = -2,
    SEQ_START  = -10,
    NODE_START = -1000,
    UNASSIGNED_NODE = new Array(0x100),
    DEF_CHAR = -1;

for (var i = 0; i < 0x100; i++)
    UNASSIGNED_NODE[i] = UNASSIGNED;


// Class DBCSCodec reads and initializes mapping tables.
function DBCSCodec(codecOptions, iconv) {
    this.encodingName = codecOptions.encodingName;
    if (!codecOptions)
        throw new Error("DBCS codec is called without the data.")
    if (!codecOptions.table)
        throw new Error("Encoding '" + this.encodingName + "' has no data.");

    // Load tables.
    var mappingTable = codecOptions.table();


    // Decode tables: MBCS -> Unicode.

    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.
    // Trie root is decodeTables[0].
    // Values: >=  0 -> unicode character code. can be > 0xFFFF
    //         == UNASSIGNED -> unknown/unassigned sequence.
    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.
    //         <= NODE_START -> index of the next node in our trie to process next byte.
    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.
    this.decodeTables = [];
    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.

    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. 
    this.decodeTableSeq = [];

    // Actual mapping tables consist of chunks. Use them to fill up decode tables.
    for (var i = 0; i < mappingTable.length; i++)
        this._addDecodeChunk(mappingTable[i]);

    // Load & create GB18030 tables when needed.
    if (typeof codecOptions.gb18030 === 'function') {
        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.

        // Add GB18030 common decode nodes.
        var commonThirdByteNodeIdx = this.decodeTables.length;
        this.decodeTables.push(UNASSIGNED_NODE.slice(0));

        var commonFourthByteNodeIdx = this.decodeTables.length;
        this.decodeTables.push(UNASSIGNED_NODE.slice(0));

        // Fill out the tree
        var firstByteNode = this.decodeTables[0];
        for (var i = 0x81; i <= 0xFE; i++) {
            var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];
            for (var j = 0x30; j <= 0x39; j++) {
                if (secondByteNode[j] === UNASSIGNED) {
                    secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;
                } else if (secondByteNode[j] > NODE_START) {
                    throw new Error("gb18030 decode tables conflict at byte 2");
                }

                var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];
                for (var k = 0x81; k <= 0xFE; k++) {
                    if (thirdByteNode[k] === UNASSIGNED) {
                        thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;
                    } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {
                        continue;
                    } else if (thirdByteNode[k] > NODE_START) {
                        throw new Error("gb18030 decode tables conflict at byte 3");
                    }

                    var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];
                    for (var l = 0x30; l <= 0x39; l++) {
                        if (fourthByteNode[l] === UNASSIGNED)
                            fourthByteNode[l] = GB18030_CODE;
                    }
                }
            }
        }
    }

    this.defaultCharUnicode = iconv.defaultCharUnicode;

    
    // Encode tables: Unicode -> DBCS.

    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.
    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.
    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).
    //         == UNASSIGNED -> no conversion found. Output a default char.
    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.
    this.encodeTable = [];
    
    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of
    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key
    // means end of sequence (needed when one sequence is a strict subsequence of another).
    // Objects are kept separately from encodeTable to increase performance.
    this.encodeTableSeq = [];

    // Some chars can be decoded, but need not be encoded.
    var skipEncodeChars = {};
    if (codecOptions.encodeSkipVals)
        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {
            var val = codecOptions.encodeSkipVals[i];
            if (typeof val === 'number')
                skipEncodeChars[val] = true;
            else
                for (var j = val.from; j <= val.to; j++)
                    skipEncodeChars[j] = true;
        }
        
    // Use decode trie to recursively fill out encode tables.
    this._fillEncodeTable(0, 0, skipEncodeChars);

    // Add more encoding pairs when needed.
    if (codecOptions.encodeAdd) {
        for (var uChar in codecOptions.encodeAdd)
            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))
                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);
    }

    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];
    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];
    if (this.defCharSB === UNASSIGNED) this.defCharSB = "?".charCodeAt(0);
}

DBCSCodec.prototype.encoder = DBCSEncoder;
DBCSCodec.prototype.decoder = DBCSDecoder;

// Decoder helpers
DBCSCodec.prototype._getDecodeTrieNode = function(addr) {
    var bytes = [];
    for (; addr > 0; addr >>>= 8)
        bytes.push(addr & 0xFF);
    if (bytes.length == 0)
        bytes.push(0);

    var node = this.decodeTables[0];
    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.
        var val = node[bytes[i]];

        if (val == UNASSIGNED) { // Create new node.
            node[bytes[i]] = NODE_START - this.decodeTables.length;
            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));
        }
        else if (val <= NODE_START) { // Existing node.
            node = this.decodeTables[NODE_START - val];
        }
        else
            throw new Error("Overwrite byte in " + this.encodingName + ", addr: " + addr.toString(16));
    }
    return node;
}


DBCSCodec.prototype._addDecodeChunk = function(chunk) {
    // First element of chunk is the hex mbcs code where we start.
    var curAddr = parseInt(chunk[0], 16);

    // Choose the decoding node where we'll write our chars.
    var writeTable = this._getDecodeTrieNode(curAddr);
    curAddr = curAddr & 0xFF;

    // Write all other elements of the chunk to the table.
    for (var k = 1; k < chunk.length; k++) {
        var part = chunk[k];
        if (typeof part === "string") { // String, write as-is.
            for (var l = 0; l < part.length;) {
                var code = part.charCodeAt(l++);
                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate
                    var codeTrail = part.charCodeAt(l++);
                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)
                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);
                    else
                        throw new Error("Incorrect surrogate pair in "  + this.encodingName + " at chunk " + chunk[0]);
                }
                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)
                    var len = 0xFFF - code + 2;
                    var seq = [];
                    for (var m = 0; m < len; m++)
                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.

                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;
                    this.decodeTableSeq.push(seq);
                }
                else
                    writeTable[curAddr++] = code; // Basic char
            }
        } 
        else if (typeof part === "number") { // Integer, meaning increasing sequence starting with prev character.
            var charCode = writeTable[curAddr - 1] + 1;
            for (var l = 0; l < part; l++)
                writeTable[curAddr++] = charCode++;
        }
        else
            throw new Error("Incorrect type '" + typeof part + "' given in "  + this.encodingName + " at chunk " + chunk[0]);
    }
    if (curAddr > 0xFF)
        throw new Error("Incorrect chunk in "  + this.encodingName + " at addr " + chunk[0] + ": too long" + curAddr);
}

// Encoder helpers
DBCSCodec.prototype._getEncodeBucket = function(uCode) {
    var high = uCode >> 8; // This could be > 0xFF because of astral characters.
    if (this.encodeTable[high] === undefined)
        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.
    return this.encodeTable[high];
}

DBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {
    var bucket = this._getEncodeBucket(uCode);
    var low = uCode & 0xFF;
    if (bucket[low] <= SEQ_START)
        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.
    else if (bucket[low] == UNASSIGNED)
        bucket[low] = dbcsCode;
}

DBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {
    
    // Get the root of character tree according to first character of the sequence.
    var uCode = seq[0];
    var bucket = this._getEncodeBucket(uCode);
    var low = uCode & 0xFF;

    var node;
    if (bucket[low] <= SEQ_START) {
        // There's already a sequence with  - use it.
        node = this.encodeTableSeq[SEQ_START-bucket[low]];
    }
    else {
        // There was no sequence object - allocate a new one.
        node = {};
        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.
        bucket[low] = SEQ_START - this.encodeTableSeq.length;
        this.encodeTableSeq.push(node);
    }

    // Traverse the character tree, allocating new nodes as needed.
    for (var j = 1; j < seq.length-1; j++) {
        var oldVal = node[uCode];
        if (typeof oldVal === 'object')
            node = oldVal;
        else {
            node = node[uCode] = {}
            if (oldVal !== undefined)
                node[DEF_CHAR] = oldVal
        }
    }

    // Set the leaf to given dbcsCode.
    uCode = seq[seq.length-1];
    node[uCode] = dbcsCode;
}

DBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {
    var node = this.decodeTables[nodeIdx];
    var hasValues = false;
    var subNodeEmpty = {};
    for (var i = 0; i < 0x100; i++) {
        var uCode = node[i];
        var mbCode = prefix + i;
        if (skipEncodeChars[mbCode])
            continue;

        if (uCode >= 0) {
            this._setEncodeChar(uCode, mbCode);
            hasValues = true;
        } else if (uCode <= NODE_START) {
            var subNodeIdx = NODE_START - uCode;
            if (!subNodeEmpty[subNodeIdx]) {  // Skip empty subtrees (they are too large in gb18030).
                var newPrefix = (mbCode << 8) >>> 0;  // NOTE: '>>> 0' keeps 32-bit num positive.
                if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars))
                    hasValues = true;
                else
                    subNodeEmpty[subNodeIdx] = true;
            }
        } else if (uCode <= SEQ_START) {
            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);
            hasValues = true;
        }
    }
    return hasValues;
}



// == Encoder ==================================================================

function DBCSEncoder(options, codec) {
    // Encoder state
    this.leadSurrogate = -1;
    this.seqObj = undefined;
    
    // Static data
    this.encodeTable = codec.encodeTable;
    this.encodeTableSeq = codec.encodeTableSeq;
    this.defaultCharSingleByte = codec.defCharSB;
    this.gb18030 = codec.gb18030;
}

DBCSEncoder.prototype.write = function(str) {
    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),
        leadSurrogate = this.leadSurrogate,
        seqObj = this.seqObj, nextChar = -1,
        i = 0, j = 0;

    while (true) {
        // 0. Get next character.
        if (nextChar === -1) {
            if (i == str.length) break;
            var uCode = str.charCodeAt(i++);
        }
        else {
            var uCode = nextChar;
            nextChar = -1;    
        }

        // 1. Handle surrogates.
        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.
            if (uCode < 0xDC00) { // We've got lead surrogate.
                if (leadSurrogate === -1) {
                    leadSurrogate = uCode;
                    continue;
                } else {
                    leadSurrogate = uCode;
                    // Double lead surrogate found.
                    uCode = UNASSIGNED;
                }
            } else { // We've got trail surrogate.
                if (leadSurrogate !== -1) {
                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);
                    leadSurrogate = -1;
                } else {
                    // Incomplete surrogate pair - only trail surrogate found.
                    uCode = UNASSIGNED;
                }
                
            }
        }
        else if (leadSurrogate !== -1) {
            // Incomplete surrogate pair - only lead surrogate found.
            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.
            leadSurrogate = -1;
        }

        // 2. Convert uCode character.
        var dbcsCode = UNASSIGNED;
        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence
            var resCode = seqObj[uCode];
            if (typeof resCode === 'object') { // Sequence continues.
                seqObj = resCode;
                continue;

            } else if (typeof resCode == 'number') { // Sequence finished. Write it.
                dbcsCode = resCode;

            } else if (resCode == undefined) { // Current character is not part of the sequence.

                // Try default character for this sequence
                resCode = seqObj[DEF_CHAR];
                if (resCode !== undefined) {
                    dbcsCode = resCode; // Found. Write it.
                    nextChar = uCode; // Current character will be written too in the next iteration.

                } else {
                    // TODO: What if we have no default? (resCode == undefined)
                    // Then, we should write first char of the sequence as-is and try the rest recursively.
                    // Didn't do it for now because no encoding has this situation yet.
                    // Currently, just skip the sequence and write current char.
                }
            }
            seqObj = undefined;
        }
        else if (uCode >= 0) {  // Regular character
            var subtable = this.encodeTable[uCode >> 8];
            if (subtable !== undefined)
                dbcsCode = subtable[uCode & 0xFF];
            
            if (dbcsCode <= SEQ_START) { // Sequence start
                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];
                continue;
            }

            if (dbcsCode == UNASSIGNED && this.gb18030) {
                // Use GB18030 algorithm to find character(s) to write.
                var idx = findIdx(this.gb18030.uChars, uCode);
                if (idx != -1) {
                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);
                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;
                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;
                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;
                    newBuf[j++] = 0x30 + dbcsCode;
                    continue;
                }
            }
        }

        // 3. Write dbcsCode character.
        if (dbcsCode === UNASSIGNED)
            dbcsCode = this.defaultCharSingleByte;
        
        if (dbcsCode < 0x100) {
            newBuf[j++] = dbcsCode;
        }
        else if (dbcsCode < 0x10000) {
            newBuf[j++] = dbcsCode >> 8;   // high byte
            newBuf[j++] = dbcsCode & 0xFF; // low byte
        }
        else if (dbcsCode < 0x1000000) {
            newBuf[j++] = dbcsCode >> 16;
            newBuf[j++] = (dbcsCode >> 8) & 0xFF;
            newBuf[j++] = dbcsCode & 0xFF;
        } else {
            newBuf[j++] = dbcsCode >>> 24;
            newBuf[j++] = (dbcsCode >>> 16) & 0xFF;
            newBuf[j++] = (dbcsCode >>> 8) & 0xFF;
            newBuf[j++] = dbcsCode & 0xFF;
        }
    }

    this.seqObj = seqObj;
    this.leadSurrogate = leadSurrogate;
    return newBuf.slice(0, j);
}

DBCSEncoder.prototype.end = function() {
    if (this.leadSurrogate === -1 && this.seqObj === undefined)
        return; // All clean. Most often case.

    var newBuf = Buffer.alloc(10), j = 0;

    if (this.seqObj) { // We're in the sequence.
        var dbcsCode = this.seqObj[DEF_CHAR];
        if (dbcsCode !== undefined) { // Write beginning of the sequence.
            if (dbcsCode < 0x100) {
                newBuf[j++] = dbcsCode;
            }
            else {
                newBuf[j++] = dbcsCode >> 8;   // high byte
                newBuf[j++] = dbcsCode & 0xFF; // low byte
            }
        } else {
            // See todo above.
        }
        this.seqObj = undefined;
    }

    if (this.leadSurrogate !== -1) {
        // Incomplete surrogate pair - only lead surrogate found.
        newBuf[j++] = this.defaultCharSingleByte;
        this.leadSurrogate = -1;
    }
    
    return newBuf.slice(0, j);
}

// Export for testing
DBCSEncoder.prototype.findIdx = findIdx;


// == Decoder ==================================================================

function DBCSDecoder(options, codec) {
    // Decoder state
    this.nodeIdx = 0;
    this.prevBytes = [];

    // Static data
    this.decodeTables = codec.decodeTables;
    this.decodeTableSeq = codec.decodeTableSeq;
    this.defaultCharUnicode = codec.defaultCharUnicode;
    this.gb18030 = codec.gb18030;
}

DBCSDecoder.prototype.write = function(buf) {
    var newBuf = Buffer.alloc(buf.length*2),
        nodeIdx = this.nodeIdx, 
        prevBytes = this.prevBytes, prevOffset = this.prevBytes.length,
        seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.
        uCode;

    for (var i = 0, j = 0; i < buf.length; i++) {
        var curByte = (i >= 0) ? buf[i] : prevBytes[i + prevOffset];

        // Lookup in current trie node.
        var uCode = this.decodeTables[nodeIdx][curByte];

        if (uCode >= 0) { 
            // Normal character, just use it.
        }
        else if (uCode === UNASSIGNED) { // Unknown char.
            // TODO: Callback with seq.
            uCode = this.defaultCharUnicode.charCodeAt(0);
            i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.
        }
        else if (uCode === GB18030_CODE) {
            if (i >= 3) {
                var ptr = (buf[i-3]-0x81)*12600 + (buf[i-2]-0x30)*1260 + (buf[i-1]-0x81)*10 + (curByte-0x30);
            } else {
                var ptr = (prevBytes[i-3+prevOffset]-0x81)*12600 + 
                          (((i-2 >= 0) ? buf[i-2] : prevBytes[i-2+prevOffset])-0x30)*1260 + 
                          (((i-1 >= 0) ? buf[i-1] : prevBytes[i-1+prevOffset])-0x81)*10 + 
                          (curByte-0x30);
            }
            var idx = findIdx(this.gb18030.gbChars, ptr);
            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];
        }
        else if (uCode <= NODE_START) { // Go to next trie node.
            nodeIdx = NODE_START - uCode;
            continue;
        }
        else if (uCode <= SEQ_START) { // Output a sequence of chars.
            var seq = this.decodeTableSeq[SEQ_START - uCode];
            for (var k = 0; k < seq.length - 1; k++) {
                uCode = seq[k];
                newBuf[j++] = uCode & 0xFF;
                newBuf[j++] = uCode >> 8;
            }
            uCode = seq[seq.length-1];
        }
        else
            throw new Error("iconv-lite internal error: invalid decoding table value " + uCode + " at " + nodeIdx + "/" + curByte);

        // Write the character to buffer, handling higher planes using surrogate pair.
        if (uCode >= 0x10000) { 
            uCode -= 0x10000;
            var uCodeLead = 0xD800 | (uCode >> 10);
            newBuf[j++] = uCodeLead & 0xFF;
            newBuf[j++] = uCodeLead >> 8;

            uCode = 0xDC00 | (uCode & 0x3FF);
        }
        newBuf[j++] = uCode & 0xFF;
        newBuf[j++] = uCode >> 8;

        // Reset trie node.
        nodeIdx = 0; seqStart = i+1;
    }

    this.nodeIdx = nodeIdx;
    this.prevBytes = (seqStart >= 0)
        ? Array.prototype.slice.call(buf, seqStart)
        : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));

    return newBuf.slice(0, j).toString('ucs2');
}

DBCSDecoder.prototype.end = function() {
    var ret = '';

    // Try to parse all remaining chars.
    while (this.prevBytes.length > 0) {
        // Skip 1 character in the buffer.
        ret += this.defaultCharUnicode;
        var bytesArr = this.prevBytes.slice(1);

        // Parse remaining as usual.
        this.prevBytes = [];
        this.nodeIdx = 0;
        if (bytesArr.length > 0)
            ret += this.write(bytesArr);
    }

    this.prevBytes = [];
    this.nodeIdx = 0;
    return ret;
}

// Binary search for GB18030. Returns largest i such that table[i] <= val.
function findIdx(table, val) {
    if (table[0] > val)
        return -1;

    var l = 0, r = table.length;
    while (l < r-1) { // always table[l] <= val < table[r]
        var mid = l + ((r-l+1) >> 1);
        if (table[mid] <= val)
            l = mid;
        else
            r = mid;
    }
    return l;
}

 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\dbcs-data.js 
------------------------------------------------------ 
"use strict";

// Description of supported double byte encodings and aliases.
// Tables are not require()-d until they are needed to speed up library load.
// require()-s are direct to support Browserify.

module.exports = {
    
    // == Japanese/ShiftJIS ====================================================
    // All japanese encodings are based on JIS X set of standards:
    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.
    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. 
    //              Has several variations in 1978, 1983, 1990 and 1997.
    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
    //              2 planes, first is superset of 0208, second - revised 0212.
    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)

    // Byte encodings are:
    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte
    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.
    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.
    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
    //               0x00-0x7F       - lower part of 0201
    //               0x8E, 0xA1-0xDF - upper part of 0201
    //               (0xA1-0xFE)x2   - 0208 plane (94x94).
    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).
    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.
    //               Used as-is in ISO2022 family.
    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, 
    //                0201-1976 Roman, 0208-1978, 0208-1983.
    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.
    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.
    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.
    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
    //
    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.
    //
    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html

    'shiftjis': {
        type: '_dbcs',
        table: function() { return require('./tables/shiftjis.json') },
        encodeAdd: {'\u00a5': 0x5C, '\u203E': 0x7E},
        encodeSkipVals: [{from: 0xED40, to: 0xF940}],
    },
    'csshiftjis': 'shiftjis',
    'mskanji': 'shiftjis',
    'sjis': 'shiftjis',
    'windows31j': 'shiftjis',
    'ms31j': 'shiftjis',
    'xsjis': 'shiftjis',
    'windows932': 'shiftjis',
    'ms932': 'shiftjis',
    '932': 'shiftjis',
    'cp932': 'shiftjis',

    'eucjp': {
        type: '_dbcs',
        table: function() { return require('./tables/eucjp.json') },
        encodeAdd: {'\u00a5': 0x5C, '\u203E': 0x7E},
    },

    // TODO: KDDI extension to Shift_JIS
    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.
    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.


    // == Chinese/GBK ==========================================================
    // http://en.wikipedia.org/wiki/GBK
    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder

    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936
    'gb2312': 'cp936',
    'gb231280': 'cp936',
    'gb23121980': 'cp936',
    'csgb2312': 'cp936',
    'csiso58gb231280': 'cp936',
    'euccn': 'cp936',

    // Microsoft's CP936 is a subset and approximation of GBK.
    'windows936': 'cp936',
    'ms936': 'cp936',
    '936': 'cp936',
    'cp936': {
        type: '_dbcs',
        table: function() { return require('./tables/cp936.json') },
    },

    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
    'gbk': {
        type: '_dbcs',
        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },
    },
    'xgbk': 'gbk',
    'isoir58': 'gbk',

    // GB18030 is an algorithmic extension of GBK.
    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder
    // http://icu-project.org/docs/papers/gb18030.html
    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0
    'gb18030': {
        type: '_dbcs',
        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },
        gb18030: function() { return require('./tables/gb18030-ranges.json') },
        encodeSkipVals: [0x80],
        encodeAdd: {'€': 0xA2E3},
    },

    'chinese': 'gb18030',


    // == Korean ===============================================================
    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.
    'windows949': 'cp949',
    'ms949': 'cp949',
    '949': 'cp949',
    'cp949': {
        type: '_dbcs',
        table: function() { return require('./tables/cp949.json') },
    },

    'cseuckr': 'cp949',
    'csksc56011987': 'cp949',
    'euckr': 'cp949',
    'isoir149': 'cp949',
    'korean': 'cp949',
    'ksc56011987': 'cp949',
    'ksc56011989': 'cp949',
    'ksc5601': 'cp949',


    // == Big5/Taiwan/Hong Kong ================================================
    // There are lots of tables for Big5 and cp950. Please see the following links for history:
    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
    // Variations, in roughly number of defined chars:
    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
    //  * Big5-2003 (Taiwan standard) almost superset of cp950.
    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. 
    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
    //    Plus, it has 4 combining sequences.
    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
    //    Implementations are not consistent within browsers; sometimes labeled as just big5.
    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.
    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
    // 
    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder
    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.

    'windows950': 'cp950',
    'ms950': 'cp950',
    '950': 'cp950',
    'cp950': {
        type: '_dbcs',
        table: function() { return require('./tables/cp950.json') },
    },

    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
    'big5': 'big5hkscs',
    'big5hkscs': {
        type: '_dbcs',
        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },
        encodeSkipVals: [
            // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of
            // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.
            // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.
            0x8e69, 0x8e6f, 0x8e7e, 0x8eab, 0x8eb4, 0x8ecd, 0x8ed0, 0x8f57, 0x8f69, 0x8f6e, 0x8fcb, 0x8ffe,
            0x906d, 0x907a, 0x90c4, 0x90dc, 0x90f1, 0x91bf, 0x92af, 0x92b0, 0x92b1, 0x92b2, 0x92d1, 0x9447, 0x94ca,
            0x95d9, 0x96fc, 0x9975, 0x9b76, 0x9b78, 0x9b7b, 0x9bc6, 0x9bde, 0x9bec, 0x9bf6, 0x9c42, 0x9c53, 0x9c62,
            0x9c68, 0x9c6b, 0x9c77, 0x9cbc, 0x9cbd, 0x9cd0, 0x9d57, 0x9d5a, 0x9dc4, 0x9def, 0x9dfb, 0x9ea9, 0x9eef,
            0x9efd, 0x9f60, 0x9fcb, 0xa077, 0xa0dc, 0xa0df, 0x8fcc, 0x92c8, 0x9644, 0x96ed,

            // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345
            0xa2a4, 0xa2a5, 0xa2a7, 0xa2a6, 0xa2cc, 0xa2ce,
        ],
    },

    'cnbig5': 'big5hkscs',
    'csbig5': 'big5hkscs',
    'xxbig5': 'big5hkscs',
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\index.js 
------------------------------------------------------ 
"use strict";

// Update this array if you add/rename/remove files in this directory.
// We support Browserify by skipping automatic module discovery and requiring modules directly.
var modules = [
    require("./internal"),
    require("./utf32"),
    require("./utf16"),
    require("./utf7"),
    require("./sbcs-codec"),
    require("./sbcs-data"),
    require("./sbcs-data-generated"),
    require("./dbcs-codec"),
    require("./dbcs-data"),
];

// Put all encoding/alias/codec definitions to single object and export it.
for (var i = 0; i < modules.length; i++) {
    var module = modules[i];
    for (var enc in module)
        if (Object.prototype.hasOwnProperty.call(module, enc))
            exports[enc] = module[enc];
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\internal.js 
------------------------------------------------------ 
"use strict";
var Buffer = require("safer-buffer").Buffer;

// Export Node.js internal encodings.

module.exports = {
    // Encodings
    utf8:   { type: "_internal", bomAware: true},
    cesu8:  { type: "_internal", bomAware: true},
    unicode11utf8: "utf8",

    ucs2:   { type: "_internal", bomAware: true},
    utf16le: "ucs2",

    binary: { type: "_internal" },
    base64: { type: "_internal" },
    hex:    { type: "_internal" },

    // Codec.
    _internal: InternalCodec,
};

//------------------------------------------------------------------------------

function InternalCodec(codecOptions, iconv) {
    this.enc = codecOptions.encodingName;
    this.bomAware = codecOptions.bomAware;

    if (this.enc === "base64")
        this.encoder = InternalEncoderBase64;
    else if (this.enc === "cesu8") {
        this.enc = "utf8"; // Use utf8 for decoding.
        this.encoder = InternalEncoderCesu8;

        // Add decoder for versions of Node not supporting CESU-8
        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {
            this.decoder = InternalDecoderCesu8;
            this.defaultCharUnicode = iconv.defaultCharUnicode;
        }
    }
}

InternalCodec.prototype.encoder = InternalEncoder;
InternalCodec.prototype.decoder = InternalDecoder;

//------------------------------------------------------------------------------

// We use node.js internal decoder. Its signature is the same as ours.
var StringDecoder = require('string_decoder').StringDecoder;

if (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.
    StringDecoder.prototype.end = function() {};


function InternalDecoder(options, codec) {
    this.decoder = new StringDecoder(codec.enc);
}

InternalDecoder.prototype.write = function(buf) {
    if (!Buffer.isBuffer(buf)) {
        buf = Buffer.from(buf);
    }

    return this.decoder.write(buf);
}

InternalDecoder.prototype.end = function() {
    return this.decoder.end();
}


//------------------------------------------------------------------------------
// Encoder is mostly trivial

function InternalEncoder(options, codec) {
    this.enc = codec.enc;
}

InternalEncoder.prototype.write = function(str) {
    return Buffer.from(str, this.enc);
}

InternalEncoder.prototype.end = function() {
}


//------------------------------------------------------------------------------
// Except base64 encoder, which must keep its state.

function InternalEncoderBase64(options, codec) {
    this.prevStr = '';
}

InternalEncoderBase64.prototype.write = function(str) {
    str = this.prevStr + str;
    var completeQuads = str.length - (str.length % 4);
    this.prevStr = str.slice(completeQuads);
    str = str.slice(0, completeQuads);

    return Buffer.from(str, "base64");
}

InternalEncoderBase64.prototype.end = function() {
    return Buffer.from(this.prevStr, "base64");
}


//------------------------------------------------------------------------------
// CESU-8 encoder is also special.

function InternalEncoderCesu8(options, codec) {
}

InternalEncoderCesu8.prototype.write = function(str) {
    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;
    for (var i = 0; i < str.length; i++) {
        var charCode = str.charCodeAt(i);
        // Naive implementation, but it works because CESU-8 is especially easy
        // to convert from UTF-16 (which all JS strings are encoded in).
        if (charCode < 0x80)
            buf[bufIdx++] = charCode;
        else if (charCode < 0x800) {
            buf[bufIdx++] = 0xC0 + (charCode >>> 6);
            buf[bufIdx++] = 0x80 + (charCode & 0x3f);
        }
        else { // charCode will always be < 0x10000 in javascript.
            buf[bufIdx++] = 0xE0 + (charCode >>> 12);
            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);
            buf[bufIdx++] = 0x80 + (charCode & 0x3f);
        }
    }
    return buf.slice(0, bufIdx);
}

InternalEncoderCesu8.prototype.end = function() {
}

//------------------------------------------------------------------------------
// CESU-8 decoder is not implemented in Node v4.0+

function InternalDecoderCesu8(options, codec) {
    this.acc = 0;
    this.contBytes = 0;
    this.accBytes = 0;
    this.defaultCharUnicode = codec.defaultCharUnicode;
}

InternalDecoderCesu8.prototype.write = function(buf) {
    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, 
        res = '';
    for (var i = 0; i < buf.length; i++) {
        var curByte = buf[i];
        if ((curByte & 0xC0) !== 0x80) { // Leading byte
            if (contBytes > 0) { // Previous code is invalid
                res += this.defaultCharUnicode;
                contBytes = 0;
            }

            if (curByte < 0x80) { // Single-byte code
                res += String.fromCharCode(curByte);
            } else if (curByte < 0xE0) { // Two-byte code
                acc = curByte & 0x1F;
                contBytes = 1; accBytes = 1;
            } else if (curByte < 0xF0) { // Three-byte code
                acc = curByte & 0x0F;
                contBytes = 2; accBytes = 1;
            } else { // Four or more are not supported for CESU-8.
                res += this.defaultCharUnicode;
            }
        } else { // Continuation byte
            if (contBytes > 0) { // We're waiting for it.
                acc = (acc << 6) | (curByte & 0x3f);
                contBytes--; accBytes++;
                if (contBytes === 0) {
                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)
                    if (accBytes === 2 && acc < 0x80 && acc > 0)
                        res += this.defaultCharUnicode;
                    else if (accBytes === 3 && acc < 0x800)
                        res += this.defaultCharUnicode;
                    else
                        // Actually add character.
                        res += String.fromCharCode(acc);
                }
            } else { // Unexpected continuation byte
                res += this.defaultCharUnicode;
            }
        }
    }
    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;
    return res;
}

InternalDecoderCesu8.prototype.end = function() {
    var res = 0;
    if (this.contBytes > 0)
        res += this.defaultCharUnicode;
    return res;
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\sbcs-codec.js 
------------------------------------------------------ 
"use strict";
var Buffer = require("safer-buffer").Buffer;

// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that
// correspond to encoded bytes (if 128 - then lower half is ASCII). 

exports._sbcs = SBCSCodec;
function SBCSCodec(codecOptions, iconv) {
    if (!codecOptions)
        throw new Error("SBCS codec is called without the data.")
    
    // Prepare char buffer for decoding.
    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))
        throw new Error("Encoding '"+codecOptions.type+"' has incorrect 'chars' (must be of len 128 or 256)");
    
    if (codecOptions.chars.length === 128) {
        var asciiString = "";
        for (var i = 0; i < 128; i++)
            asciiString += String.fromCharCode(i);
        codecOptions.chars = asciiString + codecOptions.chars;
    }

    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');
    
    // Encoding buffer.
    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));

    for (var i = 0; i < codecOptions.chars.length; i++)
        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;

    this.encodeBuf = encodeBuf;
}

SBCSCodec.prototype.encoder = SBCSEncoder;
SBCSCodec.prototype.decoder = SBCSDecoder;


function SBCSEncoder(options, codec) {
    this.encodeBuf = codec.encodeBuf;
}

SBCSEncoder.prototype.write = function(str) {
    var buf = Buffer.alloc(str.length);
    for (var i = 0; i < str.length; i++)
        buf[i] = this.encodeBuf[str.charCodeAt(i)];
    
    return buf;
}

SBCSEncoder.prototype.end = function() {
}


function SBCSDecoder(options, codec) {
    this.decodeBuf = codec.decodeBuf;
}

SBCSDecoder.prototype.write = function(buf) {
    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.
    var decodeBuf = this.decodeBuf;
    var newBuf = Buffer.alloc(buf.length*2);
    var idx1 = 0, idx2 = 0;
    for (var i = 0; i < buf.length; i++) {
        idx1 = buf[i]*2; idx2 = i*2;
        newBuf[idx2] = decodeBuf[idx1];
        newBuf[idx2+1] = decodeBuf[idx1+1];
    }
    return newBuf.toString('ucs2');
}

SBCSDecoder.prototype.end = function() {
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\sbcs-data-generated.js 
------------------------------------------------------ 
"use strict";

// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.
module.exports = {
  "437": "cp437",
  "737": "cp737",
  "775": "cp775",
  "850": "cp850",
  "852": "cp852",
  "855": "cp855",
  "856": "cp856",
  "857": "cp857",
  "858": "cp858",
  "860": "cp860",
  "861": "cp861",
  "862": "cp862",
  "863": "cp863",
  "864": "cp864",
  "865": "cp865",
  "866": "cp866",
  "869": "cp869",
  "874": "windows874",
  "922": "cp922",
  "1046": "cp1046",
  "1124": "cp1124",
  "1125": "cp1125",
  "1129": "cp1129",
  "1133": "cp1133",
  "1161": "cp1161",
  "1162": "cp1162",
  "1163": "cp1163",
  "1250": "windows1250",
  "1251": "windows1251",
  "1252": "windows1252",
  "1253": "windows1253",
  "1254": "windows1254",
  "1255": "windows1255",
  "1256": "windows1256",
  "1257": "windows1257",
  "1258": "windows1258",
  "28591": "iso88591",
  "28592": "iso88592",
  "28593": "iso88593",
  "28594": "iso88594",
  "28595": "iso88595",
  "28596": "iso88596",
  "28597": "iso88597",
  "28598": "iso88598",
  "28599": "iso88599",
  "28600": "iso885910",
  "28601": "iso885911",
  "28603": "iso885913",
  "28604": "iso885914",
  "28605": "iso885915",
  "28606": "iso885916",
  "windows874": {
    "type": "_sbcs",
    "chars": "€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "win874": "windows874",
  "cp874": "windows874",
  "windows1250": {
    "type": "_sbcs",
    "chars": "€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
  },
  "win1250": "windows1250",
  "cp1250": "windows1250",
  "windows1251": {
    "type": "_sbcs",
    "chars": "ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "win1251": "windows1251",
  "cp1251": "windows1251",
  "windows1252": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "win1252": "windows1252",
  "cp1252": "windows1252",
  "windows1253": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
  },
  "win1253": "windows1253",
  "cp1253": "windows1253",
  "windows1254": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
  },
  "win1254": "windows1254",
  "cp1254": "windows1254",
  "windows1255": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
  },
  "win1255": "windows1255",
  "cp1255": "windows1255",
  "windows1256": {
    "type": "_sbcs",
    "chars": "€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے"
  },
  "win1256": "windows1256",
  "cp1256": "windows1256",
  "windows1257": {
    "type": "_sbcs",
    "chars": "€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙"
  },
  "win1257": "windows1257",
  "cp1257": "windows1257",
  "windows1258": {
    "type": "_sbcs",
    "chars": "€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "win1258": "windows1258",
  "cp1258": "windows1258",
  "iso88591": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "cp28591": "iso88591",
  "iso88592": {
    "type": "_sbcs",
    "chars": " Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
  },
  "cp28592": "iso88592",
  "iso88593": {
    "type": "_sbcs",
    "chars": " Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙"
  },
  "cp28593": "iso88593",
  "iso88594": {
    "type": "_sbcs",
    "chars": " ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙"
  },
  "cp28594": "iso88594",
  "iso88595": {
    "type": "_sbcs",
    "chars": " ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ"
  },
  "cp28595": "iso88595",
  "iso88596": {
    "type": "_sbcs",
    "chars": " ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������"
  },
  "cp28596": "iso88596",
  "iso88597": {
    "type": "_sbcs",
    "chars": " ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
  },
  "cp28597": "iso88597",
  "iso88598": {
    "type": "_sbcs",
    "chars": " �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
  },
  "cp28598": "iso88598",
  "iso88599": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
  },
  "cp28599": "iso88599",
  "iso885910": {
    "type": "_sbcs",
    "chars": " ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ"
  },
  "cp28600": "iso885910",
  "iso885911": {
    "type": "_sbcs",
    "chars": " กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "cp28601": "iso885911",
  "iso885913": {
    "type": "_sbcs",
    "chars": " ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’"
  },
  "cp28603": "iso885913",
  "iso885914": {
    "type": "_sbcs",
    "chars": " Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ"
  },
  "cp28604": "iso885914",
  "iso885915": {
    "type": "_sbcs",
    "chars": " ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "cp28605": "iso885915",
  "iso885916": {
    "type": "_sbcs",
    "chars": " ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ"
  },
  "cp28606": "iso885916",
  "cp437": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm437": "cp437",
  "csibm437": "cp437",
  "cp737": {
    "type": "_sbcs",
    "chars": "ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ "
  },
  "ibm737": "cp737",
  "csibm737": "cp737",
  "cp775": {
    "type": "_sbcs",
    "chars": "ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ "
  },
  "ibm775": "cp775",
  "csibm775": "cp775",
  "cp850": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm850": "cp850",
  "csibm850": "cp850",
  "cp852": {
    "type": "_sbcs",
    "chars": "ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ "
  },
  "ibm852": "cp852",
  "csibm852": "cp852",
  "cp855": {
    "type": "_sbcs",
    "chars": "ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ "
  },
  "ibm855": "cp855",
  "csibm855": "cp855",
  "cp856": {
    "type": "_sbcs",
    "chars": "אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm856": "cp856",
  "csibm856": "cp856",
  "cp857": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ "
  },
  "ibm857": "cp857",
  "csibm857": "cp857",
  "cp858": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
  },
  "ibm858": "cp858",
  "csibm858": "cp858",
  "cp860": {
    "type": "_sbcs",
    "chars": "ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm860": "cp860",
  "csibm860": "cp860",
  "cp861": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm861": "cp861",
  "csibm861": "cp861",
  "cp862": {
    "type": "_sbcs",
    "chars": "אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm862": "cp862",
  "csibm862": "cp862",
  "cp863": {
    "type": "_sbcs",
    "chars": "ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm863": "cp863",
  "csibm863": "cp863",
  "cp864": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�"
  },
  "ibm864": "cp864",
  "csibm864": "cp864",
  "cp865": {
    "type": "_sbcs",
    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
  },
  "ibm865": "cp865",
  "csibm865": "cp865",
  "cp866": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ "
  },
  "ibm866": "cp866",
  "csibm866": "cp866",
  "cp869": {
    "type": "_sbcs",
    "chars": "������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ "
  },
  "ibm869": "cp869",
  "csibm869": "cp869",
  "cp922": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ"
  },
  "ibm922": "cp922",
  "csibm922": "cp922",
  "cp1046": {
    "type": "_sbcs",
    "chars": "ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�"
  },
  "ibm1046": "cp1046",
  "csibm1046": "cp1046",
  "cp1124": {
    "type": "_sbcs",
    "chars": " ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ"
  },
  "ibm1124": "cp1124",
  "csibm1124": "cp1124",
  "cp1125": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ "
  },
  "ibm1125": "cp1125",
  "csibm1125": "cp1125",
  "cp1129": {
    "type": "_sbcs",
    "chars": " ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "ibm1129": "cp1129",
  "csibm1129": "cp1129",
  "cp1133": {
    "type": "_sbcs",
    "chars": " ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�"
  },
  "ibm1133": "cp1133",
  "csibm1133": "cp1133",
  "cp1161": {
    "type": "_sbcs",
    "chars": "��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ "
  },
  "ibm1161": "cp1161",
  "csibm1161": "cp1161",
  "cp1162": {
    "type": "_sbcs",
    "chars": "€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  },
  "ibm1162": "cp1162",
  "csibm1162": "cp1162",
  "cp1163": {
    "type": "_sbcs",
    "chars": " ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
  },
  "ibm1163": "cp1163",
  "csibm1163": "cp1163",
  "maccroatian": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ"
  },
  "maccyrillic": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
  },
  "macgreek": {
    "type": "_sbcs",
    "chars": "Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�"
  },
  "maciceland": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macroman": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macromania": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macthai": {
    "type": "_sbcs",
    "chars": "«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����"
  },
  "macturkish": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "macukraine": {
    "type": "_sbcs",
    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
  },
  "koi8r": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8u": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8ru": {
    "type": "_sbcs",
    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "koi8t": {
    "type": "_sbcs",
    "chars": "қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
  },
  "armscii8": {
    "type": "_sbcs",
    "chars": " �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�"
  },
  "rk1048": {
    "type": "_sbcs",
    "chars": "ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "tcvn": {
    "type": "_sbcs",
    "chars": "\u0000ÚỤ\u0003ỪỬỮ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010ỨỰỲỶỸÝỴ\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ"
  },
  "georgianacademy": {
    "type": "_sbcs",
    "chars": "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "georgianps": {
    "type": "_sbcs",
    "chars": "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
  },
  "pt154": {
    "type": "_sbcs",
    "chars": "ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
  },
  "viscii": {
    "type": "_sbcs",
    "chars": "\u0000\u0001Ẳ\u0003\u0004ẴẪ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013Ỷ\u0015\u0016\u0017\u0018Ỹ\u001a\u001b\u001c\u001dỴ\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ"
  },
  "iso646cn": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
  },
  "iso646jp": {
    "type": "_sbcs",
    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
  },
  "hproman8": {
    "type": "_sbcs",
    "chars": " ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�"
  },
  "macintosh": {
    "type": "_sbcs",
    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
  },
  "ascii": {
    "type": "_sbcs",
    "chars": "��������������������������������������������������������������������������������������������������������������������������������"
  },
  "tis620": {
    "type": "_sbcs",
    "chars": "���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
  }
} 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\sbcs-data.js 
------------------------------------------------------ 
"use strict";

// Manually added data to be used by sbcs codec in addition to generated one.

module.exports = {
    // Not supported by iconv, not sure why.
    "10029": "maccenteuro",
    "maccenteuro": {
        "type": "_sbcs",
        "chars": "ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ"
    },

    "808": "cp808",
    "ibm808": "cp808",
    "cp808": {
        "type": "_sbcs",
        "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ "
    },

    "mik": {
        "type": "_sbcs",
        "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
    },

    "cp720": {
        "type": "_sbcs",
        "chars": "\x80\x81éâ\x84à\x86çêëèïî\x8d\x8e\x8f\x90\u0651\u0652ô¤ـûùءآأؤ£إئابةتثجحخدذرزسشص«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ضطظعغفµقكلمنهوىي≡\u064b\u064c\u064d\u064e\u064f\u0650≈°∙·√ⁿ²■\u00a0"
    },

    // Aliases of generated encodings.
    "ascii8bit": "ascii",
    "usascii": "ascii",
    "ansix34": "ascii",
    "ansix341968": "ascii",
    "ansix341986": "ascii",
    "csascii": "ascii",
    "cp367": "ascii",
    "ibm367": "ascii",
    "isoir6": "ascii",
    "iso646us": "ascii",
    "iso646irv": "ascii",
    "us": "ascii",

    "latin1": "iso88591",
    "latin2": "iso88592",
    "latin3": "iso88593",
    "latin4": "iso88594",
    "latin5": "iso88599",
    "latin6": "iso885910",
    "latin7": "iso885913",
    "latin8": "iso885914",
    "latin9": "iso885915",
    "latin10": "iso885916",

    "csisolatin1": "iso88591",
    "csisolatin2": "iso88592",
    "csisolatin3": "iso88593",
    "csisolatin4": "iso88594",
    "csisolatincyrillic": "iso88595",
    "csisolatinarabic": "iso88596",
    "csisolatingreek" : "iso88597",
    "csisolatinhebrew": "iso88598",
    "csisolatin5": "iso88599",
    "csisolatin6": "iso885910",

    "l1": "iso88591",
    "l2": "iso88592",
    "l3": "iso88593",
    "l4": "iso88594",
    "l5": "iso88599",
    "l6": "iso885910",
    "l7": "iso885913",
    "l8": "iso885914",
    "l9": "iso885915",
    "l10": "iso885916",

    "isoir14": "iso646jp",
    "isoir57": "iso646cn",
    "isoir100": "iso88591",
    "isoir101": "iso88592",
    "isoir109": "iso88593",
    "isoir110": "iso88594",
    "isoir144": "iso88595",
    "isoir127": "iso88596",
    "isoir126": "iso88597",
    "isoir138": "iso88598",
    "isoir148": "iso88599",
    "isoir157": "iso885910",
    "isoir166": "tis620",
    "isoir179": "iso885913",
    "isoir199": "iso885914",
    "isoir203": "iso885915",
    "isoir226": "iso885916",

    "cp819": "iso88591",
    "ibm819": "iso88591",

    "cyrillic": "iso88595",

    "arabic": "iso88596",
    "arabic8": "iso88596",
    "ecma114": "iso88596",
    "asmo708": "iso88596",

    "greek" : "iso88597",
    "greek8" : "iso88597",
    "ecma118" : "iso88597",
    "elot928" : "iso88597",

    "hebrew": "iso88598",
    "hebrew8": "iso88598",

    "turkish": "iso88599",
    "turkish8": "iso88599",

    "thai": "iso885911",
    "thai8": "iso885911",

    "celtic": "iso885914",
    "celtic8": "iso885914",
    "isoceltic": "iso885914",

    "tis6200": "tis620",
    "tis62025291": "tis620",
    "tis62025330": "tis620",

    "10000": "macroman",
    "10006": "macgreek",
    "10007": "maccyrillic",
    "10079": "maciceland",
    "10081": "macturkish",

    "cspc8codepage437": "cp437",
    "cspc775baltic": "cp775",
    "cspc850multilingual": "cp850",
    "cspcp852": "cp852",
    "cspc862latinhebrew": "cp862",
    "cpgr": "cp869",

    "msee": "cp1250",
    "mscyrl": "cp1251",
    "msansi": "cp1252",
    "msgreek": "cp1253",
    "msturk": "cp1254",
    "mshebr": "cp1255",
    "msarab": "cp1256",
    "winbaltrim": "cp1257",

    "cp20866": "koi8r",
    "20866": "koi8r",
    "ibm878": "koi8r",
    "cskoi8r": "koi8r",

    "cp21866": "koi8u",
    "21866": "koi8u",
    "ibm1168": "koi8u",

    "strk10482002": "rk1048",

    "tcvn5712": "tcvn",
    "tcvn57121": "tcvn",

    "gb198880": "iso646cn",
    "cn": "iso646cn",

    "csiso14jisc6220ro": "iso646jp",
    "jisc62201969ro": "iso646jp",
    "jp": "iso646jp",

    "cshproman8": "hproman8",
    "r8": "hproman8",
    "roman8": "hproman8",
    "xroman8": "hproman8",
    "ibm1051": "hproman8",

    "mac": "macintosh",
    "csmacintosh": "macintosh",
};

 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\utf16.js 
------------------------------------------------------ 
"use strict";
var Buffer = require("safer-buffer").Buffer;

// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js

// == UTF16-BE codec. ==========================================================

exports.utf16be = Utf16BECodec;
function Utf16BECodec() {
}

Utf16BECodec.prototype.encoder = Utf16BEEncoder;
Utf16BECodec.prototype.decoder = Utf16BEDecoder;
Utf16BECodec.prototype.bomAware = true;


// -- Encoding

function Utf16BEEncoder() {
}

Utf16BEEncoder.prototype.write = function(str) {
    var buf = Buffer.from(str, 'ucs2');
    for (var i = 0; i < buf.length; i += 2) {
        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;
    }
    return buf;
}

Utf16BEEncoder.prototype.end = function() {
}


// -- Decoding

function Utf16BEDecoder() {
    this.overflowByte = -1;
}

Utf16BEDecoder.prototype.write = function(buf) {
    if (buf.length == 0)
        return '';

    var buf2 = Buffer.alloc(buf.length + 1),
        i = 0, j = 0;

    if (this.overflowByte !== -1) {
        buf2[0] = buf[0];
        buf2[1] = this.overflowByte;
        i = 1; j = 2;
    }

    for (; i < buf.length-1; i += 2, j+= 2) {
        buf2[j] = buf[i+1];
        buf2[j+1] = buf[i];
    }

    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;

    return buf2.slice(0, j).toString('ucs2');
}

Utf16BEDecoder.prototype.end = function() {
    this.overflowByte = -1;
}


// == UTF-16 codec =============================================================
// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.
// Defaults to UTF-16LE, as it's prevalent and default in Node.
// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le
// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});

// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).

exports.utf16 = Utf16Codec;
function Utf16Codec(codecOptions, iconv) {
    this.iconv = iconv;
}

Utf16Codec.prototype.encoder = Utf16Encoder;
Utf16Codec.prototype.decoder = Utf16Decoder;


// -- Encoding (pass-through)

function Utf16Encoder(options, codec) {
    options = options || {};
    if (options.addBOM === undefined)
        options.addBOM = true;
    this.encoder = codec.iconv.getEncoder('utf-16le', options);
}

Utf16Encoder.prototype.write = function(str) {
    return this.encoder.write(str);
}

Utf16Encoder.prototype.end = function() {
    return this.encoder.end();
}


// -- Decoding

function Utf16Decoder(options, codec) {
    this.decoder = null;
    this.initialBufs = [];
    this.initialBufsLen = 0;

    this.options = options || {};
    this.iconv = codec.iconv;
}

Utf16Decoder.prototype.write = function(buf) {
    if (!this.decoder) {
        // Codec is not chosen yet. Accumulate initial bytes.
        this.initialBufs.push(buf);
        this.initialBufsLen += buf.length;
        
        if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)
            return '';

        // We have enough bytes -> detect endianness.
        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);

        var resStr = '';
        for (var i = 0; i < this.initialBufs.length; i++)
            resStr += this.decoder.write(this.initialBufs[i]);

        this.initialBufs.length = this.initialBufsLen = 0;
        return resStr;
    }

    return this.decoder.write(buf);
}

Utf16Decoder.prototype.end = function() {
    if (!this.decoder) {
        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);

        var resStr = '';
        for (var i = 0; i < this.initialBufs.length; i++)
            resStr += this.decoder.write(this.initialBufs[i]);

        var trail = this.decoder.end();
        if (trail)
            resStr += trail;

        this.initialBufs.length = this.initialBufsLen = 0;
        return resStr;
    }
    return this.decoder.end();
}

function detectEncoding(bufs, defaultEncoding) {
    var b = [];
    var charsProcessed = 0;
    var asciiCharsLE = 0, asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.

    outer_loop:
    for (var i = 0; i < bufs.length; i++) {
        var buf = bufs[i];
        for (var j = 0; j < buf.length; j++) {
            b.push(buf[j]);
            if (b.length === 2) {
                if (charsProcessed === 0) {
                    // Check BOM first.
                    if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';
                    if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';
                }

                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;
                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;

                b.length = 0;
                charsProcessed++;

                if (charsProcessed >= 100) {
                    break outer_loop;
                }
            }
        }
    }

    // Make decisions.
    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.
    // So, we count ASCII as if it was LE or BE, and decide from that.
    if (asciiCharsBE > asciiCharsLE) return 'utf-16be';
    if (asciiCharsBE < asciiCharsLE) return 'utf-16le';

    // Couldn't decide (likely all zeros or not enough data).
    return defaultEncoding || 'utf-16le';
}


 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\utf32.js 
------------------------------------------------------ 
'use strict';

var Buffer = require('safer-buffer').Buffer;

// == UTF32-LE/BE codec. ==========================================================

exports._utf32 = Utf32Codec;

function Utf32Codec(codecOptions, iconv) {
    this.iconv = iconv;
    this.bomAware = true;
    this.isLE = codecOptions.isLE;
}

exports.utf32le = { type: '_utf32', isLE: true };
exports.utf32be = { type: '_utf32', isLE: false };

// Aliases
exports.ucs4le = 'utf32le';
exports.ucs4be = 'utf32be';

Utf32Codec.prototype.encoder = Utf32Encoder;
Utf32Codec.prototype.decoder = Utf32Decoder;

// -- Encoding

function Utf32Encoder(options, codec) {
    this.isLE = codec.isLE;
    this.highSurrogate = 0;
}

Utf32Encoder.prototype.write = function(str) {
    var src = Buffer.from(str, 'ucs2');
    var dst = Buffer.alloc(src.length * 2);
    var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;
    var offset = 0;

    for (var i = 0; i < src.length; i += 2) {
        var code = src.readUInt16LE(i);
        var isHighSurrogate = (0xD800 <= code && code < 0xDC00);
        var isLowSurrogate = (0xDC00 <= code && code < 0xE000);

        if (this.highSurrogate) {
            if (isHighSurrogate || !isLowSurrogate) {
                // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low
                // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character
                // (technically wrong, but expected by some applications, like Windows file names).
                write32.call(dst, this.highSurrogate, offset);
                offset += 4;
            }
            else {
                // Create 32-bit value from high and low surrogates;
                var codepoint = (((this.highSurrogate - 0xD800) << 10) | (code - 0xDC00)) + 0x10000;

                write32.call(dst, codepoint, offset);
                offset += 4;
                this.highSurrogate = 0;

                continue;
            }
        }

        if (isHighSurrogate)
            this.highSurrogate = code;
        else {
            // Even if the current character is a low surrogate, with no previous high surrogate, we'll
            // encode it as a semi-invalid stand-alone character for the same reasons expressed above for
            // unpaired high surrogates.
            write32.call(dst, code, offset);
            offset += 4;
            this.highSurrogate = 0;
        }
    }

    if (offset < dst.length)
        dst = dst.slice(0, offset);

    return dst;
};

Utf32Encoder.prototype.end = function() {
    // Treat any leftover high surrogate as a semi-valid independent character.
    if (!this.highSurrogate)
        return;

    var buf = Buffer.alloc(4);

    if (this.isLE)
        buf.writeUInt32LE(this.highSurrogate, 0);
    else
        buf.writeUInt32BE(this.highSurrogate, 0);

    this.highSurrogate = 0;

    return buf;
};

// -- Decoding

function Utf32Decoder(options, codec) {
    this.isLE = codec.isLE;
    this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);
    this.overflow = [];
}

Utf32Decoder.prototype.write = function(src) {
    if (src.length === 0)
        return '';

    var i = 0;
    var codepoint = 0;
    var dst = Buffer.alloc(src.length + 4);
    var offset = 0;
    var isLE = this.isLE;
    var overflow = this.overflow;
    var badChar = this.badChar;

    if (overflow.length > 0) {
        for (; i < src.length && overflow.length < 4; i++)
            overflow.push(src[i]);
        
        if (overflow.length === 4) {
            // NOTE: codepoint is a signed int32 and can be negative.
            // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).
            if (isLE) {
                codepoint = overflow[i] | (overflow[i+1] << 8) | (overflow[i+2] << 16) | (overflow[i+3] << 24);
            } else {
                codepoint = overflow[i+3] | (overflow[i+2] << 8) | (overflow[i+1] << 16) | (overflow[i] << 24);
            }
            overflow.length = 0;

            offset = _writeCodepoint(dst, offset, codepoint, badChar);
        }
    }

    // Main loop. Should be as optimized as possible.
    for (; i < src.length - 3; i += 4) {
        // NOTE: codepoint is a signed int32 and can be negative.
        if (isLE) {
            codepoint = src[i] | (src[i+1] << 8) | (src[i+2] << 16) | (src[i+3] << 24);
        } else {
            codepoint = src[i+3] | (src[i+2] << 8) | (src[i+1] << 16) | (src[i] << 24);
        }
        offset = _writeCodepoint(dst, offset, codepoint, badChar);
    }

    // Keep overflowing bytes.
    for (; i < src.length; i++) {
        overflow.push(src[i]);
    }

    return dst.slice(0, offset).toString('ucs2');
};

function _writeCodepoint(dst, offset, codepoint, badChar) {
    // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.
    if (codepoint < 0 || codepoint > 0x10FFFF) {
        // Not a valid Unicode codepoint
        codepoint = badChar;
    } 

    // Ephemeral Planes: Write high surrogate.
    if (codepoint >= 0x10000) {
        codepoint -= 0x10000;

        var high = 0xD800 | (codepoint >> 10);
        dst[offset++] = high & 0xff;
        dst[offset++] = high >> 8;

        // Low surrogate is written below.
        var codepoint = 0xDC00 | (codepoint & 0x3FF);
    }

    // Write BMP char or low surrogate.
    dst[offset++] = codepoint & 0xff;
    dst[offset++] = codepoint >> 8;

    return offset;
};

Utf32Decoder.prototype.end = function() {
    this.overflow.length = 0;
};

// == UTF-32 Auto codec =============================================================
// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.
// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32
// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});

// Encoder prepends BOM (which can be overridden with (addBOM: false}).

exports.utf32 = Utf32AutoCodec;
exports.ucs4 = 'utf32';

function Utf32AutoCodec(options, iconv) {
    this.iconv = iconv;
}

Utf32AutoCodec.prototype.encoder = Utf32AutoEncoder;
Utf32AutoCodec.prototype.decoder = Utf32AutoDecoder;

// -- Encoding

function Utf32AutoEncoder(options, codec) {
    options = options || {};

    if (options.addBOM === undefined)
        options.addBOM = true;

    this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);
}

Utf32AutoEncoder.prototype.write = function(str) {
    return this.encoder.write(str);
};

Utf32AutoEncoder.prototype.end = function() {
    return this.encoder.end();
};

// -- Decoding

function Utf32AutoDecoder(options, codec) {
    this.decoder = null;
    this.initialBufs = [];
    this.initialBufsLen = 0;
    this.options = options || {};
    this.iconv = codec.iconv;
}

Utf32AutoDecoder.prototype.write = function(buf) {
    if (!this.decoder) { 
        // Codec is not chosen yet. Accumulate initial bytes.
        this.initialBufs.push(buf);
        this.initialBufsLen += buf.length;

        if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)
            return '';

        // We have enough bytes -> detect endianness.
        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);

        var resStr = '';
        for (var i = 0; i < this.initialBufs.length; i++)
            resStr += this.decoder.write(this.initialBufs[i]);

        this.initialBufs.length = this.initialBufsLen = 0;
        return resStr;
    }

    return this.decoder.write(buf);
};

Utf32AutoDecoder.prototype.end = function() {
    if (!this.decoder) {
        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);

        var resStr = '';
        for (var i = 0; i < this.initialBufs.length; i++)
            resStr += this.decoder.write(this.initialBufs[i]);

        var trail = this.decoder.end();
        if (trail)
            resStr += trail;

        this.initialBufs.length = this.initialBufsLen = 0;
        return resStr;
    }

    return this.decoder.end();
};

function detectEncoding(bufs, defaultEncoding) {
    var b = [];
    var charsProcessed = 0;
    var invalidLE = 0, invalidBE = 0;   // Number of invalid chars when decoded as LE or BE.
    var bmpCharsLE = 0, bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.

    outer_loop:
    for (var i = 0; i < bufs.length; i++) {
        var buf = bufs[i];
        for (var j = 0; j < buf.length; j++) {
            b.push(buf[j]);
            if (b.length === 4) {
                if (charsProcessed === 0) {
                    // Check BOM first.
                    if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {
                        return 'utf-32le';
                    }
                    if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {
                        return 'utf-32be';
                    }
                }

                if (b[0] !== 0 || b[1] > 0x10) invalidBE++;
                if (b[3] !== 0 || b[2] > 0x10) invalidLE++;

                if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;
                if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;

                b.length = 0;
                charsProcessed++;

                if (charsProcessed >= 100) {
                    break outer_loop;
                }
            }
        }
    }

    // Make decisions.
    if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE)  return 'utf-32be';
    if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE)  return 'utf-32le';

    // Couldn't decide (likely all zeros or not enough data).
    return defaultEncoding || 'utf-32le';
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\utf7.js 
------------------------------------------------------ 
"use strict";
var Buffer = require("safer-buffer").Buffer;

// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152
// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3

exports.utf7 = Utf7Codec;
exports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7
function Utf7Codec(codecOptions, iconv) {
    this.iconv = iconv;
};

Utf7Codec.prototype.encoder = Utf7Encoder;
Utf7Codec.prototype.decoder = Utf7Decoder;
Utf7Codec.prototype.bomAware = true;


// -- Encoding

var nonDirectChars = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;

function Utf7Encoder(options, codec) {
    this.iconv = codec.iconv;
}

Utf7Encoder.prototype.write = function(str) {
    // Naive implementation.
    // Non-direct chars are encoded as "+<base64>-"; single "+" char is encoded as "+-".
    return Buffer.from(str.replace(nonDirectChars, function(chunk) {
        return "+" + (chunk === '+' ? '' : 
            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) 
            + "-";
    }.bind(this)));
}

Utf7Encoder.prototype.end = function() {
}


// -- Decoding

function Utf7Decoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = '';
}

var base64Regex = /[A-Za-z0-9\/+]/;
var base64Chars = [];
for (var i = 0; i < 256; i++)
    base64Chars[i] = base64Regex.test(String.fromCharCode(i));

var plusChar = '+'.charCodeAt(0), 
    minusChar = '-'.charCodeAt(0),
    andChar = '&'.charCodeAt(0);

Utf7Decoder.prototype.write = function(buf) {
    var res = "", lastI = 0,
        inBase64 = this.inBase64,
        base64Accum = this.base64Accum;

    // The decoder is more involved as we must handle chunks in stream.

    for (var i = 0; i < buf.length; i++) {
        if (!inBase64) { // We're in direct mode.
            // Write direct chars until '+'
            if (buf[i] == plusChar) {
                res += this.iconv.decode(buf.slice(lastI, i), "ascii"); // Write direct chars.
                lastI = i+1;
                inBase64 = true;
            }
        } else { // We decode base64.
            if (!base64Chars[buf[i]]) { // Base64 ended.
                if (i == lastI && buf[i] == minusChar) {// "+-" -> "+"
                    res += "+";
                } else {
                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), "ascii");
                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
                }

                if (buf[i] != minusChar) // Minus is absorbed after base64.
                    i--;

                lastI = i+1;
                inBase64 = false;
                base64Accum = '';
            }
        }
    }

    if (!inBase64) {
        res += this.iconv.decode(buf.slice(lastI), "ascii"); // Write direct chars.
    } else {
        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), "ascii");

        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.
        b64str = b64str.slice(0, canBeDecoded);

        res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
    }

    this.inBase64 = inBase64;
    this.base64Accum = base64Accum;

    return res;
}

Utf7Decoder.prototype.end = function() {
    var res = "";
    if (this.inBase64 && this.base64Accum.length > 0)
        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), "utf16-be");

    this.inBase64 = false;
    this.base64Accum = '';
    return res;
}


// UTF-7-IMAP codec.
// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)
// Differences:
//  * Base64 part is started by "&" instead of "+"
//  * Direct characters are 0x20-0x7E, except "&" (0x26)
//  * In Base64, "," is used instead of "/"
//  * Base64 must not be used to represent direct characters.
//  * No implicit shift back from Base64 (should always end with '-')
//  * String must end in non-shifted position.
//  * "-&" while in base64 is not allowed.


exports.utf7imap = Utf7IMAPCodec;
function Utf7IMAPCodec(codecOptions, iconv) {
    this.iconv = iconv;
};

Utf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;
Utf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;
Utf7IMAPCodec.prototype.bomAware = true;


// -- Encoding

function Utf7IMAPEncoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = Buffer.alloc(6);
    this.base64AccumIdx = 0;
}

Utf7IMAPEncoder.prototype.write = function(str) {
    var inBase64 = this.inBase64,
        base64Accum = this.base64Accum,
        base64AccumIdx = this.base64AccumIdx,
        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;

    for (var i = 0; i < str.length; i++) {
        var uChar = str.charCodeAt(i);
        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.
            if (inBase64) {
                if (base64AccumIdx > 0) {
                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\//g, ',').replace(/=+$/, ''), bufIdx);
                    base64AccumIdx = 0;
                }

                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.
                inBase64 = false;
            }

            if (!inBase64) {
                buf[bufIdx++] = uChar; // Write direct character

                if (uChar === andChar)  // Ampersand -> '&-'
                    buf[bufIdx++] = minusChar;
            }

        } else { // Non-direct character
            if (!inBase64) {
                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.
                inBase64 = true;
            }
            if (inBase64) {
                base64Accum[base64AccumIdx++] = uChar >> 8;
                base64Accum[base64AccumIdx++] = uChar & 0xFF;

                if (base64AccumIdx == base64Accum.length) {
                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\//g, ','), bufIdx);
                    base64AccumIdx = 0;
                }
            }
        }
    }

    this.inBase64 = inBase64;
    this.base64AccumIdx = base64AccumIdx;

    return buf.slice(0, bufIdx);
}

Utf7IMAPEncoder.prototype.end = function() {
    var buf = Buffer.alloc(10), bufIdx = 0;
    if (this.inBase64) {
        if (this.base64AccumIdx > 0) {
            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\//g, ',').replace(/=+$/, ''), bufIdx);
            this.base64AccumIdx = 0;
        }

        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.
        this.inBase64 = false;
    }

    return buf.slice(0, bufIdx);
}


// -- Decoding

function Utf7IMAPDecoder(options, codec) {
    this.iconv = codec.iconv;
    this.inBase64 = false;
    this.base64Accum = '';
}

var base64IMAPChars = base64Chars.slice();
base64IMAPChars[','.charCodeAt(0)] = true;

Utf7IMAPDecoder.prototype.write = function(buf) {
    var res = "", lastI = 0,
        inBase64 = this.inBase64,
        base64Accum = this.base64Accum;

    // The decoder is more involved as we must handle chunks in stream.
    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).

    for (var i = 0; i < buf.length; i++) {
        if (!inBase64) { // We're in direct mode.
            // Write direct chars until '&'
            if (buf[i] == andChar) {
                res += this.iconv.decode(buf.slice(lastI, i), "ascii"); // Write direct chars.
                lastI = i+1;
                inBase64 = true;
            }
        } else { // We decode base64.
            if (!base64IMAPChars[buf[i]]) { // Base64 ended.
                if (i == lastI && buf[i] == minusChar) { // "&-" -> "&"
                    res += "&";
                } else {
                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), "ascii").replace(/,/g, '/');
                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
                }

                if (buf[i] != minusChar) // Minus may be absorbed after base64.
                    i--;

                lastI = i+1;
                inBase64 = false;
                base64Accum = '';
            }
        }
    }

    if (!inBase64) {
        res += this.iconv.decode(buf.slice(lastI), "ascii"); // Write direct chars.
    } else {
        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), "ascii").replace(/,/g, '/');

        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.
        b64str = b64str.slice(0, canBeDecoded);

        res += this.iconv.decode(Buffer.from(b64str, 'base64'), "utf16-be");
    }

    this.inBase64 = inBase64;
    this.base64Accum = base64Accum;

    return res;
}

Utf7IMAPDecoder.prototype.end = function() {
    var res = "";
    if (this.inBase64 && this.base64Accum.length > 0)
        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), "utf16-be");

    this.inBase64 = false;
    this.base64Accum = '';
    return res;
}


 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\package.json 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\encodings\tables\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\lib\bom-handling.js 
------------------------------------------------------ 
"use strict";

var BOMChar = '\uFEFF';

exports.PrependBOM = PrependBOMWrapper
function PrependBOMWrapper(encoder, options) {
    this.encoder = encoder;
    this.addBOM = true;
}

PrependBOMWrapper.prototype.write = function(str) {
    if (this.addBOM) {
        str = BOMChar + str;
        this.addBOM = false;
    }

    return this.encoder.write(str);
}

PrependBOMWrapper.prototype.end = function() {
    return this.encoder.end();
}


//------------------------------------------------------------------------------

exports.StripBOM = StripBOMWrapper;
function StripBOMWrapper(decoder, options) {
    this.decoder = decoder;
    this.pass = false;
    this.options = options || {};
}

StripBOMWrapper.prototype.write = function(buf) {
    var res = this.decoder.write(buf);
    if (this.pass || !res)
        return res;

    if (res[0] === BOMChar) {
        res = res.slice(1);
        if (typeof this.options.stripBOM === 'function')
            this.options.stripBOM();
    }

    this.pass = true;
    return res;
}

StripBOMWrapper.prototype.end = function() {
    return this.decoder.end();
}

 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\lib\index.js 
------------------------------------------------------ 
"use strict";

var Buffer = require("safer-buffer").Buffer;

var bomHandling = require("./bom-handling"),
    iconv = module.exports;

// All codecs and aliases are kept here, keyed by encoding name/alias.
// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.
iconv.encodings = null;

// Characters emitted in case of error.
iconv.defaultCharUnicode = '�';
iconv.defaultCharSingleByte = '?';

// Public API.
iconv.encode = function encode(str, encoding, options) {
    str = "" + (str || ""); // Ensure string.

    var encoder = iconv.getEncoder(encoding, options);

    var res = encoder.write(str);
    var trail = encoder.end();
    
    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;
}

iconv.decode = function decode(buf, encoding, options) {
    if (typeof buf === 'string') {
        if (!iconv.skipDecodeWarning) {
            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');
            iconv.skipDecodeWarning = true;
        }

        buf = Buffer.from("" + (buf || ""), "binary"); // Ensure buffer.
    }

    var decoder = iconv.getDecoder(encoding, options);

    var res = decoder.write(buf);
    var trail = decoder.end();

    return trail ? (res + trail) : res;
}

iconv.encodingExists = function encodingExists(enc) {
    try {
        iconv.getCodec(enc);
        return true;
    } catch (e) {
        return false;
    }
}

// Legacy aliases to convert functions
iconv.toEncoding = iconv.encode;
iconv.fromEncoding = iconv.decode;

// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.
iconv._codecDataCache = {};
iconv.getCodec = function getCodec(encoding) {
    if (!iconv.encodings)
        iconv.encodings = require("../encodings"); // Lazy load all encoding definitions.
    
    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.
    var enc = iconv._canonicalizeEncoding(encoding);

    // Traverse iconv.encodings to find actual codec.
    var codecOptions = {};
    while (true) {
        var codec = iconv._codecDataCache[enc];
        if (codec)
            return codec;

        var codecDef = iconv.encodings[enc];

        switch (typeof codecDef) {
            case "string": // Direct alias to other encoding.
                enc = codecDef;
                break;

            case "object": // Alias with options. Can be layered.
                for (var key in codecDef)
                    codecOptions[key] = codecDef[key];

                if (!codecOptions.encodingName)
                    codecOptions.encodingName = enc;
                
                enc = codecDef.type;
                break;

            case "function": // Codec itself.
                if (!codecOptions.encodingName)
                    codecOptions.encodingName = enc;

                // The codec function must load all tables and return object with .encoder and .decoder methods.
                // It'll be called only once (for each different options object).
                codec = new codecDef(codecOptions, iconv);

                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.
                return codec;

            default:
                throw new Error("Encoding not recognized: '" + encoding + "' (searched as: '"+enc+"')");
        }
    }
}

iconv._canonicalizeEncoding = function(encoding) {
    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.
    return (''+encoding).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g, "");
}

iconv.getEncoder = function getEncoder(encoding, options) {
    var codec = iconv.getCodec(encoding),
        encoder = new codec.encoder(options, codec);

    if (codec.bomAware && options && options.addBOM)
        encoder = new bomHandling.PrependBOM(encoder, options);

    return encoder;
}

iconv.getDecoder = function getDecoder(encoding, options) {
    var codec = iconv.getCodec(encoding),
        decoder = new codec.decoder(options, codec);

    if (codec.bomAware && !(options && options.stripBOM === false))
        decoder = new bomHandling.StripBOM(decoder, options);

    return decoder;
}

// Streaming API
// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add
// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.
// If you would like to enable it explicitly, please add the following code to your app:
// > iconv.enableStreamingAPI(require('stream'));
iconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {
    if (iconv.supportsStreams)
        return;

    // Dependency-inject stream module to create IconvLite stream classes.
    var streams = require("./streams")(stream_module);

    // Not public API yet, but expose the stream classes.
    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;
    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;

    // Streaming API.
    iconv.encodeStream = function encodeStream(encoding, options) {
        return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);
    }

    iconv.decodeStream = function decodeStream(encoding, options) {
        return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);
    }

    iconv.supportsStreams = true;
}

// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).
var stream_module;
try {
    stream_module = require("stream");
} catch (e) {}

if (stream_module && stream_module.Transform) {
    iconv.enableStreamingAPI(stream_module);

} else {
    // In rare cases where 'stream' module is not available by default, throw a helpful exception.
    iconv.encodeStream = iconv.decodeStream = function() {
        throw new Error("iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.");
    };
}

if ("Ā" != "\u0100") {
    console.error("iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.");
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\lib\streams.js 
------------------------------------------------------ 
"use strict";

var Buffer = require("safer-buffer").Buffer;

// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), 
// we opt to dependency-inject it instead of creating a hard dependency.
module.exports = function(stream_module) {
    var Transform = stream_module.Transform;

    // == Encoder stream =======================================================

    function IconvLiteEncoderStream(conv, options) {
        this.conv = conv;
        options = options || {};
        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.
        Transform.call(this, options);
    }

    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {
        constructor: { value: IconvLiteEncoderStream }
    });

    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {
        if (typeof chunk != 'string')
            return done(new Error("Iconv encoding stream needs strings as its input."));
        try {
            var res = this.conv.write(chunk);
            if (res && res.length) this.push(res);
            done();
        }
        catch (e) {
            done(e);
        }
    }

    IconvLiteEncoderStream.prototype._flush = function(done) {
        try {
            var res = this.conv.end();
            if (res && res.length) this.push(res);
            done();
        }
        catch (e) {
            done(e);
        }
    }

    IconvLiteEncoderStream.prototype.collect = function(cb) {
        var chunks = [];
        this.on('error', cb);
        this.on('data', function(chunk) { chunks.push(chunk); });
        this.on('end', function() {
            cb(null, Buffer.concat(chunks));
        });
        return this;
    }


    // == Decoder stream =======================================================

    function IconvLiteDecoderStream(conv, options) {
        this.conv = conv;
        options = options || {};
        options.encoding = this.encoding = 'utf8'; // We output strings.
        Transform.call(this, options);
    }

    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {
        constructor: { value: IconvLiteDecoderStream }
    });

    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {
        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))
            return done(new Error("Iconv decoding stream needs buffers as its input."));
        try {
            var res = this.conv.write(chunk);
            if (res && res.length) this.push(res, this.encoding);
            done();
        }
        catch (e) {
            done(e);
        }
    }

    IconvLiteDecoderStream.prototype._flush = function(done) {
        try {
            var res = this.conv.end();
            if (res && res.length) this.push(res, this.encoding);                
            done();
        }
        catch (e) {
            done(e);
        }
    }

    IconvLiteDecoderStream.prototype.collect = function(cb) {
        var res = '';
        this.on('error', cb);
        this.on('data', function(chunk) { res += chunk; });
        this.on('end', function() {
            cb(null, res);
        });
        return this;
    }

    return {
        IconvLiteEncoderStream: IconvLiteEncoderStream,
        IconvLiteDecoderStream: IconvLiteDecoderStream,
    };
};
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\iconv-lite\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ieee754\index.js 
------------------------------------------------------ 
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ieee754\package.json 
------------------------------------------------------ 
{
  "name": "ieee754",
  "description": "Read/write IEEE754 floating point numbers from/to a Buffer or array-like object",
  "version": "1.2.1",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "https://feross.org"
  },
  "contributors": [
    "Romain Beauxis <toots@rastageeks.org>"
  ],
  "devDependencies": {
    "airtap": "^3.0.0",
    "standard": "*",
    "tape": "^5.0.1"
  },
  "keywords": [
    "IEEE 754",
    "buffer",
    "convert",
    "floating point",
    "ieee754"
  ],
  "license": "BSD-3-Clause",
  "main": "index.js",
  "types": "index.d.ts",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/ieee754.git"
  },
  "scripts": {
    "test": "standard && npm run test-node && npm run test-browser",
    "test-browser": "airtap -- test/*.js",
    "test-browser-local": "airtap --local -- test/*.js",
    "test-node": "tape test/*.js"
  },
  "funding": [
    {
      "type": "github",
      "url": "https://github.com/sponsors/feross"
    },
    {
      "type": "patreon",
      "url": "https://www.patreon.com/feross"
    },
    {
      "type": "consulting",
      "url": "https://feross.org/support"
    }
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\imurmurhash\imurmurhash.js 
------------------------------------------------------ 
/**
 * @preserve
 * JS Implementation of incremental MurmurHash3 (r150) (as of May 10, 2013)
 *
 * @author <a href="mailto:jensyt@gmail.com">Jens Taylor</a>
 * @see http://github.com/homebrewing/brauhaus-diff
 * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
 * @see http://github.com/garycourt/murmurhash-js
 * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
 * @see http://sites.google.com/site/murmurhash/
 */
(function(){
    var cache;

    // Call this function without `new` to use the cached object (good for
    // single-threaded environments), or with `new` to create a new object.
    //
    // @param {string} key A UTF-16 or ASCII string
    // @param {number} seed An optional positive integer
    // @return {object} A MurmurHash3 object for incremental hashing
    function MurmurHash3(key, seed) {
        var m = this instanceof MurmurHash3 ? this : cache;
        m.reset(seed)
        if (typeof key === 'string' && key.length > 0) {
            m.hash(key);
        }

        if (m !== this) {
            return m;
        }
    };

    // Incrementally add a string to this hash
    //
    // @param {string} key A UTF-16 or ASCII string
    // @return {object} this
    MurmurHash3.prototype.hash = function(key) {
        var h1, k1, i, top, len;

        len = key.length;
        this.len += len;

        k1 = this.k1;
        i = 0;
        switch (this.rem) {
            case 0: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) : 0;
            case 1: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 8 : 0;
            case 2: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 16 : 0;
            case 3:
                k1 ^= len > i ? (key.charCodeAt(i) & 0xff) << 24 : 0;
                k1 ^= len > i ? (key.charCodeAt(i++) & 0xff00) >> 8 : 0;
        }

        this.rem = (len + this.rem) & 3; // & 3 is same as % 4
        len -= this.rem;
        if (len > 0) {
            h1 = this.h1;
            while (1) {
                k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;
                k1 = (k1 << 15) | (k1 >>> 17);
                k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;

                h1 ^= k1;
                h1 = (h1 << 13) | (h1 >>> 19);
                h1 = (h1 * 5 + 0xe6546b64) & 0xffffffff;

                if (i >= len) {
                    break;
                }

                k1 = ((key.charCodeAt(i++) & 0xffff)) ^
                     ((key.charCodeAt(i++) & 0xffff) << 8) ^
                     ((key.charCodeAt(i++) & 0xffff) << 16);
                top = key.charCodeAt(i++);
                k1 ^= ((top & 0xff) << 24) ^
                      ((top & 0xff00) >> 8);
            }

            k1 = 0;
            switch (this.rem) {
                case 3: k1 ^= (key.charCodeAt(i + 2) & 0xffff) << 16;
                case 2: k1 ^= (key.charCodeAt(i + 1) & 0xffff) << 8;
                case 1: k1 ^= (key.charCodeAt(i) & 0xffff);
            }

            this.h1 = h1;
        }

        this.k1 = k1;
        return this;
    };

    // Get the result of this hash
    //
    // @return {number} The 32-bit hash
    MurmurHash3.prototype.result = function() {
        var k1, h1;
        
        k1 = this.k1;
        h1 = this.h1;

        if (k1 > 0) {
            k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;
            k1 = (k1 << 15) | (k1 >>> 17);
            k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;
            h1 ^= k1;
        }

        h1 ^= this.len;

        h1 ^= h1 >>> 16;
        h1 = (h1 * 0xca6b + (h1 & 0xffff) * 0x85eb0000) & 0xffffffff;
        h1 ^= h1 >>> 13;
        h1 = (h1 * 0xae35 + (h1 & 0xffff) * 0xc2b20000) & 0xffffffff;
        h1 ^= h1 >>> 16;

        return h1 >>> 0;
    };

    // Reset the hash object for reuse
    //
    // @param {number} seed An optional positive integer
    MurmurHash3.prototype.reset = function(seed) {
        this.h1 = typeof seed === 'number' ? seed : 0;
        this.rem = this.k1 = this.len = 0;
        return this;
    };

    // A cached object to use. This can be safely used if you're in a single-
    // threaded environment, otherwise you need to create new hashes to use.
    cache = new MurmurHash3();

    if (typeof(module) != 'undefined') {
        module.exports = MurmurHash3;
    } else {
        this.MurmurHash3 = MurmurHash3;
    }
}());
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\imurmurhash\imurmurhash.min.js 
------------------------------------------------------ 
/**
 * @preserve
 * JS Implementation of incremental MurmurHash3 (r150) (as of May 10, 2013)
 *
 * @author <a href="mailto:jensyt@gmail.com">Jens Taylor</a>
 * @see http://github.com/homebrewing/brauhaus-diff
 * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
 * @see http://github.com/garycourt/murmurhash-js
 * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
 * @see http://sites.google.com/site/murmurhash/
 */
!function(){function t(h,r){var s=this instanceof t?this:e;return s.reset(r),"string"==typeof h&&h.length>0&&s.hash(h),s!==this?s:void 0}var e;t.prototype.hash=function(t){var e,h,r,s,i;switch(i=t.length,this.len+=i,h=this.k1,r=0,this.rem){case 0:h^=i>r?65535&t.charCodeAt(r++):0;case 1:h^=i>r?(65535&t.charCodeAt(r++))<<8:0;case 2:h^=i>r?(65535&t.charCodeAt(r++))<<16:0;case 3:h^=i>r?(255&t.charCodeAt(r))<<24:0,h^=i>r?(65280&t.charCodeAt(r++))>>8:0}if(this.rem=3&i+this.rem,i-=this.rem,i>0){for(e=this.h1;;){if(h=4294967295&11601*h+3432906752*(65535&h),h=h<<15|h>>>17,h=4294967295&13715*h+461832192*(65535&h),e^=h,e=e<<13|e>>>19,e=4294967295&5*e+3864292196,r>=i)break;h=65535&t.charCodeAt(r++)^(65535&t.charCodeAt(r++))<<8^(65535&t.charCodeAt(r++))<<16,s=t.charCodeAt(r++),h^=(255&s)<<24^(65280&s)>>8}switch(h=0,this.rem){case 3:h^=(65535&t.charCodeAt(r+2))<<16;case 2:h^=(65535&t.charCodeAt(r+1))<<8;case 1:h^=65535&t.charCodeAt(r)}this.h1=e}return this.k1=h,this},t.prototype.result=function(){var t,e;return t=this.k1,e=this.h1,t>0&&(t=4294967295&11601*t+3432906752*(65535&t),t=t<<15|t>>>17,t=4294967295&13715*t+461832192*(65535&t),e^=t),e^=this.len,e^=e>>>16,e=4294967295&51819*e+2246770688*(65535&e),e^=e>>>13,e=4294967295&44597*e+3266445312*(65535&e),e^=e>>>16,e>>>0},t.prototype.reset=function(t){return this.h1="number"==typeof t?t:0,this.rem=this.k1=this.len=0,this},e=new t,"undefined"!=typeof module?module.exports=t:this.MurmurHash3=t}(); 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\imurmurhash\package.json 
------------------------------------------------------ 
{
  "name": "imurmurhash",
  "version": "0.1.4",
  "description": "An incremental implementation of MurmurHash3",
  "homepage": "https://github.com/jensyt/imurmurhash-js",
  "main": "imurmurhash.js",
  "files": [
    "imurmurhash.js",
    "imurmurhash.min.js",
    "package.json",
    "README.md"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/jensyt/imurmurhash-js"
  },
  "bugs": {
    "url": "https://github.com/jensyt/imurmurhash-js/issues"
  },
  "keywords": [
    "murmur",
    "murmurhash",
    "murmurhash3",
    "hash",
    "incremental"
  ],
  "author": {
    "name": "Jens Taylor",
    "email": "jensyt@gmail.com",
    "url": "https://github.com/homebrewing"
  },
  "license": "MIT",
  "dependencies": {
  },
  "devDependencies": {
  },
  "engines": {
    "node": ">=0.8.19"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\indent-string\index.js 
------------------------------------------------------ 
'use strict';

module.exports = (string, count = 1, options) => {
	options = {
		indent: ' ',
		includeEmptyLines: false,
		...options
	};

	if (typeof string !== 'string') {
		throw new TypeError(
			`Expected \`input\` to be a \`string\`, got \`${typeof string}\``
		);
	}

	if (typeof count !== 'number') {
		throw new TypeError(
			`Expected \`count\` to be a \`number\`, got \`${typeof count}\``
		);
	}

	if (typeof options.indent !== 'string') {
		throw new TypeError(
			`Expected \`options.indent\` to be a \`string\`, got \`${typeof options.indent}\``
		);
	}

	if (count === 0) {
		return string;
	}

	const regex = options.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;

	return string.replace(regex, options.indent.repeat(count));
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\indent-string\package.json 
------------------------------------------------------ 
{
	"name": "indent-string",
	"version": "4.0.0",
	"description": "Indent each line in a string",
	"license": "MIT",
	"repository": "sindresorhus/indent-string",
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "sindresorhus.com"
	},
	"engines": {
		"node": ">=8"
	},
	"scripts": {
		"test": "xo && ava && tsd"
	},
	"files": [
		"index.js",
		"index.d.ts"
	],
	"keywords": [
		"indent",
		"string",
		"pad",
		"align",
		"line",
		"text",
		"each",
		"every"
	],
	"devDependencies": {
		"ava": "^1.4.1",
		"tsd": "^0.7.2",
		"xo": "^0.24.0"
	}
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\infer-owner\index.js 
------------------------------------------------------ 
const cache = new Map()
const fs = require('fs')
const { dirname, resolve } = require('path')


const lstat = path => new Promise((res, rej) =>
  fs.lstat(path, (er, st) => er ? rej(er) : res(st)))

const inferOwner = path => {
  path = resolve(path)
  if (cache.has(path))
    return Promise.resolve(cache.get(path))

  const statThen = st => {
    const { uid, gid } = st
    cache.set(path, { uid, gid })
    return { uid, gid }
  }
  const parent = dirname(path)
  const parentTrap = parent === path ? null : er => {
    return inferOwner(parent).then((owner) => {
      cache.set(path, owner)
      return owner
    })
  }
  return lstat(path).then(statThen, parentTrap)
}

const inferOwnerSync = path => {
  path = resolve(path)
  if (cache.has(path))
    return cache.get(path)

  const parent = dirname(path)

  // avoid obscuring call site by re-throwing
  // "catch" the error by returning from a finally,
  // only if we're not at the root, and the parent call works.
  let threw = true
  try {
    const st = fs.lstatSync(path)
    threw = false
    const { uid, gid } = st
    cache.set(path, { uid, gid })
    return { uid, gid }
  } finally {
    if (threw && parent !== path) {
      const owner = inferOwnerSync(parent)
      cache.set(path, owner)
      return owner // eslint-disable-line no-unsafe-finally
    }
  }
}

const inflight = new Map()
module.exports = path => {
  path = resolve(path)
  if (inflight.has(path))
    return Promise.resolve(inflight.get(path))
  const p = inferOwner(path).then(owner => {
    inflight.delete(path)
    return owner
  })
  inflight.set(path, p)
  return p
}
module.exports.sync = inferOwnerSync
module.exports.clearCache = () => {
  cache.clear()
  inflight.clear()
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\infer-owner\package.json 
------------------------------------------------------ 
{
  "name": "infer-owner",
  "version": "1.0.4",
  "description": "Infer the owner of a path based on the owner of its nearest existing parent",
  "author": "Isaac Z. Schlueter <i@izs.me> (https://izs.me)",
  "license": "ISC",
  "scripts": {
    "test": "tap -J test/*.js --100",
    "snap": "TAP_SNAPSHOT=1 tap -J test/*.js --100",
    "preversion": "npm test",
    "postversion": "npm publish",
    "postpublish": "git push origin --follow-tags"
  },
  "devDependencies": {
    "mutate-fs": "^2.1.1",
    "tap": "^12.4.2"
  },
  "main": "index.js",
  "repository": "https://github.com/npm/infer-owner",
  "publishConfig": {
    "access": "public"
  },
  "files": [
    "index.js"
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\inflight\inflight.js 
------------------------------------------------------ 
var wrappy = require('wrappy')
var reqs = Object.create(null)
var once = require('once')

module.exports = wrappy(inflight)

function inflight (key, cb) {
  if (reqs[key]) {
    reqs[key].push(cb)
    return null
  } else {
    reqs[key] = [cb]
    return makeres(key)
  }
}

function makeres (key) {
  return once(function RES () {
    var cbs = reqs[key]
    var len = cbs.length
    var args = slice(arguments)

    // XXX It's somewhat ambiguous whether a new callback added in this
    // pass should be queued for later execution if something in the
    // list of callbacks throws, or if it should just be discarded.
    // However, it's such an edge case that it hardly matters, and either
    // choice is likely as surprising as the other.
    // As it happens, we do go ahead and schedule it for later execution.
    try {
      for (var i = 0; i < len; i++) {
        cbs[i].apply(null, args)
      }
    } finally {
      if (cbs.length > len) {
        // added more in the interim.
        // de-zalgo, just in case, but don't call again.
        cbs.splice(0, len)
        process.nextTick(function () {
          RES.apply(null, args)
        })
      } else {
        delete reqs[key]
      }
    }
  })
}

function slice (args) {
  var length = args.length
  var array = []

  for (var i = 0; i < length; i++) array[i] = args[i]
  return array
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\inflight\package.json 
------------------------------------------------------ 
{
  "name": "inflight",
  "version": "1.0.6",
  "description": "Add callbacks to requests in flight to avoid async duplication",
  "main": "inflight.js",
  "files": [
    "inflight.js"
  ],
  "dependencies": {
    "once": "^1.3.0",
    "wrappy": "1"
  },
  "devDependencies": {
    "tap": "^7.1.2"
  },
  "scripts": {
    "test": "tap test.js --100"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/npm/inflight.git"
  },
  "author": "Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)",
  "bugs": {
    "url": "https://github.com/isaacs/inflight/issues"
  },
  "homepage": "https://github.com/isaacs/inflight",
  "license": "ISC"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\inherits\inherits.js 
------------------------------------------------------ 
try {
  var util = require('util');
  /* istanbul ignore next */
  if (typeof util.inherits !== 'function') throw '';
  module.exports = util.inherits;
} catch (e) {
  /* istanbul ignore next */
  module.exports = require('./inherits_browser.js');
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\inherits\inherits_browser.js 
------------------------------------------------------ 
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\inherits\package.json 
------------------------------------------------------ 
{
  "name": "inherits",
  "description": "Browser-friendly inheritance fully compatible with standard node.js inherits()",
  "version": "2.0.4",
  "keywords": [
    "inheritance",
    "class",
    "klass",
    "oop",
    "object-oriented",
    "inherits",
    "browser",
    "browserify"
  ],
  "main": "./inherits.js",
  "browser": "./inherits_browser.js",
  "repository": "git://github.com/isaacs/inherits",
  "license": "ISC",
  "scripts": {
    "test": "tap"
  },
  "devDependencies": {
    "tap": "^14.2.4"
  },
  "files": [
    "inherits.js",
    "inherits_browser.js"
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ini\ini.js 
------------------------------------------------------ 
exports.parse = exports.decode = decode

exports.stringify = exports.encode = encode

exports.safe = safe
exports.unsafe = unsafe

var eol = typeof process !== 'undefined' &&
  process.platform === 'win32' ? '\r\n' : '\n'

function encode (obj, opt) {
  var children = []
  var out = ''

  if (typeof opt === 'string') {
    opt = {
      section: opt,
      whitespace: false,
    }
  } else {
    opt = opt || {}
    opt.whitespace = opt.whitespace === true
  }

  var separator = opt.whitespace ? ' = ' : '='

  Object.keys(obj).forEach(function (k, _, __) {
    var val = obj[k]
    if (val && Array.isArray(val)) {
      val.forEach(function (item) {
        out += safe(k + '[]') + separator + safe(item) + '\n'
      })
    } else if (val && typeof val === 'object')
      children.push(k)
    else
      out += safe(k) + separator + safe(val) + eol
  })

  if (opt.section && out.length)
    out = '[' + safe(opt.section) + ']' + eol + out

  children.forEach(function (k, _, __) {
    var nk = dotSplit(k).join('\\.')
    var section = (opt.section ? opt.section + '.' : '') + nk
    var child = encode(obj[k], {
      section: section,
      whitespace: opt.whitespace,
    })
    if (out.length && child.length)
      out += eol

    out += child
  })

  return out
}

function dotSplit (str) {
  return str.replace(/\1/g, '\u0002LITERAL\\1LITERAL\u0002')
    .replace(/\\\./g, '\u0001')
    .split(/\./).map(function (part) {
      return part.replace(/\1/g, '\\.')
        .replace(/\2LITERAL\\1LITERAL\2/g, '\u0001')
    })
}

function decode (str) {
  var out = {}
  var p = out
  var section = null
  //          section     |key      = value
  var re = /^\[([^\]]*)\]$|^([^=]+)(=(.*))?$/i
  var lines = str.split(/[\r\n]+/g)

  lines.forEach(function (line, _, __) {
    if (!line || line.match(/^\s*[;#]/))
      return
    var match = line.match(re)
    if (!match)
      return
    if (match[1] !== undefined) {
      section = unsafe(match[1])
      if (section === '__proto__') {
        // not allowed
        // keep parsing the section, but don't attach it.
        p = {}
        return
      }
      p = out[section] = out[section] || {}
      return
    }
    var key = unsafe(match[2])
    if (key === '__proto__')
      return
    var value = match[3] ? unsafe(match[4]) : true
    switch (value) {
      case 'true':
      case 'false':
      case 'null': value = JSON.parse(value)
    }

    // Convert keys with '[]' suffix to an array
    if (key.length > 2 && key.slice(-2) === '[]') {
      key = key.substring(0, key.length - 2)
      if (key === '__proto__')
        return
      if (!p[key])
        p[key] = []
      else if (!Array.isArray(p[key]))
        p[key] = [p[key]]
    }

    // safeguard against resetting a previously defined
    // array by accidentally forgetting the brackets
    if (Array.isArray(p[key]))
      p[key].push(value)
    else
      p[key] = value
  })

  // {a:{y:1},"a.b":{x:2}} --> {a:{y:1,b:{x:2}}}
  // use a filter to return the keys that have to be deleted.
  Object.keys(out).filter(function (k, _, __) {
    if (!out[k] ||
      typeof out[k] !== 'object' ||
      Array.isArray(out[k]))
      return false

    // see if the parent section is also an object.
    // if so, add it to that, and mark this one for deletion
    var parts = dotSplit(k)
    var p = out
    var l = parts.pop()
    var nl = l.replace(/\\\./g, '.')
    parts.forEach(function (part, _, __) {
      if (part === '__proto__')
        return
      if (!p[part] || typeof p[part] !== 'object')
        p[part] = {}
      p = p[part]
    })
    if (p === out && nl === l)
      return false

    p[nl] = out[k]
    return true
  }).forEach(function (del, _, __) {
    delete out[del]
  })

  return out
}

function isQuoted (val) {
  return (val.charAt(0) === '"' && val.slice(-1) === '"') ||
    (val.charAt(0) === "'" && val.slice(-1) === "'")
}

function safe (val) {
  return (typeof val !== 'string' ||
    val.match(/[=\r\n]/) ||
    val.match(/^\[/) ||
    (val.length > 1 &&
     isQuoted(val)) ||
    val !== val.trim())
    ? JSON.stringify(val)
    : val.replace(/;/g, '\\;').replace(/#/g, '\\#')
}

function unsafe (val, doUnesc) {
  val = (val || '').trim()
  if (isQuoted(val)) {
    // remove the single quotes before calling JSON.parse
    if (val.charAt(0) === "'")
      val = val.substr(1, val.length - 2)

    try {
      val = JSON.parse(val)
    } catch (_) {}
  } else {
    // walk the val to find the first not-escaped ; character
    var esc = false
    var unesc = ''
    for (var i = 0, l = val.length; i < l; i++) {
      var c = val.charAt(i)
      if (esc) {
        if ('\\;#'.indexOf(c) !== -1)
          unesc += c
        else
          unesc += '\\' + c

        esc = false
      } else if (';#'.indexOf(c) !== -1)
        break
      else if (c === '\\')
        esc = true
      else
        unesc += c
    }
    if (esc)
      unesc += '\\'

    return unesc.trim()
  }
  return val
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ini\package.json 
------------------------------------------------------ 
{
  "author": "Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)",
  "name": "ini",
  "description": "An ini encoder/decoder for node",
  "version": "1.3.8",
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/ini.git"
  },
  "main": "ini.js",
  "scripts": {
    "eslint": "eslint",
    "lint": "npm run eslint -- ini.js test/*.js",
    "lintfix": "npm run lint -- --fix",
    "test": "tap",
    "posttest": "npm run lint",
    "preversion": "npm test",
    "postversion": "npm publish",
    "prepublishOnly": "git push origin --follow-tags"
  },
  "devDependencies": {
    "eslint": "^7.9.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "tap": "14"
  },
  "license": "ISC",
  "files": [
    "ini.js"
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\package.json 
------------------------------------------------------ 
{
  "name": "ip-address",
  "description": "A library for parsing IPv4 and IPv6 IP addresses in node and the browser.",
  "keywords": [
    "ipv6",
    "ipv4",
    "browser",
    "validation"
  ],
  "version": "10.0.1",
  "author": "Beau Gunderson <beau@beaugunderson.com> (https://beaugunderson.com/)",
  "license": "MIT",
  "main": "dist/ip-address.js",
  "types": "dist/ip-address.d.ts",
  "scripts": {
    "docs": "documentation build --github --output docs --format html ./ip-address.js",
    "build": "rm -rf dist; mkdir dist; tsc",
    "prepack": "npm run build",
    "release": "release-it",
    "test-ci": "nyc mocha",
    "test": "mocha",
    "watch": "mocha --watch"
  },
  "nyc": {
    "extension": [
      ".ts"
    ],
    "exclude": [
      "**/*.d.ts",
      ".eslintrc.js",
      "coverage/",
      "dist/",
      "test/",
      "tmp/"
    ],
    "reporter": [
      "html",
      "lcov",
      "text"
    ],
    "all": true
  },
  "engines": {
    "node": ">= 12"
  },
  "files": [
    "src",
    "dist"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/beaugunderson/ip-address.git"
  },
  "devDependencies": {
    "@types/chai": "^5.0.0",
    "@types/mocha": "^10.0.8",
    "@typescript-eslint/eslint-plugin": "^8.8.0",
    "@typescript-eslint/parser": "^8.8.0",
    "chai": "^5.1.1",
    "documentation": "^14.0.3",
    "eslint": "^8.50.0",
    "eslint_d": "^14.0.4",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-filenames": "^1.3.2",
    "eslint-plugin-import": "^2.30.0",
    "eslint-plugin-jsx-a11y": "^6.10.0",
    "eslint-plugin-prettier": "^5.2.1",
    "eslint-plugin-sort-imports-es6-autofix": "^0.6.0",
    "mocha": "^10.7.3",
    "nyc": "^17.1.0",
    "prettier": "^3.3.3",
    "release-it": "^17.6.0",
    "source-map-support": "^0.5.21",
    "tsx": "^4.19.1",
    "typescript": "<5.6.0"
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\address-error.js 
------------------------------------------------------ 
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressError = void 0;
class AddressError extends Error {
    constructor(message, parseMessage) {
        super(message);
        this.name = 'AddressError';
        this.parseMessage = parseMessage;
    }
}
exports.AddressError = AddressError;
//# sourceMappingURL=address-error.js.map 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\common.js 
------------------------------------------------------ 
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isInSubnet = isInSubnet;
exports.isCorrect = isCorrect;
exports.numberToPaddedHex = numberToPaddedHex;
exports.stringToPaddedHex = stringToPaddedHex;
exports.testBit = testBit;
function isInSubnet(address) {
    if (this.subnetMask < address.subnetMask) {
        return false;
    }
    if (this.mask(address.subnetMask) === address.mask()) {
        return true;
    }
    return false;
}
function isCorrect(defaultBits) {
    return function () {
        if (this.addressMinusSuffix !== this.correctForm()) {
            return false;
        }
        if (this.subnetMask === defaultBits && !this.parsedSubnet) {
            return true;
        }
        return this.parsedSubnet === String(this.subnetMask);
    };
}
function numberToPaddedHex(number) {
    return number.toString(16).padStart(2, '0');
}
function stringToPaddedHex(numberString) {
    return numberToPaddedHex(parseInt(numberString, 10));
}
/**
 * @param binaryValue Binary representation of a value (e.g. `10`)
 * @param position Byte position, where 0 is the least significant bit
 */
function testBit(binaryValue, position) {
    const { length } = binaryValue;
    if (position > length) {
        return false;
    }
    const positionInString = length - position;
    return binaryValue.substring(positionInString, positionInString + 1) === '1';
}
//# sourceMappingURL=common.js.map 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\ip-address.js 
------------------------------------------------------ 
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v6 = exports.AddressError = exports.Address6 = exports.Address4 = void 0;
var ipv4_1 = require("./ipv4");
Object.defineProperty(exports, "Address4", { enumerable: true, get: function () { return ipv4_1.Address4; } });
var ipv6_1 = require("./ipv6");
Object.defineProperty(exports, "Address6", { enumerable: true, get: function () { return ipv6_1.Address6; } });
var address_error_1 = require("./address-error");
Object.defineProperty(exports, "AddressError", { enumerable: true, get: function () { return address_error_1.AddressError; } });
const helpers = __importStar(require("./v6/helpers"));
exports.v6 = { helpers };
//# sourceMappingURL=ip-address.js.map 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\ipv4.js 
------------------------------------------------------ 
"use strict";
/* eslint-disable no-param-reassign */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Address4 = void 0;
const common = __importStar(require("./common"));
const constants = __importStar(require("./v4/constants"));
const address_error_1 = require("./address-error");
/**
 * Represents an IPv4 address
 * @class Address4
 * @param {string} address - An IPv4 address string
 */
class Address4 {
    constructor(address) {
        this.groups = constants.GROUPS;
        this.parsedAddress = [];
        this.parsedSubnet = '';
        this.subnet = '/32';
        this.subnetMask = 32;
        this.v4 = true;
        /**
         * Returns true if the address is correct, false otherwise
         * @memberof Address4
         * @instance
         * @returns {Boolean}
         */
        this.isCorrect = common.isCorrect(constants.BITS);
        /**
         * Returns true if the given address is in the subnet of the current address
         * @memberof Address4
         * @instance
         * @returns {boolean}
         */
        this.isInSubnet = common.isInSubnet;
        this.address = address;
        const subnet = constants.RE_SUBNET_STRING.exec(address);
        if (subnet) {
            this.parsedSubnet = subnet[0].replace('/', '');
            this.subnetMask = parseInt(this.parsedSubnet, 10);
            this.subnet = `/${this.subnetMask}`;
            if (this.subnetMask < 0 || this.subnetMask > constants.BITS) {
                throw new address_error_1.AddressError('Invalid subnet mask.');
            }
            address = address.replace(constants.RE_SUBNET_STRING, '');
        }
        this.addressMinusSuffix = address;
        this.parsedAddress = this.parse(address);
    }
    static isValid(address) {
        try {
            // eslint-disable-next-line no-new
            new Address4(address);
            return true;
        }
        catch (e) {
            return false;
        }
    }
    /*
     * Parses a v4 address
     */
    parse(address) {
        const groups = address.split('.');
        if (!address.match(constants.RE_ADDRESS)) {
            throw new address_error_1.AddressError('Invalid IPv4 address.');
        }
        return groups;
    }
    /**
     * Returns the correct form of an address
     * @memberof Address4
     * @instance
     * @returns {String}
     */
    correctForm() {
        return this.parsedAddress.map((part) => parseInt(part, 10)).join('.');
    }
    /**
     * Converts a hex string to an IPv4 address object
     * @memberof Address4
     * @static
     * @param {string} hex - a hex string to convert
     * @returns {Address4}
     */
    static fromHex(hex) {
        const padded = hex.replace(/:/g, '').padStart(8, '0');
        const groups = [];
        let i;
        for (i = 0; i < 8; i += 2) {
            const h = padded.slice(i, i + 2);
            groups.push(parseInt(h, 16));
        }
        return new Address4(groups.join('.'));
    }
    /**
     * Converts an integer into a IPv4 address object
     * @memberof Address4
     * @static
     * @param {integer} integer - a number to convert
     * @returns {Address4}
     */
    static fromInteger(integer) {
        return Address4.fromHex(integer.toString(16));
    }
    /**
     * Return an address from in-addr.arpa form
     * @memberof Address4
     * @static
     * @param {string} arpaFormAddress - an 'in-addr.arpa' form ipv4 address
     * @returns {Adress4}
     * @example
     * var address = Address4.fromArpa(42.2.0.192.in-addr.arpa.)
     * address.correctForm(); // '192.0.2.42'
     */
    static fromArpa(arpaFormAddress) {
        // remove ending ".in-addr.arpa." or just "."
        const leader = arpaFormAddress.replace(/(\.in-addr\.arpa)?\.$/, '');
        const address = leader.split('.').reverse().join('.');
        return new Address4(address);
    }
    /**
     * Converts an IPv4 address object to a hex string
     * @memberof Address4
     * @instance
     * @returns {String}
     */
    toHex() {
        return this.parsedAddress.map((part) => common.stringToPaddedHex(part)).join(':');
    }
    /**
     * Converts an IPv4 address object to an array of bytes
     * @memberof Address4
     * @instance
     * @returns {Array}
     */
    toArray() {
        return this.parsedAddress.map((part) => parseInt(part, 10));
    }
    /**
     * Converts an IPv4 address object to an IPv6 address group
     * @memberof Address4
     * @instance
     * @returns {String}
     */
    toGroup6() {
        const output = [];
        let i;
        for (i = 0; i < constants.GROUPS; i += 2) {
            output.push(`${common.stringToPaddedHex(this.parsedAddress[i])}${common.stringToPaddedHex(this.parsedAddress[i + 1])}`);
        }
        return output.join(':');
    }
    /**
     * Returns the address as a `bigint`
     * @memberof Address4
     * @instance
     * @returns {bigint}
     */
    bigInt() {
        return BigInt(`0x${this.parsedAddress.map((n) => common.stringToPaddedHex(n)).join('')}`);
    }
    /**
     * Helper function getting start address.
     * @memberof Address4
     * @instance
     * @returns {bigint}
     */
    _startAddress() {
        return BigInt(`0b${this.mask() + '0'.repeat(constants.BITS - this.subnetMask)}`);
    }
    /**
     * The first address in the range given by this address' subnet.
     * Often referred to as the Network Address.
     * @memberof Address4
     * @instance
     * @returns {Address4}
     */
    startAddress() {
        return Address4.fromBigInt(this._startAddress());
    }
    /**
     * The first host address in the range given by this address's subnet ie
     * the first address after the Network Address
     * @memberof Address4
     * @instance
     * @returns {Address4}
     */
    startAddressExclusive() {
        const adjust = BigInt('1');
        return Address4.fromBigInt(this._startAddress() + adjust);
    }
    /**
     * Helper function getting end address.
     * @memberof Address4
     * @instance
     * @returns {bigint}
     */
    _endAddress() {
        return BigInt(`0b${this.mask() + '1'.repeat(constants.BITS - this.subnetMask)}`);
    }
    /**
     * The last address in the range given by this address' subnet
     * Often referred to as the Broadcast
     * @memberof Address4
     * @instance
     * @returns {Address4}
     */
    endAddress() {
        return Address4.fromBigInt(this._endAddress());
    }
    /**
     * The last host address in the range given by this address's subnet ie
     * the last address prior to the Broadcast Address
     * @memberof Address4
     * @instance
     * @returns {Address4}
     */
    endAddressExclusive() {
        const adjust = BigInt('1');
        return Address4.fromBigInt(this._endAddress() - adjust);
    }
    /**
     * Converts a BigInt to a v4 address object
     * @memberof Address4
     * @static
     * @param {bigint} bigInt - a BigInt to convert
     * @returns {Address4}
     */
    static fromBigInt(bigInt) {
        return Address4.fromHex(bigInt.toString(16));
    }
    /**
     * Returns the first n bits of the address, defaulting to the
     * subnet mask
     * @memberof Address4
     * @instance
     * @returns {String}
     */
    mask(mask) {
        if (mask === undefined) {
            mask = this.subnetMask;
        }
        return this.getBitsBase2(0, mask);
    }
    /**
     * Returns the bits in the given range as a base-2 string
     * @memberof Address4
     * @instance
     * @returns {string}
     */
    getBitsBase2(start, end) {
        return this.binaryZeroPad().slice(start, end);
    }
    /**
     * Return the reversed ip6.arpa form of the address
     * @memberof Address4
     * @param {Object} options
     * @param {boolean} options.omitSuffix - omit the "in-addr.arpa" suffix
     * @instance
     * @returns {String}
     */
    reverseForm(options) {
        if (!options) {
            options = {};
        }
        const reversed = this.correctForm().split('.').reverse().join('.');
        if (options.omitSuffix) {
            return reversed;
        }
        return `${reversed}.in-addr.arpa.`;
    }
    /**
     * Returns true if the given address is a multicast address
     * @memberof Address4
     * @instance
     * @returns {boolean}
     */
    isMulticast() {
        return this.isInSubnet(new Address4('224.0.0.0/4'));
    }
    /**
     * Returns a zero-padded base-2 string representation of the address
     * @memberof Address4
     * @instance
     * @returns {string}
     */
    binaryZeroPad() {
        return this.bigInt().toString(2).padStart(constants.BITS, '0');
    }
    /**
     * Groups an IPv4 address for inclusion at the end of an IPv6 address
     * @returns {String}
     */
    groupForV6() {
        const segments = this.parsedAddress;
        return this.address.replace(constants.RE_ADDRESS, `<span class="hover-group group-v4 group-6">${segments
            .slice(0, 2)
            .join('.')}</span>.<span class="hover-group group-v4 group-7">${segments
            .slice(2, 4)
            .join('.')}</span>`);
    }
}
exports.Address4 = Address4;
//# sourceMappingURL=ipv4.js.map 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\ipv6.js 
------------------------------------------------------ 
"use strict";
/* eslint-disable prefer-destructuring */
/* eslint-disable no-param-reassign */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Address6 = void 0;
const common = __importStar(require("./common"));
const constants4 = __importStar(require("./v4/constants"));
const constants6 = __importStar(require("./v6/constants"));
const helpers = __importStar(require("./v6/helpers"));
const ipv4_1 = require("./ipv4");
const regular_expressions_1 = require("./v6/regular-expressions");
const address_error_1 = require("./address-error");
const common_1 = require("./common");
function assert(condition) {
    if (!condition) {
        throw new Error('Assertion failed.');
    }
}
function addCommas(number) {
    const r = /(\d+)(\d{3})/;
    while (r.test(number)) {
        number = number.replace(r, '$1,$2');
    }
    return number;
}
function spanLeadingZeroes4(n) {
    n = n.replace(/^(0{1,})([1-9]+)$/, '<span class="parse-error">$1</span>$2');
    n = n.replace(/^(0{1,})(0)$/, '<span class="parse-error">$1</span>$2');
    return n;
}
/*
 * A helper function to compact an array
 */
function compact(address, slice) {
    const s1 = [];
    const s2 = [];
    let i;
    for (i = 0; i < address.length; i++) {
        if (i < slice[0]) {
            s1.push(address[i]);
        }
        else if (i > slice[1]) {
            s2.push(address[i]);
        }
    }
    return s1.concat(['compact']).concat(s2);
}
function paddedHex(octet) {
    return parseInt(octet, 16).toString(16).padStart(4, '0');
}
function unsignByte(b) {
    // eslint-disable-next-line no-bitwise
    return b & 0xff;
}
/**
 * Represents an IPv6 address
 * @class Address6
 * @param {string} address - An IPv6 address string
 * @param {number} [groups=8] - How many octets to parse
 * @example
 * var address = new Address6('2001::/32');
 */
class Address6 {
    constructor(address, optionalGroups) {
        this.addressMinusSuffix = '';
        this.parsedSubnet = '';
        this.subnet = '/128';
        this.subnetMask = 128;
        this.v4 = false;
        this.zone = '';
        // #region Attributes
        /**
         * Returns true if the given address is in the subnet of the current address
         * @memberof Address6
         * @instance
         * @returns {boolean}
         */
        this.isInSubnet = common.isInSubnet;
        /**
         * Returns true if the address is correct, false otherwise
         * @memberof Address6
         * @instance
         * @returns {boolean}
         */
        this.isCorrect = common.isCorrect(constants6.BITS);
        if (optionalGroups === undefined) {
            this.groups = constants6.GROUPS;
        }
        else {
            this.groups = optionalGroups;
        }
        this.address = address;
        const subnet = constants6.RE_SUBNET_STRING.exec(address);
        if (subnet) {
            this.parsedSubnet = subnet[0].replace('/', '');
            this.subnetMask = parseInt(this.parsedSubnet, 10);
            this.subnet = `/${this.subnetMask}`;
            if (Number.isNaN(this.subnetMask) ||
                this.subnetMask < 0 ||
                this.subnetMask > constants6.BITS) {
                throw new address_error_1.AddressError('Invalid subnet mask.');
            }
            address = address.replace(constants6.RE_SUBNET_STRING, '');
        }
        else if (/\//.test(address)) {
            throw new address_error_1.AddressError('Invalid subnet mask.');
        }
        const zone = constants6.RE_ZONE_STRING.exec(address);
        if (zone) {
            this.zone = zone[0];
            address = address.replace(constants6.RE_ZONE_STRING, '');
        }
        this.addressMinusSuffix = address;
        this.parsedAddress = this.parse(this.addressMinusSuffix);
    }
    static isValid(address) {
        try {
            // eslint-disable-next-line no-new
            new Address6(address);
            return true;
        }
        catch (e) {
            return false;
        }
    }
    /**
     * Convert a BigInt to a v6 address object
     * @memberof Address6
     * @static
     * @param {bigint} bigInt - a BigInt to convert
     * @returns {Address6}
     * @example
     * var bigInt = BigInt('1000000000000');
     * var address = Address6.fromBigInt(bigInt);
     * address.correctForm(); // '::e8:d4a5:1000'
     */
    static fromBigInt(bigInt) {
        const hex = bigInt.toString(16).padStart(32, '0');
        const groups = [];
        let i;
        for (i = 0; i < constants6.GROUPS; i++) {
            groups.push(hex.slice(i * 4, (i + 1) * 4));
        }
        return new Address6(groups.join(':'));
    }
    /**
     * Convert a URL (with optional port number) to an address object
     * @memberof Address6
     * @static
     * @param {string} url - a URL with optional port number
     * @example
     * var addressAndPort = Address6.fromURL('http://[ffff::]:8080/foo/');
     * addressAndPort.address.correctForm(); // 'ffff::'
     * addressAndPort.port; // 8080
     */
    static fromURL(url) {
        let host;
        let port = null;
        let result;
        // If we have brackets parse them and find a port
        if (url.indexOf('[') !== -1 && url.indexOf(']:') !== -1) {
            result = constants6.RE_URL_WITH_PORT.exec(url);
            if (result === null) {
                return {
                    error: 'failed to parse address with port',
                    address: null,
                    port: null,
                };
            }
            host = result[1];
            port = result[2];
            // If there's a URL extract the address
        }
        else if (url.indexOf('/') !== -1) {
            // Remove the protocol prefix
            url = url.replace(/^[a-z0-9]+:\/\//, '');
            // Parse the address
            result = constants6.RE_URL.exec(url);
            if (result === null) {
                return {
                    error: 'failed to parse address from URL',
                    address: null,
                    port: null,
                };
            }
            host = result[1];
            // Otherwise just assign the URL to the host and let the library parse it
        }
        else {
            host = url;
        }
        // If there's a port convert it to an integer
        if (port) {
            port = parseInt(port, 10);
            // squelch out of range ports
            if (port < 0 || port > 65536) {
                port = null;
            }
        }
        else {
            // Standardize `undefined` to `null`
            port = null;
        }
        return {
            address: new Address6(host),
            port,
        };
    }
    /**
     * Create an IPv6-mapped address given an IPv4 address
     * @memberof Address6
     * @static
     * @param {string} address - An IPv4 address string
     * @returns {Address6}
     * @example
     * var address = Address6.fromAddress4('192.168.0.1');
     * address.correctForm(); // '::ffff:c0a8:1'
     * address.to4in6(); // '::ffff:192.168.0.1'
     */
    static fromAddress4(address) {
        const address4 = new ipv4_1.Address4(address);
        const mask6 = constants6.BITS - (constants4.BITS - address4.subnetMask);
        return new Address6(`::ffff:${address4.correctForm()}/${mask6}`);
    }
    /**
     * Return an address from ip6.arpa form
     * @memberof Address6
     * @static
     * @param {string} arpaFormAddress - an 'ip6.arpa' form address
     * @returns {Adress6}
     * @example
     * var address = Address6.fromArpa(e.f.f.f.3.c.2.6.f.f.f.e.6.6.8.e.1.0.6.7.9.4.e.c.0.0.0.0.1.0.0.2.ip6.arpa.)
     * address.correctForm(); // '2001:0:ce49:7601:e866:efff:62c3:fffe'
     */
    static fromArpa(arpaFormAddress) {
        // remove ending ".ip6.arpa." or just "."
        let address = arpaFormAddress.replace(/(\.ip6\.arpa)?\.$/, '');
        const semicolonAmount = 7;
        // correct ip6.arpa form with ending removed will be 63 characters
        if (address.length !== 63) {
            throw new address_error_1.AddressError("Invalid 'ip6.arpa' form.");
        }
        const parts = address.split('.').reverse();
        for (let i = semicolonAmount; i > 0; i--) {
            const insertIndex = i * 4;
            parts.splice(insertIndex, 0, ':');
        }
        address = parts.join('');
        return new Address6(address);
    }
    /**
     * Return the Microsoft UNC transcription of the address
     * @memberof Address6
     * @instance
     * @returns {String} the Microsoft UNC transcription of the address
     */
    microsoftTranscription() {
        return `${this.correctForm().replace(/:/g, '-')}.ipv6-literal.net`;
    }
    /**
     * Return the first n bits of the address, defaulting to the subnet mask
     * @memberof Address6
     * @instance
     * @param {number} [mask=subnet] - the number of bits to mask
     * @returns {String} the first n bits of the address as a string
     */
    mask(mask = this.subnetMask) {
        return this.getBitsBase2(0, mask);
    }
    /**
     * Return the number of possible subnets of a given size in the address
     * @memberof Address6
     * @instance
     * @param {number} [subnetSize=128] - the subnet size
     * @returns {String}
     */
    // TODO: probably useful to have a numeric version of this too
    possibleSubnets(subnetSize = 128) {
        const availableBits = constants6.BITS - this.subnetMask;
        const subnetBits = Math.abs(subnetSize - constants6.BITS);
        const subnetPowers = availableBits - subnetBits;
        if (subnetPowers < 0) {
            return '0';
        }
        return addCommas((BigInt('2') ** BigInt(subnetPowers)).toString(10));
    }
    /**
     * Helper function getting start address.
     * @memberof Address6
     * @instance
     * @returns {bigint}
     */
    _startAddress() {
        return BigInt(`0b${this.mask() + '0'.repeat(constants6.BITS - this.subnetMask)}`);
    }
    /**
     * The first address in the range given by this address' subnet
     * Often referred to as the Network Address.
     * @memberof Address6
     * @instance
     * @returns {Address6}
     */
    startAddress() {
        return Address6.fromBigInt(this._startAddress());
    }
    /**
     * The first host address in the range given by this address's subnet ie
     * the first address after the Network Address
     * @memberof Address6
     * @instance
     * @returns {Address6}
     */
    startAddressExclusive() {
        const adjust = BigInt('1');
        return Address6.fromBigInt(this._startAddress() + adjust);
    }
    /**
     * Helper function getting end address.
     * @memberof Address6
     * @instance
     * @returns {bigint}
     */
    _endAddress() {
        return BigInt(`0b${this.mask() + '1'.repeat(constants6.BITS - this.subnetMask)}`);
    }
    /**
     * The last address in the range given by this address' subnet
     * Often referred to as the Broadcast
     * @memberof Address6
     * @instance
     * @returns {Address6}
     */
    endAddress() {
        return Address6.fromBigInt(this._endAddress());
    }
    /**
     * The last host address in the range given by this address's subnet ie
     * the last address prior to the Broadcast Address
     * @memberof Address6
     * @instance
     * @returns {Address6}
     */
    endAddressExclusive() {
        const adjust = BigInt('1');
        return Address6.fromBigInt(this._endAddress() - adjust);
    }
    /**
     * Return the scope of the address
     * @memberof Address6
     * @instance
     * @returns {String}
     */
    getScope() {
        let scope = constants6.SCOPES[parseInt(this.getBits(12, 16).toString(10), 10)];
        if (this.getType() === 'Global unicast' && scope !== 'Link local') {
            scope = 'Global';
        }
        return scope || 'Unknown';
    }
    /**
     * Return the type of the address
     * @memberof Address6
     * @instance
     * @returns {String}
     */
    getType() {
        for (const subnet of Object.keys(constants6.TYPES)) {
            if (this.isInSubnet(new Address6(subnet))) {
                return constants6.TYPES[subnet];
            }
        }
        return 'Global unicast';
    }
    /**
     * Return the bits in the given range as a BigInt
     * @memberof Address6
     * @instance
     * @returns {bigint}
     */
    getBits(start, end) {
        return BigInt(`0b${this.getBitsBase2(start, end)}`);
    }
    /**
     * Return the bits in the given range as a base-2 string
     * @memberof Address6
     * @instance
     * @returns {String}
     */
    getBitsBase2(start, end) {
        return this.binaryZeroPad().slice(start, end);
    }
    /**
     * Return the bits in the given range as a base-16 string
     * @memberof Address6
     * @instance
     * @returns {String}
     */
    getBitsBase16(start, end) {
        const length = end - start;
        if (length % 4 !== 0) {
            throw new Error('Length of bits to retrieve must be divisible by four');
        }
        return this.getBits(start, end)
            .toString(16)
            .padStart(length / 4, '0');
    }
    /**
     * Return the bits that are set past the subnet mask length
     * @memberof Address6
     * @instance
     * @returns {String}
     */
    getBitsPastSubnet() {
        return this.getBitsBase2(this.subnetMask, constants6.BITS);
    }
    /**
     * Return the reversed ip6.arpa form of the address
     * @memberof Address6
     * @param {Object} options
     * @param {boolean} options.omitSuffix - omit the "ip6.arpa" suffix
     * @instance
     * @returns {String}
     */
    reverseForm(options) {
        if (!options) {
            options = {};
        }
        const characters = Math.floor(this.subnetMask / 4);
        const reversed = this.canonicalForm()
            .replace(/:/g, '')
            .split('')
            .slice(0, characters)
            .reverse()
            .join('.');
        if (characters > 0) {
            if (options.omitSuffix) {
                return reversed;
            }
            return `${reversed}.ip6.arpa.`;
        }
        if (options.omitSuffix) {
            return '';
        }
        return 'ip6.arpa.';
    }
    /**
     * Return the correct form of the address
     * @memberof Address6
     * @instance
     * @returns {String}
     */
    correctForm() {
        let i;
        let groups = [];
        let zeroCounter = 0;
        const zeroes = [];
        for (i = 0; i < this.parsedAddress.length; i++) {
            const value = parseInt(this.parsedAddress[i], 16);
            if (value === 0) {
                zeroCounter++;
            }
            if (value !== 0 && zeroCounter > 0) {
                if (zeroCounter > 1) {
                    zeroes.push([i - zeroCounter, i - 1]);
                }
                zeroCounter = 0;
            }
        }
        // Do we end with a string of zeroes?
        if (zeroCounter > 1) {
            zeroes.push([this.parsedAddress.length - zeroCounter, this.parsedAddress.length - 1]);
        }
        const zeroLengths = zeroes.map((n) => n[1] - n[0] + 1);
        if (zeroes.length > 0) {
            const index = zeroLengths.indexOf(Math.max(...zeroLengths));
            groups = compact(this.parsedAddress, zeroes[index]);
        }
        else {
            groups = this.parsedAddress;
        }
        for (i = 0; i < groups.length; i++) {
            if (groups[i] !== 'compact') {
                groups[i] = parseInt(groups[i], 16).toString(16);
            }
        }
        let correct = groups.join(':');
        correct = correct.replace(/^compact$/, '::');
        correct = correct.replace(/(^compact)|(compact$)/, ':');
        correct = correct.replace(/compact/, '');
        return correct;
    }
    /**
     * Return a zero-padded base-2 string representation of the address
     * @memberof Address6
     * @instance
     * @returns {String}
     * @example
     * var address = new Address6('2001:4860:4001:803::1011');
     * address.binaryZeroPad();
     * // '0010000000000001010010000110000001000000000000010000100000000011
     * //  0000000000000000000000000000000000000000000000000001000000010001'
     */
    binaryZeroPad() {
        return this.bigInt().toString(2).padStart(constants6.BITS, '0');
    }
    // TODO: Improve the semantics of this helper function
    parse4in6(address) {
        const groups = address.split(':');
        const lastGroup = groups.slice(-1)[0];
        const address4 = lastGroup.match(constants4.RE_ADDRESS);
        if (address4) {
            this.parsedAddress4 = address4[0];
            this.address4 = new ipv4_1.Address4(this.parsedAddress4);
            for (let i = 0; i < this.address4.groups; i++) {
                if (/^0[0-9]+/.test(this.address4.parsedAddress[i])) {
                    throw new address_error_1.AddressError("IPv4 addresses can't have leading zeroes.", address.replace(constants4.RE_ADDRESS, this.address4.parsedAddress.map(spanLeadingZeroes4).join('.')));
                }
            }
            this.v4 = true;
            groups[groups.length - 1] = this.address4.toGroup6();
            address = groups.join(':');
        }
        return address;
    }
    // TODO: Make private?
    parse(address) {
        address = this.parse4in6(address);
        const badCharacters = address.match(constants6.RE_BAD_CHARACTERS);
        if (badCharacters) {
            throw new address_error_1.AddressError(`Bad character${badCharacters.length > 1 ? 's' : ''} detected in address: ${badCharacters.join('')}`, address.replace(constants6.RE_BAD_CHARACTERS, '<span class="parse-error">$1</span>'));
        }
        const badAddress = address.match(constants6.RE_BAD_ADDRESS);
        if (badAddress) {
            throw new address_error_1.AddressError(`Address failed regex: ${badAddress.join('')}`, address.replace(constants6.RE_BAD_ADDRESS, '<span class="parse-error">$1</span>'));
        }
        let groups = [];
        const halves = address.split('::');
        if (halves.length === 2) {
            let first = halves[0].split(':');
            let last = halves[1].split(':');
            if (first.length === 1 && first[0] === '') {
                first = [];
            }
            if (last.length === 1 && last[0] === '') {
                last = [];
            }
            const remaining = this.groups - (first.length + last.length);
            if (!remaining) {
                throw new address_error_1.AddressError('Error parsing groups');
            }
            this.elidedGroups = remaining;
            this.elisionBegin = first.length;
            this.elisionEnd = first.length + this.elidedGroups;
            groups = groups.concat(first);
            for (let i = 0; i < remaining; i++) {
                groups.push('0');
            }
            groups = groups.concat(last);
        }
        else if (halves.length === 1) {
            groups = address.split(':');
            this.elidedGroups = 0;
        }
        else {
            throw new address_error_1.AddressError('Too many :: groups found');
        }
        groups = groups.map((group) => parseInt(group, 16).toString(16));
        if (groups.length !== this.groups) {
            throw new address_error_1.AddressError('Incorrect number of groups found');
        }
        return groups;
    }
    /**
     * Return the canonical form of the address
     * @memberof Address6
     * @instance
     * @returns {String}
     */
    canonicalForm() {
        return this.parsedAddress.map(paddedHex).join(':');
    }
    /**
     * Return the decimal form of the address
     * @memberof Address6
     * @instance
     * @returns {String}
     */
    decimal() {
        return this.parsedAddress.map((n) => parseInt(n, 16).toString(10).padStart(5, '0')).join(':');
    }
    /**
     * Return the address as a BigInt
     * @memberof Address6
     * @instance
     * @returns {bigint}
     */
    bigInt() {
        return BigInt(`0x${this.parsedAddress.map(paddedHex).join('')}`);
    }
    /**
     * Return the last two groups of this address as an IPv4 address string
     * @memberof Address6
     * @instance
     * @returns {Address4}
     * @example
     * var address = new Address6('2001:4860:4001::1825:bf11');
     * address.to4().correctForm(); // '24.37.191.17'
     */
    to4() {
        const binary = this.binaryZeroPad().split('');
        return ipv4_1.Address4.fromHex(BigInt(`0b${binary.slice(96, 128).join('')}`).toString(16));
    }
    /**
     * Return the v4-in-v6 form of the address
     * @memberof Address6
     * @instance
     * @returns {String}
     */
    to4in6() {
        const address4 = this.to4();
        const address6 = new Address6(this.parsedAddress.slice(0, 6).join(':'), 6);
        const correct = address6.correctForm();
        let infix = '';
        if (!/:$/.test(correct)) {
            infix = ':';
        }
        return correct + infix + address4.address;
    }
    /**
     * Return an object containing the Teredo properties of the address
     * @memberof Address6
     * @instance
     * @returns {Object}
     */
    inspectTeredo() {
        /*
        - Bits 0 to 31 are set to the Teredo prefix (normally 2001:0000::/32).
        - Bits 32 to 63 embed the primary IPv4 address of the Teredo server that
          is used.
        - Bits 64 to 79 can be used to define some flags. Currently only the
          higher order bit is used; it is set to 1 if the Teredo client is
          located behind a cone NAT, 0 otherwise. For Microsoft's Windows Vista
          and Windows Server 2008 implementations, more bits are used. In those
          implementations, the format for these 16 bits is "CRAAAAUG AAAAAAAA",
          where "C" remains the "Cone" flag. The "R" bit is reserved for future
          use. The "U" bit is for the Universal/Local flag (set to 0). The "G" bit
          is Individual/Group flag (set to 0). The A bits are set to a 12-bit
          randomly generated number chosen by the Teredo client to introduce
          additional protection for the Teredo node against IPv6-based scanning
          attacks.
        - Bits 80 to 95 contains the obfuscated UDP port number. This is the
          port number that is mapped by the NAT to the Teredo client with all
          bits inverted.
        - Bits 96 to 127 contains the obfuscated IPv4 address. This is the
          public IPv4 address of the NAT with all bits inverted.
        */
        const prefix = this.getBitsBase16(0, 32);
        const bitsForUdpPort = this.getBits(80, 96);
        // eslint-disable-next-line no-bitwise
        const udpPort = (bitsForUdpPort ^ BigInt('0xffff')).toString();
        const server4 = ipv4_1.Address4.fromHex(this.getBitsBase16(32, 64));
        const bitsForClient4 = this.getBits(96, 128);
        // eslint-disable-next-line no-bitwise
        const client4 = ipv4_1.Address4.fromHex((bitsForClient4 ^ BigInt('0xffffffff')).toString(16));
        const flagsBase2 = this.getBitsBase2(64, 80);
        const coneNat = (0, common_1.testBit)(flagsBase2, 15);
        const reserved = (0, common_1.testBit)(flagsBase2, 14);
        const groupIndividual = (0, common_1.testBit)(flagsBase2, 8);
        const universalLocal = (0, common_1.testBit)(flagsBase2, 9);
        const nonce = BigInt(`0b${flagsBase2.slice(2, 6) + flagsBase2.slice(8, 16)}`).toString(10);
        return {
            prefix: `${prefix.slice(0, 4)}:${prefix.slice(4, 8)}`,
            server4: server4.address,
            client4: client4.address,
            flags: flagsBase2,
            coneNat,
            microsoft: {
                reserved,
                universalLocal,
                groupIndividual,
                nonce,
            },
            udpPort,
        };
    }
    /**
     * Return an object containing the 6to4 properties of the address
     * @memberof Address6
     * @instance
     * @returns {Object}
     */
    inspect6to4() {
        /*
        - Bits 0 to 15 are set to the 6to4 prefix (2002::/16).
        - Bits 16 to 48 embed the IPv4 address of the 6to4 gateway that is used.
        */
        const prefix = this.getBitsBase16(0, 16);
        const gateway = ipv4_1.Address4.fromHex(this.getBitsBase16(16, 48));
        return {
            prefix: prefix.slice(0, 4),
            gateway: gateway.address,
        };
    }
    /**
     * Return a v6 6to4 address from a v6 v4inv6 address
     * @memberof Address6
     * @instance
     * @returns {Address6}
     */
    to6to4() {
        if (!this.is4()) {
            return null;
        }
        const addr6to4 = [
            '2002',
            this.getBitsBase16(96, 112),
            this.getBitsBase16(112, 128),
            '',
            '/16',
        ].join(':');
        return new Address6(addr6to4);
    }
    /**
     * Return a byte array
     * @memberof Address6
     * @instance
     * @returns {Array}
     */
    toByteArray() {
        const valueWithoutPadding = this.bigInt().toString(16);
        const leadingPad = '0'.repeat(valueWithoutPadding.length % 2);
        const value = `${leadingPad}${valueWithoutPadding}`;
        const bytes = [];
        for (let i = 0, length = value.length; i < length; i += 2) {
            bytes.push(parseInt(value.substring(i, i + 2), 16));
        }
        return bytes;
    }
    /**
     * Return an unsigned byte array
     * @memberof Address6
     * @instance
     * @returns {Array}
     */
    toUnsignedByteArray() {
        return this.toByteArray().map(unsignByte);
    }
    /**
     * Convert a byte array to an Address6 object
     * @memberof Address6
     * @static
     * @returns {Address6}
     */
    static fromByteArray(bytes) {
        return this.fromUnsignedByteArray(bytes.map(unsignByte));
    }
    /**
     * Convert an unsigned byte array to an Address6 object
     * @memberof Address6
     * @static
     * @returns {Address6}
     */
    static fromUnsignedByteArray(bytes) {
        const BYTE_MAX = BigInt('256');
        let result = BigInt('0');
        let multiplier = BigInt('1');
        for (let i = bytes.length - 1; i >= 0; i--) {
            result += multiplier * BigInt(bytes[i].toString(10));
            multiplier *= BYTE_MAX;
        }
        return Address6.fromBigInt(result);
    }
    /**
     * Returns true if the address is in the canonical form, false otherwise
     * @memberof Address6
     * @instance
     * @returns {boolean}
     */
    isCanonical() {
        return this.addressMinusSuffix === this.canonicalForm();
    }
    /**
     * Returns true if the address is a link local address, false otherwise
     * @memberof Address6
     * @instance
     * @returns {boolean}
     */
    isLinkLocal() {
        // Zeroes are required, i.e. we can't check isInSubnet with 'fe80::/10'
        if (this.getBitsBase2(0, 64) ===
            '1111111010000000000000000000000000000000000000000000000000000000') {
            return true;
        }
        return false;
    }
    /**
     * Returns true if the address is a multicast address, false otherwise
     * @memberof Address6
     * @instance
     * @returns {boolean}
     */
    isMulticast() {
        return this.getType() === 'Multicast';
    }
    /**
     * Returns true if the address is a v4-in-v6 address, false otherwise
     * @memberof Address6
     * @instance
     * @returns {boolean}
     */
    is4() {
        return this.v4;
    }
    /**
     * Returns true if the address is a Teredo address, false otherwise
     * @memberof Address6
     * @instance
     * @returns {boolean}
     */
    isTeredo() {
        return this.isInSubnet(new Address6('2001::/32'));
    }
    /**
     * Returns true if the address is a 6to4 address, false otherwise
     * @memberof Address6
     * @instance
     * @returns {boolean}
     */
    is6to4() {
        return this.isInSubnet(new Address6('2002::/16'));
    }
    /**
     * Returns true if the address is a loopback address, false otherwise
     * @memberof Address6
     * @instance
     * @returns {boolean}
     */
    isLoopback() {
        return this.getType() === 'Loopback';
    }
    // #endregion
    // #region HTML
    /**
     * @returns {String} the address in link form with a default port of 80
     */
    href(optionalPort) {
        if (optionalPort === undefined) {
            optionalPort = '';
        }
        else {
            optionalPort = `:${optionalPort}`;
        }
        return `http://[${this.correctForm()}]${optionalPort}/`;
    }
    /**
     * @returns {String} a link suitable for conveying the address via a URL hash
     */
    link(options) {
        if (!options) {
            options = {};
        }
        if (options.className === undefined) {
            options.className = '';
        }
        if (options.prefix === undefined) {
            options.prefix = '/#address=';
        }
        if (options.v4 === undefined) {
            options.v4 = false;
        }
        let formFunction = this.correctForm;
        if (options.v4) {
            formFunction = this.to4in6;
        }
        const form = formFunction.call(this);
        if (options.className) {
            return `<a href="${options.prefix}${form}" class="${options.className}">${form}</a>`;
        }
        return `<a href="${options.prefix}${form}">${form}</a>`;
    }
    /**
     * Groups an address
     * @returns {String}
     */
    group() {
        if (this.elidedGroups === 0) {
            // The simple case
            return helpers.simpleGroup(this.address).join(':');
        }
        assert(typeof this.elidedGroups === 'number');
        assert(typeof this.elisionBegin === 'number');
        // The elided case
        const output = [];
        const [left, right] = this.address.split('::');
        if (left.length) {
            output.push(...helpers.simpleGroup(left));
        }
        else {
            output.push('');
        }
        const classes = ['hover-group'];
        for (let i = this.elisionBegin; i < this.elisionBegin + this.elidedGroups; i++) {
            classes.push(`group-${i}`);
        }
        output.push(`<span class="${classes.join(' ')}"></span>`);
        if (right.length) {
            output.push(...helpers.simpleGroup(right, this.elisionEnd));
        }
        else {
            output.push('');
        }
        if (this.is4()) {
            assert(this.address4 instanceof ipv4_1.Address4);
            output.pop();
            output.push(this.address4.groupForV6());
        }
        return output.join(':');
    }
    // #endregion
    // #region Regular expressions
    /**
     * Generate a regular expression string that can be used to find or validate
     * all variations of this address
     * @memberof Address6
     * @instance
     * @param {boolean} substringSearch
     * @returns {string}
     */
    regularExpressionString(substringSearch = false) {
        let output = [];
        // TODO: revisit why this is necessary
        const address6 = new Address6(this.correctForm());
        if (address6.elidedGroups === 0) {
            // The simple case
            output.push((0, regular_expressions_1.simpleRegularExpression)(address6.parsedAddress));
        }
        else if (address6.elidedGroups === constants6.GROUPS) {
            // A completely elided address
            output.push((0, regular_expressions_1.possibleElisions)(constants6.GROUPS));
        }
        else {
            // A partially elided address
            const halves = address6.address.split('::');
            if (halves[0].length) {
                output.push((0, regular_expressions_1.simpleRegularExpression)(halves[0].split(':')));
            }
            assert(typeof address6.elidedGroups === 'number');
            output.push((0, regular_expressions_1.possibleElisions)(address6.elidedGroups, halves[0].length !== 0, halves[1].length !== 0));
            if (halves[1].length) {
                output.push((0, regular_expressions_1.simpleRegularExpression)(halves[1].split(':')));
            }
            output = [output.join(':')];
        }
        if (!substringSearch) {
            output = [
                '(?=^|',
                regular_expressions_1.ADDRESS_BOUNDARY,
                '|[^\\w\\:])(',
                ...output,
                ')(?=[^\\w\\:]|',
                regular_expressions_1.ADDRESS_BOUNDARY,
                '|$)',
            ];
        }
        return output.join('');
    }
    /**
     * Generate a regular expression that can be used to find or validate all
     * variations of this address.
     * @memberof Address6
     * @instance
     * @param {boolean} substringSearch
     * @returns {RegExp}
     */
    regularExpression(substringSearch = false) {
        return new RegExp(this.regularExpressionString(substringSearch), 'i');
    }
}
exports.Address6 = Address6;
//# sourceMappingURL=ipv6.js.map 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\v4\constants.js 
------------------------------------------------------ 
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RE_SUBNET_STRING = exports.RE_ADDRESS = exports.GROUPS = exports.BITS = void 0;
exports.BITS = 32;
exports.GROUPS = 4;
exports.RE_ADDRESS = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/g;
exports.RE_SUBNET_STRING = /\/\d{1,2}$/;
//# sourceMappingURL=constants.js.map 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\v4\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\v6\constants.js 
------------------------------------------------------ 
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RE_URL_WITH_PORT = exports.RE_URL = exports.RE_ZONE_STRING = exports.RE_SUBNET_STRING = exports.RE_BAD_ADDRESS = exports.RE_BAD_CHARACTERS = exports.TYPES = exports.SCOPES = exports.GROUPS = exports.BITS = void 0;
exports.BITS = 128;
exports.GROUPS = 8;
/**
 * Represents IPv6 address scopes
 * @memberof Address6
 * @static
 */
exports.SCOPES = {
    0: 'Reserved',
    1: 'Interface local',
    2: 'Link local',
    4: 'Admin local',
    5: 'Site local',
    8: 'Organization local',
    14: 'Global',
    15: 'Reserved',
};
/**
 * Represents IPv6 address types
 * @memberof Address6
 * @static
 */
exports.TYPES = {
    'ff01::1/128': 'Multicast (All nodes on this interface)',
    'ff01::2/128': 'Multicast (All routers on this interface)',
    'ff02::1/128': 'Multicast (All nodes on this link)',
    'ff02::2/128': 'Multicast (All routers on this link)',
    'ff05::2/128': 'Multicast (All routers in this site)',
    'ff02::5/128': 'Multicast (OSPFv3 AllSPF routers)',
    'ff02::6/128': 'Multicast (OSPFv3 AllDR routers)',
    'ff02::9/128': 'Multicast (RIP routers)',
    'ff02::a/128': 'Multicast (EIGRP routers)',
    'ff02::d/128': 'Multicast (PIM routers)',
    'ff02::16/128': 'Multicast (MLDv2 reports)',
    'ff01::fb/128': 'Multicast (mDNSv6)',
    'ff02::fb/128': 'Multicast (mDNSv6)',
    'ff05::fb/128': 'Multicast (mDNSv6)',
    'ff02::1:2/128': 'Multicast (All DHCP servers and relay agents on this link)',
    'ff05::1:2/128': 'Multicast (All DHCP servers and relay agents in this site)',
    'ff02::1:3/128': 'Multicast (All DHCP servers on this link)',
    'ff05::1:3/128': 'Multicast (All DHCP servers in this site)',
    '::/128': 'Unspecified',
    '::1/128': 'Loopback',
    'ff00::/8': 'Multicast',
    'fe80::/10': 'Link-local unicast',
};
/**
 * A regular expression that matches bad characters in an IPv6 address
 * @memberof Address6
 * @static
 */
exports.RE_BAD_CHARACTERS = /([^0-9a-f:/%])/gi;
/**
 * A regular expression that matches an incorrect IPv6 address
 * @memberof Address6
 * @static
 */
exports.RE_BAD_ADDRESS = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\/$)/gi;
/**
 * A regular expression that matches an IPv6 subnet
 * @memberof Address6
 * @static
 */
exports.RE_SUBNET_STRING = /\/\d{1,3}(?=%|$)/;
/**
 * A regular expression that matches an IPv6 zone
 * @memberof Address6
 * @static
 */
exports.RE_ZONE_STRING = /%.*$/;
exports.RE_URL = /^\[{0,1}([0-9a-f:]+)\]{0,1}/;
exports.RE_URL_WITH_PORT = /\[([0-9a-f:]+)\]:([0-9]{1,5})/;
//# sourceMappingURL=constants.js.map 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\v6\helpers.js 
------------------------------------------------------ 
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.spanAllZeroes = spanAllZeroes;
exports.spanAll = spanAll;
exports.spanLeadingZeroes = spanLeadingZeroes;
exports.simpleGroup = simpleGroup;
/**
 * @returns {String} the string with all zeroes contained in a <span>
 */
function spanAllZeroes(s) {
    return s.replace(/(0+)/g, '<span class="zero">$1</span>');
}
/**
 * @returns {String} the string with each character contained in a <span>
 */
function spanAll(s, offset = 0) {
    const letters = s.split('');
    return letters
        .map((n, i) => `<span class="digit value-${n} position-${i + offset}">${spanAllZeroes(n)}</span>`)
        .join('');
}
function spanLeadingZeroesSimple(group) {
    return group.replace(/^(0+)/, '<span class="zero">$1</span>');
}
/**
 * @returns {String} the string with leading zeroes contained in a <span>
 */
function spanLeadingZeroes(address) {
    const groups = address.split(':');
    return groups.map((g) => spanLeadingZeroesSimple(g)).join(':');
}
/**
 * Groups an address
 * @returns {String} a grouped address
 */
function simpleGroup(addressString, offset = 0) {
    const groups = addressString.split(':');
    return groups.map((g, i) => {
        if (/group-v4/.test(g)) {
            return g;
        }
        return `<span class="hover-group group-${i + offset}">${spanLeadingZeroesSimple(g)}</span>`;
    });
}
//# sourceMappingURL=helpers.js.map 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\v6\regular-expressions.js 
------------------------------------------------------ 
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ADDRESS_BOUNDARY = void 0;
exports.groupPossibilities = groupPossibilities;
exports.padGroup = padGroup;
exports.simpleRegularExpression = simpleRegularExpression;
exports.possibleElisions = possibleElisions;
const v6 = __importStar(require("./constants"));
function groupPossibilities(possibilities) {
    return `(${possibilities.join('|')})`;
}
function padGroup(group) {
    if (group.length < 4) {
        return `0{0,${4 - group.length}}${group}`;
    }
    return group;
}
exports.ADDRESS_BOUNDARY = '[^A-Fa-f0-9:]';
function simpleRegularExpression(groups) {
    const zeroIndexes = [];
    groups.forEach((group, i) => {
        const groupInteger = parseInt(group, 16);
        if (groupInteger === 0) {
            zeroIndexes.push(i);
        }
    });
    // You can technically elide a single 0, this creates the regular expressions
    // to match that eventuality
    const possibilities = zeroIndexes.map((zeroIndex) => groups
        .map((group, i) => {
        if (i === zeroIndex) {
            const elision = i === 0 || i === v6.GROUPS - 1 ? ':' : '';
            return groupPossibilities([padGroup(group), elision]);
        }
        return padGroup(group);
    })
        .join(':'));
    // The simplest case
    possibilities.push(groups.map(padGroup).join(':'));
    return groupPossibilities(possibilities);
}
function possibleElisions(elidedGroups, moreLeft, moreRight) {
    const left = moreLeft ? '' : ':';
    const right = moreRight ? '' : ':';
    const possibilities = [];
    // 1. elision of everything (::)
    if (!moreLeft && !moreRight) {
        possibilities.push('::');
    }
    // 2. complete elision of the middle
    if (moreLeft && moreRight) {
        possibilities.push('');
    }
    if ((moreRight && !moreLeft) || (!moreRight && moreLeft)) {
        // 3. complete elision of one side
        possibilities.push(':');
    }
    // 4. elision from the left side
    possibilities.push(`${left}(:0{1,4}){1,${elidedGroups - 1}}`);
    // 5. elision from the right side
    possibilities.push(`(0{1,4}:){1,${elidedGroups - 1}}${right}`);
    // 6. no elision
    possibilities.push(`(0{1,4}:){${elidedGroups - 1}}0{1,4}`);
    // 7. elision (including sloppy elision) from the middle
    for (let groups = 1; groups < elidedGroups - 1; groups++) {
        for (let position = 1; position < elidedGroups - groups; position++) {
            possibilities.push(`(0{1,4}:){${position}}:(0{1,4}:){${elidedGroups - position - groups - 1}}0{1,4}`);
        }
    }
    return groupPossibilities(possibilities);
}
//# sourceMappingURL=regular-expressions.js.map 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\dist\v6\package.json 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\src\package.json 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\src\v4\package.json 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ip-address\src\v6\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ipaddr.js\ipaddr.min.js 
------------------------------------------------------ 
(function(){var r,t,n,e,i,o,a,s;t={},s=this,"undefined"!=typeof module&&null!==module&&module.exports?module.exports=t:s.ipaddr=t,a=function(r,t,n,e){var i,o;if(r.length!==t.length)throw new Error("ipaddr: cannot match CIDR for objects with different lengths");for(i=0;e>0;){if((o=n-e)<0&&(o=0),r[i]>>o!=t[i]>>o)return!1;e-=n,i+=1}return!0},t.subnetMatch=function(r,t,n){var e,i,o,a,s;null==n&&(n="unicast");for(o in t)for(!(a=t[o])[0]||a[0]instanceof Array||(a=[a]),e=0,i=a.length;e<i;e++)if(s=a[e],r.kind()===s[0].kind()&&r.match.apply(r,s))return o;return n},t.IPv4=function(){function r(r){var t,n,e;if(4!==r.length)throw new Error("ipaddr: ipv4 octet count should be 4");for(t=0,n=r.length;t<n;t++)if(!(0<=(e=r[t])&&e<=255))throw new Error("ipaddr: ipv4 octet should fit in 8 bits");this.octets=r}return r.prototype.kind=function(){return"ipv4"},r.prototype.toString=function(){return this.octets.join(".")},r.prototype.toNormalizedString=function(){return this.toString()},r.prototype.toByteArray=function(){return this.octets.slice(0)},r.prototype.match=function(r,t){var n;if(void 0===t&&(r=(n=r)[0],t=n[1]),"ipv4"!==r.kind())throw new Error("ipaddr: cannot match ipv4 address with non-ipv4 one");return a(this.octets,r.octets,8,t)},r.prototype.SpecialRanges={unspecified:[[new r([0,0,0,0]),8]],broadcast:[[new r([255,255,255,255]),32]],multicast:[[new r([224,0,0,0]),4]],linkLocal:[[new r([169,254,0,0]),16]],loopback:[[new r([127,0,0,0]),8]],carrierGradeNat:[[new r([100,64,0,0]),10]],private:[[new r([10,0,0,0]),8],[new r([172,16,0,0]),12],[new r([192,168,0,0]),16]],reserved:[[new r([192,0,0,0]),24],[new r([192,0,2,0]),24],[new r([192,88,99,0]),24],[new r([198,51,100,0]),24],[new r([203,0,113,0]),24],[new r([240,0,0,0]),4]]},r.prototype.range=function(){return t.subnetMatch(this,this.SpecialRanges)},r.prototype.toIPv4MappedAddress=function(){return t.IPv6.parse("::ffff:"+this.toString())},r.prototype.prefixLengthFromSubnetMask=function(){var r,t,n,e,i,o,a;for(a={0:8,128:7,192:6,224:5,240:4,248:3,252:2,254:1,255:0},r=0,i=!1,t=n=3;n>=0;t=n+=-1){if(!((e=this.octets[t])in a))return null;if(o=a[e],i&&0!==o)return null;8!==o&&(i=!0),r+=o}return 32-r},r}(),n="(0?\\d+|0x[a-f0-9]+)",e={fourOctet:new RegExp("^"+n+"\\."+n+"\\."+n+"\\."+n+"$","i"),longValue:new RegExp("^"+n+"$","i")},t.IPv4.parser=function(r){var t,n,i,o,a;if(n=function(r){return"0"===r[0]&&"x"!==r[1]?parseInt(r,8):parseInt(r)},t=r.match(e.fourOctet))return function(){var r,e,o,a;for(a=[],r=0,e=(o=t.slice(1,6)).length;r<e;r++)i=o[r],a.push(n(i));return a}();if(t=r.match(e.longValue)){if((a=n(t[1]))>4294967295||a<0)throw new Error("ipaddr: address outside defined range");return function(){var r,t;for(t=[],o=r=0;r<=24;o=r+=8)t.push(a>>o&255);return t}().reverse()}return null},t.IPv6=function(){function r(r,t){var n,e,i,o,a,s;if(16===r.length)for(this.parts=[],n=e=0;e<=14;n=e+=2)this.parts.push(r[n]<<8|r[n+1]);else{if(8!==r.length)throw new Error("ipaddr: ipv6 part count should be 8 or 16");this.parts=r}for(i=0,o=(s=this.parts).length;i<o;i++)if(!(0<=(a=s[i])&&a<=65535))throw new Error("ipaddr: ipv6 part should fit in 16 bits");t&&(this.zoneId=t)}return r.prototype.kind=function(){return"ipv6"},r.prototype.toString=function(){return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/,"::")},r.prototype.toRFC5952String=function(){var r,t,n,e,i;for(e=/((^|:)(0(:|$)){2,})/g,i=this.toNormalizedString(),r=0,t=-1;n=e.exec(i);)n[0].length>t&&(r=n.index,t=n[0].length);return t<0?i:i.substring(0,r)+"::"+i.substring(r+t)},r.prototype.toByteArray=function(){var r,t,n,e,i;for(r=[],t=0,n=(i=this.parts).length;t<n;t++)e=i[t],r.push(e>>8),r.push(255&e);return r},r.prototype.toNormalizedString=function(){var r,t,n;return r=function(){var r,n,e,i;for(i=[],r=0,n=(e=this.parts).length;r<n;r++)t=e[r],i.push(t.toString(16));return i}.call(this).join(":"),n="",this.zoneId&&(n="%"+this.zoneId),r+n},r.prototype.toFixedLengthString=function(){var r,t,n;return r=function(){var r,n,e,i;for(i=[],r=0,n=(e=this.parts).length;r<n;r++)t=e[r],i.push(t.toString(16).padStart(4,"0"));return i}.call(this).join(":"),n="",this.zoneId&&(n="%"+this.zoneId),r+n},r.prototype.match=function(r,t){var n;if(void 0===t&&(r=(n=r)[0],t=n[1]),"ipv6"!==r.kind())throw new Error("ipaddr: cannot match ipv6 address with non-ipv6 one");return a(this.parts,r.parts,16,t)},r.prototype.SpecialRanges={unspecified:[new r([0,0,0,0,0,0,0,0]),128],linkLocal:[new r([65152,0,0,0,0,0,0,0]),10],multicast:[new r([65280,0,0,0,0,0,0,0]),8],loopback:[new r([0,0,0,0,0,0,0,1]),128],uniqueLocal:[new r([64512,0,0,0,0,0,0,0]),7],ipv4Mapped:[new r([0,0,0,0,0,65535,0,0]),96],rfc6145:[new r([0,0,0,0,65535,0,0,0]),96],rfc6052:[new r([100,65435,0,0,0,0,0,0]),96],"6to4":[new r([8194,0,0,0,0,0,0,0]),16],teredo:[new r([8193,0,0,0,0,0,0,0]),32],reserved:[[new r([8193,3512,0,0,0,0,0,0]),32]]},r.prototype.range=function(){return t.subnetMatch(this,this.SpecialRanges)},r.prototype.isIPv4MappedAddress=function(){return"ipv4Mapped"===this.range()},r.prototype.toIPv4Address=function(){var r,n,e;if(!this.isIPv4MappedAddress())throw new Error("ipaddr: trying to convert a generic ipv6 address to ipv4");return e=this.parts.slice(-2),r=e[0],n=e[1],new t.IPv4([r>>8,255&r,n>>8,255&n])},r.prototype.prefixLengthFromSubnetMask=function(){var r,t,n,e,i,o,a;for(a={0:16,32768:15,49152:14,57344:13,61440:12,63488:11,64512:10,65024:9,65280:8,65408:7,65472:6,65504:5,65520:4,65528:3,65532:2,65534:1,65535:0},r=0,i=!1,t=n=7;n>=0;t=n+=-1){if(!((e=this.parts[t])in a))return null;if(o=a[e],i&&0!==o)return null;16!==o&&(i=!0),r+=o}return 128-r},r}(),i="(?:[0-9a-f]+::?)+",o={zoneIndex:new RegExp("%[0-9a-z]{1,}","i"),native:new RegExp("^(::)?("+i+")?([0-9a-f]+)?(::)?(%[0-9a-z]{1,})?$","i"),transitional:new RegExp("^((?:"+i+")|(?:::)(?:"+i+")?)"+n+"\\."+n+"\\."+n+"\\."+n+"(%[0-9a-z]{1,})?$","i")},r=function(r,t){var n,e,i,a,s,p;if(r.indexOf("::")!==r.lastIndexOf("::"))return null;for((p=(r.match(o.zoneIndex)||[])[0])&&(p=p.substring(1),r=r.replace(/%.+$/,"")),n=0,e=-1;(e=r.indexOf(":",e+1))>=0;)n++;if("::"===r.substr(0,2)&&n--,"::"===r.substr(-2,2)&&n--,n>t)return null;for(s=t-n,a=":";s--;)a+="0:";return":"===(r=r.replace("::",a))[0]&&(r=r.slice(1)),":"===r[r.length-1]&&(r=r.slice(0,-1)),t=function(){var t,n,e,o;for(o=[],t=0,n=(e=r.split(":")).length;t<n;t++)i=e[t],o.push(parseInt(i,16));return o}(),{parts:t,zoneId:p}},t.IPv6.parser=function(t){var n,e,i,a,s,p,u;if(o.native.test(t))return r(t,8);if((a=t.match(o.transitional))&&(u=a[6]||"",(n=r(a[1].slice(0,-1)+u,6)).parts)){for(e=0,i=(p=[parseInt(a[2]),parseInt(a[3]),parseInt(a[4]),parseInt(a[5])]).length;e<i;e++)if(!(0<=(s=p[e])&&s<=255))return null;return n.parts.push(p[0]<<8|p[1]),n.parts.push(p[2]<<8|p[3]),{parts:n.parts,zoneId:n.zoneId}}return null},t.IPv4.isIPv4=t.IPv6.isIPv6=function(r){return null!==this.parser(r)},t.IPv4.isValid=function(r){try{return new this(this.parser(r)),!0}catch(r){return r,!1}},t.IPv4.isValidFourPartDecimal=function(r){return!(!t.IPv4.isValid(r)||!r.match(/^(0|[1-9]\d*)(\.(0|[1-9]\d*)){3}$/))},t.IPv6.isValid=function(r){var t;if("string"==typeof r&&-1===r.indexOf(":"))return!1;try{return t=this.parser(r),new this(t.parts,t.zoneId),!0}catch(r){return r,!1}},t.IPv4.parse=function(r){var t;if(null===(t=this.parser(r)))throw new Error("ipaddr: string is not formatted like ip address");return new this(t)},t.IPv6.parse=function(r){var t;if(null===(t=this.parser(r)).parts)throw new Error("ipaddr: string is not formatted like ip address");return new this(t.parts,t.zoneId)},t.IPv4.parseCIDR=function(r){var t,n,e;if((n=r.match(/^(.+)\/(\d+)$/))&&(t=parseInt(n[2]))>=0&&t<=32)return e=[this.parse(n[1]),t],Object.defineProperty(e,"toString",{value:function(){return this.join("/")}}),e;throw new Error("ipaddr: string is not formatted like an IPv4 CIDR range")},t.IPv4.subnetMaskFromPrefixLength=function(r){var t,n,e;if((r=parseInt(r))<0||r>32)throw new Error("ipaddr: invalid IPv4 prefix length");for(e=[0,0,0,0],n=0,t=Math.floor(r/8);n<t;)e[n]=255,n++;return t<4&&(e[t]=Math.pow(2,r%8)-1<<8-r%8),new this(e)},t.IPv4.broadcastAddressFromCIDR=function(r){var t,n,e,i,o;try{for(e=(t=this.parseCIDR(r))[0].toByteArray(),o=this.subnetMaskFromPrefixLength(t[1]).toByteArray(),i=[],n=0;n<4;)i.push(parseInt(e[n],10)|255^parseInt(o[n],10)),n++;return new this(i)}catch(r){throw r,new Error("ipaddr: the address does not have IPv4 CIDR format")}},t.IPv4.networkAddressFromCIDR=function(r){var t,n,e,i,o;try{for(e=(t=this.parseCIDR(r))[0].toByteArray(),o=this.subnetMaskFromPrefixLength(t[1]).toByteArray(),i=[],n=0;n<4;)i.push(parseInt(e[n],10)&parseInt(o[n],10)),n++;return new this(i)}catch(r){throw r,new Error("ipaddr: the address does not have IPv4 CIDR format")}},t.IPv6.parseCIDR=function(r){var t,n,e;if((n=r.match(/^(.+)\/(\d+)$/))&&(t=parseInt(n[2]))>=0&&t<=128)return e=[this.parse(n[1]),t],Object.defineProperty(e,"toString",{value:function(){return this.join("/")}}),e;throw new Error("ipaddr: string is not formatted like an IPv6 CIDR range")},t.isValid=function(r){return t.IPv6.isValid(r)||t.IPv4.isValid(r)},t.parse=function(r){if(t.IPv6.isValid(r))return t.IPv6.parse(r);if(t.IPv4.isValid(r))return t.IPv4.parse(r);throw new Error("ipaddr: the address has neither IPv6 nor IPv4 format")},t.parseCIDR=function(r){try{return t.IPv6.parseCIDR(r)}catch(n){n;try{return t.IPv4.parseCIDR(r)}catch(r){throw r,new Error("ipaddr: the address has neither IPv6 nor IPv4 CIDR format")}}},t.fromByteArray=function(r){var n;if(4===(n=r.length))return new t.IPv4(r);if(16===n)return new t.IPv6(r);throw new Error("ipaddr: the binary input is neither an IPv6 nor IPv4 address")},t.process=function(r){var t;return t=this.parse(r),"ipv6"===t.kind()&&t.isIPv4MappedAddress()?t.toIPv4Address():t}}).call(this); 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ipaddr.js\package.json 
------------------------------------------------------ 
{
  "name": "ipaddr.js",
  "description": "A library for manipulating IPv4 and IPv6 addresses in JavaScript.",
  "version": "1.9.1",
  "author": "whitequark <whitequark@whitequark.org>",
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {},
  "devDependencies": {
    "coffee-script": "~1.12.6",
    "nodeunit": "^0.11.3",
    "uglify-js": "~3.0.19"
  },
  "scripts": {
    "test": "cake build test"
  },
  "files": [
    "lib/",
    "LICENSE",
    "ipaddr.min.js"
  ],
  "keywords": [
    "ip",
    "ipv4",
    "ipv6"
  ],
  "repository": "git://github.com/whitequark/ipaddr.js",
  "main": "./lib/ipaddr.js",
  "engines": {
    "node": ">= 0.10"
  },
  "license": "MIT",
  "types": "./lib/ipaddr.js.d.ts"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ipaddr.js\lib\ipaddr.js 
------------------------------------------------------ 
(function() {
  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;

  ipaddr = {};

  root = this;

  if ((typeof module !== "undefined" && module !== null) && module.exports) {
    module.exports = ipaddr;
  } else {
    root['ipaddr'] = ipaddr;
  }

  matchCIDR = function(first, second, partSize, cidrBits) {
    var part, shift;
    if (first.length !== second.length) {
      throw new Error("ipaddr: cannot match CIDR for objects with different lengths");
    }
    part = 0;
    while (cidrBits > 0) {
      shift = partSize - cidrBits;
      if (shift < 0) {
        shift = 0;
      }
      if (first[part] >> shift !== second[part] >> shift) {
        return false;
      }
      cidrBits -= partSize;
      part += 1;
    }
    return true;
  };

  ipaddr.subnetMatch = function(address, rangeList, defaultName) {
    var k, len, rangeName, rangeSubnets, subnet;
    if (defaultName == null) {
      defaultName = 'unicast';
    }
    for (rangeName in rangeList) {
      rangeSubnets = rangeList[rangeName];
      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {
        rangeSubnets = [rangeSubnets];
      }
      for (k = 0, len = rangeSubnets.length; k < len; k++) {
        subnet = rangeSubnets[k];
        if (address.kind() === subnet[0].kind()) {
          if (address.match.apply(address, subnet)) {
            return rangeName;
          }
        }
      }
    }
    return defaultName;
  };

  ipaddr.IPv4 = (function() {
    function IPv4(octets) {
      var k, len, octet;
      if (octets.length !== 4) {
        throw new Error("ipaddr: ipv4 octet count should be 4");
      }
      for (k = 0, len = octets.length; k < len; k++) {
        octet = octets[k];
        if (!((0 <= octet && octet <= 255))) {
          throw new Error("ipaddr: ipv4 octet should fit in 8 bits");
        }
      }
      this.octets = octets;
    }

    IPv4.prototype.kind = function() {
      return 'ipv4';
    };

    IPv4.prototype.toString = function() {
      return this.octets.join(".");
    };

    IPv4.prototype.toNormalizedString = function() {
      return this.toString();
    };

    IPv4.prototype.toByteArray = function() {
      return this.octets.slice(0);
    };

    IPv4.prototype.match = function(other, cidrRange) {
      var ref;
      if (cidrRange === void 0) {
        ref = other, other = ref[0], cidrRange = ref[1];
      }
      if (other.kind() !== 'ipv4') {
        throw new Error("ipaddr: cannot match ipv4 address with non-ipv4 one");
      }
      return matchCIDR(this.octets, other.octets, 8, cidrRange);
    };

    IPv4.prototype.SpecialRanges = {
      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],
      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],
      multicast: [[new IPv4([224, 0, 0, 0]), 4]],
      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],
      loopback: [[new IPv4([127, 0, 0, 0]), 8]],
      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],
      "private": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],
      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]
    };

    IPv4.prototype.range = function() {
      return ipaddr.subnetMatch(this, this.SpecialRanges);
    };

    IPv4.prototype.toIPv4MappedAddress = function() {
      return ipaddr.IPv6.parse("::ffff:" + (this.toString()));
    };

    IPv4.prototype.prefixLengthFromSubnetMask = function() {
      var cidr, i, k, octet, stop, zeros, zerotable;
      zerotable = {
        0: 8,
        128: 7,
        192: 6,
        224: 5,
        240: 4,
        248: 3,
        252: 2,
        254: 1,
        255: 0
      };
      cidr = 0;
      stop = false;
      for (i = k = 3; k >= 0; i = k += -1) {
        octet = this.octets[i];
        if (octet in zerotable) {
          zeros = zerotable[octet];
          if (stop && zeros !== 0) {
            return null;
          }
          if (zeros !== 8) {
            stop = true;
          }
          cidr += zeros;
        } else {
          return null;
        }
      }
      return 32 - cidr;
    };

    return IPv4;

  })();

  ipv4Part = "(0?\\d+|0x[a-f0-9]+)";

  ipv4Regexes = {
    fourOctet: new RegExp("^" + ipv4Part + "\\." + ipv4Part + "\\." + ipv4Part + "\\." + ipv4Part + "$", 'i'),
    longValue: new RegExp("^" + ipv4Part + "$", 'i')
  };

  ipaddr.IPv4.parser = function(string) {
    var match, parseIntAuto, part, shift, value;
    parseIntAuto = function(string) {
      if (string[0] === "0" && string[1] !== "x") {
        return parseInt(string, 8);
      } else {
        return parseInt(string);
      }
    };
    if (match = string.match(ipv4Regexes.fourOctet)) {
      return (function() {
        var k, len, ref, results;
        ref = match.slice(1, 6);
        results = [];
        for (k = 0, len = ref.length; k < len; k++) {
          part = ref[k];
          results.push(parseIntAuto(part));
        }
        return results;
      })();
    } else if (match = string.match(ipv4Regexes.longValue)) {
      value = parseIntAuto(match[1]);
      if (value > 0xffffffff || value < 0) {
        throw new Error("ipaddr: address outside defined range");
      }
      return ((function() {
        var k, results;
        results = [];
        for (shift = k = 0; k <= 24; shift = k += 8) {
          results.push((value >> shift) & 0xff);
        }
        return results;
      })()).reverse();
    } else {
      return null;
    }
  };

  ipaddr.IPv6 = (function() {
    function IPv6(parts, zoneId) {
      var i, k, l, len, part, ref;
      if (parts.length === 16) {
        this.parts = [];
        for (i = k = 0; k <= 14; i = k += 2) {
          this.parts.push((parts[i] << 8) | parts[i + 1]);
        }
      } else if (parts.length === 8) {
        this.parts = parts;
      } else {
        throw new Error("ipaddr: ipv6 part count should be 8 or 16");
      }
      ref = this.parts;
      for (l = 0, len = ref.length; l < len; l++) {
        part = ref[l];
        if (!((0 <= part && part <= 0xffff))) {
          throw new Error("ipaddr: ipv6 part should fit in 16 bits");
        }
      }
      if (zoneId) {
        this.zoneId = zoneId;
      }
    }

    IPv6.prototype.kind = function() {
      return 'ipv6';
    };

    IPv6.prototype.toString = function() {
      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');
    };

    IPv6.prototype.toRFC5952String = function() {
      var bestMatchIndex, bestMatchLength, match, regex, string;
      regex = /((^|:)(0(:|$)){2,})/g;
      string = this.toNormalizedString();
      bestMatchIndex = 0;
      bestMatchLength = -1;
      while ((match = regex.exec(string))) {
        if (match[0].length > bestMatchLength) {
          bestMatchIndex = match.index;
          bestMatchLength = match[0].length;
        }
      }
      if (bestMatchLength < 0) {
        return string;
      }
      return string.substring(0, bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);
    };

    IPv6.prototype.toByteArray = function() {
      var bytes, k, len, part, ref;
      bytes = [];
      ref = this.parts;
      for (k = 0, len = ref.length; k < len; k++) {
        part = ref[k];
        bytes.push(part >> 8);
        bytes.push(part & 0xff);
      }
      return bytes;
    };

    IPv6.prototype.toNormalizedString = function() {
      var addr, part, suffix;
      addr = ((function() {
        var k, len, ref, results;
        ref = this.parts;
        results = [];
        for (k = 0, len = ref.length; k < len; k++) {
          part = ref[k];
          results.push(part.toString(16));
        }
        return results;
      }).call(this)).join(":");
      suffix = '';
      if (this.zoneId) {
        suffix = '%' + this.zoneId;
      }
      return addr + suffix;
    };

    IPv6.prototype.toFixedLengthString = function() {
      var addr, part, suffix;
      addr = ((function() {
        var k, len, ref, results;
        ref = this.parts;
        results = [];
        for (k = 0, len = ref.length; k < len; k++) {
          part = ref[k];
          results.push(part.toString(16).padStart(4, '0'));
        }
        return results;
      }).call(this)).join(":");
      suffix = '';
      if (this.zoneId) {
        suffix = '%' + this.zoneId;
      }
      return addr + suffix;
    };

    IPv6.prototype.match = function(other, cidrRange) {
      var ref;
      if (cidrRange === void 0) {
        ref = other, other = ref[0], cidrRange = ref[1];
      }
      if (other.kind() !== 'ipv6') {
        throw new Error("ipaddr: cannot match ipv6 address with non-ipv6 one");
      }
      return matchCIDR(this.parts, other.parts, 16, cidrRange);
    };

    IPv6.prototype.SpecialRanges = {
      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],
      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],
      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],
      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],
      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],
      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],
      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],
      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],
      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],
      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],
      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]
    };

    IPv6.prototype.range = function() {
      return ipaddr.subnetMatch(this, this.SpecialRanges);
    };

    IPv6.prototype.isIPv4MappedAddress = function() {
      return this.range() === 'ipv4Mapped';
    };

    IPv6.prototype.toIPv4Address = function() {
      var high, low, ref;
      if (!this.isIPv4MappedAddress()) {
        throw new Error("ipaddr: trying to convert a generic ipv6 address to ipv4");
      }
      ref = this.parts.slice(-2), high = ref[0], low = ref[1];
      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);
    };

    IPv6.prototype.prefixLengthFromSubnetMask = function() {
      var cidr, i, k, part, stop, zeros, zerotable;
      zerotable = {
        0: 16,
        32768: 15,
        49152: 14,
        57344: 13,
        61440: 12,
        63488: 11,
        64512: 10,
        65024: 9,
        65280: 8,
        65408: 7,
        65472: 6,
        65504: 5,
        65520: 4,
        65528: 3,
        65532: 2,
        65534: 1,
        65535: 0
      };
      cidr = 0;
      stop = false;
      for (i = k = 7; k >= 0; i = k += -1) {
        part = this.parts[i];
        if (part in zerotable) {
          zeros = zerotable[part];
          if (stop && zeros !== 0) {
            return null;
          }
          if (zeros !== 16) {
            stop = true;
          }
          cidr += zeros;
        } else {
          return null;
        }
      }
      return 128 - cidr;
    };

    return IPv6;

  })();

  ipv6Part = "(?:[0-9a-f]+::?)+";

  zoneIndex = "%[0-9a-z]{1,}";

  ipv6Regexes = {
    zoneIndex: new RegExp(zoneIndex, 'i'),
    "native": new RegExp("^(::)?(" + ipv6Part + ")?([0-9a-f]+)?(::)?(" + zoneIndex + ")?$", 'i'),
    transitional: new RegExp(("^((?:" + ipv6Part + ")|(?:::)(?:" + ipv6Part + ")?)") + (ipv4Part + "\\." + ipv4Part + "\\." + ipv4Part + "\\." + ipv4Part) + ("(" + zoneIndex + ")?$"), 'i')
  };

  expandIPv6 = function(string, parts) {
    var colonCount, lastColon, part, replacement, replacementCount, zoneId;
    if (string.indexOf('::') !== string.lastIndexOf('::')) {
      return null;
    }
    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];
    if (zoneId) {
      zoneId = zoneId.substring(1);
      string = string.replace(/%.+$/, '');
    }
    colonCount = 0;
    lastColon = -1;
    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {
      colonCount++;
    }
    if (string.substr(0, 2) === '::') {
      colonCount--;
    }
    if (string.substr(-2, 2) === '::') {
      colonCount--;
    }
    if (colonCount > parts) {
      return null;
    }
    replacementCount = parts - colonCount;
    replacement = ':';
    while (replacementCount--) {
      replacement += '0:';
    }
    string = string.replace('::', replacement);
    if (string[0] === ':') {
      string = string.slice(1);
    }
    if (string[string.length - 1] === ':') {
      string = string.slice(0, -1);
    }
    parts = (function() {
      var k, len, ref, results;
      ref = string.split(":");
      results = [];
      for (k = 0, len = ref.length; k < len; k++) {
        part = ref[k];
        results.push(parseInt(part, 16));
      }
      return results;
    })();
    return {
      parts: parts,
      zoneId: zoneId
    };
  };

  ipaddr.IPv6.parser = function(string) {
    var addr, k, len, match, octet, octets, zoneId;
    if (ipv6Regexes['native'].test(string)) {
      return expandIPv6(string, 8);
    } else if (match = string.match(ipv6Regexes['transitional'])) {
      zoneId = match[6] || '';
      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);
      if (addr.parts) {
        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];
        for (k = 0, len = octets.length; k < len; k++) {
          octet = octets[k];
          if (!((0 <= octet && octet <= 255))) {
            return null;
          }
        }
        addr.parts.push(octets[0] << 8 | octets[1]);
        addr.parts.push(octets[2] << 8 | octets[3]);
        return {
          parts: addr.parts,
          zoneId: addr.zoneId
        };
      }
    }
    return null;
  };

  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {
    return this.parser(string) !== null;
  };

  ipaddr.IPv4.isValid = function(string) {
    var e;
    try {
      new this(this.parser(string));
      return true;
    } catch (error1) {
      e = error1;
      return false;
    }
  };

  ipaddr.IPv4.isValidFourPartDecimal = function(string) {
    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\d*)(\.(0|[1-9]\d*)){3}$/)) {
      return true;
    } else {
      return false;
    }
  };

  ipaddr.IPv6.isValid = function(string) {
    var addr, e;
    if (typeof string === "string" && string.indexOf(":") === -1) {
      return false;
    }
    try {
      addr = this.parser(string);
      new this(addr.parts, addr.zoneId);
      return true;
    } catch (error1) {
      e = error1;
      return false;
    }
  };

  ipaddr.IPv4.parse = function(string) {
    var parts;
    parts = this.parser(string);
    if (parts === null) {
      throw new Error("ipaddr: string is not formatted like ip address");
    }
    return new this(parts);
  };

  ipaddr.IPv6.parse = function(string) {
    var addr;
    addr = this.parser(string);
    if (addr.parts === null) {
      throw new Error("ipaddr: string is not formatted like ip address");
    }
    return new this(addr.parts, addr.zoneId);
  };

  ipaddr.IPv4.parseCIDR = function(string) {
    var maskLength, match, parsed;
    if (match = string.match(/^(.+)\/(\d+)$/)) {
      maskLength = parseInt(match[2]);
      if (maskLength >= 0 && maskLength <= 32) {
        parsed = [this.parse(match[1]), maskLength];
        Object.defineProperty(parsed, 'toString', {
          value: function() {
            return this.join('/');
          }
        });
        return parsed;
      }
    }
    throw new Error("ipaddr: string is not formatted like an IPv4 CIDR range");
  };

  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {
    var filledOctetCount, j, octets;
    prefix = parseInt(prefix);
    if (prefix < 0 || prefix > 32) {
      throw new Error('ipaddr: invalid IPv4 prefix length');
    }
    octets = [0, 0, 0, 0];
    j = 0;
    filledOctetCount = Math.floor(prefix / 8);
    while (j < filledOctetCount) {
      octets[j] = 255;
      j++;
    }
    if (filledOctetCount < 4) {
      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);
    }
    return new this(octets);
  };

  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {
    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;
    try {
      cidr = this.parseCIDR(string);
      ipInterfaceOctets = cidr[0].toByteArray();
      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();
      octets = [];
      i = 0;
      while (i < 4) {
        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);
        i++;
      }
      return new this(octets);
    } catch (error1) {
      error = error1;
      throw new Error('ipaddr: the address does not have IPv4 CIDR format');
    }
  };

  ipaddr.IPv4.networkAddressFromCIDR = function(string) {
    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;
    try {
      cidr = this.parseCIDR(string);
      ipInterfaceOctets = cidr[0].toByteArray();
      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();
      octets = [];
      i = 0;
      while (i < 4) {
        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));
        i++;
      }
      return new this(octets);
    } catch (error1) {
      error = error1;
      throw new Error('ipaddr: the address does not have IPv4 CIDR format');
    }
  };

  ipaddr.IPv6.parseCIDR = function(string) {
    var maskLength, match, parsed;
    if (match = string.match(/^(.+)\/(\d+)$/)) {
      maskLength = parseInt(match[2]);
      if (maskLength >= 0 && maskLength <= 128) {
        parsed = [this.parse(match[1]), maskLength];
        Object.defineProperty(parsed, 'toString', {
          value: function() {
            return this.join('/');
          }
        });
        return parsed;
      }
    }
    throw new Error("ipaddr: string is not formatted like an IPv6 CIDR range");
  };

  ipaddr.isValid = function(string) {
    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);
  };

  ipaddr.parse = function(string) {
    if (ipaddr.IPv6.isValid(string)) {
      return ipaddr.IPv6.parse(string);
    } else if (ipaddr.IPv4.isValid(string)) {
      return ipaddr.IPv4.parse(string);
    } else {
      throw new Error("ipaddr: the address has neither IPv6 nor IPv4 format");
    }
  };

  ipaddr.parseCIDR = function(string) {
    var e;
    try {
      return ipaddr.IPv6.parseCIDR(string);
    } catch (error1) {
      e = error1;
      try {
        return ipaddr.IPv4.parseCIDR(string);
      } catch (error1) {
        e = error1;
        throw new Error("ipaddr: the address has neither IPv6 nor IPv4 CIDR format");
      }
    }
  };

  ipaddr.fromByteArray = function(bytes) {
    var length;
    length = bytes.length;
    if (length === 4) {
      return new ipaddr.IPv4(bytes);
    } else if (length === 16) {
      return new ipaddr.IPv6(bytes);
    } else {
      throw new Error("ipaddr: the binary input is neither an IPv6 nor IPv4 address");
    }
  };

  ipaddr.process = function(string) {
    var addr;
    addr = this.parse(string);
    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {
      return addr.toIPv4Address();
    } else {
      return addr;
    }
  };

}).call(this);
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\ipaddr.js\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\is-fullwidth-code-point\index.js 
------------------------------------------------------ 
/* eslint-disable yoda */
'use strict';

const isFullwidthCodePoint = codePoint => {
	if (Number.isNaN(codePoint)) {
		return false;
	}

	// Code points are derived from:
	// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt
	if (
		codePoint >= 0x1100 && (
			codePoint <= 0x115F || // Hangul Jamo
			codePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET
			codePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET
			// CJK Radicals Supplement .. Enclosed CJK Letters and Months
			(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||
			// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
			(0x3250 <= codePoint && codePoint <= 0x4DBF) ||
			// CJK Unified Ideographs .. Yi Radicals
			(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||
			// Hangul Jamo Extended-A
			(0xA960 <= codePoint && codePoint <= 0xA97C) ||
			// Hangul Syllables
			(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||
			// CJK Compatibility Ideographs
			(0xF900 <= codePoint && codePoint <= 0xFAFF) ||
			// Vertical Forms
			(0xFE10 <= codePoint && codePoint <= 0xFE19) ||
			// CJK Compatibility Forms .. Small Form Variants
			(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||
			// Halfwidth and Fullwidth Forms
			(0xFF01 <= codePoint && codePoint <= 0xFF60) ||
			(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||
			// Kana Supplement
			(0x1B000 <= codePoint && codePoint <= 0x1B001) ||
			// Enclosed Ideographic Supplement
			(0x1F200 <= codePoint && codePoint <= 0x1F251) ||
			// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
			(0x20000 <= codePoint && codePoint <= 0x3FFFD)
		)
	) {
		return true;
	}

	return false;
};

module.exports = isFullwidthCodePoint;
module.exports.default = isFullwidthCodePoint;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\is-fullwidth-code-point\package.json 
------------------------------------------------------ 
{
	"name": "is-fullwidth-code-point",
	"version": "3.0.0",
	"description": "Check if the character represented by a given Unicode code point is fullwidth",
	"license": "MIT",
	"repository": "sindresorhus/is-fullwidth-code-point",
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "sindresorhus.com"
	},
	"engines": {
		"node": ">=8"
	},
	"scripts": {
		"test": "xo && ava && tsd-check"
	},
	"files": [
		"index.js",
		"index.d.ts"
	],
	"keywords": [
		"fullwidth",
		"full-width",
		"full",
		"width",
		"unicode",
		"character",
		"string",
		"codepoint",
		"code",
		"point",
		"is",
		"detect",
		"check"
	],
	"devDependencies": {
		"ava": "^1.3.1",
		"tsd-check": "^0.5.0",
		"xo": "^0.24.0"
	}
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\is-lambda\index.js 
------------------------------------------------------ 
'use strict'

module.exports = !!(
  (process.env.LAMBDA_TASK_ROOT && process.env.AWS_EXECUTION_ENV) ||
  false
)
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\is-lambda\test.js 
------------------------------------------------------ 
'use strict'

var assert = require('assert')
var clearRequire = require('clear-require')

process.env.AWS_EXECUTION_ENV = 'AWS_Lambda_nodejs6.10'
process.env.LAMBDA_TASK_ROOT = '/var/task'

var isCI = require('./')
assert(isCI)

delete process.env.AWS_EXECUTION_ENV

clearRequire('./')
isCI = require('./')
assert(!isCI)
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\is-lambda\package.json 
------------------------------------------------------ 
{
  "name": "is-lambda",
  "version": "1.0.1",
  "description": "Detect if your code is running on an AWS Lambda server",
  "main": "index.js",
  "dependencies": {},
  "devDependencies": {
    "clear-require": "^1.0.1",
    "standard": "^10.0.2"
  },
  "scripts": {
    "test": "standard && node test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/watson/is-lambda.git"
  },
  "keywords": [
    "aws",
    "hosting",
    "hosted",
    "lambda",
    "detect"
  ],
  "author": "Thomas Watson Steen <w@tson.dk> (https://twitter.com/wa7son)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/watson/is-lambda/issues"
  },
  "homepage": "https://github.com/watson/is-lambda",
  "coordinates": [
    37.3859955,
    -122.0838831
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\is-promise\index.js 
------------------------------------------------------ 
module.exports = isPromise;
module.exports.default = isPromise;

function isPromise(obj) {
  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\is-promise\package.json 
------------------------------------------------------ 
{
  "name": "is-promise",
  "version": "4.0.0",
  "description": "Test whether an object looks like a promises-a+ promise",
  "main": "./index.js",
  "scripts": {
    "test": "node test"
  },
  "files": [
    "index.js",
    "index.mjs",
    "index.d.ts"
  ],
  "exports": {
    ".": [
      {
        "import": "./index.mjs",
        "require": "./index.js",
        "default": "./index.js"
      },
      "./index.js"
    ]
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/then/is-promise.git"
  },
  "author": "ForbesLindesay",
  "license": "MIT"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\isexe\index.js 
------------------------------------------------------ 
var fs = require('fs')
var core
if (process.platform === 'win32' || global.TESTING_WINDOWS) {
  core = require('./windows.js')
} else {
  core = require('./mode.js')
}

module.exports = isexe
isexe.sync = sync

function isexe (path, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  if (!cb) {
    if (typeof Promise !== 'function') {
      throw new TypeError('callback not provided')
    }

    return new Promise(function (resolve, reject) {
      isexe(path, options || {}, function (er, is) {
        if (er) {
          reject(er)
        } else {
          resolve(is)
        }
      })
    })
  }

  core(path, options || {}, function (er, is) {
    // ignore EACCES because that just means we aren't allowed to run it
    if (er) {
      if (er.code === 'EACCES' || options && options.ignoreErrors) {
        er = null
        is = false
      }
    }
    cb(er, is)
  })
}

function sync (path, options) {
  // my kingdom for a filtered catch
  try {
    return core.sync(path, options || {})
  } catch (er) {
    if (options && options.ignoreErrors || er.code === 'EACCES') {
      return false
    } else {
      throw er
    }
  }
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\isexe\mode.js 
------------------------------------------------------ 
module.exports = isexe
isexe.sync = sync

var fs = require('fs')

function isexe (path, options, cb) {
  fs.stat(path, function (er, stat) {
    cb(er, er ? false : checkStat(stat, options))
  })
}

function sync (path, options) {
  return checkStat(fs.statSync(path), options)
}

function checkStat (stat, options) {
  return stat.isFile() && checkMode(stat, options)
}

function checkMode (stat, options) {
  var mod = stat.mode
  var uid = stat.uid
  var gid = stat.gid

  var myUid = options.uid !== undefined ?
    options.uid : process.getuid && process.getuid()
  var myGid = options.gid !== undefined ?
    options.gid : process.getgid && process.getgid()

  var u = parseInt('100', 8)
  var g = parseInt('010', 8)
  var o = parseInt('001', 8)
  var ug = u | g

  var ret = (mod & o) ||
    (mod & g) && gid === myGid ||
    (mod & u) && uid === myUid ||
    (mod & ug) && myUid === 0

  return ret
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\isexe\windows.js 
------------------------------------------------------ 
module.exports = isexe
isexe.sync = sync

var fs = require('fs')

function checkPathExt (path, options) {
  var pathext = options.pathExt !== undefined ?
    options.pathExt : process.env.PATHEXT

  if (!pathext) {
    return true
  }

  pathext = pathext.split(';')
  if (pathext.indexOf('') !== -1) {
    return true
  }
  for (var i = 0; i < pathext.length; i++) {
    var p = pathext[i].toLowerCase()
    if (p && path.substr(-p.length).toLowerCase() === p) {
      return true
    }
  }
  return false
}

function checkStat (stat, path, options) {
  if (!stat.isSymbolicLink() && !stat.isFile()) {
    return false
  }
  return checkPathExt(path, options)
}

function isexe (path, options, cb) {
  fs.stat(path, function (er, stat) {
    cb(er, er ? false : checkStat(stat, path, options))
  })
}

function sync (path, options) {
  return checkStat(fs.statSync(path), path, options)
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\isexe\package.json 
------------------------------------------------------ 
{
  "name": "isexe",
  "version": "2.0.0",
  "description": "Minimal module to check if a file is executable.",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "devDependencies": {
    "mkdirp": "^0.5.1",
    "rimraf": "^2.5.0",
    "tap": "^10.3.0"
  },
  "scripts": {
    "test": "tap test/*.js --100",
    "preversion": "npm test",
    "postversion": "npm publish",
    "postpublish": "git push origin --all; git push origin --tags"
  },
  "author": "Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)",
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/isaacs/isexe.git"
  },
  "keywords": [],
  "bugs": {
    "url": "https://github.com/isaacs/isexe/issues"
  },
  "homepage": "https://github.com/isaacs/isexe#readme"
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\isexe\test\basic.js 
------------------------------------------------------ 
var t = require('tap')
var fs = require('fs')
var path = require('path')
var fixture = path.resolve(__dirname, 'fixtures')
var meow = fixture + '/meow.cat'
var mine = fixture + '/mine.cat'
var ours = fixture + '/ours.cat'
var fail = fixture + '/fail.false'
var noent = fixture + '/enoent.exe'
var mkdirp = require('mkdirp')
var rimraf = require('rimraf')

var isWindows = process.platform === 'win32'
var hasAccess = typeof fs.access === 'function'
var winSkip = isWindows && 'windows'
var accessSkip = !hasAccess && 'no fs.access function'
var hasPromise = typeof Promise === 'function'
var promiseSkip = !hasPromise && 'no global Promise'

function reset () {
  delete require.cache[require.resolve('../')]
  return require('../')
}

t.test('setup fixtures', function (t) {
  rimraf.sync(fixture)
  mkdirp.sync(fixture)
  fs.writeFileSync(meow, '#!/usr/bin/env cat\nmeow\n')
  fs.chmodSync(meow, parseInt('0755', 8))
  fs.writeFileSync(fail, '#!/usr/bin/env false\n')
  fs.chmodSync(fail, parseInt('0644', 8))
  fs.writeFileSync(mine, '#!/usr/bin/env cat\nmine\n')
  fs.chmodSync(mine, parseInt('0744', 8))
  fs.writeFileSync(ours, '#!/usr/bin/env cat\nours\n')
  fs.chmodSync(ours, parseInt('0754', 8))
  t.end()
})

t.test('promise', { skip: promiseSkip }, function (t) {
  var isexe = reset()
  t.test('meow async', function (t) {
    isexe(meow).then(function (is) {
      t.ok(is)
      t.end()
    })
  })
  t.test('fail async', function (t) {
    isexe(fail).then(function (is) {
      t.notOk(is)
      t.end()
    })
  })
  t.test('noent async', function (t) {
    isexe(noent).catch(function (er) {
      t.ok(er)
      t.end()
    })
  })
  t.test('noent ignore async', function (t) {
    isexe(noent, { ignoreErrors: true }).then(function (is) {
      t.notOk(is)
      t.end()
    })
  })
  t.end()
})

t.test('no promise', function (t) {
  global.Promise = null
  var isexe = reset()
  t.throws('try to meow a promise', function () {
    isexe(meow)
  })
  t.end()
})

t.test('access', { skip: accessSkip || winSkip }, function (t) {
  runTest(t)
})

t.test('mode', { skip: winSkip }, function (t) {
  delete fs.access
  delete fs.accessSync
  var isexe = reset()
  t.ok(isexe.sync(ours, { uid: 0, gid: 0 }))
  t.ok(isexe.sync(mine, { uid: 0, gid: 0 }))
  runTest(t)
})

t.test('windows', function (t) {
  global.TESTING_WINDOWS = true
  var pathExt = '.EXE;.CAT;.CMD;.COM'
  t.test('pathExt option', function (t) {
    runTest(t, { pathExt: '.EXE;.CAT;.CMD;.COM' })
  })
  t.test('pathExt env', function (t) {
    process.env.PATHEXT = pathExt
    runTest(t)
  })
  t.test('no pathExt', function (t) {
    // with a pathExt of '', any filename is fine.
    // so the "fail" one would still pass.
    runTest(t, { pathExt: '', skipFail: true })
  })
  t.test('pathext with empty entry', function (t) {
    // with a pathExt of '', any filename is fine.
    // so the "fail" one would still pass.
    runTest(t, { pathExt: ';' + pathExt, skipFail: true })
  })
  t.end()
})

t.test('cleanup', function (t) {
  rimraf.sync(fixture)
  t.end()
})

function runTest (t, options) {
  var isexe = reset()

  var optionsIgnore = Object.create(options || {})
  optionsIgnore.ignoreErrors = true

  if (!options || !options.skipFail) {
    t.notOk(isexe.sync(fail, options))
  }
  t.notOk(isexe.sync(noent, optionsIgnore))
  if (!options) {
    t.ok(isexe.sync(meow))
  } else {
    t.ok(isexe.sync(meow, options))
  }

  t.ok(isexe.sync(mine, options))
  t.ok(isexe.sync(ours, options))
  t.throws(function () {
    isexe.sync(noent, options)
  })

  t.test('meow async', function (t) {
    if (!options) {
      isexe(meow, function (er, is) {
        if (er) {
          throw er
        }
        t.ok(is)
        t.end()
      })
    } else {
      isexe(meow, options, function (er, is) {
        if (er) {
          throw er
        }
        t.ok(is)
        t.end()
      })
    }
  })

  t.test('mine async', function (t) {
    isexe(mine, options, function (er, is) {
      if (er) {
        throw er
      }
      t.ok(is)
      t.end()
    })
  })

  t.test('ours async', function (t) {
    isexe(ours, options, function (er, is) {
      if (er) {
        throw er
      }
      t.ok(is)
      t.end()
    })
  })

  if (!options || !options.skipFail) {
    t.test('fail async', function (t) {
      isexe(fail, options, function (er, is) {
        if (er) {
          throw er
        }
        t.notOk(is)
        t.end()
      })
    })
  }

  t.test('noent async', function (t) {
    isexe(noent, options, function (er, is) {
      t.ok(er)
      t.notOk(is)
      t.end()
    })
  })

  t.test('noent ignore async', function (t) {
    isexe(noent, optionsIgnore, function (er, is) {
      if (er) {
        throw er
      }
      t.notOk(is)
      t.end()
    })
  })

  t.test('directory is not executable', function (t) {
    isexe(__dirname, options, function (er, is) {
      if (er) {
        throw er
      }
      t.notOk(is)
      t.end()
    })
  })

  t.end()
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\isexe\test\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\decode.js 
------------------------------------------------------ 
var jws = require('jws');

module.exports = function (jwt, options) {
  options = options || {};
  var decoded = jws.decode(jwt, options);
  if (!decoded) { return null; }
  var payload = decoded.payload;

  //try parse the payload
  if(typeof payload === 'string') {
    try {
      var obj = JSON.parse(payload);
      if(obj !== null && typeof obj === 'object') {
        payload = obj;
      }
    } catch (e) { }
  }

  //return header if `complete` option is enabled.  header includes claims
  //such as `kid` and `alg` used to select the key within a JWKS needed to
  //verify the signature
  if (options.complete === true) {
    return {
      header: decoded.header,
      payload: payload,
      signature: decoded.signature
    };
  }
  return payload;
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\index.js 
------------------------------------------------------ 
module.exports = {
  decode: require('./decode'),
  verify: require('./verify'),
  sign: require('./sign'),
  JsonWebTokenError: require('./lib/JsonWebTokenError'),
  NotBeforeError: require('./lib/NotBeforeError'),
  TokenExpiredError: require('./lib/TokenExpiredError'),
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\sign.js 
------------------------------------------------------ 
const timespan = require('./lib/timespan');
const PS_SUPPORTED = require('./lib/psSupported');
const validateAsymmetricKey = require('./lib/validateAsymmetricKey');
const jws = require('jws');
const includes = require('lodash.includes');
const isBoolean = require('lodash.isboolean');
const isInteger = require('lodash.isinteger');
const isNumber = require('lodash.isnumber');
const isPlainObject = require('lodash.isplainobject');
const isString = require('lodash.isstring');
const once = require('lodash.once');
const { KeyObject, createSecretKey, createPrivateKey } = require('crypto')

const SUPPORTED_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512', 'none'];
if (PS_SUPPORTED) {
  SUPPORTED_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');
}

const sign_options_schema = {
  expiresIn: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '"expiresIn" should be a number of seconds or string representing a timespan' },
  notBefore: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '"notBefore" should be a number of seconds or string representing a timespan' },
  audience: { isValid: function(value) { return isString(value) || Array.isArray(value); }, message: '"audience" must be a string or array' },
  algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '"algorithm" must be a valid string enum value' },
  header: { isValid: isPlainObject, message: '"header" must be an object' },
  encoding: { isValid: isString, message: '"encoding" must be a string' },
  issuer: { isValid: isString, message: '"issuer" must be a string' },
  subject: { isValid: isString, message: '"subject" must be a string' },
  jwtid: { isValid: isString, message: '"jwtid" must be a string' },
  noTimestamp: { isValid: isBoolean, message: '"noTimestamp" must be a boolean' },
  keyid: { isValid: isString, message: '"keyid" must be a string' },
  mutatePayload: { isValid: isBoolean, message: '"mutatePayload" must be a boolean' },
  allowInsecureKeySizes: { isValid: isBoolean, message: '"allowInsecureKeySizes" must be a boolean'},
  allowInvalidAsymmetricKeyTypes: { isValid: isBoolean, message: '"allowInvalidAsymmetricKeyTypes" must be a boolean'}
};

const registered_claims_schema = {
  iat: { isValid: isNumber, message: '"iat" should be a number of seconds' },
  exp: { isValid: isNumber, message: '"exp" should be a number of seconds' },
  nbf: { isValid: isNumber, message: '"nbf" should be a number of seconds' }
};

function validate(schema, allowUnknown, object, parameterName) {
  if (!isPlainObject(object)) {
    throw new Error('Expected "' + parameterName + '" to be a plain object.');
  }
  Object.keys(object)
    .forEach(function(key) {
      const validator = schema[key];
      if (!validator) {
        if (!allowUnknown) {
          throw new Error('"' + key + '" is not allowed in "' + parameterName + '"');
        }
        return;
      }
      if (!validator.isValid(object[key])) {
        throw new Error(validator.message);
      }
    });
}

function validateOptions(options) {
  return validate(sign_options_schema, false, options, 'options');
}

function validatePayload(payload) {
  return validate(registered_claims_schema, true, payload, 'payload');
}

const options_to_payload = {
  'audience': 'aud',
  'issuer': 'iss',
  'subject': 'sub',
  'jwtid': 'jti'
};

const options_for_objects = [
  'expiresIn',
  'notBefore',
  'noTimestamp',
  'audience',
  'issuer',
  'subject',
  'jwtid',
];

module.exports = function (payload, secretOrPrivateKey, options, callback) {
  if (typeof options === 'function') {
    callback = options;
    options = {};
  } else {
    options = options || {};
  }

  const isObjectPayload = typeof payload === 'object' &&
                        !Buffer.isBuffer(payload);

  const header = Object.assign({
    alg: options.algorithm || 'HS256',
    typ: isObjectPayload ? 'JWT' : undefined,
    kid: options.keyid
  }, options.header);

  function failure(err) {
    if (callback) {
      return callback(err);
    }
    throw err;
  }

  if (!secretOrPrivateKey && options.algorithm !== 'none') {
    return failure(new Error('secretOrPrivateKey must have a value'));
  }

  if (secretOrPrivateKey != null && !(secretOrPrivateKey instanceof KeyObject)) {
    try {
      secretOrPrivateKey = createPrivateKey(secretOrPrivateKey)
    } catch (_) {
      try {
        secretOrPrivateKey = createSecretKey(typeof secretOrPrivateKey === 'string' ? Buffer.from(secretOrPrivateKey) : secretOrPrivateKey)
      } catch (_) {
        return failure(new Error('secretOrPrivateKey is not valid key material'));
      }
    }
  }

  if (header.alg.startsWith('HS') && secretOrPrivateKey.type !== 'secret') {
    return failure(new Error((`secretOrPrivateKey must be a symmetric key when using ${header.alg}`)))
  } else if (/^(?:RS|PS|ES)/.test(header.alg)) {
    if (secretOrPrivateKey.type !== 'private') {
      return failure(new Error((`secretOrPrivateKey must be an asymmetric key when using ${header.alg}`)))
    }
    if (!options.allowInsecureKeySizes &&
      !header.alg.startsWith('ES') &&
      secretOrPrivateKey.asymmetricKeyDetails !== undefined && //KeyObject.asymmetricKeyDetails is supported in Node 15+
      secretOrPrivateKey.asymmetricKeyDetails.modulusLength < 2048) {
      return failure(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));
    }
  }

  if (typeof payload === 'undefined') {
    return failure(new Error('payload is required'));
  } else if (isObjectPayload) {
    try {
      validatePayload(payload);
    }
    catch (error) {
      return failure(error);
    }
    if (!options.mutatePayload) {
      payload = Object.assign({},payload);
    }
  } else {
    const invalid_options = options_for_objects.filter(function (opt) {
      return typeof options[opt] !== 'undefined';
    });

    if (invalid_options.length > 0) {
      return failure(new Error('invalid ' + invalid_options.join(',') + ' option for ' + (typeof payload ) + ' payload'));
    }
  }

  if (typeof payload.exp !== 'undefined' && typeof options.expiresIn !== 'undefined') {
    return failure(new Error('Bad "options.expiresIn" option the payload already has an "exp" property.'));
  }

  if (typeof payload.nbf !== 'undefined' && typeof options.notBefore !== 'undefined') {
    return failure(new Error('Bad "options.notBefore" option the payload already has an "nbf" property.'));
  }

  try {
    validateOptions(options);
  }
  catch (error) {
    return failure(error);
  }

  if (!options.allowInvalidAsymmetricKeyTypes) {
    try {
      validateAsymmetricKey(header.alg, secretOrPrivateKey);
    } catch (error) {
      return failure(error);
    }
  }

  const timestamp = payload.iat || Math.floor(Date.now() / 1000);

  if (options.noTimestamp) {
    delete payload.iat;
  } else if (isObjectPayload) {
    payload.iat = timestamp;
  }

  if (typeof options.notBefore !== 'undefined') {
    try {
      payload.nbf = timespan(options.notBefore, timestamp);
    }
    catch (err) {
      return failure(err);
    }
    if (typeof payload.nbf === 'undefined') {
      return failure(new Error('"notBefore" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
    }
  }

  if (typeof options.expiresIn !== 'undefined' && typeof payload === 'object') {
    try {
      payload.exp = timespan(options.expiresIn, timestamp);
    }
    catch (err) {
      return failure(err);
    }
    if (typeof payload.exp === 'undefined') {
      return failure(new Error('"expiresIn" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
    }
  }

  Object.keys(options_to_payload).forEach(function (key) {
    const claim = options_to_payload[key];
    if (typeof options[key] !== 'undefined') {
      if (typeof payload[claim] !== 'undefined') {
        return failure(new Error('Bad "options.' + key + '" option. The payload already has an "' + claim + '" property.'));
      }
      payload[claim] = options[key];
    }
  });

  const encoding = options.encoding || 'utf8';

  if (typeof callback === 'function') {
    callback = callback && once(callback);

    jws.createSign({
      header: header,
      privateKey: secretOrPrivateKey,
      payload: payload,
      encoding: encoding
    }).once('error', callback)
      .once('done', function (signature) {
        // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version
        if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {
          return callback(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`))
        }
        callback(null, signature);
      });
  } else {
    let signature = jws.sign({header: header, payload: payload, secret: secretOrPrivateKey, encoding: encoding});
    // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version
    if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {
      throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`)
    }
    return signature
  }
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\verify.js 
------------------------------------------------------ 
const JsonWebTokenError = require('./lib/JsonWebTokenError');
const NotBeforeError = require('./lib/NotBeforeError');
const TokenExpiredError = require('./lib/TokenExpiredError');
const decode = require('./decode');
const timespan = require('./lib/timespan');
const validateAsymmetricKey = require('./lib/validateAsymmetricKey');
const PS_SUPPORTED = require('./lib/psSupported');
const jws = require('jws');
const {KeyObject, createSecretKey, createPublicKey} = require("crypto");

const PUB_KEY_ALGS = ['RS256', 'RS384', 'RS512'];
const EC_KEY_ALGS = ['ES256', 'ES384', 'ES512'];
const RSA_KEY_ALGS = ['RS256', 'RS384', 'RS512'];
const HS_ALGS = ['HS256', 'HS384', 'HS512'];

if (PS_SUPPORTED) {
  PUB_KEY_ALGS.splice(PUB_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');
  RSA_KEY_ALGS.splice(RSA_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');
}

module.exports = function (jwtString, secretOrPublicKey, options, callback) {
  if ((typeof options === 'function') && !callback) {
    callback = options;
    options = {};
  }

  if (!options) {
    options = {};
  }

  //clone this object since we are going to mutate it.
  options = Object.assign({}, options);

  let done;

  if (callback) {
    done = callback;
  } else {
    done = function(err, data) {
      if (err) throw err;
      return data;
    };
  }

  if (options.clockTimestamp && typeof options.clockTimestamp !== 'number') {
    return done(new JsonWebTokenError('clockTimestamp must be a number'));
  }

  if (options.nonce !== undefined && (typeof options.nonce !== 'string' || options.nonce.trim() === '')) {
    return done(new JsonWebTokenError('nonce must be a non-empty string'));
  }

  if (options.allowInvalidAsymmetricKeyTypes !== undefined && typeof options.allowInvalidAsymmetricKeyTypes !== 'boolean') {
    return done(new JsonWebTokenError('allowInvalidAsymmetricKeyTypes must be a boolean'));
  }

  const clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1000);

  if (!jwtString){
    return done(new JsonWebTokenError('jwt must be provided'));
  }

  if (typeof jwtString !== 'string') {
    return done(new JsonWebTokenError('jwt must be a string'));
  }

  const parts = jwtString.split('.');

  if (parts.length !== 3){
    return done(new JsonWebTokenError('jwt malformed'));
  }

  let decodedToken;

  try {
    decodedToken = decode(jwtString, { complete: true });
  } catch(err) {
    return done(err);
  }

  if (!decodedToken) {
    return done(new JsonWebTokenError('invalid token'));
  }

  const header = decodedToken.header;
  let getSecret;

  if(typeof secretOrPublicKey === 'function') {
    if(!callback) {
      return done(new JsonWebTokenError('verify must be called asynchronous if secret or public key is provided as a callback'));
    }

    getSecret = secretOrPublicKey;
  }
  else {
    getSecret = function(header, secretCallback) {
      return secretCallback(null, secretOrPublicKey);
    };
  }

  return getSecret(header, function(err, secretOrPublicKey) {
    if(err) {
      return done(new JsonWebTokenError('error in secret or public key callback: ' + err.message));
    }

    const hasSignature = parts[2].trim() !== '';

    if (!hasSignature && secretOrPublicKey){
      return done(new JsonWebTokenError('jwt signature is required'));
    }

    if (hasSignature && !secretOrPublicKey) {
      return done(new JsonWebTokenError('secret or public key must be provided'));
    }

    if (!hasSignature && !options.algorithms) {
      return done(new JsonWebTokenError('please specify "none" in "algorithms" to verify unsigned tokens'));
    }

    if (secretOrPublicKey != null && !(secretOrPublicKey instanceof KeyObject)) {
      try {
        secretOrPublicKey = createPublicKey(secretOrPublicKey);
      } catch (_) {
        try {
          secretOrPublicKey = createSecretKey(typeof secretOrPublicKey === 'string' ? Buffer.from(secretOrPublicKey) : secretOrPublicKey);
        } catch (_) {
          return done(new JsonWebTokenError('secretOrPublicKey is not valid key material'))
        }
      }
    }

    if (!options.algorithms) {
      if (secretOrPublicKey.type === 'secret') {
        options.algorithms = HS_ALGS;
      } else if (['rsa', 'rsa-pss'].includes(secretOrPublicKey.asymmetricKeyType)) {
        options.algorithms = RSA_KEY_ALGS
      } else if (secretOrPublicKey.asymmetricKeyType === 'ec') {
        options.algorithms = EC_KEY_ALGS
      } else {
        options.algorithms = PUB_KEY_ALGS
      }
    }

    if (options.algorithms.indexOf(decodedToken.header.alg) === -1) {
      return done(new JsonWebTokenError('invalid algorithm'));
    }

    if (header.alg.startsWith('HS') && secretOrPublicKey.type !== 'secret') {
      return done(new JsonWebTokenError((`secretOrPublicKey must be a symmetric key when using ${header.alg}`)))
    } else if (/^(?:RS|PS|ES)/.test(header.alg) && secretOrPublicKey.type !== 'public') {
      return done(new JsonWebTokenError((`secretOrPublicKey must be an asymmetric key when using ${header.alg}`)))
    }

    if (!options.allowInvalidAsymmetricKeyTypes) {
      try {
        validateAsymmetricKey(header.alg, secretOrPublicKey);
      } catch (e) {
        return done(e);
      }
    }

    let valid;

    try {
      valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey);
    } catch (e) {
      return done(e);
    }

    if (!valid) {
      return done(new JsonWebTokenError('invalid signature'));
    }

    const payload = decodedToken.payload;

    if (typeof payload.nbf !== 'undefined' && !options.ignoreNotBefore) {
      if (typeof payload.nbf !== 'number') {
        return done(new JsonWebTokenError('invalid nbf value'));
      }
      if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {
        return done(new NotBeforeError('jwt not active', new Date(payload.nbf * 1000)));
      }
    }

    if (typeof payload.exp !== 'undefined' && !options.ignoreExpiration) {
      if (typeof payload.exp !== 'number') {
        return done(new JsonWebTokenError('invalid exp value'));
      }
      if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {
        return done(new TokenExpiredError('jwt expired', new Date(payload.exp * 1000)));
      }
    }

    if (options.audience) {
      const audiences = Array.isArray(options.audience) ? options.audience : [options.audience];
      const target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];

      const match = target.some(function (targetAudience) {
        return audiences.some(function (audience) {
          return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;
        });
      });

      if (!match) {
        return done(new JsonWebTokenError('jwt audience invalid. expected: ' + audiences.join(' or ')));
      }
    }

    if (options.issuer) {
      const invalid_issuer =
              (typeof options.issuer === 'string' && payload.iss !== options.issuer) ||
              (Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1);

      if (invalid_issuer) {
        return done(new JsonWebTokenError('jwt issuer invalid. expected: ' + options.issuer));
      }
    }

    if (options.subject) {
      if (payload.sub !== options.subject) {
        return done(new JsonWebTokenError('jwt subject invalid. expected: ' + options.subject));
      }
    }

    if (options.jwtid) {
      if (payload.jti !== options.jwtid) {
        return done(new JsonWebTokenError('jwt jwtid invalid. expected: ' + options.jwtid));
      }
    }

    if (options.nonce) {
      if (payload.nonce !== options.nonce) {
        return done(new JsonWebTokenError('jwt nonce invalid. expected: ' + options.nonce));
      }
    }

    if (options.maxAge) {
      if (typeof payload.iat !== 'number') {
        return done(new JsonWebTokenError('iat required when maxAge is specified'));
      }

      const maxAgeTimestamp = timespan(options.maxAge, payload.iat);
      if (typeof maxAgeTimestamp === 'undefined') {
        return done(new JsonWebTokenError('"maxAge" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
      }
      if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {
        return done(new TokenExpiredError('maxAge exceeded', new Date(maxAgeTimestamp * 1000)));
      }
    }

    if (options.complete === true) {
      const signature = decodedToken.signature;

      return done(null, {
        header: header,
        payload: payload,
        signature: signature
      });
    }

    return done(null, payload);
  });
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\package.json 
------------------------------------------------------ 
{
  "name": "jsonwebtoken",
  "version": "9.0.2",
  "description": "JSON Web Token implementation (symmetric and asymmetric)",
  "main": "index.js",
  "nyc": {
    "check-coverage": true,
    "lines": 95,
    "statements": 95,
    "functions": 100,
    "branches": 95,
    "exclude": [
      "./test/**"
    ],
    "reporter": [
      "json",
      "lcov",
      "text-summary"
    ]
  },
  "scripts": {
    "lint": "eslint .",
    "coverage": "nyc mocha --use_strict",
    "test": "npm run lint && npm run coverage && cost-of-modules"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/auth0/node-jsonwebtoken"
  },
  "keywords": [
    "jwt"
  ],
  "author": "auth0",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/auth0/node-jsonwebtoken/issues"
  },
  "dependencies": {
    "jws": "^3.2.2",
    "lodash.includes": "^4.3.0",
    "lodash.isboolean": "^3.0.3",
    "lodash.isinteger": "^4.0.4",
    "lodash.isnumber": "^3.0.3",
    "lodash.isplainobject": "^4.0.6",
    "lodash.isstring": "^4.0.1",
    "lodash.once": "^4.0.0",
    "ms": "^2.1.1",
    "semver": "^7.5.4"
  },
  "devDependencies": {
    "atob": "^2.1.2",
    "chai": "^4.1.2",
    "conventional-changelog": "~1.1.0",
    "cost-of-modules": "^1.0.1",
    "eslint": "^4.19.1",
    "mocha": "^5.2.0",
    "nsp": "^2.6.2",
    "nyc": "^11.9.0",
    "sinon": "^6.0.0"
  },
  "engines": {
    "npm": ">=6",
    "node": ">=12"
  },
  "files": [
    "lib",
    "decode.js",
    "sign.js",
    "verify.js"
  ]
}
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\lib\asymmetricKeyDetailsSupported.js 
------------------------------------------------------ 
const semver = require('semver');

module.exports = semver.satisfies(process.version, '>=15.7.0');
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\lib\JsonWebTokenError.js 
------------------------------------------------------ 
var JsonWebTokenError = function (message, error) {
  Error.call(this, message);
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  }
  this.name = 'JsonWebTokenError';
  this.message = message;
  if (error) this.inner = error;
};

JsonWebTokenError.prototype = Object.create(Error.prototype);
JsonWebTokenError.prototype.constructor = JsonWebTokenError;

module.exports = JsonWebTokenError;
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\lib\NotBeforeError.js 
------------------------------------------------------ 
var JsonWebTokenError = require('./JsonWebTokenError');

var NotBeforeError = function (message, date) {
  JsonWebTokenError.call(this, message);
  this.name = 'NotBeforeError';
  this.date = date;
};

NotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);

NotBeforeError.prototype.constructor = NotBeforeError;

module.exports = NotBeforeError; 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\lib\psSupported.js 
------------------------------------------------------ 
var semver = require('semver');

module.exports = semver.satisfies(process.version, '^6.12.0 || >=8.0.0');
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\lib\rsaPssKeyDetailsSupported.js 
------------------------------------------------------ 
const semver = require('semver');

module.exports = semver.satisfies(process.version, '>=16.9.0');
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\lib\timespan.js 
------------------------------------------------------ 
var ms = require('ms');

module.exports = function (time, iat) {
  var timestamp = iat || Math.floor(Date.now() / 1000);

  if (typeof time === 'string') {
    var milliseconds = ms(time);
    if (typeof milliseconds === 'undefined') {
      return;
    }
    return Math.floor(timestamp + milliseconds / 1000);
  } else if (typeof time === 'number') {
    return timestamp + time;
  } else {
    return;
  }

}; 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\lib\TokenExpiredError.js 
------------------------------------------------------ 
var JsonWebTokenError = require('./JsonWebTokenError');

var TokenExpiredError = function (message, expiredAt) {
  JsonWebTokenError.call(this, message);
  this.name = 'TokenExpiredError';
  this.expiredAt = expiredAt;
};

TokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);

TokenExpiredError.prototype.constructor = TokenExpiredError;

module.exports = TokenExpiredError; 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\lib\validateAsymmetricKey.js 
------------------------------------------------------ 
const ASYMMETRIC_KEY_DETAILS_SUPPORTED = require('./asymmetricKeyDetailsSupported');
const RSA_PSS_KEY_DETAILS_SUPPORTED = require('./rsaPssKeyDetailsSupported');

const allowedAlgorithmsForKeys = {
  'ec': ['ES256', 'ES384', 'ES512'],
  'rsa': ['RS256', 'PS256', 'RS384', 'PS384', 'RS512', 'PS512'],
  'rsa-pss': ['PS256', 'PS384', 'PS512']
};

const allowedCurves = {
  ES256: 'prime256v1',
  ES384: 'secp384r1',
  ES512: 'secp521r1',
};

module.exports = function(algorithm, key) {
  if (!algorithm || !key) return;

  const keyType = key.asymmetricKeyType;
  if (!keyType) return;

  const allowedAlgorithms = allowedAlgorithmsForKeys[keyType];

  if (!allowedAlgorithms) {
    throw new Error(`Unknown key type "${keyType}".`);
  }

  if (!allowedAlgorithms.includes(algorithm)) {
    throw new Error(`"alg" parameter for "${keyType}" key type must be one of: ${allowedAlgorithms.join(', ')}.`)
  }

  /*
   * Ignore the next block from test coverage because it gets executed
   * conditionally depending on the Node version. Not ignoring it would
   * prevent us from reaching the target % of coverage for versions of
   * Node under 15.7.0.
   */
  /* istanbul ignore next */
  if (ASYMMETRIC_KEY_DETAILS_SUPPORTED) {
    switch (keyType) {
    case 'ec':
      const keyCurve = key.asymmetricKeyDetails.namedCurve;
      const allowedCurve = allowedCurves[algorithm];

      if (keyCurve !== allowedCurve) {
        throw new Error(`"alg" parameter "${algorithm}" requires curve "${allowedCurve}".`);
      }
      break;

    case 'rsa-pss':
      if (RSA_PSS_KEY_DETAILS_SUPPORTED) {
        const length = parseInt(algorithm.slice(-3), 10);
        const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = key.asymmetricKeyDetails;

        if (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm) {
          throw new Error(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of "alg" ${algorithm}.`);
        }

        if (saltLength !== undefined && saltLength > length >> 3) {
          throw new Error(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of "alg" ${algorithm}.`)
        }
      }
      break;
    }
  }
}
 
[AVISO] Arquivo nao encontrado: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jsonwebtoken\lib\package.json 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jwa\index.js 
------------------------------------------------------ 
var Buffer = require('safe-buffer').Buffer;
var crypto = require('crypto');
var formatEcdsa = require('ecdsa-sig-formatter');
var util = require('util');

var MSG_INVALID_ALGORITHM = '"%s" is not a valid algorithm.\n  Supported algorithms are:\n  "HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "PS256", "PS384", "PS512", "ES256", "ES384", "ES512" and "none".'
var MSG_INVALID_SECRET = 'secret must be a string or buffer';
var MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';
var MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';

var supportsKeyObjects = typeof crypto.createPublicKey === 'function';
if (supportsKeyObjects) {
  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';
  MSG_INVALID_SECRET += 'or a KeyObject';
}

function checkIsPublicKey(key) {
  if (Buffer.isBuffer(key)) {
    return;
  }

  if (typeof key === 'string') {
    return;
  }

  if (!supportsKeyObjects) {
    throw typeError(MSG_INVALID_VERIFIER_KEY);
  }

  if (typeof key !== 'object') {
    throw typeError(MSG_INVALID_VERIFIER_KEY);
  }

  if (typeof key.type !== 'string') {
    throw typeError(MSG_INVALID_VERIFIER_KEY);
  }

  if (typeof key.asymmetricKeyType !== 'string') {
    throw typeError(MSG_INVALID_VERIFIER_KEY);
  }

  if (typeof key.export !== 'function') {
    throw typeError(MSG_INVALID_VERIFIER_KEY);
  }
};

function checkIsPrivateKey(key) {
  if (Buffer.isBuffer(key)) {
    return;
  }

  if (typeof key === 'string') {
    return;
  }

  if (typeof key === 'object') {
    return;
  }

  throw typeError(MSG_INVALID_SIGNER_KEY);
};

function checkIsSecretKey(key) {
  if (Buffer.isBuffer(key)) {
    return;
  }

  if (typeof key === 'string') {
    return key;
  }

  if (!supportsKeyObjects) {
    throw typeError(MSG_INVALID_SECRET);
  }

  if (typeof key !== 'object') {
    throw typeError(MSG_INVALID_SECRET);
  }

  if (key.type !== 'secret') {
    throw typeError(MSG_INVALID_SECRET);
  }

  if (typeof key.export !== 'function') {
    throw typeError(MSG_INVALID_SECRET);
  }
}

function fromBase64(base64) {
  return base64
    .replace(/=/g, '')
    .replace(/\+/g, '-')
    .replace(/\//g, '_');
}

function toBase64(base64url) {
  base64url = base64url.toString();

  var padding = 4 - base64url.length % 4;
  if (padding !== 4) {
    for (var i = 0; i < padding; ++i) {
      base64url += '=';
    }
  }

  return base64url
    .replace(/\-/g, '+')
    .replace(/_/g, '/');
}

function typeError(template) {
  var args = [].slice.call(arguments, 1);
  var errMsg = util.format.bind(util, template).apply(null, args);
  return new TypeError(errMsg);
}

function bufferOrString(obj) {
  return Buffer.isBuffer(obj) || typeof obj === 'string';
}

function normalizeInput(thing) {
  if (!bufferOrString(thing))
    thing = JSON.stringify(thing);
  return thing;
}

function createHmacSigner(bits) {
  return function sign(thing, secret) {
    checkIsSecretKey(secret);
    thing = normalizeInput(thing);
    var hmac = crypto.createHmac('sha' + bits, secret);
    var sig = (hmac.update(thing), hmac.digest('base64'))
    return fromBase64(sig);
  }
}

var bufferEqual;
var timingSafeEqual = 'timingSafeEqual' in crypto ? function timingSafeEqual(a, b) {
  if (a.byteLength !== b.byteLength) {
    return false;
  }

  return crypto.timingSafeEqual(a, b)
} : function timingSafeEqual(a, b) {
  if (!bufferEqual) {
    bufferEqual = require('buffer-equal-constant-time');
  }

  return bufferEqual(a, b)
}

function createHmacVerifier(bits) {
  return function verify(thing, signature, secret) {
    var computedSig = createHmacSigner(bits)(thing, secret);
    return timingSafeEqual(Buffer.from(signature), Buffer.from(computedSig));
  }
}

function createKeySigner(bits) {
 return function sign(thing, privateKey) {
    checkIsPrivateKey(privateKey);
    thing = normalizeInput(thing);
    // Even though we are specifying "RSA" here, this works with ECDSA
    // keys as well.
    var signer = crypto.createSign('RSA-SHA' + bits);
    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));
    return fromBase64(sig);
  }
}

function createKeyVerifier(bits) {
  return function verify(thing, signature, publicKey) {
    checkIsPublicKey(publicKey);
    thing = normalizeInput(thing);
    signature = toBase64(signature);
    var verifier = crypto.createVerify('RSA-SHA' + bits);
    verifier.update(thing);
    return verifier.verify(publicKey, signature, 'base64');
  }
}

function createPSSKeySigner(bits) {
  return function sign(thing, privateKey) {
    checkIsPrivateKey(privateKey);
    thing = normalizeInput(thing);
    var signer = crypto.createSign('RSA-SHA' + bits);
    var sig = (signer.update(thing), signer.sign({
      key: privateKey,
      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,
      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST
    }, 'base64'));
    return fromBase64(sig);
  }
}

function createPSSKeyVerifier(bits) {
  return function verify(thing, signature, publicKey) {
    checkIsPublicKey(publicKey);
    thing = normalizeInput(thing);
    signature = toBase64(signature);
    var verifier = crypto.createVerify('RSA-SHA' + bits);
    verifier.update(thing);
    return verifier.verify({
      key: publicKey,
      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,
      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST
    }, signature, 'base64');
  }
}

function createECDSASigner(bits) {
  var inner = createKeySigner(bits);
  return function sign() {
    var signature = inner.apply(null, arguments);
    signature = formatEcdsa.derToJose(signature, 'ES' + bits);
    return signature;
  };
}

function createECDSAVerifer(bits) {
  var inner = createKeyVerifier(bits);
  return function verify(thing, signature, publicKey) {
    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');
    var result = inner(thing, signature, publicKey);
    return result;
  };
}

function createNoneSigner() {
  return function sign() {
    return '';
  }
}

function createNoneVerifier() {
  return function verify(thing, signature) {
    return signature === '';
  }
}

module.exports = function jwa(algorithm) {
  var signerFactories = {
    hs: createHmacSigner,
    rs: createKeySigner,
    ps: createPSSKeySigner,
    es: createECDSASigner,
    none: createNoneSigner,
  }
  var verifierFactories = {
    hs: createHmacVerifier,
    rs: createKeyVerifier,
    ps: createPSSKeyVerifier,
    es: createECDSAVerifer,
    none: createNoneVerifier,
  }
  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);
  if (!match)
    throw typeError(MSG_INVALID_ALGORITHM, algorithm);
  var algo = (match[1] || match[3]).toLowerCase();
  var bits = match[2];

  return {
    sign: signerFactories[algo](bits),
    verify: verifierFactories[algo](bits),
  }
};
 
 
------------------------------------------------------ 
[ARQUIVO]: C:\Users\Thiago\ESTUDOS_PROGRAMACAO\MediShiftNeo\backend\node_modules\jwa\package.json 
------------------------------------------------------ 
{
  "name": "jwa",
  "version": "1.4.2",
  "description": "JWA implementation (supports all JWS algorithms)",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "buffer-equal-constant-time": "^1.0.1",
    "ecdsa-sig-formatter": "1.0.11",
    "safe-buffer": "^5.0.1"
  },
  "devDependencies": {
    "base64url": "^2.0.0",
    "jwk-to-pem": "^2.0.1",
    "semver": "4.3.6",
    "tap": "6.2.0"
  },
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/brianloveswords/node-jwa.git"
  },
  "keywords": [
    "jwa",
    "jws",
    "jwt",
    "rsa",
    "ecdsa",
    "hmac"
  ],
  "author": "Brian J. Brennan <brianloveswords@gmail.com>",
   "license": "MIT"
}
 
 
------------------------------------------------------ 
